
\S{} Special instructions (pseudo-ops)

\c DB                                        
\c DW                                        
\c DD                                        
\c DQ                                        
\c DT                                        
\c DO                                        
\c DY                                        
\c DZ                                        
\c RESB             imm                      8086
\c RESW             imm                      8086
\c RESD             imm                      8086
\c RESQ             imm                      8086
\c REST             imm                      8086
\c RESO             imm                      8086
\c RESY             imm                      8086
\c RESZ             imm                      8086
\c INCBIN                                    

\S{} Conventional instructions

\c AAA                                       8086,NOLONG
\c AAD                                       8086,NOLONG
\c AAD              imm                      8086,NOLONG
\c AAM                                       8086,NOLONG
\c AAM              imm                      8086,NOLONG
\c AAS                                       8086,NOLONG
\c ADC              mem,reg8                 8086,LOCK
\c ADC              reg8,reg8                8086
\c ADC              mem,reg16                8086,LOCK
\c ADC              reg16,reg16              8086
\c ADC              mem,reg32                386,LOCK
\c ADC              reg32,reg32              386
\c ADC              mem,reg64                X86_64,LONG,LOCK
\c ADC              reg64,reg64              X86_64,LONG
\c ADC              reg8,mem                 8086
\c ADC              reg8,reg8                8086
\c ADC              reg16,mem                8086
\c ADC              reg16,reg16              8086
\c ADC              reg32,mem                386
\c ADC              reg32,reg32              386
\c ADC              reg64,mem                X86_64,LONG
\c ADC              reg64,reg64              X86_64,LONG
\c ADC              rm16,imm8                8086,LOCK
\c ADC              rm32,imm8                386,LOCK
\c ADC              rm64,imm8                X86_64,LONG,LOCK
\c ADC              reg_al,imm               8086
\c ADC              reg_ax,sbyteword         8086,ND
\c ADC              reg_ax,imm               8086
\c ADC              reg_eax,sbytedword       386,ND
\c ADC              reg_eax,imm              386
\c ADC              reg_rax,sbytedword       X86_64,LONG,ND
\c ADC              reg_rax,imm              X86_64,LONG
\c ADC              rm8,imm                  8086,LOCK
\c ADC              rm16,sbyteword           8086,LOCK,ND
\c ADC              rm16,imm                 8086,LOCK
\c ADC              rm32,sbytedword          386,LOCK,ND
\c ADC              rm32,imm                 386,LOCK
\c ADC              rm64,sbytedword          X86_64,LONG,LOCK,ND
\c ADC              rm64,imm                 X86_64,LONG,LOCK
\c ADC              mem,imm8                 8086,LOCK,ND
\c ADC              mem,sbyteword16          8086,LOCK,ND
\c ADC              mem,imm16                8086,LOCK
\c ADC              mem,sbytedword32         386,LOCK,ND
\c ADC              mem,imm32                386,LOCK
\c ADC              rm8,imm                  8086,LOCK,ND,NOLONG
\c ADD              mem,reg8                 8086,LOCK
\c ADD              reg8,reg8                8086
\c ADD              mem,reg16                8086,LOCK
\c ADD              reg16,reg16              8086
\c ADD              mem,reg32                386,LOCK
\c ADD              reg32,reg32              386
\c ADD              mem,reg64                X86_64,LONG,LOCK
\c ADD              reg64,reg64              X86_64,LONG
\c ADD              reg8,mem                 8086
\c ADD              reg8,reg8                8086
\c ADD              reg16,mem                8086
\c ADD              reg16,reg16              8086
\c ADD              reg32,mem                386
\c ADD              reg32,reg32              386
\c ADD              reg64,mem                X86_64,LONG
\c ADD              reg64,reg64              X86_64,LONG
\c ADD              rm16,imm8                8086,LOCK
\c ADD              rm32,imm8                386,LOCK
\c ADD              rm64,imm8                X86_64,LONG,LOCK
\c ADD              reg_al,imm               8086
\c ADD              reg_ax,sbyteword         8086,ND
\c ADD              reg_ax,imm               8086
\c ADD              reg_eax,sbytedword       386,ND
\c ADD              reg_eax,imm              386
\c ADD              reg_rax,sbytedword       X86_64,LONG,ND
\c ADD              reg_rax,imm              X86_64,LONG
\c ADD              rm8,imm                  8086,LOCK
\c ADD              rm16,sbyteword           8086,LOCK,ND
\c ADD              rm16,imm                 8086,LOCK
\c ADD              rm32,sbytedword          386,LOCK,ND
\c ADD              rm32,imm                 386,LOCK
\c ADD              rm64,sbytedword          X86_64,LONG,LOCK,ND
\c ADD              rm64,imm                 X86_64,LONG,LOCK
\c ADD              mem,imm8                 8086,LOCK
\c ADD              mem,sbyteword16          8086,LOCK,ND
\c ADD              mem,imm16                8086,LOCK
\c ADD              mem,sbytedword32         386,LOCK,ND
\c ADD              mem,imm32                386,LOCK
\c ADD              rm8,imm                  8086,LOCK,ND,NOLONG
\c AND              mem,reg8                 8086,LOCK
\c AND              reg8,reg8                8086
\c AND              mem,reg16                8086,LOCK
\c AND              reg16,reg16              8086
\c AND              mem,reg32                386,LOCK
\c AND              reg32,reg32              386
\c AND              mem,reg64                X86_64,LONG,LOCK
\c AND              reg64,reg64              X86_64,LONG
\c AND              reg8,mem                 8086
\c AND              reg8,reg8                8086
\c AND              reg16,mem                8086
\c AND              reg16,reg16              8086
\c AND              reg32,mem                386
\c AND              reg32,reg32              386
\c AND              reg64,mem                X86_64,LONG
\c AND              reg64,reg64              X86_64,LONG
\c AND              rm16,imm8                8086,LOCK
\c AND              rm32,imm8                386,LOCK
\c AND              rm64,imm8                X86_64,LONG,LOCK
\c AND              reg_al,imm               8086
\c AND              reg_ax,sbyteword         8086,ND
\c AND              reg_ax,imm               8086
\c AND              reg_eax,sbytedword       386,ND
\c AND              reg_eax,imm              386
\c AND              reg_rax,sbytedword       X86_64,LONG,ND
\c AND              reg_rax,imm              X86_64,LONG
\c AND              rm8,imm                  8086,LOCK
\c AND              rm16,sbyteword           8086,LOCK,ND
\c AND              rm16,imm                 8086,LOCK
\c AND              rm32,sbytedword          386,LOCK,ND
\c AND              rm32,imm                 386,LOCK
\c AND              rm64,sbytedword          X86_64,LONG,LOCK,ND
\c AND              rm64,imm                 X86_64,LONG,LOCK
\c AND              mem,imm8                 8086,LOCK
\c AND              mem,sbyteword16          8086,LOCK,ND
\c AND              mem,imm16                8086,LOCK
\c AND              mem,sbytedword32         386,LOCK,ND
\c AND              mem,imm32                386,LOCK
\c AND              rm8,imm                  8086,LOCK,ND,NOLONG
\c ARPL             mem,reg16                286,PROT,NOLONG
\c ARPL             reg16,reg16              286,PROT,NOLONG
\c BB0_RESET                                 PENT,CYRIX,ND,OBSOLETE
\c BB1_RESET                                 PENT,CYRIX,ND,OBSOLETE
\c BOUND            reg16,mem                186,NOLONG
\c BOUND            reg32,mem                386,NOLONG
\c BSF              reg16,mem                386
\c BSF              reg16,reg16              386
\c BSF              reg32,mem                386
\c BSF              reg32,reg32              386
\c BSF              reg64,mem                X86_64,LONG
\c BSF              reg64,reg64              X86_64,LONG
\c BSR              reg16,mem                386
\c BSR              reg16,reg16              386
\c BSR              reg32,mem                386
\c BSR              reg32,reg32              386
\c BSR              reg64,mem                X86_64,LONG
\c BSR              reg64,reg64              X86_64,LONG
\c BSWAP            reg32                    486
\c BSWAP            reg64                    X86_64,LONG
\c BT               mem,reg16                386
\c BT               reg16,reg16              386
\c BT               mem,reg32                386
\c BT               reg32,reg32              386
\c BT               mem,reg64                X86_64,LONG
\c BT               reg64,reg64              X86_64,LONG
\c BT               rm16,imm8                386
\c BT               rm32,imm8                386
\c BT               rm64,imm8                X86_64,LONG
\c BTC              mem,reg16                386,LOCK
\c BTC              reg16,reg16              386
\c BTC              mem,reg32                386,LOCK
\c BTC              reg32,reg32              386
\c BTC              mem,reg64                X86_64,LONG,LOCK
\c BTC              reg64,reg64              X86_64,LONG
\c BTC              rm16,imm8                386,LOCK
\c BTC              rm32,imm8                386,LOCK
\c BTC              rm64,imm8                X86_64,LONG,LOCK
\c BTR              mem,reg16                386,LOCK
\c BTR              reg16,reg16              386
\c BTR              mem,reg32                386,LOCK
\c BTR              reg32,reg32              386
\c BTR              mem,reg64                X86_64,LONG,LOCK
\c BTR              reg64,reg64              X86_64,LONG
\c BTR              rm16,imm8                386,LOCK
\c BTR              rm32,imm8                386,LOCK
\c BTR              rm64,imm8                X86_64,LONG,LOCK
\c BTS              mem,reg16                386,LOCK
\c BTS              reg16,reg16              386
\c BTS              mem,reg32                386,LOCK
\c BTS              reg32,reg32              386
\c BTS              mem,reg64                X86_64,LONG,LOCK
\c BTS              reg64,reg64              X86_64,LONG
\c BTS              rm16,imm8                386,LOCK
\c BTS              rm32,imm8                386,LOCK
\c BTS              rm64,imm8                X86_64,LONG,LOCK
\c CALL             imm                      8086,BND
\c CALL             imm|near                 8086,ND,BND
\c CALL             imm|far                  8086,ND,NOLONG
\c CALL             imm16                    8086,NOLONG,BND
\c CALL             imm16|near               8086,ND,NOLONG,BND
\c CALL             imm16|far                8086,ND,NOLONG
\c CALL             imm32                    386,NOLONG,BND
\c CALL             imm32|near               386,ND,NOLONG,BND
\c CALL             imm32|far                386,ND,NOLONG
\c CALL             imm64                    X86_64,LONG,BND
\c CALL             imm64|near               X86_64,LONG,ND,BND
\c CALL             imm:imm                  8086,NOLONG
\c CALL             imm16:imm                8086,NOLONG
\c CALL             imm:imm16                8086,NOLONG
\c CALL             imm32:imm                386,NOLONG
\c CALL             imm:imm32                386,NOLONG
\c CALL             mem|far                  8086,NOLONG
\c CALL             mem|far                  X86_64,LONG
\c CALL             mem16|far                8086
\c CALL             mem32|far                386
\c CALL             mem64|far                X86_64,LONG
\c CALL             mem|near                 8086,ND,BND
\c CALL             rm16|near                8086,NOLONG,ND,BND
\c CALL             rm32|near                386,NOLONG,ND,BND
\c CALL             rm64|near                X86_64,LONG,ND,BND
\c CALL             mem                      8086,BND
\c CALL             rm16                     8086,NOLONG,BND
\c CALL             rm32                     386,NOLONG,BND
\c CALL             rm64                     X86_64,LONG,BND
\c CBW                                       8086
\c CDQ                                       386
\c CDQE                                      X86_64,LONG
\c CLC                                       8086
\c CLD                                       8086
\c CLI                                       8086
\c CLTS                                      286,PRIV
\c CMC                                       8086
\c CMP              mem,reg8                 8086
\c CMP              reg8,reg8                8086
\c CMP              mem,reg16                8086
\c CMP              reg16,reg16              8086
\c CMP              mem,reg32                386
\c CMP              reg32,reg32              386
\c CMP              mem,reg64                X86_64,LONG
\c CMP              reg64,reg64              X86_64,LONG
\c CMP              reg8,mem                 8086
\c CMP              reg8,reg8                8086
\c CMP              reg16,mem                8086
\c CMP              reg16,reg16              8086
\c CMP              reg32,mem                386
\c CMP              reg32,reg32              386
\c CMP              reg64,mem                X86_64,LONG
\c CMP              reg64,reg64              X86_64,LONG
\c CMP              rm16,imm8                8086
\c CMP              rm32,imm8                386
\c CMP              rm64,imm8                X86_64,LONG
\c CMP              reg_al,imm               8086
\c CMP              reg_ax,sbyteword         8086,ND
\c CMP              reg_ax,imm               8086
\c CMP              reg_eax,sbytedword       386,ND
\c CMP              reg_eax,imm              386
\c CMP              reg_rax,sbytedword       X86_64,LONG,ND
\c CMP              reg_rax,imm              X86_64,LONG
\c CMP              rm8,imm                  8086
\c CMP              rm16,sbyteword           8086,ND
\c CMP              rm16,imm                 8086
\c CMP              rm32,sbytedword          386,ND
\c CMP              rm32,imm                 386
\c CMP              rm64,sbytedword          X86_64,LONG,ND
\c CMP              rm64,imm                 X86_64,LONG
\c CMP              mem,imm8                 8086
\c CMP              mem,sbyteword16          8086,ND
\c CMP              mem,imm16                8086
\c CMP              mem,sbytedword32         386,ND
\c CMP              mem,imm32                386
\c CMP              rm8,imm                  8086,ND,NOLONG
\c CMPSB                                     8086
\c CMPSD                                     386
\c CMPSQ                                     X86_64,LONG
\c CMPSW                                     8086
\c CMPXCHG          mem,reg8                 PENT,LOCK
\c CMPXCHG          reg8,reg8                PENT
\c CMPXCHG          mem,reg16                PENT,LOCK
\c CMPXCHG          reg16,reg16              PENT
\c CMPXCHG          mem,reg32                PENT,LOCK
\c CMPXCHG          reg32,reg32              PENT
\c CMPXCHG          mem,reg64                X86_64,LONG,LOCK
\c CMPXCHG          reg64,reg64              X86_64,LONG
\c CMPXCHG486       mem,reg8                 486,UNDOC,ND,LOCK,OBSOLETE
\c CMPXCHG486       reg8,reg8                486,UNDOC,ND,OBSOLETE
\c CMPXCHG486       mem,reg16                486,UNDOC,ND,LOCK,OBSOLETE
\c CMPXCHG486       reg16,reg16              486,UNDOC,ND,OBSOLETE
\c CMPXCHG486       mem,reg32                486,UNDOC,ND,LOCK,OBSOLETE
\c CMPXCHG486       reg32,reg32              486,UNDOC,ND,OBSOLETE
\c CMPXCHG8B        mem64                    PENT,LOCK
\c CMPXCHG16B       mem128                   X86_64,LONG,LOCK
\c CPUID                                     PENT
\c CPU_READ                                  PENT,CYRIX
\c CPU_WRITE                                 PENT,CYRIX
\c CQO                                       X86_64,LONG
\c CWD                                       8086
\c CWDE                                      386
\c DAA                                       8086,NOLONG
\c DAS                                       8086,NOLONG
\c DEC              reg16                    8086,NOLONG
\c DEC              reg32                    386,NOLONG
\c DEC              rm8                      8086,LOCK
\c DEC              rm16                     8086,LOCK
\c DEC              rm32                     386,LOCK
\c DEC              rm64                     X86_64,LONG,LOCK
\c DIV              rm8                      8086
\c DIV              rm16                     8086
\c DIV              rm32                     386
\c DIV              rm64                     X86_64,LONG
\c DMINT                                     P6,CYRIX
\c EMMS                                      PENT,MMX
\c ENTER            imm,imm                  186
\c EQU              imm                      8086
\c EQU              imm:imm                  8086
\c F2XM1                                     8086,FPU
\c FABS                                      8086,FPU
\c FADD             mem32                    8086,FPU
\c FADD             mem64                    8086,FPU
\c FADD             fpureg|to                8086,FPU
\c FADD             fpureg                   8086,FPU
\c FADD             fpureg,fpu0              8086,FPU
\c FADD             fpu0,fpureg              8086,FPU
\c FADD                                      8086,FPU,ND
\c FADDP            fpureg                   8086,FPU
\c FADDP            fpureg,fpu0              8086,FPU
\c FADDP                                     8086,FPU,ND
\c FBLD             mem80                    8086,FPU
\c FBLD             mem                      8086,FPU
\c FBSTP            mem80                    8086,FPU
\c FBSTP            mem                      8086,FPU
\c FCHS                                      8086,FPU
\c FCLEX                                     8086,FPU
\c FCMOVB           fpureg                   P6,FPU
\c FCMOVB           fpu0,fpureg              P6,FPU
\c FCMOVB                                    P6,FPU,ND
\c FCMOVBE          fpureg                   P6,FPU
\c FCMOVBE          fpu0,fpureg              P6,FPU
\c FCMOVBE                                   P6,FPU,ND
\c FCMOVE           fpureg                   P6,FPU
\c FCMOVE           fpu0,fpureg              P6,FPU
\c FCMOVE                                    P6,FPU,ND
\c FCMOVNB          fpureg                   P6,FPU
\c FCMOVNB          fpu0,fpureg              P6,FPU
\c FCMOVNB                                   P6,FPU,ND
\c FCMOVNBE         fpureg                   P6,FPU
\c FCMOVNBE         fpu0,fpureg              P6,FPU
\c FCMOVNBE                                  P6,FPU,ND
\c FCMOVNE          fpureg                   P6,FPU
\c FCMOVNE          fpu0,fpureg              P6,FPU
\c FCMOVNE                                   P6,FPU,ND
\c FCMOVNU          fpureg                   P6,FPU
\c FCMOVNU          fpu0,fpureg              P6,FPU
\c FCMOVNU                                   P6,FPU,ND
\c FCMOVU           fpureg                   P6,FPU
\c FCMOVU           fpu0,fpureg              P6,FPU
\c FCMOVU                                    P6,FPU,ND
\c FCOM             mem32                    8086,FPU
\c FCOM             mem64                    8086,FPU
\c FCOM             fpureg                   8086,FPU
\c FCOM             fpu0,fpureg              8086,FPU
\c FCOM                                      8086,FPU,ND
\c FCOMI            fpureg                   P6,FPU
\c FCOMI            fpu0,fpureg              P6,FPU
\c FCOMI                                     P6,FPU,ND
\c FCOMIP           fpureg                   P6,FPU
\c FCOMIP           fpu0,fpureg              P6,FPU
\c FCOMIP                                    P6,FPU,ND
\c FCOMP            mem32                    8086,FPU
\c FCOMP            mem64                    8086,FPU
\c FCOMP            fpureg                   8086,FPU
\c FCOMP            fpu0,fpureg              8086,FPU
\c FCOMP                                     8086,FPU,ND
\c FCOMPP                                    8086,FPU
\c FCOS                                      386,FPU
\c FDECSTP                                   8086,FPU
\c FDISI                                     8086,FPU
\c FDIV             mem32                    8086,FPU
\c FDIV             mem64                    8086,FPU
\c FDIV             fpureg|to                8086,FPU
\c FDIV             fpureg                   8086,FPU
\c FDIV             fpureg,fpu0              8086,FPU
\c FDIV             fpu0,fpureg              8086,FPU
\c FDIV                                      8086,FPU,ND
\c FDIVP            fpureg                   8086,FPU
\c FDIVP            fpureg,fpu0              8086,FPU
\c FDIVP                                     8086,FPU,ND
\c FDIVR            mem32                    8086,FPU
\c FDIVR            mem64                    8086,FPU
\c FDIVR            fpureg|to                8086,FPU
\c FDIVR            fpureg,fpu0              8086,FPU
\c FDIVR            fpureg                   8086,FPU
\c FDIVR            fpu0,fpureg              8086,FPU
\c FDIVR                                     8086,FPU,ND
\c FDIVRP           fpureg                   8086,FPU
\c FDIVRP           fpureg,fpu0              8086,FPU
\c FDIVRP                                    8086,FPU,ND
\c FEMMS                                     PENT,3DNOW
\c FENI                                      8086,FPU
\c FFREE            fpureg                   8086,FPU
\c FFREE                                     8086,FPU
\c FFREEP           fpureg                   286,FPU,UNDOC
\c FFREEP                                    286,FPU,UNDOC
\c FIADD            mem32                    8086,FPU
\c FIADD            mem16                    8086,FPU
\c FICOM            mem32                    8086,FPU
\c FICOM            mem16                    8086,FPU
\c FICOMP           mem32                    8086,FPU
\c FICOMP           mem16                    8086,FPU
\c FIDIV            mem32                    8086,FPU
\c FIDIV            mem16                    8086,FPU
\c FIDIVR           mem32                    8086,FPU
\c FIDIVR           mem16                    8086,FPU
\c FILD             mem32                    8086,FPU
\c FILD             mem16                    8086,FPU
\c FILD             mem64                    8086,FPU
\c FIMUL            mem32                    8086,FPU
\c FIMUL            mem16                    8086,FPU
\c FINCSTP                                   8086,FPU
\c FINIT                                     8086,FPU
\c FIST             mem32                    8086,FPU
\c FIST             mem16                    8086,FPU
\c FISTP            mem32                    8086,FPU
\c FISTP            mem16                    8086,FPU
\c FISTP            mem64                    8086,FPU
\c FISTTP           mem16                    PRESCOTT,FPU
\c FISTTP           mem32                    PRESCOTT,FPU
\c FISTTP           mem64                    PRESCOTT,FPU
\c FISUB            mem32                    8086,FPU
\c FISUB            mem16                    8086,FPU
\c FISUBR           mem32                    8086,FPU
\c FISUBR           mem16                    8086,FPU
\c FLD              mem32                    8086,FPU
\c FLD              mem64                    8086,FPU
\c FLD              mem80                    8086,FPU
\c FLD              fpureg                   8086,FPU
\c FLD                                       8086,FPU,ND
\c FLD1                                      8086,FPU
\c FLDCW            mem                      8086,FPU,SW
\c FLDENV           mem                      8086,FPU
\c FLDL2E                                    8086,FPU
\c FLDL2T                                    8086,FPU
\c FLDLG2                                    8086,FPU
\c FLDLN2                                    8086,FPU
\c FLDPI                                     8086,FPU
\c FLDZ                                      8086,FPU
\c FMUL             mem32                    8086,FPU
\c FMUL             mem64                    8086,FPU
\c FMUL             fpureg|to                8086,FPU
\c FMUL             fpureg,fpu0              8086,FPU
\c FMUL             fpureg                   8086,FPU
\c FMUL             fpu0,fpureg              8086,FPU
\c FMUL                                      8086,FPU,ND
\c FMULP            fpureg                   8086,FPU
\c FMULP            fpureg,fpu0              8086,FPU
\c FMULP                                     8086,FPU,ND
\c FNCLEX                                    8086,FPU
\c FNDISI                                    8086,FPU
\c FNENI                                     8086,FPU
\c FNINIT                                    8086,FPU
\c FNOP                                      8086,FPU
\c FNSAVE           mem                      8086,FPU
\c FNSTCW           mem                      8086,FPU,SW
\c FNSTENV          mem                      8086,FPU
\c FNSTSW           mem                      8086,FPU,SW
\c FNSTSW           reg_ax                   286,FPU
\c FPATAN                                    8086,FPU
\c FPREM                                     8086,FPU
\c FPREM1                                    386,FPU
\c FPTAN                                     8086,FPU
\c FRNDINT                                   8086,FPU
\c FRSTOR           mem                      8086,FPU
\c FSAVE            mem                      8086,FPU
\c FSCALE                                    8086,FPU
\c FSETPM                                    286,FPU
\c FSIN                                      386,FPU
\c FSINCOS                                   386,FPU
\c FSQRT                                     8086,FPU
\c FST              mem32                    8086,FPU
\c FST              mem64                    8086,FPU
\c FST              fpureg                   8086,FPU
\c FST                                       8086,FPU,ND
\c FSTCW            mem                      8086,FPU,SW
\c FSTENV           mem                      8086,FPU
\c FSTP             mem32                    8086,FPU
\c FSTP             mem64                    8086,FPU
\c FSTP             mem80                    8086,FPU
\c FSTP             fpureg                   8086,FPU
\c FSTP                                      8086,FPU,ND
\c FSTSW            mem                      8086,FPU,SW
\c FSTSW            reg_ax                   286,FPU
\c FSUB             mem32                    8086,FPU
\c FSUB             mem64                    8086,FPU
\c FSUB             fpureg|to                8086,FPU
\c FSUB             fpureg,fpu0              8086,FPU
\c FSUB             fpureg                   8086,FPU
\c FSUB             fpu0,fpureg              8086,FPU
\c FSUB                                      8086,FPU,ND
\c FSUBP            fpureg                   8086,FPU
\c FSUBP            fpureg,fpu0              8086,FPU
\c FSUBP                                     8086,FPU,ND
\c FSUBR            mem32                    8086,FPU
\c FSUBR            mem64                    8086,FPU
\c FSUBR            fpureg|to                8086,FPU
\c FSUBR            fpureg,fpu0              8086,FPU
\c FSUBR            fpureg                   8086,FPU
\c FSUBR            fpu0,fpureg              8086,FPU
\c FSUBR                                     8086,FPU,ND
\c FSUBRP           fpureg                   8086,FPU
\c FSUBRP           fpureg,fpu0              8086,FPU
\c FSUBRP                                    8086,FPU,ND
\c FTST                                      8086,FPU
\c FUCOM            fpureg                   386,FPU
\c FUCOM            fpu0,fpureg              386,FPU
\c FUCOM                                     386,FPU,ND
\c FUCOMI           fpureg                   P6,FPU
\c FUCOMI           fpu0,fpureg              P6,FPU
\c FUCOMI                                    P6,FPU,ND
\c FUCOMIP          fpureg                   P6,FPU
\c FUCOMIP          fpu0,fpureg              P6,FPU
\c FUCOMIP                                   P6,FPU,ND
\c FUCOMP           fpureg                   386,FPU
\c FUCOMP           fpu0,fpureg              386,FPU
\c FUCOMP                                    386,FPU,ND
\c FUCOMPP                                   386,FPU
\c FXAM                                      8086,FPU
\c FXCH             fpureg                   8086,FPU
\c FXCH             fpureg,fpu0              8086,FPU
\c FXCH             fpu0,fpureg              8086,FPU
\c FXCH                                      8086,FPU,ND
\c FXTRACT                                   8086,FPU
\c FYL2X                                     8086,FPU
\c FYL2XP1                                   8086,FPU
\c HLT                                       8086,PRIV
\c IBTS             mem,reg16                386,SW,UNDOC,ND,OBSOLETE
\c IBTS             reg16,reg16              386,UNDOC,ND,OBSOLETE
\c IBTS             mem,reg32                386,SD,UNDOC,ND,OBSOLETE
\c IBTS             reg32,reg32              386,UNDOC,ND,OBSOLETE
\c ICEBP                                     386,ND
\c IDIV             rm8                      8086
\c IDIV             rm16                     8086
\c IDIV             rm32                     386
\c IDIV             rm64                     X86_64,LONG
\c IMUL             rm8                      8086
\c IMUL             rm16                     8086
\c IMUL             rm32                     386
\c IMUL             rm64                     X86_64,LONG
\c IMUL             reg16,mem                386
\c IMUL             reg16,reg16              386
\c IMUL             reg32,mem                386
\c IMUL             reg32,reg32              386
\c IMUL             reg64,mem                X86_64,LONG
\c IMUL             reg64,reg64              X86_64,LONG
\c IMUL             reg16,mem,imm8           186
\c IMUL             reg16,mem,sbyteword      186,ND
\c IMUL             reg16,mem,imm16          186
\c IMUL             reg16,mem,imm            186,ND
\c IMUL             reg16,reg16,imm8         186
\c IMUL             reg16,reg16,sbyteword    186,ND
\c IMUL             reg16,reg16,imm16        186
\c IMUL             reg16,reg16,imm          186,ND
\c IMUL             reg32,mem,imm8           386
\c IMUL             reg32,mem,sbytedword     386,ND
\c IMUL             reg32,mem,imm32          386
\c IMUL             reg32,mem,imm            386,ND
\c IMUL             reg32,reg32,imm8         386
\c IMUL             reg32,reg32,sbytedword   386,ND
\c IMUL             reg32,reg32,imm32        386
\c IMUL             reg32,reg32,imm          386,ND
\c IMUL             reg64,mem,imm8           X86_64,LONG
\c IMUL             reg64,mem,sbytedword     X86_64,LONG,ND
\c IMUL             reg64,mem,imm32          X86_64,LONG
\c IMUL             reg64,mem,imm            X86_64,LONG,ND
\c IMUL             reg64,reg64,imm8         X86_64,LONG
\c IMUL             reg64,reg64,sbytedword   X86_64,LONG,ND
\c IMUL             reg64,reg64,imm32        X86_64,LONG
\c IMUL             reg64,reg64,imm          X86_64,LONG,ND
\c IMUL             reg16,imm8               186
\c IMUL             reg16,sbyteword          186,ND
\c IMUL             reg16,imm16              186
\c IMUL             reg16,imm                186,ND
\c IMUL             reg32,imm8               386
\c IMUL             reg32,sbytedword         386,ND
\c IMUL             reg32,imm32              386
\c IMUL             reg32,imm                386,ND
\c IMUL             reg64,imm8               X86_64,LONG
\c IMUL             reg64,sbytedword         X86_64,LONG,ND
\c IMUL             reg64,imm32              X86_64,LONG
\c IMUL             reg64,imm                X86_64,LONG,ND
\c IN               reg_al,imm               8086
\c IN               reg_ax,imm               8086
\c IN               reg_eax,imm              386
\c IN               reg_al,reg_dx            8086
\c IN               reg_ax,reg_dx            8086
\c IN               reg_eax,reg_dx           386
\c INC              reg16                    8086,NOLONG
\c INC              reg32                    386,NOLONG
\c INC              rm8                      8086,LOCK
\c INC              rm16                     8086,LOCK
\c INC              rm32                     386,LOCK
\c INC              rm64                     X86_64,LONG,LOCK
\c INSB                                      186
\c INSD                                      386
\c INSW                                      186
\c INT              imm                      8086
\c INT01                                     386,ND
\c INT1                                      386
\c INT03                                     8086,ND
\c INT3                                      8086
\c INTO                                      8086,NOLONG
\c INVD                                      486,PRIV
\c INVPCID          reg32,mem128             INVPCID,PRIV,NOLONG
\c INVPCID          reg64,mem128             INVPCID,PRIV,LONG
\c INVLPG           mem                      486,PRIV
\c INVLPGA          reg_ax,reg_ecx           X86_64,AMD,NOLONG
\c INVLPGA          reg_eax,reg_ecx          X86_64,AMD
\c INVLPGA          reg_rax,reg_ecx          X86_64,LONG,AMD
\c INVLPGA                                   X86_64,AMD
\c IRET                                      8086
\c IRETD                                     386
\c IRETQ                                     X86_64,LONG
\c IRETW                                     8086
\c JCXZ             imm                      8086,NOLONG
\c JECXZ            imm                      386
\c JRCXZ            imm                      X86_64,LONG
\c JMP              imm|short                8086
\c JMP              imm                      8086,ND
\c JMP              imm                      8086,BND
\c JMP              imm|near                 8086,ND,BND
\c JMP              imm|far                  8086,ND,NOLONG
\c JMP              imm16                    8086,NOLONG,BND
\c JMP              imm16|near               8086,ND,NOLONG,BND
\c JMP              imm16|far                8086,ND,NOLONG
\c JMP              imm32                    386,NOLONG,BND
\c JMP              imm32|near               386,ND,NOLONG,BND
\c JMP              imm32|far                386,ND,NOLONG
\c JMP              imm64                    X86_64,LONG,BND
\c JMP              imm64|near               X86_64,LONG,ND,BND
\c JMP              imm:imm                  8086,NOLONG
\c JMP              imm16:imm                8086,NOLONG
\c JMP              imm:imm16                8086,NOLONG
\c JMP              imm32:imm                386,NOLONG
\c JMP              imm:imm32                386,NOLONG
\c JMP              mem|far                  8086,NOLONG
\c JMP              mem|far                  X86_64,LONG
\c JMP              mem16|far                8086
\c JMP              mem32|far                386
\c JMP              mem64|far                X86_64,LONG
\c JMP              mem|near                 8086,ND,BND
\c JMP              rm16|near                8086,NOLONG,ND,BND
\c JMP              rm32|near                386,NOLONG,ND,BND
\c JMP              rm64|near                X86_64,LONG,ND,BND
\c JMP              mem                      8086,BND
\c JMP              rm16                     8086,NOLONG,BND
\c JMP              rm32                     386,NOLONG,BND
\c JMP              rm64                     X86_64,LONG,BND
\c JMPE             imm                      IA64
\c JMPE             imm16                    IA64
\c JMPE             imm32                    IA64
\c JMPE             rm16                     IA64
\c JMPE             rm32                     IA64
\c LAHF                                      8086
\c LAR              reg16,mem                286,PROT,SW
\c LAR              reg16,reg16              286,PROT
\c LAR              reg16,reg32              386,PROT
\c LAR              reg16,reg64              X86_64,LONG,PROT,ND
\c LAR              reg32,mem                386,PROT,SW
\c LAR              reg32,reg16              386,PROT
\c LAR              reg32,reg32              386,PROT
\c LAR              reg32,reg64              X86_64,LONG,PROT,ND
\c LAR              reg64,mem                X86_64,LONG,PROT,SW
\c LAR              reg64,reg16              X86_64,LONG,PROT
\c LAR              reg64,reg32              X86_64,LONG,PROT
\c LAR              reg64,reg64              X86_64,LONG,PROT
\c LDS              reg16,mem                8086,NOLONG
\c LDS              reg32,mem                386,NOLONG
\c LEA              reg16,mem                8086,ANYSIZE
\c LEA              reg32,mem                386,ANYSIZE
\c LEA              reg64,mem                X86_64,LONG,ANYSIZE
\c LEA              reg16,imm                8086,ND,ANYSIZE
\c LEA              reg32,imm                386,ND,ANYSIZE
\c LEA              reg64,imm                X86_64,LONG,ND,ANYSIZE
\c LEAVE                                     186
\c LES              reg16,mem                8086,NOLONG
\c LES              reg32,mem                386,NOLONG
\c LFENCE                                    X86_64,LONG,AMD
\c LFS              reg16,mem                386
\c LFS              reg32,mem                386
\c LFS              reg64,mem                X86_64,LONG
\c LGDT             mem                      286,PRIV
\c LGS              reg16,mem                386
\c LGS              reg32,mem                386
\c LGS              reg64,mem                X86_64,LONG
\c LIDT             mem                      286,PRIV
\c LLDT             mem                      286,PROT,PRIV
\c LLDT             mem16                    286,PROT,PRIV
\c LLDT             reg16                    286,PROT,PRIV
\c LMSW             mem                      286,PRIV
\c LMSW             mem16                    286,PRIV
\c LMSW             reg16                    286,PRIV
\c LOADALL                                   386,UNDOC,ND,OBSOLETE
\c LOADALL286                                286,UNDOC,ND,OBSOLETE
\c LODSB                                     8086
\c LODSD                                     386
\c LODSQ                                     X86_64,LONG
\c LODSW                                     8086
\c LOOP             imm                      8086
\c LOOP             imm,reg_cx               8086,NOLONG
\c LOOP             imm,reg_ecx              386
\c LOOP             imm,reg_rcx              X86_64,LONG
\c LOOPE            imm                      8086
\c LOOPE            imm,reg_cx               8086,NOLONG
\c LOOPE            imm,reg_ecx              386
\c LOOPE            imm,reg_rcx              X86_64,LONG
\c LOOPNE           imm                      8086
\c LOOPNE           imm,reg_cx               8086,NOLONG
\c LOOPNE           imm,reg_ecx              386
\c LOOPNE           imm,reg_rcx              X86_64,LONG
\c LOOPNZ           imm                      8086
\c LOOPNZ           imm,reg_cx               8086,NOLONG
\c LOOPNZ           imm,reg_ecx              386
\c LOOPNZ           imm,reg_rcx              X86_64,LONG
\c LOOPZ            imm                      8086
\c LOOPZ            imm,reg_cx               8086,NOLONG
\c LOOPZ            imm,reg_ecx              386
\c LOOPZ            imm,reg_rcx              X86_64,LONG
\c LSL              reg16,mem                286,PROT,SW
\c LSL              reg16,reg16              286,PROT
\c LSL              reg16,reg32              386,PROT
\c LSL              reg16,reg64              X86_64,LONG,PROT,ND
\c LSL              reg32,mem                386,PROT,SW
\c LSL              reg32,reg16              386,PROT
\c LSL              reg32,reg32              386,PROT
\c LSL              reg32,reg64              X86_64,LONG,PROT,ND
\c LSL              reg64,mem                X86_64,LONG,PROT,SW
\c LSL              reg64,reg16              X86_64,LONG,PROT
\c LSL              reg64,reg32              X86_64,LONG,PROT
\c LSL              reg64,reg64              X86_64,LONG,PROT
\c LSS              reg16,mem                386
\c LSS              reg32,mem                386
\c LSS              reg64,mem                X86_64,LONG
\c LTR              mem                      286,PROT,PRIV
\c LTR              mem16                    286,PROT,PRIV
\c LTR              reg16                    286,PROT,PRIV
\c MFENCE                                    X86_64,LONG,AMD
\c MONITOR                                   PRESCOTT
\c MONITOR          reg_eax,reg_ecx,reg_edx  PRESCOTT,NOLONG,ND
\c MONITOR          reg_rax,reg_ecx,reg_edx  X86_64,LONG,ND
\c MONITORX                                  AMD
\c MONITORX         reg_rax,reg_ecx,reg_edx  X86_64,LONG,AMD,ND
\c MONITORX         reg_eax,reg_ecx,reg_edx  AMD,ND
\c MONITORX         reg_ax,reg_ecx,reg_edx   AMD,ND
\c MOV              mem,reg_sreg             8086,SW
\c MOV              reg16,reg_sreg           8086
\c MOV              reg32,reg_sreg           386
\c MOV              reg64,reg_sreg           X86_64,LONG,OPT,ND
\c MOV              rm64,reg_sreg            X86_64,LONG
\c MOV              reg_sreg,mem             8086,SW
\c MOV              reg_sreg,reg16           8086,OPT,ND
\c MOV              reg_sreg,reg32           386,OPT,ND
\c MOV              reg_sreg,reg64           X86_64,LONG,OPT,ND
\c MOV              reg_sreg,reg16           8086
\c MOV              reg_sreg,reg32           386
\c MOV              reg_sreg,rm64            X86_64,LONG
\c MOV              reg_al,mem_offs          8086
\c MOV              reg_ax,mem_offs          8086
\c MOV              reg_eax,mem_offs         386
\c MOV              reg_rax,mem_offs         X86_64,LONG
\c MOV              mem_offs,reg_al          8086,NOHLE
\c MOV              mem_offs,reg_ax          8086,NOHLE
\c MOV              mem_offs,reg_eax         386,NOHLE
\c MOV              mem_offs,reg_rax         X86_64,LONG,NOHLE
\c MOV              reg32,reg_creg           386,PRIV,NOLONG
\c MOV              reg64,reg_creg           X86_64,LONG,PRIV
\c MOV              reg_creg,reg32           386,PRIV,NOLONG
\c MOV              reg_creg,reg64           X86_64,LONG,PRIV
\c MOV              reg32,reg_dreg           386,PRIV,NOLONG
\c MOV              reg64,reg_dreg           X86_64,LONG,PRIV
\c MOV              reg_dreg,reg32           386,PRIV,NOLONG
\c MOV              reg_dreg,reg64           X86_64,LONG,PRIV
\c MOV              reg32,reg_treg           386,NOLONG,ND
\c MOV              reg_treg,reg32           386,NOLONG,ND
\c MOV              mem,reg8                 8086
\c MOV              reg8,reg8                8086
\c MOV              mem,reg16                8086
\c MOV              reg16,reg16              8086
\c MOV              mem,reg32                386
\c MOV              reg32,reg32              386
\c MOV              mem,reg64                X86_64,LONG
\c MOV              reg64,reg64              X86_64,LONG
\c MOV              reg8,mem                 8086
\c MOV              reg8,reg8                8086
\c MOV              reg16,mem                8086
\c MOV              reg16,reg16              8086
\c MOV              reg32,mem                386
\c MOV              reg32,reg32              386
\c MOV              reg64,mem                X86_64,LONG
\c MOV              reg64,reg64              X86_64,LONG
\c MOV              reg8,imm                 8086
\c MOV              reg16,imm                8086
\c MOV              reg32,imm                386
\c MOV              reg64,udword             X86_64,LONG,OPT,ND
\c MOV              reg64,sdword             X86_64,LONG,OPT,ND
\c MOV              reg64,imm                X86_64,LONG
\c MOV              rm8,imm                  8086
\c MOV              rm16,imm                 8086
\c MOV              rm32,imm                 386
\c MOV              rm64,imm                 X86_64,LONG
\c MOV              rm64,imm32               X86_64,LONG
\c MOV              mem,imm8                 8086
\c MOV              mem,imm16                8086
\c MOV              mem,imm32                386
\c MOVD             mmxreg,rm32              PENT,MMX,SD
\c MOVD             rm32,mmxreg              PENT,MMX,SD
\c MOVD             mmxreg,rm64              X86_64,LONG,MMX,SX,ND
\c MOVD             rm64,mmxreg              X86_64,LONG,MMX,SX,ND
\c MOVQ             mmxreg,mmxrm             PENT,MMX
\c MOVQ             mmxrm,mmxreg             PENT,MMX
\c MOVQ             mmxreg,rm64              X86_64,LONG,MMX
\c MOVQ             rm64,mmxreg              X86_64,LONG,MMX
\c MOVSB                                     8086
\c MOVSD                                     386
\c MOVSQ                                     X86_64,LONG
\c MOVSW                                     8086
\c MOVSX            reg16,mem                386
\c MOVSX            reg16,reg8               386
\c MOVSX            reg32,rm8                386
\c MOVSX            reg32,rm16               386
\c MOVSX            reg64,rm8                X86_64,LONG
\c MOVSX            reg64,rm16               X86_64,LONG
\c MOVSXD           reg64,rm32               X86_64,LONG
\c MOVSX            reg64,rm32               X86_64,LONG,ND
\c MOVZX            reg16,mem                386
\c MOVZX            reg16,reg8               386
\c MOVZX            reg32,rm8                386
\c MOVZX            reg32,rm16               386
\c MOVZX            reg64,rm8                X86_64,LONG
\c MOVZX            reg64,rm16               X86_64,LONG
\c MUL              rm8                      8086
\c MUL              rm16                     8086
\c MUL              rm32                     386
\c MUL              rm64                     X86_64,LONG
\c MWAIT                                     PRESCOTT
\c MWAIT            reg_eax,reg_ecx          PRESCOTT,ND
\c MWAITX                                    AMD
\c MWAITX           reg_eax,reg_ecx          AMD,ND
\c NEG              rm8                      8086,LOCK
\c NEG              rm16                     8086,LOCK
\c NEG              rm32                     386,LOCK
\c NEG              rm64                     X86_64,LONG,LOCK
\c NOP                                       8086
\c NOP              rm16                     P6
\c NOP              rm32                     P6
\c NOP              rm64                     X86_64,LONG
\c NOT              rm8                      8086,LOCK
\c NOT              rm16                     8086,LOCK
\c NOT              rm32                     386,LOCK
\c NOT              rm64                     X86_64,LONG,LOCK
\c OR               mem,reg8                 8086,LOCK
\c OR               reg8,reg8                8086
\c OR               mem,reg16                8086,LOCK
\c OR               reg16,reg16              8086
\c OR               mem,reg32                386,LOCK
\c OR               reg32,reg32              386
\c OR               mem,reg64                X86_64,LONG,LOCK
\c OR               reg64,reg64              X86_64,LONG
\c OR               reg8,mem                 8086
\c OR               reg8,reg8                8086
\c OR               reg16,mem                8086
\c OR               reg16,reg16              8086
\c OR               reg32,mem                386
\c OR               reg32,reg32              386
\c OR               reg64,mem                X86_64,LONG
\c OR               reg64,reg64              X86_64,LONG
\c OR               rm16,imm8                8086,LOCK
\c OR               rm32,imm8                386,LOCK
\c OR               rm64,imm8                X86_64,LONG,LOCK
\c OR               reg_al,imm               8086
\c OR               reg_ax,sbyteword         8086,ND
\c OR               reg_ax,imm               8086
\c OR               reg_eax,sbytedword       386,ND
\c OR               reg_eax,imm              386
\c OR               reg_rax,sbytedword       X86_64,LONG,ND
\c OR               reg_rax,imm              X86_64,LONG
\c OR               rm8,imm                  8086,LOCK
\c OR               rm16,sbyteword           8086,LOCK,ND
\c OR               rm16,imm                 8086,LOCK
\c OR               rm32,sbytedword          386,LOCK,ND
\c OR               rm32,imm                 386,LOCK
\c OR               rm64,sbytedword          X86_64,LONG,LOCK,ND
\c OR               rm64,imm                 X86_64,LONG,LOCK
\c OR               mem,imm8                 8086,LOCK
\c OR               mem,sbyteword16          8086,LOCK,ND
\c OR               mem,imm16                8086,LOCK
\c OR               mem,sbytedword32         386,LOCK,ND
\c OR               mem,imm32                386,LOCK
\c OR               rm8,imm                  8086,LOCK,ND,NOLONG
\c OUT              imm,reg_al               8086
\c OUT              imm,reg_ax               8086
\c OUT              imm,reg_eax              386
\c OUT              reg_dx,reg_al            8086
\c OUT              reg_dx,reg_ax            8086
\c OUT              reg_dx,reg_eax           386
\c OUTSB                                     186
\c OUTSD                                     386
\c OUTSW                                     186
\c PACKSSDW         mmxreg,mmxrm             PENT,MMX
\c PACKSSWB         mmxreg,mmxrm             PENT,MMX
\c PACKUSWB         mmxreg,mmxrm             PENT,MMX
\c PADDB            mmxreg,mmxrm             PENT,MMX
\c PADDD            mmxreg,mmxrm             PENT,MMX
\c PADDSB           mmxreg,mmxrm             PENT,MMX
\c PADDSIW          mmxreg,mmxrm             PENT,MMX,CYRIX
\c PADDSW           mmxreg,mmxrm             PENT,MMX
\c PADDUSB          mmxreg,mmxrm             PENT,MMX
\c PADDUSW          mmxreg,mmxrm             PENT,MMX
\c PADDW            mmxreg,mmxrm             PENT,MMX
\c PAND             mmxreg,mmxrm             PENT,MMX
\c PANDN            mmxreg,mmxrm             PENT,MMX
\c PAUSE                                     8086
\c PAVEB            mmxreg,mmxrm             PENT,MMX,CYRIX
\c PAVGUSB          mmxreg,mmxrm             PENT,3DNOW
\c PCMPEQB          mmxreg,mmxrm             PENT,MMX
\c PCMPEQD          mmxreg,mmxrm             PENT,MMX
\c PCMPEQW          mmxreg,mmxrm             PENT,MMX
\c PCMPGTB          mmxreg,mmxrm             PENT,MMX
\c PCMPGTD          mmxreg,mmxrm             PENT,MMX
\c PCMPGTW          mmxreg,mmxrm             PENT,MMX
\c PDISTIB          mmxreg,mem               PENT,MMX,CYRIX
\c PF2ID            mmxreg,mmxrm             PENT,3DNOW
\c PFACC            mmxreg,mmxrm             PENT,3DNOW
\c PFADD            mmxreg,mmxrm             PENT,3DNOW
\c PFCMPEQ          mmxreg,mmxrm             PENT,3DNOW
\c PFCMPGE          mmxreg,mmxrm             PENT,3DNOW
\c PFCMPGT          mmxreg,mmxrm             PENT,3DNOW
\c PFMAX            mmxreg,mmxrm             PENT,3DNOW
\c PFMIN            mmxreg,mmxrm             PENT,3DNOW
\c PFMUL            mmxreg,mmxrm             PENT,3DNOW
\c PFRCP            mmxreg,mmxrm             PENT,3DNOW
\c PFRCPIT1         mmxreg,mmxrm             PENT,3DNOW
\c PFRCPIT2         mmxreg,mmxrm             PENT,3DNOW
\c PFRSQIT1         mmxreg,mmxrm             PENT,3DNOW
\c PFRSQRT          mmxreg,mmxrm             PENT,3DNOW
\c PFSUB            mmxreg,mmxrm             PENT,3DNOW
\c PFSUBR           mmxreg,mmxrm             PENT,3DNOW
\c PI2FD            mmxreg,mmxrm             PENT,3DNOW
\c PMACHRIW         mmxreg,mem               PENT,MMX,CYRIX
\c PMADDWD          mmxreg,mmxrm             PENT,MMX
\c PMAGW            mmxreg,mmxrm             PENT,MMX,CYRIX
\c PMULHRIW         mmxreg,mmxrm             PENT,MMX,CYRIX
\c PMULHRWA         mmxreg,mmxrm             PENT,3DNOW
\c PMULHRWC         mmxreg,mmxrm             PENT,MMX,CYRIX
\c PMULHW           mmxreg,mmxrm             PENT,MMX
\c PMULLW           mmxreg,mmxrm             PENT,MMX
\c PMVGEZB          mmxreg,mem               PENT,MMX,CYRIX
\c PMVLZB           mmxreg,mem               PENT,MMX,CYRIX
\c PMVNZB           mmxreg,mem               PENT,MMX,CYRIX
\c PMVZB            mmxreg,mem               PENT,MMX,CYRIX
\c POP              reg16                    8086
\c POP              reg32                    386,NOLONG
\c POP              reg64                    X86_64,LONG
\c POP              rm16                     8086
\c POP              rm32                     386,NOLONG
\c POP              rm64                     X86_64,LONG
\c POP              reg_es                   8086,NOLONG
\c POP              reg_cs                   8086,UNDOC,ND,OBSOLETE
\c POP              reg_ss                   8086,NOLONG
\c POP              reg_ds                   8086,NOLONG
\c POP              reg_fs                   386
\c POP              reg_gs                   386
\c POPA                                      186,NOLONG
\c POPAD                                     386,NOLONG
\c POPAW                                     186,NOLONG
\c POPF                                      8086
\c POPFD                                     386,NOLONG
\c POPFQ                                     X86_64,LONG
\c POPFW                                     8086
\c POR              mmxreg,mmxrm             PENT,MMX
\c PREFETCH         mem                      PENT,3DNOW
\c PREFETCHW        mem                      PENT,3DNOW
\c PSLLD            mmxreg,mmxrm             PENT,MMX
\c PSLLD            mmxreg,imm               PENT,MMX
\c PSLLQ            mmxreg,mmxrm             PENT,MMX
\c PSLLQ            mmxreg,imm               PENT,MMX
\c PSLLW            mmxreg,mmxrm             PENT,MMX
\c PSLLW            mmxreg,imm               PENT,MMX
\c PSRAD            mmxreg,mmxrm             PENT,MMX
\c PSRAD            mmxreg,imm               PENT,MMX
\c PSRAW            mmxreg,mmxrm             PENT,MMX
\c PSRAW            mmxreg,imm               PENT,MMX
\c PSRLD            mmxreg,mmxrm             PENT,MMX
\c PSRLD            mmxreg,imm               PENT,MMX
\c PSRLQ            mmxreg,mmxrm             PENT,MMX
\c PSRLQ            mmxreg,imm               PENT,MMX
\c PSRLW            mmxreg,mmxrm             PENT,MMX
\c PSRLW            mmxreg,imm               PENT,MMX
\c PSUBB            mmxreg,mmxrm             PENT,MMX
\c PSUBD            mmxreg,mmxrm             PENT,MMX
\c PSUBSB           mmxreg,mmxrm             PENT,MMX
\c PSUBSIW          mmxreg,mmxrm             PENT,MMX,CYRIX
\c PSUBSW           mmxreg,mmxrm             PENT,MMX
\c PSUBUSB          mmxreg,mmxrm             PENT,MMX
\c PSUBUSW          mmxreg,mmxrm             PENT,MMX
\c PSUBW            mmxreg,mmxrm             PENT,MMX
\c PUNPCKHBW        mmxreg,mmxrm             PENT,MMX
\c PUNPCKHDQ        mmxreg,mmxrm             PENT,MMX
\c PUNPCKHWD        mmxreg,mmxrm             PENT,MMX
\c PUNPCKLBW        mmxreg,mmxrm             PENT,MMX
\c PUNPCKLDQ        mmxreg,mmxrm             PENT,MMX
\c PUNPCKLWD        mmxreg,mmxrm             PENT,MMX
\c PUSH             reg16                    8086
\c PUSH             reg32                    386,NOLONG
\c PUSH             reg64                    X86_64,LONG
\c PUSH             rm16                     8086
\c PUSH             rm32                     386,NOLONG
\c PUSH             rm64                     X86_64,LONG
\c PUSH             reg_es                   8086,NOLONG
\c PUSH             reg_cs                   8086,NOLONG
\c PUSH             reg_ss                   8086,NOLONG
\c PUSH             reg_ds                   8086,NOLONG
\c PUSH             reg_fs                   386
\c PUSH             reg_gs                   386
\c PUSH             imm8                     186
\c PUSH             sbyteword16              186,AR0,SIZE,ND
\c PUSH             imm16                    186,AR0,SIZE
\c PUSH             sbytedword32             386,NOLONG,AR0,SIZE,ND
\c PUSH             imm32                    386,NOLONG,AR0,SIZE
\c PUSH             sbytedword32             386,NOLONG,SD,ND
\c PUSH             imm32                    386,NOLONG,SD
\c PUSH             sbytedword64             X86_64,LONG,AR0,SIZE,ND
\c PUSH             imm64                    X86_64,LONG,AR0,SIZE
\c PUSH             sbytedword32             X86_64,LONG,AR0,SIZE,ND
\c PUSH             imm32                    X86_64,LONG,AR0,SIZE
\c PUSHA                                     186,NOLONG
\c PUSHAD                                    386,NOLONG
\c PUSHAW                                    186,NOLONG
\c PUSHF                                     8086
\c PUSHFD                                    386,NOLONG
\c PUSHFQ                                    X86_64,LONG
\c PUSHFW                                    8086
\c PXOR             mmxreg,mmxrm             PENT,MMX
\c RCL              rm8,unity                8086
\c RCL              rm8,reg_cl               8086
\c RCL              rm8,imm8                 186
\c RCL              rm16,unity               8086
\c RCL              rm16,reg_cl              8086
\c RCL              rm16,imm8                186
\c RCL              rm32,unity               386
\c RCL              rm32,reg_cl              386
\c RCL              rm32,imm8                386
\c RCL              rm64,unity               X86_64,LONG
\c RCL              rm64,reg_cl              X86_64,LONG
\c RCL              rm64,imm8                X86_64,LONG
\c RCR              rm8,unity                8086
\c RCR              rm8,reg_cl               8086
\c RCR              rm8,imm8                 186
\c RCR              rm16,unity               8086
\c RCR              rm16,reg_cl              8086
\c RCR              rm16,imm8                186
\c RCR              rm32,unity               386
\c RCR              rm32,reg_cl              386
\c RCR              rm32,imm8                386
\c RCR              rm64,unity               X86_64,LONG
\c RCR              rm64,reg_cl              X86_64,LONG
\c RCR              rm64,imm8                X86_64,LONG
\c RDSHR            rm32                     P6,CYRIX,SMM
\c RDMSR                                     PENT,PRIV
\c RDPMC                                     P6
\c RDTSC                                     PENT
\c RDTSCP                                    X86_64
\c RET                                       8086,BND
\c RET              imm                      8086,SW,BND
\c RETF                                      8086
\c RETF             imm                      8086,SW
\c RETN                                      8086,BND
\c RETN             imm                      8086,SW,BND
\c RETW                                      8086,BND
\c RETW             imm                      8086,SW,BND
\c RETFW                                     8086
\c RETFW            imm                      8086,SW
\c RETNW                                     8086,BND
\c RETNW            imm                      8086,SW,BND
\c RETD                                      8086,BND,NOLONG
\c RETD             imm                      8086,SW,BND,NOLONG
\c RETFD                                     8086
\c RETFD            imm                      8086,SW
\c RETND                                     8086,BND,NOLONG
\c RETND            imm                      8086,SW,BND,NOLONG
\c RETQ                                      X86_64,LONG,BND
\c RETQ             imm                      X86_64,LONG,SW,BND
\c RETFQ                                     X86_64,LONG
\c RETFQ            imm                      X86_64,LONG,SW
\c RETNQ                                     X86_64,LONG,BND
\c RETNQ            imm                      X86_64,LONG,SW,BND
\c ROL              rm8,unity                8086
\c ROL              rm8,reg_cl               8086
\c ROL              rm8,imm8                 186
\c ROL              rm16,unity               8086
\c ROL              rm16,reg_cl              8086
\c ROL              rm16,imm8                186
\c ROL              rm32,unity               386
\c ROL              rm32,reg_cl              386
\c ROL              rm32,imm8                386
\c ROL              rm64,unity               X86_64,LONG
\c ROL              rm64,reg_cl              X86_64,LONG
\c ROL              rm64,imm8                X86_64,LONG
\c ROR              rm8,unity                8086
\c ROR              rm8,reg_cl               8086
\c ROR              rm8,imm8                 186
\c ROR              rm16,unity               8086
\c ROR              rm16,reg_cl              8086
\c ROR              rm16,imm8                186
\c ROR              rm32,unity               386
\c ROR              rm32,reg_cl              386
\c ROR              rm32,imm8                386
\c ROR              rm64,unity               X86_64,LONG
\c ROR              rm64,reg_cl              X86_64,LONG
\c ROR              rm64,imm8                X86_64,LONG
\c RDM                                       P6,CYRIX,ND
\c RSDC             reg_sreg,mem80           486,CYRIX,SMM
\c RSLDT            mem80                    486,CYRIX,SMM
\c RSM                                       PENT,SMM
\c RSTS             mem80                    486,CYRIX,SMM
\c SAHF                                      8086
\c SAL              rm8,unity                8086,ND
\c SAL              rm8,reg_cl               8086,ND
\c SAL              rm8,imm8                 186,ND
\c SAL              rm16,unity               8086,ND
\c SAL              rm16,reg_cl              8086,ND
\c SAL              rm16,imm8                186,ND
\c SAL              rm32,unity               386,ND
\c SAL              rm32,reg_cl              386,ND
\c SAL              rm32,imm8                386,ND
\c SAL              rm64,unity               X86_64,LONG,ND
\c SAL              rm64,reg_cl              X86_64,LONG,ND
\c SAL              rm64,imm8                X86_64,LONG,ND
\c SALC                                      8086,UNDOC
\c SAR              rm8,unity                8086
\c SAR              rm8,reg_cl               8086
\c SAR              rm8,imm8                 186
\c SAR              rm16,unity               8086
\c SAR              rm16,reg_cl              8086
\c SAR              rm16,imm8                186
\c SAR              rm32,unity               386
\c SAR              rm32,reg_cl              386
\c SAR              rm32,imm8                386
\c SAR              rm64,unity               X86_64,LONG
\c SAR              rm64,reg_cl              X86_64,LONG
\c SAR              rm64,imm8                X86_64,LONG
\c SBB              mem,reg8                 8086,LOCK
\c SBB              reg8,reg8                8086
\c SBB              mem,reg16                8086,LOCK
\c SBB              reg16,reg16              8086
\c SBB              mem,reg32                386,LOCK
\c SBB              reg32,reg32              386
\c SBB              mem,reg64                X86_64,LONG,LOCK
\c SBB              reg64,reg64              X86_64,LONG
\c SBB              reg8,mem                 8086
\c SBB              reg8,reg8                8086
\c SBB              reg16,mem                8086
\c SBB              reg16,reg16              8086
\c SBB              reg32,mem                386
\c SBB              reg32,reg32              386
\c SBB              reg64,mem                X86_64,LONG
\c SBB              reg64,reg64              X86_64,LONG
\c SBB              rm16,imm8                8086,LOCK
\c SBB              rm32,imm8                386,LOCK
\c SBB              rm64,imm8                X86_64,LONG,LOCK
\c SBB              reg_al,imm               8086
\c SBB              reg_ax,sbyteword         8086,ND
\c SBB              reg_ax,imm               8086
\c SBB              reg_eax,sbytedword       386,ND
\c SBB              reg_eax,imm              386
\c SBB              reg_rax,sbytedword       X86_64,LONG,ND
\c SBB              reg_rax,imm              X86_64,LONG
\c SBB              rm8,imm                  8086,LOCK
\c SBB              rm16,sbyteword           8086,LOCK,ND
\c SBB              rm16,imm                 8086,LOCK
\c SBB              rm32,sbytedword          386,LOCK,ND
\c SBB              rm32,imm                 386,LOCK
\c SBB              rm64,sbytedword          X86_64,LONG,LOCK,ND
\c SBB              rm64,imm                 X86_64,LONG,LOCK
\c SBB              mem,imm8                 8086,LOCK
\c SBB              mem,sbyteword16          8086,LOCK,ND
\c SBB              mem,imm16                8086,LOCK
\c SBB              mem,sbytedword32         386,LOCK,ND
\c SBB              mem,imm32                386,LOCK
\c SBB              rm8,imm                  8086,LOCK,ND,NOLONG
\c SCASB                                     8086
\c SCASD                                     386
\c SCASQ                                     X86_64,LONG
\c SCASW                                     8086
\c SFENCE                                    X86_64,LONG,AMD
\c SGDT             mem                      286
\c SHL              rm8,unity                8086
\c SHL              rm8,reg_cl               8086
\c SHL              rm8,imm8                 186
\c SHL              rm16,unity               8086
\c SHL              rm16,reg_cl              8086
\c SHL              rm16,imm8                186
\c SHL              rm32,unity               386
\c SHL              rm32,reg_cl              386
\c SHL              rm32,imm8                386
\c SHL              rm64,unity               X86_64,LONG
\c SHL              rm64,reg_cl              X86_64,LONG
\c SHL              rm64,imm8                X86_64,LONG
\c SHLD             mem,reg16,imm            386
\c SHLD             reg16,reg16,imm          386
\c SHLD             mem,reg32,imm            386
\c SHLD             reg32,reg32,imm          386
\c SHLD             mem,reg64,imm            X86_64,LONG
\c SHLD             reg64,reg64,imm          X86_64,LONG
\c SHLD             mem,reg16,reg_cl         386
\c SHLD             reg16,reg16,reg_cl       386
\c SHLD             mem,reg32,reg_cl         386
\c SHLD             reg32,reg32,reg_cl       386
\c SHLD             mem,reg64,reg_cl         X86_64,LONG
\c SHLD             reg64,reg64,reg_cl       X86_64,LONG
\c SHR              rm8,unity                8086
\c SHR              rm8,reg_cl               8086
\c SHR              rm8,imm8                 186
\c SHR              rm16,unity               8086
\c SHR              rm16,reg_cl              8086
\c SHR              rm16,imm8                186
\c SHR              rm32,unity               386
\c SHR              rm32,reg_cl              386
\c SHR              rm32,imm8                386
\c SHR              rm64,unity               X86_64,LONG
\c SHR              rm64,reg_cl              X86_64,LONG
\c SHR              rm64,imm8                X86_64,LONG
\c SHRD             mem,reg16,imm            386
\c SHRD             reg16,reg16,imm          386
\c SHRD             mem,reg32,imm            386
\c SHRD             reg32,reg32,imm          386
\c SHRD             mem,reg64,imm            X86_64,LONG
\c SHRD             reg64,reg64,imm          X86_64,LONG
\c SHRD             mem,reg16,reg_cl         386
\c SHRD             reg16,reg16,reg_cl       386
\c SHRD             mem,reg32,reg_cl         386
\c SHRD             reg32,reg32,reg_cl       386
\c SHRD             mem,reg64,reg_cl         X86_64,LONG
\c SHRD             reg64,reg64,reg_cl       X86_64,LONG
\c SIDT             mem                      286
\c SLDT             mem                      286
\c SLDT             mem16                    286
\c SLDT             reg16                    286
\c SLDT             reg32                    386
\c SLDT             reg64                    X86_64,LONG,ND
\c SLDT             reg64                    X86_64,LONG
\c SKINIT                                    X86_64,LONG
\c SMI                                       386,UNDOC
\c SMINT                                     P6,CYRIX,ND
\c SMINTOLD                                  486,CYRIX,ND,OBSOLETE
\c SMSW             mem                      286
\c SMSW             mem16                    286
\c SMSW             reg16                    286
\c SMSW             reg32                    386
\c SMSW             reg64                    X86_64,LONG
\c STC                                       8086
\c STD                                       8086
\c STI                                       8086
\c STOSB                                     8086
\c STOSD                                     386
\c STOSQ                                     X86_64,LONG
\c STOSW                                     8086
\c STR              mem                      286,PROT
\c STR              mem16                    286,PROT
\c STR              reg16                    286,PROT
\c STR              reg32                    386,PROT
\c STR              reg64                    X86_64,LONG
\c SUB              mem,reg8                 8086,LOCK
\c SUB              reg8,reg8                8086
\c SUB              mem,reg16                8086,LOCK
\c SUB              reg16,reg16              8086
\c SUB              mem,reg32                386,LOCK
\c SUB              reg32,reg32              386
\c SUB              mem,reg64                X86_64,LONG,LOCK
\c SUB              reg64,reg64              X86_64,LONG
\c SUB              reg8,mem                 8086
\c SUB              reg8,reg8                8086
\c SUB              reg16,mem                8086
\c SUB              reg16,reg16              8086
\c SUB              reg32,mem                386
\c SUB              reg32,reg32              386
\c SUB              reg64,mem                X86_64,LONG
\c SUB              reg64,reg64              X86_64,LONG
\c SUB              rm16,imm8                8086,LOCK
\c SUB              rm32,imm8                386,LOCK
\c SUB              rm64,imm8                X86_64,LONG,LOCK
\c SUB              reg_al,imm               8086
\c SUB              reg_ax,sbyteword         8086,ND
\c SUB              reg_ax,imm               8086
\c SUB              reg_eax,sbytedword       386,ND
\c SUB              reg_eax,imm              386
\c SUB              reg_rax,sbytedword       X86_64,LONG,ND
\c SUB              reg_rax,imm              X86_64,LONG
\c SUB              rm8,imm                  8086,LOCK
\c SUB              rm16,sbyteword           8086,LOCK,ND
\c SUB              rm16,imm                 8086,LOCK
\c SUB              rm32,sbytedword          386,LOCK,ND
\c SUB              rm32,imm                 386,LOCK
\c SUB              rm64,sbytedword          X86_64,LONG,LOCK,ND
\c SUB              rm64,imm                 X86_64,LONG,LOCK
\c SUB              mem,imm8                 8086,LOCK
\c SUB              mem,sbyteword16          8086,LOCK,ND
\c SUB              mem,imm16                8086,LOCK
\c SUB              mem,sbytedword32         386,LOCK,ND
\c SUB              mem,imm32                386,LOCK
\c SUB              rm8,imm                  8086,LOCK,ND,NOLONG
\c SVDC             mem80,reg_sreg           486,CYRIX,SMM
\c SVLDT            mem80                    486,CYRIX,SMM,ND
\c SVTS             mem80                    486,CYRIX,SMM
\c SWAPGS                                    X86_64,LONG
\c SYSCALL                                   P6,AMD
\c SYSENTER                                  P6
\c SYSEXIT                                   P6,PRIV
\c SYSRET                                    P6,PRIV,AMD
\c TEST             mem,reg8                 8086
\c TEST             reg8,reg8                8086
\c TEST             mem,reg16                8086
\c TEST             reg16,reg16              8086
\c TEST             mem,reg32                386
\c TEST             reg32,reg32              386
\c TEST             mem,reg64                X86_64,LONG
\c TEST             reg64,reg64              X86_64,LONG
\c TEST             reg8,mem                 8086
\c TEST             reg16,mem                8086
\c TEST             reg32,mem                386
\c TEST             reg64,mem                X86_64,LONG
\c TEST             reg_al,imm               8086
\c TEST             reg_ax,imm               8086
\c TEST             reg_eax,imm              386
\c TEST             reg_rax,imm              X86_64,LONG
\c TEST             rm8,imm                  8086
\c TEST             rm16,imm                 8086
\c TEST             rm32,imm                 386
\c TEST             rm64,imm                 X86_64,LONG
\c TEST             mem,imm8                 8086
\c TEST             mem,imm16                8086
\c TEST             mem,imm32                386
\c UD0                                       186,OBSOLETE
\c UD0              reg16,rm16               186
\c UD0              reg32,rm32               186
\c UD0              reg64,rm64               186
\c UD1              reg16,rm16               186
\c UD1              reg32,rm32               186
\c UD1              reg64,rm64               186
\c UD1                                       186,ND
\c UD2B                                      186,ND
\c UD2B             reg16,rm16               186,ND
\c UD2B             reg32,rm32               186,ND
\c UD2B             reg64,rm64               186,ND
\c UD2                                       186
\c UD2A                                      186,ND
\c UMOV             mem,reg8                 386,UNDOC,ND
\c UMOV             reg8,reg8                386,UNDOC,ND
\c UMOV             mem,reg16                386,UNDOC,ND
\c UMOV             reg16,reg16              386,UNDOC,ND
\c UMOV             mem,reg32                386,UNDOC,ND
\c UMOV             reg32,reg32              386,UNDOC,ND
\c UMOV             reg8,mem                 386,UNDOC,ND
\c UMOV             reg8,reg8                386,UNDOC,ND
\c UMOV             reg16,mem                386,UNDOC,ND
\c UMOV             reg16,reg16              386,UNDOC,ND
\c UMOV             reg32,mem                386,UNDOC,ND
\c UMOV             reg32,reg32              386,UNDOC,ND
\c VERR             mem                      286,PROT
\c VERR             mem16                    286,PROT
\c VERR             reg16                    286,PROT
\c VERW             mem                      286,PROT
\c VERW             mem16                    286,PROT
\c VERW             reg16                    286,PROT
\c FWAIT                                     8086
\c WBINVD                                    486,PRIV
\c WRSHR            rm32                     P6,CYRIX,SMM
\c WRMSR                                     PENT,PRIV
\c XADD             mem,reg8                 486,LOCK
\c XADD             reg8,reg8                486
\c XADD             mem,reg16                486,LOCK
\c XADD             reg16,reg16              486
\c XADD             mem,reg32                486,LOCK
\c XADD             reg32,reg32              486
\c XADD             mem,reg64                X86_64,LONG,LOCK
\c XADD             reg64,reg64              X86_64,LONG
\c XBTS             reg16,mem                386,SW,UNDOC,ND
\c XBTS             reg16,reg16              386,UNDOC,ND
\c XBTS             reg32,mem                386,SD,UNDOC,ND
\c XBTS             reg32,reg32              386,UNDOC,ND
\c XCHG             reg_ax,reg16             8086
\c XCHG             reg_eax,reg32na          386
\c XCHG             reg_rax,reg64            X86_64,LONG
\c XCHG             reg16,reg_ax             8086
\c XCHG             reg32na,reg_eax          386
\c XCHG             reg64,reg_rax            X86_64,LONG
\c XCHG             reg_eax,reg_eax          386,NOLONG
\c XCHG             reg8,mem                 8086,LOCK
\c XCHG             reg8,reg8                8086
\c XCHG             reg16,mem                8086,LOCK
\c XCHG             reg16,reg16              8086
\c XCHG             reg32,mem                386,LOCK
\c XCHG             reg32,reg32              386
\c XCHG             reg64,mem                X86_64,LONG,LOCK
\c XCHG             reg64,reg64              X86_64,LONG
\c XCHG             mem,reg8                 8086,LOCK
\c XCHG             reg8,reg8                8086
\c XCHG             mem,reg16                8086,LOCK
\c XCHG             reg16,reg16              8086
\c XCHG             mem,reg32                386,LOCK
\c XCHG             reg32,reg32              386
\c XCHG             mem,reg64                X86_64,LONG,LOCK
\c XCHG             reg64,reg64              X86_64,LONG
\c XLATB                                     8086
\c XLAT                                      8086
\c XOR              mem,reg8                 8086,LOCK
\c XOR              reg8,reg8                8086
\c XOR              mem,reg16                8086,LOCK
\c XOR              reg16,reg16              8086
\c XOR              mem,reg32                386,LOCK
\c XOR              reg32,reg32              386
\c XOR              mem,reg64                X86_64,LONG,LOCK
\c XOR              reg64,reg64              X86_64,LONG
\c XOR              reg8,mem                 8086
\c XOR              reg8,reg8                8086
\c XOR              reg16,mem                8086
\c XOR              reg16,reg16              8086
\c XOR              reg32,mem                386
\c XOR              reg32,reg32              386
\c XOR              reg64,mem                X86_64,LONG
\c XOR              reg64,reg64              X86_64,LONG
\c XOR              rm16,imm8                8086,LOCK
\c XOR              rm32,imm8                386,LOCK
\c XOR              rm64,imm8                X86_64,LONG,LOCK
\c XOR              reg_al,imm               8086
\c XOR              reg_ax,sbyteword         8086,ND
\c XOR              reg_ax,imm               8086
\c XOR              reg_eax,sbytedword       386,ND
\c XOR              reg_eax,imm              386
\c XOR              reg_rax,sbytedword       X86_64,LONG,ND
\c XOR              reg_rax,imm              X86_64,LONG
\c XOR              rm8,imm                  8086,LOCK
\c XOR              rm16,sbyteword           8086,LOCK,ND
\c XOR              rm16,imm                 8086,LOCK
\c XOR              rm32,sbytedword          386,LOCK,ND
\c XOR              rm32,imm                 386,LOCK
\c XOR              rm64,sbytedword          X86_64,LONG,LOCK,ND
\c XOR              rm64,imm                 X86_64,LONG,LOCK
\c XOR              mem,imm8                 8086,LOCK
\c XOR              mem,sbyteword16          8086,LOCK,ND
\c XOR              mem,imm16                8086,LOCK
\c XOR              mem,sbytedword32         386,LOCK,ND
\c XOR              mem,imm32                386,LOCK
\c XOR              rm8,imm                  8086,LOCK,ND,NOLONG
\c CMOVcc           reg16,mem                P6
\c CMOVcc           reg16,reg16              P6
\c CMOVcc           reg32,mem                P6
\c CMOVcc           reg32,reg32              P6
\c CMOVcc           reg64,mem                X86_64,LONG
\c CMOVcc           reg64,reg64              X86_64,LONG
\c Jcc              imm|near                 386,BND
\c Jcc              imm16|near               386,NOLONG,BND
\c Jcc              imm32|near               386,NOLONG,BND
\c Jcc              imm64|near               X86_64,LONG,BND
\c Jcc              imm|short                8086,ND,BND
\c Jcc              imm                      8086,ND,BND
\c Jcc              imm                      386,ND,BND
\c Jcc              imm                      8086,ND,BND
\c Jcc              imm                      8086,BND
\c SETcc            mem                      386
\c SETcc            reg8                     386

\S{} Katmai Streaming SIMD instructions (SSE -- a.k.a. KNI, XMM, MMX2)

\c ADDPS            xmmreg,xmmrm128          KATMAI,SSE
\c ADDSS            xmmreg,xmmrm32           KATMAI,SSE
\c ANDNPS           xmmreg,xmmrm128          KATMAI,SSE
\c ANDPS            xmmreg,xmmrm128          KATMAI,SSE
\c CMPEQPS          xmmreg,xmmrm128          KATMAI,SSE
\c CMPEQSS          xmmreg,xmmrm32           KATMAI,SSE
\c CMPLEPS          xmmreg,xmmrm128          KATMAI,SSE
\c CMPLESS          xmmreg,xmmrm32           KATMAI,SSE
\c CMPLTPS          xmmreg,xmmrm128          KATMAI,SSE
\c CMPLTSS          xmmreg,xmmrm32           KATMAI,SSE
\c CMPNEQPS         xmmreg,xmmrm128          KATMAI,SSE
\c CMPNEQSS         xmmreg,xmmrm32           KATMAI,SSE
\c CMPNLEPS         xmmreg,xmmrm128          KATMAI,SSE
\c CMPNLESS         xmmreg,xmmrm32           KATMAI,SSE
\c CMPNLTPS         xmmreg,xmmrm128          KATMAI,SSE
\c CMPNLTSS         xmmreg,xmmrm32           KATMAI,SSE
\c CMPORDPS         xmmreg,xmmrm128          KATMAI,SSE
\c CMPORDSS         xmmreg,xmmrm32           KATMAI,SSE
\c CMPUNORDPS       xmmreg,xmmrm128          KATMAI,SSE
\c CMPUNORDSS       xmmreg,xmmrm32           KATMAI,SSE
\c CMPPS            xmmreg,xmmrm128,imm8     KATMAI,SSE
\c CMPSS            xmmreg,xmmrm32,imm8      KATMAI,SSE
\c COMISS           xmmreg,xmmrm32           KATMAI,SSE
\c CVTPI2PS         xmmreg,mmxrm64           KATMAI,SSE,MMX
\c CVTPS2PI         mmxreg,xmmrm64           KATMAI,SSE,MMX
\c CVTSI2SS         xmmreg,mem               KATMAI,SSE,SD,AR1,ND
\c CVTSI2SS         xmmreg,rm32              KATMAI,SSE,SD,AR1
\c CVTSI2SS         xmmreg,rm64              X86_64,LONG,SSE,AR1
\c CVTSS2SI         reg32,xmmreg             KATMAI,SSE,SD,AR1
\c CVTSS2SI         reg32,mem                KATMAI,SSE,SD,AR1
\c CVTSS2SI         reg64,xmmreg             X86_64,LONG,SSE,SD,AR1
\c CVTSS2SI         reg64,mem                X86_64,LONG,SSE,SD,AR1
\c CVTTPS2PI        mmxreg,xmmrm             KATMAI,SSE,MMX
\c CVTTSS2SI        reg32,xmmrm              KATMAI,SSE,SD,AR1
\c CVTTSS2SI        reg64,xmmrm              X86_64,LONG,SSE,SD,AR1
\c DIVPS            xmmreg,xmmrm128          KATMAI,SSE
\c DIVSS            xmmreg,xmmrm32           KATMAI,SSE
\c LDMXCSR          mem32                    KATMAI,SSE
\c MAXPS            xmmreg,xmmrm128          KATMAI,SSE
\c MAXSS            xmmreg,xmmrm32           KATMAI,SSE
\c MINPS            xmmreg,xmmrm128          KATMAI,SSE
\c MINSS            xmmreg,xmmrm32           KATMAI,SSE
\c MOVAPS           xmmreg,xmmrm128          KATMAI,SSE
\c MOVAPS           xmmrm128,xmmreg          KATMAI,SSE
\c MOVHPS           xmmreg,mem64             KATMAI,SSE
\c MOVHPS           mem64,xmmreg             KATMAI,SSE
\c MOVLHPS          xmmreg,xmmreg            KATMAI,SSE
\c MOVLPS           xmmreg,mem64             KATMAI,SSE
\c MOVLPS           mem64,xmmreg             KATMAI,SSE
\c MOVHLPS          xmmreg,xmmreg            KATMAI,SSE
\c MOVMSKPS         reg32,xmmreg             KATMAI,SSE
\c MOVMSKPS         reg64,xmmreg             X86_64,LONG,SSE
\c MOVNTPS          mem128,xmmreg            KATMAI,SSE
\c MOVSS            xmmreg,xmmrm32           KATMAI,SSE
\c MOVSS            xmmrm32,xmmreg           KATMAI,SSE
\c MOVUPS           xmmreg,xmmrm128          KATMAI,SSE
\c MOVUPS           xmmrm128,xmmreg          KATMAI,SSE
\c MULPS            xmmreg,xmmrm128          KATMAI,SSE
\c MULSS            xmmreg,xmmrm32           KATMAI,SSE
\c ORPS             xmmreg,xmmrm128          KATMAI,SSE
\c RCPPS            xmmreg,xmmrm128          KATMAI,SSE
\c RCPSS            xmmreg,xmmrm32           KATMAI,SSE
\c RSQRTPS          xmmreg,xmmrm128          KATMAI,SSE
\c RSQRTSS          xmmreg,xmmrm32           KATMAI,SSE
\c SHUFPS           xmmreg,xmmrm128,imm8     KATMAI,SSE
\c SQRTPS           xmmreg,xmmrm128          KATMAI,SSE
\c SQRTSS           xmmreg,xmmrm32           KATMAI,SSE
\c STMXCSR          mem32                    KATMAI,SSE
\c SUBPS            xmmreg,xmmrm128          KATMAI,SSE
\c SUBSS            xmmreg,xmmrm32           KATMAI,SSE
\c UCOMISS          xmmreg,xmmrm32           KATMAI,SSE
\c UNPCKHPS         xmmreg,xmmrm128          KATMAI,SSE
\c UNPCKLPS         xmmreg,xmmrm128          KATMAI,SSE
\c XORPS            xmmreg,xmmrm128          KATMAI,SSE

\S{} Introduced in Deschutes but necessary for SSE support

\c FXRSTOR          mem                      P6,SSE,FPU
\c FXRSTOR64        mem                      X86_64,LONG,SSE,FPU
\c FXSAVE           mem                      P6,SSE,FPU
\c FXSAVE64         mem                      X86_64,LONG,SSE,FPU

\S{} XSAVE group (AVX and extended state)

\c XGETBV                                    NEHALEM
\c XSETBV                                    NEHALEM,PRIV
\c XSAVE            mem                      NEHALEM
\c XSAVE64          mem                      LONG,NEHALEM
\c XSAVEC           mem                      
\c XSAVEC64         mem                      LONG
\c XSAVEOPT         mem                      
\c XSAVEOPT64       mem                      LONG
\c XSAVES           mem                      
\c XSAVES64         mem                      LONG
\c XRSTOR           mem                      NEHALEM
\c XRSTOR64         mem                      LONG,NEHALEM
\c XRSTORS          mem                      
\c XRSTORS64        mem                      LONG

\S{} Generic memory operations

\c PREFETCHNTA      mem8                     KATMAI
\c PREFETCHT0       mem8                     KATMAI
\c PREFETCHT1       mem8                     KATMAI
\c PREFETCHT2       mem8                     KATMAI
\c SFENCE                                    KATMAI

\S{} New MMX instructions introduced in Katmai

\c MASKMOVQ         mmxreg,mmxreg            KATMAI,MMX
\c MOVNTQ           mem,mmxreg               KATMAI,MMX
\c PAVGB            mmxreg,mmxrm             KATMAI,MMX
\c PAVGW            mmxreg,mmxrm             KATMAI,MMX
\c PEXTRW           reg32,mmxreg,imm         KATMAI,MMX
\c PINSRW           mmxreg,mem,imm           KATMAI,MMX
\c PINSRW           mmxreg,rm16,imm          KATMAI,MMX
\c PINSRW           mmxreg,reg32,imm         KATMAI,MMX
\c PMAXSW           mmxreg,mmxrm             KATMAI,MMX
\c PMAXUB           mmxreg,mmxrm             KATMAI,MMX
\c PMINSW           mmxreg,mmxrm             KATMAI,MMX
\c PMINUB           mmxreg,mmxrm             KATMAI,MMX
\c PMOVMSKB         reg32,mmxreg             KATMAI,MMX
\c PMULHUW          mmxreg,mmxrm             KATMAI,MMX
\c PSADBW           mmxreg,mmxrm             KATMAI,MMX
\c PSHUFW           mmxreg,mmxrm,imm         KATMAI,MMX

\S{} AMD Enhanced 3DNow! (Athlon) instructions

\c PF2IW            mmxreg,mmxrm             PENT,3DNOW
\c PFNACC           mmxreg,mmxrm             PENT,3DNOW
\c PFPNACC          mmxreg,mmxrm             PENT,3DNOW
\c PI2FW            mmxreg,mmxrm             PENT,3DNOW
\c PSWAPD           mmxreg,mmxrm             PENT,3DNOW

\S{} Willamette SSE2 Cacheability Instructions

\c MASKMOVDQU       xmmreg,xmmreg            WILLAMETTE,SSE2
\c CLFLUSH          mem                      WILLAMETTE,SSE2
\c MOVNTDQ          mem,xmmreg               WILLAMETTE,SSE2,SO
\c MOVNTI           mem,reg32                WILLAMETTE,SD
\c MOVNTI           mem,reg64                X86_64,LONG
\c MOVNTPD          mem,xmmreg               WILLAMETTE,SSE2,SO
\c LFENCE                                    WILLAMETTE,SSE2
\c MFENCE                                    WILLAMETTE,SSE2

\S{} Willamette MMX instructions (SSE2 SIMD Integer Instructions)

\c MOVD             mem,xmmreg               WILLAMETTE,SSE2,SD
\c MOVD             xmmreg,mem               WILLAMETTE,SSE2,SD
\c MOVD             xmmreg,rm32              WILLAMETTE,SSE2
\c MOVD             rm32,xmmreg              WILLAMETTE,SSE2
\c MOVDQA           xmmreg,xmmrm128          WILLAMETTE,SSE2,SO
\c MOVDQA           xmmrm128,xmmreg          WILLAMETTE,SSE2,SO
\c MOVDQU           xmmreg,xmmrm128          WILLAMETTE,SSE2,SO
\c MOVDQU           xmmrm128,xmmreg          WILLAMETTE,SSE2,SO
\c MOVDQ2Q          mmxreg,xmmreg            WILLAMETTE,SSE2
\c MOVQ             xmmreg,xmmreg            WILLAMETTE,SSE2
\c MOVQ             xmmreg,xmmreg            WILLAMETTE,SSE2
\c MOVQ             mem,xmmreg               WILLAMETTE,SSE2
\c MOVQ             xmmreg,mem               WILLAMETTE,SSE2
\c MOVQ             xmmreg,rm64              X86_64,LONG,SSE2
\c MOVQ             rm64,xmmreg              X86_64,LONG,SSE2
\c MOVQ2DQ          xmmreg,mmxreg            WILLAMETTE,SSE2
\c PACKSSWB         xmmreg,xmmrm             WILLAMETTE,SSE2,SO
\c PACKSSDW         xmmreg,xmmrm             WILLAMETTE,SSE2,SO
\c PACKUSWB         xmmreg,xmmrm             WILLAMETTE,SSE2,SO
\c PADDB            xmmreg,xmmrm             WILLAMETTE,SSE2,SO
\c PADDW            xmmreg,xmmrm             WILLAMETTE,SSE2,SO
\c PADDD            xmmreg,xmmrm             WILLAMETTE,SSE2,SO
\c PADDQ            mmxreg,mmxrm             WILLAMETTE,MMX
\c PADDQ            xmmreg,xmmrm             WILLAMETTE,SSE2,SO
\c PADDSB           xmmreg,xmmrm             WILLAMETTE,SSE2,SO
\c PADDSW           xmmreg,xmmrm             WILLAMETTE,SSE2,SO
\c PADDUSB          xmmreg,xmmrm             WILLAMETTE,SSE2,SO
\c PADDUSW          xmmreg,xmmrm             WILLAMETTE,SSE2,SO
\c PAND             xmmreg,xmmrm             WILLAMETTE,SSE2,SO
\c PANDN            xmmreg,xmmrm             WILLAMETTE,SSE2,SO
\c PAVGB            xmmreg,xmmrm             WILLAMETTE,SSE2,SO
\c PAVGW            xmmreg,xmmrm             WILLAMETTE,SSE2,SO
\c PCMPEQB          xmmreg,xmmrm             WILLAMETTE,SSE2,SO
\c PCMPEQW          xmmreg,xmmrm             WILLAMETTE,SSE2,SO
\c PCMPEQD          xmmreg,xmmrm             WILLAMETTE,SSE2,SO
\c PCMPGTB          xmmreg,xmmrm             WILLAMETTE,SSE2,SO
\c PCMPGTW          xmmreg,xmmrm             WILLAMETTE,SSE2,SO
\c PCMPGTD          xmmreg,xmmrm             WILLAMETTE,SSE2,SO
\c PEXTRW           reg32,xmmreg,imm         WILLAMETTE,SSE2
\c PEXTRW           reg64,xmmreg,imm         X86_64,LONG,SSE2,ND
\c PINSRW           xmmreg,reg16,imm         WILLAMETTE,SSE2
\c PINSRW           xmmreg,reg32,imm         WILLAMETTE,SSE2,ND
\c PINSRW           xmmreg,reg64,imm         X86_64,LONG,SSE2,ND
\c PINSRW           xmmreg,mem,imm           WILLAMETTE,SSE2
\c PINSRW           xmmreg,mem16,imm         WILLAMETTE,SSE2
\c PMADDWD          xmmreg,xmmrm             WILLAMETTE,SSE2,SO
\c PMAXSW           xmmreg,xmmrm             WILLAMETTE,SSE2,SO
\c PMAXUB           xmmreg,xmmrm             WILLAMETTE,SSE2,SO
\c PMINSW           xmmreg,xmmrm             WILLAMETTE,SSE2,SO
\c PMINUB           xmmreg,xmmrm             WILLAMETTE,SSE2,SO
\c PMOVMSKB         reg32,xmmreg             WILLAMETTE,SSE2
\c PMULHUW          xmmreg,xmmrm             WILLAMETTE,SSE2,SO
\c PMULHW           xmmreg,xmmrm             WILLAMETTE,SSE2,SO
\c PMULLW           xmmreg,xmmrm             WILLAMETTE,SSE2,SO
\c PMULUDQ          mmxreg,mmxrm             WILLAMETTE,SSE2,SO
\c PMULUDQ          xmmreg,xmmrm             WILLAMETTE,SSE2,SO
\c POR              xmmreg,xmmrm             WILLAMETTE,SSE2,SO
\c PSADBW           xmmreg,xmmrm             WILLAMETTE,SSE2,SO
\c PSHUFD           xmmreg,xmmreg,imm        WILLAMETTE,SSE2
\c PSHUFD           xmmreg,mem,imm           WILLAMETTE,SSE2
\c PSHUFHW          xmmreg,xmmreg,imm        WILLAMETTE,SSE2
\c PSHUFHW          xmmreg,mem,imm           WILLAMETTE,SSE2
\c PSHUFLW          xmmreg,xmmreg,imm        WILLAMETTE,SSE2
\c PSHUFLW          xmmreg,mem,imm           WILLAMETTE,SSE2
\c PSLLDQ           xmmreg,imm               WILLAMETTE,SSE2,AR1
\c PSLLW            xmmreg,xmmrm             WILLAMETTE,SSE2,SO
\c PSLLW            xmmreg,imm               WILLAMETTE,SSE2,AR1
\c PSLLD            xmmreg,xmmrm             WILLAMETTE,SSE2,SO
\c PSLLD            xmmreg,imm               WILLAMETTE,SSE2,AR1
\c PSLLQ            xmmreg,xmmrm             WILLAMETTE,SSE2,SO
\c PSLLQ            xmmreg,imm               WILLAMETTE,SSE2,AR1
\c PSRAW            xmmreg,xmmrm             WILLAMETTE,SSE2,SO
\c PSRAW            xmmreg,imm               WILLAMETTE,SSE2,AR1
\c PSRAD            xmmreg,xmmrm             WILLAMETTE,SSE2,SO
\c PSRAD            xmmreg,imm               WILLAMETTE,SSE2,AR1
\c PSRLDQ           xmmreg,imm               WILLAMETTE,SSE2,AR1
\c PSRLW            xmmreg,xmmrm             WILLAMETTE,SSE2,SO
\c PSRLW            xmmreg,imm               WILLAMETTE,SSE2,AR1
\c PSRLD            xmmreg,xmmrm             WILLAMETTE,SSE2,SO
\c PSRLD            xmmreg,imm               WILLAMETTE,SSE2,AR1
\c PSRLQ            xmmreg,xmmrm             WILLAMETTE,SSE2,SO
\c PSRLQ            xmmreg,imm               WILLAMETTE,SSE2,AR1
\c PSUBB            xmmreg,xmmrm             WILLAMETTE,SSE2,SO
\c PSUBW            xmmreg,xmmrm             WILLAMETTE,SSE2,SO
\c PSUBD            xmmreg,xmmrm             WILLAMETTE,SSE2,SO
\c PSUBQ            mmxreg,mmxrm             WILLAMETTE,SSE2,SO
\c PSUBQ            xmmreg,xmmrm             WILLAMETTE,SSE2,SO
\c PSUBSB           xmmreg,xmmrm             WILLAMETTE,SSE2,SO
\c PSUBSW           xmmreg,xmmrm             WILLAMETTE,SSE2,SO
\c PSUBUSB          xmmreg,xmmrm             WILLAMETTE,SSE2,SO
\c PSUBUSW          xmmreg,xmmrm             WILLAMETTE,SSE2,SO
\c PUNPCKHBW        xmmreg,xmmrm             WILLAMETTE,SSE2,SO
\c PUNPCKHWD        xmmreg,xmmrm             WILLAMETTE,SSE2,SO
\c PUNPCKHDQ        xmmreg,xmmrm             WILLAMETTE,SSE2,SO
\c PUNPCKHQDQ       xmmreg,xmmrm             WILLAMETTE,SSE2,SO
\c PUNPCKLBW        xmmreg,xmmrm             WILLAMETTE,SSE2,SO
\c PUNPCKLWD        xmmreg,xmmrm             WILLAMETTE,SSE2,SO
\c PUNPCKLDQ        xmmreg,xmmrm             WILLAMETTE,SSE2,SO
\c PUNPCKLQDQ       xmmreg,xmmrm             WILLAMETTE,SSE2,SO
\c PXOR             xmmreg,xmmrm             WILLAMETTE,SSE2,SO

\S{} Willamette Streaming SIMD instructions (SSE2)

\c ADDPD            xmmreg,xmmrm             WILLAMETTE,SSE2,SO
\c ADDSD            xmmreg,xmmrm             WILLAMETTE,SSE2
\c ANDNPD           xmmreg,xmmrm             WILLAMETTE,SSE2,SO
\c ANDPD            xmmreg,xmmrm             WILLAMETTE,SSE2,SO
\c CMPEQPD          xmmreg,xmmrm             WILLAMETTE,SSE2,SO
\c CMPEQSD          xmmreg,xmmrm             WILLAMETTE,SSE2
\c CMPLEPD          xmmreg,xmmrm             WILLAMETTE,SSE2,SO
\c CMPLESD          xmmreg,xmmrm             WILLAMETTE,SSE2
\c CMPLTPD          xmmreg,xmmrm             WILLAMETTE,SSE2,SO
\c CMPLTSD          xmmreg,xmmrm             WILLAMETTE,SSE2
\c CMPNEQPD         xmmreg,xmmrm             WILLAMETTE,SSE2,SO
\c CMPNEQSD         xmmreg,xmmrm             WILLAMETTE,SSE2
\c CMPNLEPD         xmmreg,xmmrm             WILLAMETTE,SSE2,SO
\c CMPNLESD         xmmreg,xmmrm             WILLAMETTE,SSE2
\c CMPNLTPD         xmmreg,xmmrm             WILLAMETTE,SSE2,SO
\c CMPNLTSD         xmmreg,xmmrm             WILLAMETTE,SSE2
\c CMPORDPD         xmmreg,xmmrm             WILLAMETTE,SSE2,SO
\c CMPORDSD         xmmreg,xmmrm             WILLAMETTE,SSE2
\c CMPUNORDPD       xmmreg,xmmrm             WILLAMETTE,SSE2,SO
\c CMPUNORDSD       xmmreg,xmmrm             WILLAMETTE,SSE2
\c CMPPD            xmmreg,xmmrm128,imm8     WILLAMETTE,SSE2
\c CMPSD            xmmreg,xmmrm128,imm8     WILLAMETTE,SSE2
\c COMISD           xmmreg,xmmrm64           WILLAMETTE,SSE2
\c CVTDQ2PD         xmmreg,xmmrm             WILLAMETTE,SSE2
\c CVTDQ2PS         xmmreg,xmmrm             WILLAMETTE,SSE2,SO
\c CVTPD2DQ         xmmreg,xmmrm             WILLAMETTE,SSE2,SO
\c CVTPD2PI         mmxreg,xmmrm             WILLAMETTE,SSE2,SO
\c CVTPD2PS         xmmreg,xmmrm             WILLAMETTE,SSE2,SO
\c CVTPI2PD         xmmreg,mmxrm             WILLAMETTE,SSE2
\c CVTPS2DQ         xmmreg,xmmrm             WILLAMETTE,SSE2,SO
\c CVTPS2PD         xmmreg,xmmrm             WILLAMETTE,SSE2
\c CVTSD2SI         reg32,xmmreg             WILLAMETTE,SSE2,AR1
\c CVTSD2SI         reg32,mem                WILLAMETTE,SSE2,AR1
\c CVTSD2SI         reg64,xmmreg             X86_64,LONG,SSE2,AR1
\c CVTSD2SI         reg64,mem                X86_64,LONG,SSE2,AR1
\c CVTSD2SS         xmmreg,xmmrm             WILLAMETTE,SSE2
\c CVTSI2SD         xmmreg,mem               WILLAMETTE,SSE2,SD,AR1,ND
\c CVTSI2SD         xmmreg,rm32              WILLAMETTE,SSE2,SD,AR1
\c CVTSI2SD         xmmreg,rm64              X86_64,LONG,SSE2,AR1
\c CVTSS2SD         xmmreg,xmmrm             WILLAMETTE,SSE2,SD
\c CVTTPD2PI        mmxreg,xmmrm             WILLAMETTE,SSE2,SO
\c CVTTPD2DQ        xmmreg,xmmrm             WILLAMETTE,SSE2,SO
\c CVTTPS2DQ        xmmreg,xmmrm             WILLAMETTE,SSE2,SO
\c CVTTSD2SI        reg32,xmmreg             WILLAMETTE,SSE2,AR1
\c CVTTSD2SI        reg32,mem                WILLAMETTE,SSE2,AR1
\c CVTTSD2SI        reg64,xmmreg             X86_64,LONG,SSE2,AR1
\c CVTTSD2SI        reg64,mem                X86_64,LONG,SSE2,AR1
\c DIVPD            xmmreg,xmmrm             WILLAMETTE,SSE2,SO
\c DIVSD            xmmreg,xmmrm             WILLAMETTE,SSE2
\c MAXPD            xmmreg,xmmrm             WILLAMETTE,SSE2,SO
\c MAXSD            xmmreg,xmmrm             WILLAMETTE,SSE2
\c MINPD            xmmreg,xmmrm             WILLAMETTE,SSE2,SO
\c MINSD            xmmreg,xmmrm             WILLAMETTE,SSE2
\c MOVAPD           xmmreg,xmmrm128          WILLAMETTE,SSE2
\c MOVAPD           xmmrm128,xmmreg          WILLAMETTE,SSE2
\c MOVHPD           mem64,xmmreg             WILLAMETTE,SSE2
\c MOVHPD           xmmreg,mem64             WILLAMETTE,SSE2
\c MOVLPD           mem64,xmmreg             WILLAMETTE,SSE2
\c MOVLPD           xmmreg,mem64             WILLAMETTE,SSE2
\c MOVMSKPD         reg32,xmmreg             WILLAMETTE,SSE2
\c MOVMSKPD         reg64,xmmreg             X86_64,LONG,SSE2
\c MOVSD            xmmreg,xmmrm64           WILLAMETTE,SSE2
\c MOVSD            xmmrm64,xmmreg           WILLAMETTE,SSE2
\c MOVUPD           xmmreg,xmmrm128          WILLAMETTE,SSE2
\c MOVUPD           xmmrm128,xmmreg          WILLAMETTE,SSE2
\c MULPD            xmmreg,xmmrm128          WILLAMETTE,SSE2,SO
\c MULSD            xmmreg,xmmrm64           WILLAMETTE,SSE2
\c ORPD             xmmreg,xmmrm128          WILLAMETTE,SSE2,SO
\c SHUFPD           xmmreg,xmmrm128,imm8     WILLAMETTE,SSE2
\c SQRTPD           xmmreg,xmmrm128          WILLAMETTE,SSE2,SO
\c SQRTSD           xmmreg,xmmrm64           WILLAMETTE,SSE2
\c SUBPD            xmmreg,xmmrm128          WILLAMETTE,SSE2,SO
\c SUBSD            xmmreg,xmmrm64           WILLAMETTE,SSE2
\c UCOMISD          xmmreg,xmmrm64           WILLAMETTE,SSE2
\c UNPCKHPD         xmmreg,xmmrm128          WILLAMETTE,SSE2
\c UNPCKLPD         xmmreg,xmmrm128          WILLAMETTE,SSE2
\c XORPD            xmmreg,xmmrm128          WILLAMETTE,SSE2

\S{} Prescott New Instructions (SSE3)

\c ADDSUBPD         xmmreg,xmmrm128          PRESCOTT,SSE3,SO
\c ADDSUBPS         xmmreg,xmmrm128          PRESCOTT,SSE3,SO
\c HADDPD           xmmreg,xmmrm128          PRESCOTT,SSE3,SO
\c HADDPS           xmmreg,xmmrm128          PRESCOTT,SSE3,SO
\c HSUBPD           xmmreg,xmmrm128          PRESCOTT,SSE3,SO
\c HSUBPS           xmmreg,xmmrm128          PRESCOTT,SSE3,SO
\c LDDQU            xmmreg,mem128            PRESCOTT,SSE3,SO
\c MOVDDUP          xmmreg,xmmrm64           PRESCOTT,SSE3
\c MOVSHDUP         xmmreg,xmmrm128          PRESCOTT,SSE3
\c MOVSLDUP         xmmreg,xmmrm128          PRESCOTT,SSE3

\S{} VMX/SVM Instructions

\c CLGI                                      VMX,AMD
\c STGI                                      VMX,AMD
\c VMCALL                                    VMX
\c VMCLEAR          mem                      VMX
\c VMFUNC                                    VMX
\c VMLAUNCH                                  VMX
\c VMLOAD                                    VMX,AMD
\c VMMCALL                                   VMX,AMD
\c VMPTRLD          mem                      VMX
\c VMPTRST          mem                      VMX
\c VMREAD           rm32,reg32               VMX,NOLONG,SD
\c VMREAD           rm64,reg64               X86_64,LONG,VMX
\c VMRESUME                                  VMX
\c VMRUN                                     VMX,AMD
\c VMSAVE                                    VMX,AMD
\c VMWRITE          reg32,rm32               VMX,NOLONG,SD
\c VMWRITE          reg64,rm64               X86_64,LONG,VMX
\c VMXOFF                                    VMX
\c VMXON            mem                      VMX

\S{} Extended Page Tables VMX instructions

\c INVEPT           reg32,mem                VMX,SO,NOLONG
\c INVEPT           reg64,mem                VMX,SO,LONG
\c INVVPID          reg32,mem                VMX,SO,NOLONG
\c INVVPID          reg64,mem                VMX,SO,LONG

\S{} Tejas New Instructions (SSSE3)

\c PABSB            mmxreg,mmxrm             SSSE3,MMX
\c PABSB            xmmreg,xmmrm128          SSSE3
\c PABSW            mmxreg,mmxrm             SSSE3,MMX
\c PABSW            xmmreg,xmmrm128          SSSE3
\c PABSD            mmxreg,mmxrm             SSSE3,MMX
\c PABSD            xmmreg,xmmrm128          SSSE3
\c PALIGNR          mmxreg,mmxrm,imm         SSSE3,MMX
\c PALIGNR          xmmreg,xmmrm,imm         SSSE3
\c PHADDW           mmxreg,mmxrm             SSSE3,MMX
\c PHADDW           xmmreg,xmmrm128          SSSE3
\c PHADDD           mmxreg,mmxrm             SSSE3,MMX
\c PHADDD           xmmreg,xmmrm128          SSSE3
\c PHADDSW          mmxreg,mmxrm             SSSE3,MMX
\c PHADDSW          xmmreg,xmmrm128          SSSE3
\c PHSUBW           mmxreg,mmxrm             SSSE3,MMX
\c PHSUBW           xmmreg,xmmrm128          SSSE3
\c PHSUBD           mmxreg,mmxrm             SSSE3,MMX
\c PHSUBD           xmmreg,xmmrm128          SSSE3
\c PHSUBSW          mmxreg,mmxrm             SSSE3,MMX
\c PHSUBSW          xmmreg,xmmrm128          SSSE3
\c PMADDUBSW        mmxreg,mmxrm             SSSE3,MMX
\c PMADDUBSW        xmmreg,xmmrm128          SSSE3
\c PMULHRSW         mmxreg,mmxrm             SSSE3,MMX
\c PMULHRSW         xmmreg,xmmrm128          SSSE3
\c PSHUFB           mmxreg,mmxrm             SSSE3,MMX
\c PSHUFB           xmmreg,xmmrm128          SSSE3
\c PSIGNB           mmxreg,mmxrm             SSSE3,MMX
\c PSIGNB           xmmreg,xmmrm128          SSSE3
\c PSIGNW           mmxreg,mmxrm             SSSE3,MMX
\c PSIGNW           xmmreg,xmmrm128          SSSE3
\c PSIGND           mmxreg,mmxrm             SSSE3,MMX
\c PSIGND           xmmreg,xmmrm128          SSSE3

\S{} AMD SSE4A

\c EXTRQ            xmmreg,imm,imm           SSE4A,AMD
\c EXTRQ            xmmreg,xmmreg            SSE4A,AMD
\c INSERTQ          xmmreg,xmmreg,imm,imm    SSE4A,AMD
\c INSERTQ          xmmreg,xmmreg            SSE4A,AMD
\c MOVNTSD          mem64,xmmreg             SSE4A,AMD
\c MOVNTSS          mem32,xmmreg             SSE4A,AMD,SD

\S{} New instructions in Barcelona

\c LZCNT            reg16,rm16               P6,AMD
\c LZCNT            reg32,rm32               P6,AMD
\c LZCNT            reg64,rm64               X86_64,LONG,AMD

\S{} Penryn New Instructions (SSE4.1)

\c BLENDPD          xmmreg,xmmrm128,imm8     SSE41
\c BLENDPS          xmmreg,xmmrm128,imm8     SSE41
\c BLENDVPD         xmmreg,xmmrm128,xmm0     SSE41
\c BLENDVPD         xmmreg,xmmrm128          SSE41
\c BLENDVPS         xmmreg,xmmrm128,xmm0     SSE41
\c BLENDVPS         xmmreg,xmmrm128          SSE41
\c DPPD             xmmreg,xmmrm128,imm8     SSE41
\c DPPS             xmmreg,xmmrm128,imm8     SSE41
\c EXTRACTPS        rm32,xmmreg,imm8         SSE41
\c EXTRACTPS        reg64,xmmreg,imm8        SSE41,X86_64,LONG
\c INSERTPS         xmmreg,xmmrm32,imm8      SSE41
\c MOVNTDQA         xmmreg,mem128            SSE41
\c MPSADBW          xmmreg,xmmrm128,imm8     SSE41
\c PACKUSDW         xmmreg,xmmrm128          SSE41
\c PBLENDVB         xmmreg,xmmrm,xmm0        SSE41
\c PBLENDVB         xmmreg,xmmrm128          SSE41
\c PBLENDW          xmmreg,xmmrm128,imm8     SSE41
\c PCMPEQQ          xmmreg,xmmrm128          SSE41
\c PEXTRB           reg32,xmmreg,imm8        SSE41
\c PEXTRB           mem8,xmmreg,imm8         SSE41
\c PEXTRB           reg64,xmmreg,imm8        SSE41,X86_64,LONG
\c PEXTRD           rm32,xmmreg,imm8         SSE41
\c PEXTRQ           rm64,xmmreg,imm8         SSE41,X86_64,LONG
\c PEXTRW           reg32,xmmreg,imm8        SSE41
\c PEXTRW           mem16,xmmreg,imm8        SSE41
\c PEXTRW           reg64,xmmreg,imm8        SSE41,X86_64,LONG
\c PHMINPOSUW       xmmreg,xmmrm128          SSE41
\c PINSRB           xmmreg,mem,imm8          SSE41
\c PINSRB           xmmreg,rm8,imm8          SSE41
\c PINSRB           xmmreg,reg32,imm8        SSE41
\c PINSRD           xmmreg,rm32,imm8         SSE41
\c PINSRQ           xmmreg,rm64,imm8         SSE41,X86_64,LONG
\c PMAXSB           xmmreg,xmmrm128          SSE41
\c PMAXSD           xmmreg,xmmrm128          SSE41
\c PMAXUD           xmmreg,xmmrm128          SSE41
\c PMAXUW           xmmreg,xmmrm128          SSE41
\c PMINSB           xmmreg,xmmrm128          SSE41
\c PMINSD           xmmreg,xmmrm128          SSE41
\c PMINUD           xmmreg,xmmrm128          SSE41
\c PMINUW           xmmreg,xmmrm128          SSE41
\c PMOVSXBW         xmmreg,xmmrm64           SSE41
\c PMOVSXBD         xmmreg,xmmrm32           SSE41,SD
\c PMOVSXBQ         xmmreg,xmmrm16           SSE41,SW
\c PMOVSXWD         xmmreg,xmmrm64           SSE41
\c PMOVSXWQ         xmmreg,xmmrm32           SSE41,SD
\c PMOVSXDQ         xmmreg,xmmrm64           SSE41
\c PMOVZXBW         xmmreg,xmmrm64           SSE41
\c PMOVZXBD         xmmreg,xmmrm32           SSE41,SD
\c PMOVZXBQ         xmmreg,xmmrm16           SSE41,SW
\c PMOVZXWD         xmmreg,xmmrm64           SSE41
\c PMOVZXWQ         xmmreg,xmmrm32           SSE41,SD
\c PMOVZXDQ         xmmreg,xmmrm64           SSE41
\c PMULDQ           xmmreg,xmmrm128          SSE41
\c PMULLD           xmmreg,xmmrm128          SSE41
\c PTEST            xmmreg,xmmrm128          SSE41
\c ROUNDPD          xmmreg,xmmrm128,imm8     SSE41
\c ROUNDPS          xmmreg,xmmrm128,imm8     SSE41
\c ROUNDSD          xmmreg,xmmrm64,imm8      SSE41
\c ROUNDSS          xmmreg,xmmrm32,imm8      SSE41

\S{} Nehalem New Instructions (SSE4.2)

\c CRC32            reg32,rm8                SSE42
\c CRC32            reg32,rm16               SSE42
\c CRC32            reg32,rm32               SSE42
\c CRC32            reg64,rm8                SSE42,X86_64,LONG
\c CRC32            reg64,rm64               SSE42,X86_64,LONG
\c PCMPESTRI        xmmreg,xmmrm128,imm8     SSE42
\c PCMPESTRM        xmmreg,xmmrm128,imm8     SSE42
\c PCMPISTRI        xmmreg,xmmrm128,imm8     SSE42
\c PCMPISTRM        xmmreg,xmmrm128,imm8     SSE42
\c PCMPGTQ          xmmreg,xmmrm128          SSE42
\c POPCNT           reg16,rm16               NEHALEM,SW
\c POPCNT           reg32,rm32               NEHALEM,SD
\c POPCNT           reg64,rm64               NEHALEM,LONG

\S{} Intel SMX

\c GETSEC                                    KATMAI

\S{} Geode (Cyrix) 3DNow! additions

\c PFRCPV           mmxreg,mmxrm             PENT,3DNOW,CYRIX
\c PFRSQRTV         mmxreg,mmxrm             PENT,3DNOW,CYRIX

\S{} Intel new instructions in ???

\c MOVBE            reg16,mem16              NEHALEM
\c MOVBE            reg32,mem32              NEHALEM
\c MOVBE            reg64,mem64              NEHALEM
\c MOVBE            mem16,reg16              NEHALEM
\c MOVBE            mem32,reg32              NEHALEM
\c MOVBE            mem64,reg64              NEHALEM

\S{} Intel AES instructions

\c AESENC           xmmreg,xmmrm128          SSE,WESTMERE
\c AESENCLAST       xmmreg,xmmrm128          SSE,WESTMERE
\c AESDEC           xmmreg,xmmrm128          SSE,WESTMERE
\c AESDECLAST       xmmreg,xmmrm128          SSE,WESTMERE
\c AESIMC           xmmreg,xmmrm128          SSE,WESTMERE
\c AESKEYGENASSIST  xmmreg,xmmrm128,imm8     SSE,WESTMERE

\S{} Intel AVX AES instructions

\c VAESENC          xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VAESENCLAST      xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VAESDEC          xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VAESDECLAST      xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VAESIMC          xmmreg,xmmrm128          AVX,SANDYBRIDGE
\c VAESKEYGENASSIST xmmreg,xmmrm128,imm8     AVX,SANDYBRIDGE

\S{} Intel instruction extension based on pub number 319433-030 dated October 2017

\c VAESENC          ymmreg,ymmreg*,ymmrm256  VAES
\c VAESENCLAST      ymmreg,ymmreg*,ymmrm256  VAES
\c VAESDEC          ymmreg,ymmreg*,ymmrm256  VAES
\c VAESDECLAST      ymmreg,ymmreg*,ymmrm256  VAES
\c VAESENC          xmmreg,xmmreg*,xmmrm128  AVX512VL,VAES
\c VAESENC          ymmreg,ymmreg*,ymmrm256  AVX512VL,VAES
\c VAESENCLAST      xmmreg,xmmreg*,xmmrm128  AVX512VL,VAES
\c VAESENCLAST      ymmreg,ymmreg*,ymmrm256  AVX512VL,VAES
\c VAESDEC          xmmreg,xmmreg*,xmmrm128  AVX512VL,VAES
\c VAESDEC          ymmreg,ymmreg*,ymmrm256  AVX512VL,VAES
\c VAESDECLAST      xmmreg,xmmreg*,xmmrm128  AVX512VL,VAES
\c VAESDECLAST      ymmreg,ymmreg*,ymmrm256  AVX512VL,VAES
\c VAESENC          zmmreg,zmmreg*,zmmrm512  AVX512,VAES
\c VAESENCLAST      zmmreg,zmmreg*,zmmrm512  AVX512,VAES
\c VAESDEC          zmmreg,zmmreg*,zmmrm512  AVX512,VAES
\c VAESDECLAST      zmmreg,zmmreg*,zmmrm512  AVX512,VAES

\S{} Intel AVX instructions

\c VADDPD           xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VADDPD           ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE
\c VADDPS           xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VADDPS           ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE
\c VADDSD           xmmreg,xmmreg*,xmmrm64   AVX,SANDYBRIDGE
\c VADDSS           xmmreg,xmmreg*,xmmrm32   AVX,SANDYBRIDGE
\c VADDSUBPD        xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VADDSUBPD        ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE
\c VADDSUBPS        xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VADDSUBPS        ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE
\c VANDPD           xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VANDPD           ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE
\c VANDPS           xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VANDPS           ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE
\c VANDNPD          xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VANDNPD          ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE
\c VANDNPS          xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VANDNPS          ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE
\c VBLENDPD         xmmreg,xmmreg*,xmmrm128,imm8 AVX,SANDYBRIDGE
\c VBLENDPD         ymmreg,ymmreg*,ymmrm256,imm8 AVX,SANDYBRIDGE
\c VBLENDPS         xmmreg,xmmreg*,xmmrm128,imm8 AVX,SANDYBRIDGE
\c VBLENDPS         ymmreg,ymmreg*,ymmrm256,imm8 AVX,SANDYBRIDGE
\c VBLENDVPD        xmmreg,xmmreg*,xmmrm128,xmmreg AVX,SANDYBRIDGE
\c VBLENDVPD        ymmreg,ymmreg*,ymmrm256,ymmreg AVX,SANDYBRIDGE
\c VBLENDVPS        xmmreg,xmmreg*,xmmrm128,xmmreg AVX,SANDYBRIDGE
\c VBLENDVPS        ymmreg,ymmreg*,ymmrm256,ymmreg AVX,SANDYBRIDGE
\c VBROADCASTSS     xmmreg,mem32             AVX,SANDYBRIDGE
\c VBROADCASTSS     ymmreg,mem32             AVX,SANDYBRIDGE
\c VBROADCASTSD     ymmreg,mem64             AVX,SANDYBRIDGE
\c VBROADCASTF128   ymmreg,mem128            AVX,SANDYBRIDGE
\c VCMPEQ_OSPD      xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VCMPEQ_OSPD      ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE
\c VCMPEQPD         xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VCMPEQPD         ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE
\c VCMPLT_OSPD      xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VCMPLT_OSPD      ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE
\c VCMPLTPD         xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VCMPLTPD         ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE
\c VCMPLE_OSPD      xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VCMPLE_OSPD      ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE
\c VCMPLEPD         xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VCMPLEPD         ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE
\c VCMPUNORD_QPD    xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VCMPUNORD_QPD    ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE
\c VCMPUNORDPD      xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VCMPUNORDPD      ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE
\c VCMPNEQ_UQPD     xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VCMPNEQ_UQPD     ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE
\c VCMPNEQPD        xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VCMPNEQPD        ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE
\c VCMPNLT_USPD     xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VCMPNLT_USPD     ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE
\c VCMPNLTPD        xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VCMPNLTPD        ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE
\c VCMPNLE_USPD     xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VCMPNLE_USPD     ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE
\c VCMPNLEPD        xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VCMPNLEPD        ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE
\c VCMPORD_QPD      xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VCMPORD_QPD      ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE
\c VCMPORDPD        xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VCMPORDPD        ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE
\c VCMPEQ_UQPD      xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VCMPEQ_UQPD      ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE
\c VCMPNGE_USPD     xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VCMPNGE_USPD     ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE
\c VCMPNGEPD        xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VCMPNGEPD        ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE
\c VCMPNGT_USPD     xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VCMPNGT_USPD     ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE
\c VCMPNGTPD        xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VCMPNGTPD        ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE
\c VCMPFALSE_OQPD   xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VCMPFALSE_OQPD   ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE
\c VCMPFALSEPD      xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VCMPFALSEPD      ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE
\c VCMPNEQ_OQPD     xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VCMPNEQ_OQPD     ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE
\c VCMPGE_OSPD      xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VCMPGE_OSPD      ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE
\c VCMPGEPD         xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VCMPGEPD         ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE
\c VCMPGT_OSPD      xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VCMPGT_OSPD      ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE
\c VCMPGTPD         xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VCMPGTPD         ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE
\c VCMPTRUE_UQPD    xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VCMPTRUE_UQPD    ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE
\c VCMPTRUEPD       xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VCMPTRUEPD       ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE
\c VCMPEQ_OSPD      xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VCMPEQ_OSPD      ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE
\c VCMPLT_OQPD      xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VCMPLT_OQPD      ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE
\c VCMPLE_OQPD      xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VCMPLE_OQPD      ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE
\c VCMPUNORD_SPD    xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VCMPUNORD_SPD    ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE
\c VCMPNEQ_USPD     xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VCMPNEQ_USPD     ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE
\c VCMPNLT_UQPD     xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VCMPNLT_UQPD     ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE
\c VCMPNLE_UQPD     xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VCMPNLE_UQPD     ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE
\c VCMPORD_SPD      xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VCMPORD_SPD      ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE
\c VCMPEQ_USPD      xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VCMPEQ_USPD      ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE
\c VCMPNGE_UQPD     xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VCMPNGE_UQPD     ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE
\c VCMPNGT_UQPD     xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VCMPNGT_UQPD     ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE
\c VCMPFALSE_OSPD   xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VCMPFALSE_OSPD   ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE
\c VCMPNEQ_OSPD     xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VCMPNEQ_OSPD     ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE
\c VCMPGE_OQPD      xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VCMPGE_OQPD      ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE
\c VCMPGT_OQPD      xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VCMPGT_OQPD      ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE
\c VCMPTRUE_USPD    xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VCMPTRUE_USPD    ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE
\c VCMPPD           xmmreg,xmmreg*,xmmrm128,imm8 AVX,SANDYBRIDGE
\c VCMPPD           ymmreg,ymmreg*,ymmrm256,imm8 AVX,SANDYBRIDGE
\c VCMPEQ_OSPS      xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VCMPEQ_OSPS      ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE
\c VCMPEQPS         xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VCMPEQPS         ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE
\c VCMPLT_OSPS      xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VCMPLT_OSPS      ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE
\c VCMPLTPS         xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VCMPLTPS         ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE
\c VCMPLE_OSPS      xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VCMPLE_OSPS      ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE
\c VCMPLEPS         xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VCMPLEPS         ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE
\c VCMPUNORD_QPS    xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VCMPUNORD_QPS    ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE
\c VCMPUNORDPS      xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VCMPUNORDPS      ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE
\c VCMPNEQ_UQPS     xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VCMPNEQ_UQPS     ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE
\c VCMPNEQPS        xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VCMPNEQPS        ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE
\c VCMPNLT_USPS     xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VCMPNLT_USPS     ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE
\c VCMPNLTPS        xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VCMPNLTPS        ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE
\c VCMPNLE_USPS     xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VCMPNLE_USPS     ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE
\c VCMPNLEPS        xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VCMPNLEPS        ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE
\c VCMPORD_QPS      xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VCMPORD_QPS      ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE
\c VCMPORDPS        xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VCMPORDPS        ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE
\c VCMPEQ_UQPS      xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VCMPEQ_UQPS      ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE
\c VCMPNGE_USPS     xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VCMPNGE_USPS     ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE
\c VCMPNGEPS        xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VCMPNGEPS        ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE
\c VCMPNGT_USPS     xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VCMPNGT_USPS     ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE
\c VCMPNGTPS        xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VCMPNGTPS        ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE
\c VCMPFALSE_OQPS   xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VCMPFALSE_OQPS   ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE
\c VCMPFALSEPS      xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VCMPFALSEPS      ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE
\c VCMPNEQ_OQPS     xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VCMPNEQ_OQPS     ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE
\c VCMPGE_OSPS      xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VCMPGE_OSPS      ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE
\c VCMPGEPS         xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VCMPGEPS         ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE
\c VCMPGT_OSPS      xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VCMPGT_OSPS      ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE
\c VCMPGTPS         xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VCMPGTPS         ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE
\c VCMPTRUE_UQPS    xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VCMPTRUE_UQPS    ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE
\c VCMPTRUEPS       xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VCMPTRUEPS       ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE
\c VCMPEQ_OSPS      xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VCMPEQ_OSPS      ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE
\c VCMPLT_OQPS      xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VCMPLT_OQPS      ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE
\c VCMPLE_OQPS      xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VCMPLE_OQPS      ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE
\c VCMPUNORD_SPS    xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VCMPUNORD_SPS    ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE
\c VCMPNEQ_USPS     xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VCMPNEQ_USPS     ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE
\c VCMPNLT_UQPS     xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VCMPNLT_UQPS     ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE
\c VCMPNLE_UQPS     xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VCMPNLE_UQPS     ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE
\c VCMPORD_SPS      xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VCMPORD_SPS      ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE
\c VCMPEQ_USPS      xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VCMPEQ_USPS      ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE
\c VCMPNGE_UQPS     xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VCMPNGE_UQPS     ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE
\c VCMPNGT_UQPS     xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VCMPNGT_UQPS     ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE
\c VCMPFALSE_OSPS   xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VCMPFALSE_OSPS   ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE
\c VCMPNEQ_OSPS     xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VCMPNEQ_OSPS     ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE
\c VCMPGE_OQPS      xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VCMPGE_OQPS      ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE
\c VCMPGT_OQPS      xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VCMPGT_OQPS      ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE
\c VCMPTRUE_USPS    xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VCMPTRUE_USPS    ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE
\c VCMPPS           xmmreg,xmmreg*,xmmrm128,imm8 AVX,SANDYBRIDGE
\c VCMPPS           ymmreg,ymmreg*,ymmrm256,imm8 AVX,SANDYBRIDGE
\c VCMPEQ_OSSD      xmmreg,xmmreg*,xmmrm64   AVX,SANDYBRIDGE
\c VCMPEQSD         xmmreg,xmmreg*,xmmrm64   AVX,SANDYBRIDGE
\c VCMPLT_OSSD      xmmreg,xmmreg*,xmmrm64   AVX,SANDYBRIDGE
\c VCMPLTSD         xmmreg,xmmreg*,xmmrm64   AVX,SANDYBRIDGE
\c VCMPLE_OSSD      xmmreg,xmmreg*,xmmrm64   AVX,SANDYBRIDGE
\c VCMPLESD         xmmreg,xmmreg*,xmmrm64   AVX,SANDYBRIDGE
\c VCMPUNORD_QSD    xmmreg,xmmreg*,xmmrm64   AVX,SANDYBRIDGE
\c VCMPUNORDSD      xmmreg,xmmreg*,xmmrm64   AVX,SANDYBRIDGE
\c VCMPNEQ_UQSD     xmmreg,xmmreg*,xmmrm64   AVX,SANDYBRIDGE
\c VCMPNEQSD        xmmreg,xmmreg*,xmmrm64   AVX,SANDYBRIDGE
\c VCMPNLT_USSD     xmmreg,xmmreg*,xmmrm64   AVX,SANDYBRIDGE
\c VCMPNLTSD        xmmreg,xmmreg*,xmmrm64   AVX,SANDYBRIDGE
\c VCMPNLE_USSD     xmmreg,xmmreg*,xmmrm64   AVX,SANDYBRIDGE
\c VCMPNLESD        xmmreg,xmmreg*,xmmrm64   AVX,SANDYBRIDGE
\c VCMPORD_QSD      xmmreg,xmmreg*,xmmrm64   AVX,SANDYBRIDGE
\c VCMPORDSD        xmmreg,xmmreg*,xmmrm64   AVX,SANDYBRIDGE
\c VCMPEQ_UQSD      xmmreg,xmmreg*,xmmrm64   AVX,SANDYBRIDGE
\c VCMPNGE_USSD     xmmreg,xmmreg*,xmmrm64   AVX,SANDYBRIDGE
\c VCMPNGESD        xmmreg,xmmreg*,xmmrm64   AVX,SANDYBRIDGE
\c VCMPNGT_USSD     xmmreg,xmmreg*,xmmrm64   AVX,SANDYBRIDGE
\c VCMPNGTSD        xmmreg,xmmreg*,xmmrm64   AVX,SANDYBRIDGE
\c VCMPFALSE_OQSD   xmmreg,xmmreg*,xmmrm64   AVX,SANDYBRIDGE
\c VCMPFALSESD      xmmreg,xmmreg*,xmmrm64   AVX,SANDYBRIDGE
\c VCMPNEQ_OQSD     xmmreg,xmmreg*,xmmrm64   AVX,SANDYBRIDGE
\c VCMPGE_OSSD      xmmreg,xmmreg*,xmmrm64   AVX,SANDYBRIDGE
\c VCMPGESD         xmmreg,xmmreg*,xmmrm64   AVX,SANDYBRIDGE
\c VCMPGT_OSSD      xmmreg,xmmreg*,xmmrm64   AVX,SANDYBRIDGE
\c VCMPGTSD         xmmreg,xmmreg*,xmmrm64   AVX,SANDYBRIDGE
\c VCMPTRUE_UQSD    xmmreg,xmmreg*,xmmrm64   AVX,SANDYBRIDGE
\c VCMPTRUESD       xmmreg,xmmreg*,xmmrm64   AVX,SANDYBRIDGE
\c VCMPEQ_OSSD      xmmreg,xmmreg*,xmmrm64   AVX,SANDYBRIDGE
\c VCMPLT_OQSD      xmmreg,xmmreg*,xmmrm64   AVX,SANDYBRIDGE
\c VCMPLE_OQSD      xmmreg,xmmreg*,xmmrm64   AVX,SANDYBRIDGE
\c VCMPUNORD_SSD    xmmreg,xmmreg*,xmmrm64   AVX,SANDYBRIDGE
\c VCMPNEQ_USSD     xmmreg,xmmreg*,xmmrm64   AVX,SANDYBRIDGE
\c VCMPNLT_UQSD     xmmreg,xmmreg*,xmmrm64   AVX,SANDYBRIDGE
\c VCMPNLE_UQSD     xmmreg,xmmreg*,xmmrm64   AVX,SANDYBRIDGE
\c VCMPORD_SSD      xmmreg,xmmreg*,xmmrm64   AVX,SANDYBRIDGE
\c VCMPEQ_USSD      xmmreg,xmmreg*,xmmrm64   AVX,SANDYBRIDGE
\c VCMPNGE_UQSD     xmmreg,xmmreg*,xmmrm64   AVX,SANDYBRIDGE
\c VCMPNGT_UQSD     xmmreg,xmmreg*,xmmrm64   AVX,SANDYBRIDGE
\c VCMPFALSE_OSSD   xmmreg,xmmreg*,xmmrm64   AVX,SANDYBRIDGE
\c VCMPNEQ_OSSD     xmmreg,xmmreg*,xmmrm64   AVX,SANDYBRIDGE
\c VCMPGE_OQSD      xmmreg,xmmreg*,xmmrm64   AVX,SANDYBRIDGE
\c VCMPGT_OQSD      xmmreg,xmmreg*,xmmrm64   AVX,SANDYBRIDGE
\c VCMPTRUE_USSD    xmmreg,xmmreg*,xmmrm64   AVX,SANDYBRIDGE
\c VCMPSD           xmmreg,xmmreg*,xmmrm64,imm8 AVX,SANDYBRIDGE
\c VCMPEQ_OSSS      xmmreg,xmmreg*,xmmrm64   AVX,SANDYBRIDGE
\c VCMPEQSS         xmmreg,xmmreg*,xmmrm64   AVX,SANDYBRIDGE
\c VCMPLT_OSSS      xmmreg,xmmreg*,xmmrm64   AVX,SANDYBRIDGE
\c VCMPLTSS         xmmreg,xmmreg*,xmmrm64   AVX,SANDYBRIDGE
\c VCMPLE_OSSS      xmmreg,xmmreg*,xmmrm64   AVX,SANDYBRIDGE
\c VCMPLESS         xmmreg,xmmreg*,xmmrm64   AVX,SANDYBRIDGE
\c VCMPUNORD_QSS    xmmreg,xmmreg*,xmmrm64   AVX,SANDYBRIDGE
\c VCMPUNORDSS      xmmreg,xmmreg*,xmmrm64   AVX,SANDYBRIDGE
\c VCMPNEQ_UQSS     xmmreg,xmmreg*,xmmrm64   AVX,SANDYBRIDGE
\c VCMPNEQSS        xmmreg,xmmreg*,xmmrm64   AVX,SANDYBRIDGE
\c VCMPNLT_USSS     xmmreg,xmmreg*,xmmrm64   AVX,SANDYBRIDGE
\c VCMPNLTSS        xmmreg,xmmreg*,xmmrm64   AVX,SANDYBRIDGE
\c VCMPNLE_USSS     xmmreg,xmmreg*,xmmrm64   AVX,SANDYBRIDGE
\c VCMPNLESS        xmmreg,xmmreg*,xmmrm64   AVX,SANDYBRIDGE
\c VCMPORD_QSS      xmmreg,xmmreg*,xmmrm64   AVX,SANDYBRIDGE
\c VCMPORDSS        xmmreg,xmmreg*,xmmrm64   AVX,SANDYBRIDGE
\c VCMPEQ_UQSS      xmmreg,xmmreg*,xmmrm64   AVX,SANDYBRIDGE
\c VCMPNGE_USSS     xmmreg,xmmreg*,xmmrm64   AVX,SANDYBRIDGE
\c VCMPNGESS        xmmreg,xmmreg*,xmmrm64   AVX,SANDYBRIDGE
\c VCMPNGT_USSS     xmmreg,xmmreg*,xmmrm64   AVX,SANDYBRIDGE
\c VCMPNGTSS        xmmreg,xmmreg*,xmmrm64   AVX,SANDYBRIDGE
\c VCMPFALSE_OQSS   xmmreg,xmmreg*,xmmrm64   AVX,SANDYBRIDGE
\c VCMPFALSESS      xmmreg,xmmreg*,xmmrm64   AVX,SANDYBRIDGE
\c VCMPNEQ_OQSS     xmmreg,xmmreg*,xmmrm64   AVX,SANDYBRIDGE
\c VCMPGE_OSSS      xmmreg,xmmreg*,xmmrm64   AVX,SANDYBRIDGE
\c VCMPGESS         xmmreg,xmmreg*,xmmrm64   AVX,SANDYBRIDGE
\c VCMPGT_OSSS      xmmreg,xmmreg*,xmmrm64   AVX,SANDYBRIDGE
\c VCMPGTSS         xmmreg,xmmreg*,xmmrm64   AVX,SANDYBRIDGE
\c VCMPTRUE_UQSS    xmmreg,xmmreg*,xmmrm64   AVX,SANDYBRIDGE
\c VCMPTRUESS       xmmreg,xmmreg*,xmmrm64   AVX,SANDYBRIDGE
\c VCMPEQ_OSSS      xmmreg,xmmreg*,xmmrm64   AVX,SANDYBRIDGE
\c VCMPLT_OQSS      xmmreg,xmmreg*,xmmrm64   AVX,SANDYBRIDGE
\c VCMPLE_OQSS      xmmreg,xmmreg*,xmmrm64   AVX,SANDYBRIDGE
\c VCMPUNORD_SSS    xmmreg,xmmreg*,xmmrm64   AVX,SANDYBRIDGE
\c VCMPNEQ_USSS     xmmreg,xmmreg*,xmmrm64   AVX,SANDYBRIDGE
\c VCMPNLT_UQSS     xmmreg,xmmreg*,xmmrm64   AVX,SANDYBRIDGE
\c VCMPNLE_UQSS     xmmreg,xmmreg*,xmmrm64   AVX,SANDYBRIDGE
\c VCMPORD_SSS      xmmreg,xmmreg*,xmmrm64   AVX,SANDYBRIDGE
\c VCMPEQ_USSS      xmmreg,xmmreg*,xmmrm64   AVX,SANDYBRIDGE
\c VCMPNGE_UQSS     xmmreg,xmmreg*,xmmrm64   AVX,SANDYBRIDGE
\c VCMPNGT_UQSS     xmmreg,xmmreg*,xmmrm64   AVX,SANDYBRIDGE
\c VCMPFALSE_OSSS   xmmreg,xmmreg*,xmmrm64   AVX,SANDYBRIDGE
\c VCMPNEQ_OSSS     xmmreg,xmmreg*,xmmrm64   AVX,SANDYBRIDGE
\c VCMPGE_OQSS      xmmreg,xmmreg*,xmmrm64   AVX,SANDYBRIDGE
\c VCMPGT_OQSS      xmmreg,xmmreg*,xmmrm64   AVX,SANDYBRIDGE
\c VCMPTRUE_USSS    xmmreg,xmmreg*,xmmrm64   AVX,SANDYBRIDGE
\c VCMPSS           xmmreg,xmmreg*,xmmrm64,imm8 AVX,SANDYBRIDGE
\c VCOMISD          xmmreg,xmmrm64           AVX,SANDYBRIDGE
\c VCOMISS          xmmreg,xmmrm32           AVX,SANDYBRIDGE
\c VCVTDQ2PD        xmmreg,xmmrm64           AVX,SANDYBRIDGE
\c VCVTDQ2PD        ymmreg,xmmrm128          AVX,SANDYBRIDGE
\c VCVTDQ2PS        xmmreg,xmmrm128          AVX,SANDYBRIDGE
\c VCVTDQ2PS        ymmreg,ymmrm256          AVX,SANDYBRIDGE
\c VCVTPD2DQ        xmmreg,xmmreg            AVX,SANDYBRIDGE
\c VCVTPD2DQ        xmmreg,mem128            AVX,SANDYBRIDGE,SO
\c VCVTPD2DQ        xmmreg,ymmreg            AVX,SANDYBRIDGE
\c VCVTPD2DQ        xmmreg,mem256            AVX,SANDYBRIDGE,SY
\c VCVTPD2PS        xmmreg,xmmreg            AVX,SANDYBRIDGE
\c VCVTPD2PS        xmmreg,mem128            AVX,SANDYBRIDGE,SO
\c VCVTPD2PS        xmmreg,ymmreg            AVX,SANDYBRIDGE
\c VCVTPD2PS        xmmreg,mem256            AVX,SANDYBRIDGE,SY
\c VCVTPS2DQ        xmmreg,xmmrm128          AVX,SANDYBRIDGE
\c VCVTPS2DQ        ymmreg,ymmrm256          AVX,SANDYBRIDGE
\c VCVTPS2PD        xmmreg,xmmrm64           AVX,SANDYBRIDGE
\c VCVTPS2PD        ymmreg,xmmrm128          AVX,SANDYBRIDGE
\c VCVTSD2SI        reg32,xmmrm64            AVX,SANDYBRIDGE
\c VCVTSD2SI        reg64,xmmrm64            AVX,SANDYBRIDGE,LONG
\c VCVTSD2SS        xmmreg,xmmreg*,xmmrm64   AVX,SANDYBRIDGE
\c VCVTSI2SD        xmmreg,xmmreg*,rm32      AVX,SANDYBRIDGE,SD
\c VCVTSI2SD        xmmreg,xmmreg*,mem32     AVX,SANDYBRIDGE,ND,SD
\c VCVTSI2SD        xmmreg,xmmreg*,rm64      AVX,SANDYBRIDGE,LONG
\c VCVTSI2SS        xmmreg,xmmreg*,rm32      AVX,SANDYBRIDGE,SD
\c VCVTSI2SS        xmmreg,xmmreg*,mem32     AVX,SANDYBRIDGE,ND,SD
\c VCVTSI2SS        xmmreg,xmmreg*,rm64      AVX,SANDYBRIDGE,LONG
\c VCVTSS2SD        xmmreg,xmmreg*,xmmrm32   AVX,SANDYBRIDGE
\c VCVTSS2SI        reg32,xmmrm32            AVX,SANDYBRIDGE
\c VCVTSS2SI        reg64,xmmrm32            AVX,SANDYBRIDGE,LONG
\c VCVTTPD2DQ       xmmreg,xmmreg            AVX,SANDYBRIDGE
\c VCVTTPD2DQ       xmmreg,mem128            AVX,SANDYBRIDGE,SO
\c VCVTTPD2DQ       xmmreg,ymmreg            AVX,SANDYBRIDGE
\c VCVTTPD2DQ       xmmreg,mem256            AVX,SANDYBRIDGE,SY
\c VCVTTPS2DQ       xmmreg,xmmrm128          AVX,SANDYBRIDGE
\c VCVTTPS2DQ       ymmreg,ymmrm256          AVX,SANDYBRIDGE
\c VCVTTSD2SI       reg32,xmmrm64            AVX,SANDYBRIDGE
\c VCVTTSD2SI       reg64,xmmrm64            AVX,SANDYBRIDGE,LONG
\c VCVTTSS2SI       reg32,xmmrm32            AVX,SANDYBRIDGE
\c VCVTTSS2SI       reg64,xmmrm32            AVX,SANDYBRIDGE,LONG
\c VDIVPD           xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VDIVPD           ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE
\c VDIVPS           xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VDIVPS           ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE
\c VDIVSD           xmmreg,xmmreg*,xmmrm64   AVX,SANDYBRIDGE
\c VDIVSS           xmmreg,xmmreg*,xmmrm32   AVX,SANDYBRIDGE
\c VDPPD            xmmreg,xmmreg*,xmmrm128,imm8 AVX,SANDYBRIDGE
\c VDPPS            xmmreg,xmmreg*,xmmrm128,imm8 AVX,SANDYBRIDGE
\c VDPPS            ymmreg,ymmreg*,ymmrm256,imm8 AVX,SANDYBRIDGE
\c VEXTRACTF128     xmmrm128,ymmreg,imm8     AVX,SANDYBRIDGE
\c VEXTRACTPS       rm32,xmmreg,imm8         AVX,SANDYBRIDGE
\c VHADDPD          xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VHADDPD          ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE
\c VHADDPS          xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VHADDPS          ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE
\c VHSUBPD          xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VHSUBPD          ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE
\c VHSUBPS          xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VHSUBPS          ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE
\c VINSERTF128      ymmreg,ymmreg*,xmmrm128,imm8 AVX,SANDYBRIDGE
\c VINSERTPS        xmmreg,xmmreg*,xmmrm32,imm8 AVX,SANDYBRIDGE
\c VLDDQU           xmmreg,mem128            AVX,SANDYBRIDGE
\c VLDQQU           ymmreg,mem256            AVX,SANDYBRIDGE
\c VLDDQU           ymmreg,mem256            AVX,SANDYBRIDGE
\c VLDMXCSR         mem32                    AVX,SANDYBRIDGE
\c VMASKMOVDQU      xmmreg,xmmreg            AVX,SANDYBRIDGE
\c VMASKMOVPS       xmmreg,xmmreg,mem128     AVX,SANDYBRIDGE
\c VMASKMOVPS       ymmreg,ymmreg,mem256     AVX,SANDYBRIDGE
\c VMASKMOVPS       mem128,xmmreg,xmmreg     AVX,SANDYBRIDGE,SO
\c VMASKMOVPS       mem256,ymmreg,ymmreg     AVX,SANDYBRIDGE,SY
\c VMASKMOVPD       xmmreg,xmmreg,mem128     AVX,SANDYBRIDGE
\c VMASKMOVPD       ymmreg,ymmreg,mem256     AVX,SANDYBRIDGE
\c VMASKMOVPD       mem128,xmmreg,xmmreg     AVX,SANDYBRIDGE
\c VMASKMOVPD       mem256,ymmreg,ymmreg     AVX,SANDYBRIDGE
\c VMAXPD           xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VMAXPD           ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE
\c VMAXPS           xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VMAXPS           ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE
\c VMAXSD           xmmreg,xmmreg*,xmmrm64   AVX,SANDYBRIDGE
\c VMAXSS           xmmreg,xmmreg*,xmmrm32   AVX,SANDYBRIDGE
\c VMINPD           xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VMINPD           ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE
\c VMINPS           xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VMINPS           ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE
\c VMINSD           xmmreg,xmmreg*,xmmrm64   AVX,SANDYBRIDGE
\c VMINSS           xmmreg,xmmreg*,xmmrm32   AVX,SANDYBRIDGE
\c VMOVAPD          xmmreg,xmmrm128          AVX,SANDYBRIDGE
\c VMOVAPD          xmmrm128,xmmreg          AVX,SANDYBRIDGE
\c VMOVAPD          ymmreg,ymmrm256          AVX,SANDYBRIDGE
\c VMOVAPD          ymmrm256,ymmreg          AVX,SANDYBRIDGE
\c VMOVAPS          xmmreg,xmmrm128          AVX,SANDYBRIDGE
\c VMOVAPS          xmmrm128,xmmreg          AVX,SANDYBRIDGE
\c VMOVAPS          ymmreg,ymmrm256          AVX,SANDYBRIDGE
\c VMOVAPS          ymmrm256,ymmreg          AVX,SANDYBRIDGE
\c VMOVD            xmmreg,rm32              AVX,SANDYBRIDGE
\c VMOVD            rm32,xmmreg              AVX,SANDYBRIDGE
\c VMOVQ            xmmreg,xmmrm64           AVX,SANDYBRIDGE
\c VMOVQ            xmmrm64,xmmreg           AVX,SANDYBRIDGE
\c VMOVQ            xmmreg,rm64              AVX,SANDYBRIDGE,LONG
\c VMOVQ            rm64,xmmreg              AVX,SANDYBRIDGE,LONG
\c VMOVDDUP         xmmreg,xmmrm64           AVX,SANDYBRIDGE
\c VMOVDDUP         ymmreg,ymmrm256          AVX,SANDYBRIDGE
\c VMOVDQA          xmmreg,xmmrm128          AVX,SANDYBRIDGE
\c VMOVDQA          xmmrm128,xmmreg          AVX,SANDYBRIDGE
\c VMOVQQA          ymmreg,ymmrm256          AVX,SANDYBRIDGE
\c VMOVQQA          ymmrm256,ymmreg          AVX,SANDYBRIDGE
\c VMOVDQA          ymmreg,ymmrm256          AVX,SANDYBRIDGE
\c VMOVDQA          ymmrm256,ymmreg          AVX,SANDYBRIDGE
\c VMOVDQU          xmmreg,xmmrm128          AVX,SANDYBRIDGE
\c VMOVDQU          xmmrm128,xmmreg          AVX,SANDYBRIDGE
\c VMOVQQU          ymmreg,ymmrm256          AVX,SANDYBRIDGE
\c VMOVQQU          ymmrm256,ymmreg          AVX,SANDYBRIDGE
\c VMOVDQU          ymmreg,ymmrm256          AVX,SANDYBRIDGE
\c VMOVDQU          ymmrm256,ymmreg          AVX,SANDYBRIDGE
\c VMOVHLPS         xmmreg,xmmreg*,xmmreg    AVX,SANDYBRIDGE
\c VMOVHPD          xmmreg,xmmreg*,mem64     AVX,SANDYBRIDGE
\c VMOVHPD          mem64,xmmreg             AVX,SANDYBRIDGE
\c VMOVHPS          xmmreg,xmmreg*,mem64     AVX,SANDYBRIDGE
\c VMOVHPS          mem64,xmmreg             AVX,SANDYBRIDGE
\c VMOVLHPS         xmmreg,xmmreg*,xmmreg    AVX,SANDYBRIDGE
\c VMOVLPD          xmmreg,xmmreg*,mem64     AVX,SANDYBRIDGE
\c VMOVLPD          mem64,xmmreg             AVX,SANDYBRIDGE
\c VMOVLPS          xmmreg,xmmreg*,mem64     AVX,SANDYBRIDGE
\c VMOVLPS          mem64,xmmreg             AVX,SANDYBRIDGE
\c VMOVMSKPD        reg64,xmmreg             AVX,SANDYBRIDGE,LONG
\c VMOVMSKPD        reg32,xmmreg             AVX,SANDYBRIDGE
\c VMOVMSKPD        reg64,ymmreg             AVX,SANDYBRIDGE,LONG
\c VMOVMSKPD        reg32,ymmreg             AVX,SANDYBRIDGE
\c VMOVMSKPS        reg64,xmmreg             AVX,SANDYBRIDGE,LONG
\c VMOVMSKPS        reg32,xmmreg             AVX,SANDYBRIDGE
\c VMOVMSKPS        reg64,ymmreg             AVX,SANDYBRIDGE,LONG
\c VMOVMSKPS        reg32,ymmreg             AVX,SANDYBRIDGE
\c VMOVNTDQ         mem128,xmmreg            AVX,SANDYBRIDGE
\c VMOVNTQQ         mem256,ymmreg            AVX,SANDYBRIDGE
\c VMOVNTDQ         mem256,ymmreg            AVX,SANDYBRIDGE
\c VMOVNTDQA        xmmreg,mem128            AVX,SANDYBRIDGE
\c VMOVNTPD         mem128,xmmreg            AVX,SANDYBRIDGE
\c VMOVNTPD         mem256,ymmreg            AVX,SANDYBRIDGE
\c VMOVNTPS         mem128,xmmreg            AVX,SANDYBRIDGE
\c VMOVNTPS         mem256,ymmreg            AVX,SANDYBRIDGE
\c VMOVSD           xmmreg,xmmreg*,xmmreg    AVX,SANDYBRIDGE
\c VMOVSD           xmmreg,mem64             AVX,SANDYBRIDGE
\c VMOVSD           xmmreg,xmmreg*,xmmreg    AVX,SANDYBRIDGE
\c VMOVSD           mem64,xmmreg             AVX,SANDYBRIDGE
\c VMOVSHDUP        xmmreg,xmmrm128          AVX,SANDYBRIDGE
\c VMOVSHDUP        ymmreg,ymmrm256          AVX,SANDYBRIDGE
\c VMOVSLDUP        xmmreg,xmmrm128          AVX,SANDYBRIDGE
\c VMOVSLDUP        ymmreg,ymmrm256          AVX,SANDYBRIDGE
\c VMOVSS           xmmreg,xmmreg*,xmmreg    AVX,SANDYBRIDGE
\c VMOVSS           xmmreg,mem32             AVX,SANDYBRIDGE
\c VMOVSS           xmmreg,xmmreg*,xmmreg    AVX,SANDYBRIDGE
\c VMOVSS           mem32,xmmreg             AVX,SANDYBRIDGE
\c VMOVUPD          xmmreg,xmmrm128          AVX,SANDYBRIDGE
\c VMOVUPD          xmmrm128,xmmreg          AVX,SANDYBRIDGE
\c VMOVUPD          ymmreg,ymmrm256          AVX,SANDYBRIDGE
\c VMOVUPD          ymmrm256,ymmreg          AVX,SANDYBRIDGE
\c VMOVUPS          xmmreg,xmmrm128          AVX,SANDYBRIDGE
\c VMOVUPS          xmmrm128,xmmreg          AVX,SANDYBRIDGE
\c VMOVUPS          ymmreg,ymmrm256          AVX,SANDYBRIDGE
\c VMOVUPS          ymmrm256,ymmreg          AVX,SANDYBRIDGE
\c VMPSADBW         xmmreg,xmmreg*,xmmrm128,imm8 AVX,SANDYBRIDGE
\c VMULPD           xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VMULPD           ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE
\c VMULPS           xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VMULPS           ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE
\c VMULSD           xmmreg,xmmreg*,xmmrm64   AVX,SANDYBRIDGE
\c VMULSS           xmmreg,xmmreg*,xmmrm32   AVX,SANDYBRIDGE
\c VORPD            xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VORPD            ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE
\c VORPS            xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VORPS            ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE
\c VPABSB           xmmreg,xmmrm128          AVX,SANDYBRIDGE
\c VPABSW           xmmreg,xmmrm128          AVX,SANDYBRIDGE
\c VPABSD           xmmreg,xmmrm128          AVX,SANDYBRIDGE
\c VPACKSSWB        xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VPACKSSDW        xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VPACKUSWB        xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VPACKUSDW        xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VPADDB           xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VPADDW           xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VPADDD           xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VPADDQ           xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VPADDSB          xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VPADDSW          xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VPADDUSB         xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VPADDUSW         xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VPALIGNR         xmmreg,xmmreg*,xmmrm128,imm8 AVX,SANDYBRIDGE
\c VPAND            xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VPANDN           xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VPAVGB           xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VPAVGW           xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VPBLENDVB        xmmreg,xmmreg*,xmmrm128,xmmreg AVX,SANDYBRIDGE
\c VPBLENDW         xmmreg,xmmreg*,xmmrm128,imm8 AVX,SANDYBRIDGE
\c VPCMPESTRI       xmmreg,xmmrm128,imm8     AVX,SANDYBRIDGE
\c VPCMPESTRM       xmmreg,xmmrm128,imm8     AVX,SANDYBRIDGE
\c VPCMPISTRI       xmmreg,xmmrm128,imm8     AVX,SANDYBRIDGE
\c VPCMPISTRM       xmmreg,xmmrm128,imm8     AVX,SANDYBRIDGE
\c VPCMPEQB         xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VPCMPEQW         xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VPCMPEQD         xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VPCMPEQQ         xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VPCMPGTB         xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VPCMPGTW         xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VPCMPGTD         xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VPCMPGTQ         xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VPERMILPD        xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VPERMILPD        ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE
\c VPERMILPD        xmmreg,xmmrm128,imm8     AVX,SANDYBRIDGE
\c VPERMILPD        ymmreg,ymmrm256,imm8     AVX,SANDYBRIDGE
\c VPERMILPS        xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VPERMILPS        ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE
\c VPERMILPS        xmmreg,xmmrm128,imm8     AVX,SANDYBRIDGE
\c VPERMILPS        ymmreg,ymmrm256,imm8     AVX,SANDYBRIDGE
\c VPERM2F128       ymmreg,ymmreg*,ymmrm256,imm8 AVX,SANDYBRIDGE
\c VPEXTRB          reg64,xmmreg,imm8        AVX,SANDYBRIDGE,LONG
\c VPEXTRB          reg32,xmmreg,imm8        AVX,SANDYBRIDGE
\c VPEXTRB          mem8,xmmreg,imm8         AVX,SANDYBRIDGE
\c VPEXTRW          reg64,xmmreg,imm8        AVX,SANDYBRIDGE,LONG
\c VPEXTRW          reg32,xmmreg,imm8        AVX,SANDYBRIDGE
\c VPEXTRW          reg64,xmmreg,imm8        AVX,SANDYBRIDGE,LONG
\c VPEXTRW          reg32,xmmreg,imm8        AVX,SANDYBRIDGE
\c VPEXTRW          mem16,xmmreg,imm8        AVX,SANDYBRIDGE
\c VPEXTRD          reg64,xmmreg,imm8        AVX,SANDYBRIDGE,LONG
\c VPEXTRD          rm32,xmmreg,imm8         AVX,SANDYBRIDGE
\c VPEXTRQ          rm64,xmmreg,imm8         AVX,SANDYBRIDGE,LONG
\c VPHADDW          xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VPHADDD          xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VPHADDSW         xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VPHMINPOSUW      xmmreg,xmmrm128          AVX,SANDYBRIDGE
\c VPHSUBW          xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VPHSUBD          xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VPHSUBSW         xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VPINSRB          xmmreg,xmmreg*,mem8,imm8 AVX,SANDYBRIDGE
\c VPINSRB          xmmreg,xmmreg*,rm8,imm8  AVX,SANDYBRIDGE
\c VPINSRB          xmmreg,xmmreg*,reg32,imm8 AVX,SANDYBRIDGE
\c VPINSRW          xmmreg,xmmreg*,mem16,imm8 AVX,SANDYBRIDGE
\c VPINSRW          xmmreg,xmmreg*,rm16,imm8 AVX,SANDYBRIDGE
\c VPINSRW          xmmreg,xmmreg*,reg32,imm8 AVX,SANDYBRIDGE
\c VPINSRD          xmmreg,xmmreg*,mem32,imm8 AVX,SANDYBRIDGE
\c VPINSRD          xmmreg,xmmreg*,rm32,imm8 AVX,SANDYBRIDGE
\c VPINSRQ          xmmreg,xmmreg*,mem64,imm8 AVX,SANDYBRIDGE,LONG
\c VPINSRQ          xmmreg,xmmreg*,rm64,imm8 AVX,SANDYBRIDGE,LONG
\c VPMADDWD         xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VPMADDUBSW       xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VPMAXSB          xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VPMAXSW          xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VPMAXSD          xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VPMAXUB          xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VPMAXUW          xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VPMAXUD          xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VPMINSB          xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VPMINSW          xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VPMINSD          xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VPMINUB          xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VPMINUW          xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VPMINUD          xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VPMOVMSKB        reg64,xmmreg             AVX,SANDYBRIDGE,LONG
\c VPMOVMSKB        reg32,xmmreg             AVX,SANDYBRIDGE
\c VPMOVSXBW        xmmreg,xmmrm64           AVX,SANDYBRIDGE
\c VPMOVSXBD        xmmreg,xmmrm32           AVX,SANDYBRIDGE
\c VPMOVSXBQ        xmmreg,xmmrm16           AVX,SANDYBRIDGE
\c VPMOVSXWD        xmmreg,xmmrm64           AVX,SANDYBRIDGE
\c VPMOVSXWQ        xmmreg,xmmrm32           AVX,SANDYBRIDGE
\c VPMOVSXDQ        xmmreg,xmmrm64           AVX,SANDYBRIDGE
\c VPMOVZXBW        xmmreg,xmmrm64           AVX,SANDYBRIDGE
\c VPMOVZXBD        xmmreg,xmmrm32           AVX,SANDYBRIDGE
\c VPMOVZXBQ        xmmreg,xmmrm16           AVX,SANDYBRIDGE
\c VPMOVZXWD        xmmreg,xmmrm64           AVX,SANDYBRIDGE
\c VPMOVZXWQ        xmmreg,xmmrm32           AVX,SANDYBRIDGE
\c VPMOVZXDQ        xmmreg,xmmrm64           AVX,SANDYBRIDGE
\c VPMULHUW         xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VPMULHRSW        xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VPMULHW          xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VPMULLW          xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VPMULLD          xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VPMULUDQ         xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VPMULDQ          xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VPOR             xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VPSADBW          xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VPSHUFB          xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VPSHUFD          xmmreg,xmmrm128,imm8     AVX,SANDYBRIDGE
\c VPSHUFHW         xmmreg,xmmrm128,imm8     AVX,SANDYBRIDGE
\c VPSHUFLW         xmmreg,xmmrm128,imm8     AVX,SANDYBRIDGE
\c VPSIGNB          xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VPSIGNW          xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VPSIGND          xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VPSLLDQ          xmmreg,xmmreg*,imm8      AVX,SANDYBRIDGE
\c VPSRLDQ          xmmreg,xmmreg*,imm8      AVX,SANDYBRIDGE
\c VPSLLW           xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VPSLLW           xmmreg,xmmreg*,imm8      AVX,SANDYBRIDGE
\c VPSLLD           xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VPSLLD           xmmreg,xmmreg*,imm8      AVX,SANDYBRIDGE
\c VPSLLQ           xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VPSLLQ           xmmreg,xmmreg*,imm8      AVX,SANDYBRIDGE
\c VPSRAW           xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VPSRAW           xmmreg,xmmreg*,imm8      AVX,SANDYBRIDGE
\c VPSRAD           xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VPSRAD           xmmreg,xmmreg*,imm8      AVX,SANDYBRIDGE
\c VPSRLW           xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VPSRLW           xmmreg,xmmreg*,imm8      AVX,SANDYBRIDGE
\c VPSRLD           xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VPSRLD           xmmreg,xmmreg*,imm8      AVX,SANDYBRIDGE
\c VPSRLQ           xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VPSRLQ           xmmreg,xmmreg*,imm8      AVX,SANDYBRIDGE
\c VPTEST           xmmreg,xmmrm128          AVX,SANDYBRIDGE
\c VPTEST           ymmreg,ymmrm256          AVX,SANDYBRIDGE
\c VPSUBB           xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VPSUBW           xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VPSUBD           xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VPSUBQ           xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VPSUBSB          xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VPSUBSW          xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VPSUBUSB         xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VPSUBUSW         xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VPUNPCKHBW       xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VPUNPCKHWD       xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VPUNPCKHDQ       xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VPUNPCKHQDQ      xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VPUNPCKLBW       xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VPUNPCKLWD       xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VPUNPCKLDQ       xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VPUNPCKLQDQ      xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VPXOR            xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VRCPPS           xmmreg,xmmrm128          AVX,SANDYBRIDGE
\c VRCPPS           ymmreg,ymmrm256          AVX,SANDYBRIDGE
\c VRCPSS           xmmreg,xmmreg*,xmmrm32   AVX,SANDYBRIDGE
\c VRSQRTPS         xmmreg,xmmrm128          AVX,SANDYBRIDGE
\c VRSQRTPS         ymmreg,ymmrm256          AVX,SANDYBRIDGE
\c VRSQRTSS         xmmreg,xmmreg*,xmmrm32   AVX,SANDYBRIDGE
\c VROUNDPD         xmmreg,xmmrm128,imm8     AVX,SANDYBRIDGE
\c VROUNDPD         ymmreg,ymmrm256,imm8     AVX,SANDYBRIDGE
\c VROUNDPS         xmmreg,xmmrm128,imm8     AVX,SANDYBRIDGE
\c VROUNDPS         ymmreg,ymmrm256,imm8     AVX,SANDYBRIDGE
\c VROUNDSD         xmmreg,xmmreg*,xmmrm64,imm8 AVX,SANDYBRIDGE
\c VROUNDSS         xmmreg,xmmreg*,xmmrm32,imm8 AVX,SANDYBRIDGE
\c VSHUFPD          xmmreg,xmmreg*,xmmrm128,imm8 AVX,SANDYBRIDGE
\c VSHUFPD          ymmreg,ymmreg*,ymmrm256,imm8 AVX,SANDYBRIDGE
\c VSHUFPS          xmmreg,xmmreg*,xmmrm128,imm8 AVX,SANDYBRIDGE
\c VSHUFPS          ymmreg,ymmreg*,ymmrm256,imm8 AVX,SANDYBRIDGE
\c VSQRTPD          xmmreg,xmmrm128          AVX,SANDYBRIDGE
\c VSQRTPD          ymmreg,ymmrm256          AVX,SANDYBRIDGE
\c VSQRTPS          xmmreg,xmmrm128          AVX,SANDYBRIDGE
\c VSQRTPS          ymmreg,ymmrm256          AVX,SANDYBRIDGE
\c VSQRTSD          xmmreg,xmmreg*,xmmrm64   AVX,SANDYBRIDGE
\c VSQRTSS          xmmreg,xmmreg*,xmmrm32   AVX,SANDYBRIDGE
\c VSTMXCSR         mem32                    AVX,SANDYBRIDGE
\c VSUBPD           xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VSUBPD           ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE
\c VSUBPS           xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VSUBPS           ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE
\c VSUBSD           xmmreg,xmmreg*,xmmrm64   AVX,SANDYBRIDGE
\c VSUBSS           xmmreg,xmmreg*,xmmrm32   AVX,SANDYBRIDGE
\c VTESTPS          xmmreg,xmmrm128          AVX,SANDYBRIDGE
\c VTESTPS          ymmreg,ymmrm256          AVX,SANDYBRIDGE
\c VTESTPD          xmmreg,xmmrm128          AVX,SANDYBRIDGE
\c VTESTPD          ymmreg,ymmrm256          AVX,SANDYBRIDGE
\c VUCOMISD         xmmreg,xmmrm64           AVX,SANDYBRIDGE
\c VUCOMISS         xmmreg,xmmrm32           AVX,SANDYBRIDGE
\c VUNPCKHPD        xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VUNPCKHPD        ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE
\c VUNPCKHPS        xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VUNPCKHPS        ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE
\c VUNPCKLPD        xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VUNPCKLPD        ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE
\c VUNPCKLPS        xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VUNPCKLPS        ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE
\c VXORPD           xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VXORPD           ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE
\c VXORPS           xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VXORPS           ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE
\c VZEROALL                                  AVX,SANDYBRIDGE
\c VZEROUPPER                                AVX,SANDYBRIDGE

\S{} Intel Carry-Less Multiplication instructions (CLMUL)

\c PCLMULLQLQDQ     xmmreg,xmmrm128          SSE,WESTMERE
\c PCLMULHQLQDQ     xmmreg,xmmrm128          SSE,WESTMERE
\c PCLMULLQHQDQ     xmmreg,xmmrm128          SSE,WESTMERE
\c PCLMULHQHQDQ     xmmreg,xmmrm128          SSE,WESTMERE
\c PCLMULQDQ        xmmreg,xmmrm128,imm8     SSE,WESTMERE

\S{} Intel AVX Carry-Less Multiplication instructions (CLMUL)

\c VPCLMULLQLQDQ    xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VPCLMULHQLQDQ    xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VPCLMULLQHQDQ    xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VPCLMULHQHQDQ    xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VPCLMULQDQ       xmmreg,xmmreg*,xmmrm128,imm8 AVX,SANDYBRIDGE
\c VPCLMULLQLQDQ    ymmreg,ymmreg*,ymmrm256  VPCLMULQDQ
\c VPCLMULHQLQDQ    ymmreg,ymmreg*,ymmrm256  VPCLMULQDQ
\c VPCLMULLQHQDQ    ymmreg,ymmreg*,ymmrm256  VPCLMULQDQ
\c VPCLMULHQHQDQ    ymmreg,ymmreg*,ymmrm256  VPCLMULQDQ
\c VPCLMULQDQ       ymmreg,ymmreg*,ymmrm256,imm8 VPCLMULQDQ
\c VPCLMULLQLQDQ    xmmreg,xmmreg*,xmmrm128  AVX512VL,VPCLMULQDQ
\c VPCLMULHQLQDQ    xmmreg,xmmreg*,xmmrm128  AVX512VL,VPCLMULQDQ
\c VPCLMULLQHQDQ    xmmreg,xmmreg*,xmmrm128  AVX512VL,VPCLMULQDQ
\c VPCLMULHQHQDQ    xmmreg,xmmreg*,xmmrm128  AVX512VL,VPCLMULQDQ
\c VPCLMULQDQ       xmmreg,xmmreg*,xmmrm128,imm8 AVX512VL,VPCLMULQDQ
\c VPCLMULLQLQDQ    ymmreg,ymmreg*,ymmrm256  AVX512VL,VPCLMULQDQ
\c VPCLMULHQLQDQ    ymmreg,ymmreg*,ymmrm256  AVX512VL,VPCLMULQDQ
\c VPCLMULLQHQDQ    ymmreg,ymmreg*,ymmrm256  AVX512VL,VPCLMULQDQ
\c VPCLMULHQHQDQ    ymmreg,ymmreg*,ymmrm256  AVX512VL,VPCLMULQDQ
\c VPCLMULQDQ       ymmreg,ymmreg*,ymmrm256,imm8 AVX512VL,VPCLMULQDQ
\c VPCLMULLQLQDQ    zmmreg,zmmreg*,zmmrm512  AVX512,VPCLMULQDQ
\c VPCLMULHQLQDQ    zmmreg,zmmreg*,zmmrm512  AVX512,VPCLMULQDQ
\c VPCLMULLQHQDQ    zmmreg,zmmreg*,zmmrm512  AVX512,VPCLMULQDQ
\c VPCLMULHQHQDQ    zmmreg,zmmreg*,zmmrm512  AVX512,VPCLMULQDQ
\c VPCLMULQDQ       zmmreg,zmmreg*,zmmrm512,imm8 AVX512,VPCLMULQDQ

\S{} Intel Fused Multiply-Add instructions (FMA)

\c VFMADD132PS      xmmreg,xmmreg,xmmrm128   FMA
\c VFMADD132PS      ymmreg,ymmreg,ymmrm256   FMA
\c VFMADD132PD      xmmreg,xmmreg,xmmrm128   FMA
\c VFMADD132PD      ymmreg,ymmreg,ymmrm256   FMA
\c VFMADD312PS      xmmreg,xmmreg,xmmrm128   FMA
\c VFMADD312PS      ymmreg,ymmreg,ymmrm256   FMA
\c VFMADD312PD      xmmreg,xmmreg,xmmrm128   FMA
\c VFMADD312PD      ymmreg,ymmreg,ymmrm256   FMA
\c VFMADD213PS      xmmreg,xmmreg,xmmrm128   FMA
\c VFMADD213PS      ymmreg,ymmreg,ymmrm256   FMA
\c VFMADD213PD      xmmreg,xmmreg,xmmrm128   FMA
\c VFMADD213PD      ymmreg,ymmreg,ymmrm256   FMA
\c VFMADD123PS      xmmreg,xmmreg,xmmrm128   FMA
\c VFMADD123PS      ymmreg,ymmreg,ymmrm256   FMA
\c VFMADD123PD      xmmreg,xmmreg,xmmrm128   FMA
\c VFMADD123PD      ymmreg,ymmreg,ymmrm256   FMA
\c VFMADD231PS      xmmreg,xmmreg,xmmrm128   FMA
\c VFMADD231PS      ymmreg,ymmreg,ymmrm256   FMA
\c VFMADD231PD      xmmreg,xmmreg,xmmrm128   FMA
\c VFMADD231PD      ymmreg,ymmreg,ymmrm256   FMA
\c VFMADD321PS      xmmreg,xmmreg,xmmrm128   FMA
\c VFMADD321PS      ymmreg,ymmreg,ymmrm256   FMA
\c VFMADD321PD      xmmreg,xmmreg,xmmrm128   FMA
\c VFMADD321PD      ymmreg,ymmreg,ymmrm256   FMA
\c VFMADDSUB132PS   xmmreg,xmmreg,xmmrm128   FMA
\c VFMADDSUB132PS   ymmreg,ymmreg,ymmrm256   FMA
\c VFMADDSUB132PD   xmmreg,xmmreg,xmmrm128   FMA
\c VFMADDSUB132PD   ymmreg,ymmreg,ymmrm256   FMA
\c VFMADDSUB312PS   xmmreg,xmmreg,xmmrm128   FMA
\c VFMADDSUB312PS   ymmreg,ymmreg,ymmrm256   FMA
\c VFMADDSUB312PD   xmmreg,xmmreg,xmmrm128   FMA
\c VFMADDSUB312PD   ymmreg,ymmreg,ymmrm256   FMA
\c VFMADDSUB213PS   xmmreg,xmmreg,xmmrm128   FMA
\c VFMADDSUB213PS   ymmreg,ymmreg,ymmrm256   FMA
\c VFMADDSUB213PD   xmmreg,xmmreg,xmmrm128   FMA
\c VFMADDSUB213PD   ymmreg,ymmreg,ymmrm256   FMA
\c VFMADDSUB123PS   xmmreg,xmmreg,xmmrm128   FMA
\c VFMADDSUB123PS   ymmreg,ymmreg,ymmrm256   FMA
\c VFMADDSUB123PD   xmmreg,xmmreg,xmmrm128   FMA
\c VFMADDSUB123PD   ymmreg,ymmreg,ymmrm256   FMA
\c VFMADDSUB231PS   xmmreg,xmmreg,xmmrm128   FMA
\c VFMADDSUB231PS   ymmreg,ymmreg,ymmrm256   FMA
\c VFMADDSUB231PD   xmmreg,xmmreg,xmmrm128   FMA
\c VFMADDSUB231PD   ymmreg,ymmreg,ymmrm256   FMA
\c VFMADDSUB321PS   xmmreg,xmmreg,xmmrm128   FMA
\c VFMADDSUB321PS   ymmreg,ymmreg,ymmrm256   FMA
\c VFMADDSUB321PD   xmmreg,xmmreg,xmmrm128   FMA
\c VFMADDSUB321PD   ymmreg,ymmreg,ymmrm256   FMA
\c VFMSUB132PS      xmmreg,xmmreg,xmmrm128   FMA
\c VFMSUB132PS      ymmreg,ymmreg,ymmrm256   FMA
\c VFMSUB132PD      xmmreg,xmmreg,xmmrm128   FMA
\c VFMSUB132PD      ymmreg,ymmreg,ymmrm256   FMA
\c VFMSUB312PS      xmmreg,xmmreg,xmmrm128   FMA
\c VFMSUB312PS      ymmreg,ymmreg,ymmrm256   FMA
\c VFMSUB312PD      xmmreg,xmmreg,xmmrm128   FMA
\c VFMSUB312PD      ymmreg,ymmreg,ymmrm256   FMA
\c VFMSUB213PS      xmmreg,xmmreg,xmmrm128   FMA
\c VFMSUB213PS      ymmreg,ymmreg,ymmrm256   FMA
\c VFMSUB213PD      xmmreg,xmmreg,xmmrm128   FMA
\c VFMSUB213PD      ymmreg,ymmreg,ymmrm256   FMA
\c VFMSUB123PS      xmmreg,xmmreg,xmmrm128   FMA
\c VFMSUB123PS      ymmreg,ymmreg,ymmrm256   FMA
\c VFMSUB123PD      xmmreg,xmmreg,xmmrm128   FMA
\c VFMSUB123PD      ymmreg,ymmreg,ymmrm256   FMA
\c VFMSUB231PS      xmmreg,xmmreg,xmmrm128   FMA
\c VFMSUB231PS      ymmreg,ymmreg,ymmrm256   FMA
\c VFMSUB231PD      xmmreg,xmmreg,xmmrm128   FMA
\c VFMSUB231PD      ymmreg,ymmreg,ymmrm256   FMA
\c VFMSUB321PS      xmmreg,xmmreg,xmmrm128   FMA
\c VFMSUB321PS      ymmreg,ymmreg,ymmrm256   FMA
\c VFMSUB321PD      xmmreg,xmmreg,xmmrm128   FMA
\c VFMSUB321PD      ymmreg,ymmreg,ymmrm256   FMA
\c VFMSUBADD132PS   xmmreg,xmmreg,xmmrm128   FMA
\c VFMSUBADD132PS   ymmreg,ymmreg,ymmrm256   FMA
\c VFMSUBADD132PD   xmmreg,xmmreg,xmmrm128   FMA
\c VFMSUBADD132PD   ymmreg,ymmreg,ymmrm256   FMA
\c VFMSUBADD312PS   xmmreg,xmmreg,xmmrm128   FMA
\c VFMSUBADD312PS   ymmreg,ymmreg,ymmrm256   FMA
\c VFMSUBADD312PD   xmmreg,xmmreg,xmmrm128   FMA
\c VFMSUBADD312PD   ymmreg,ymmreg,ymmrm256   FMA
\c VFMSUBADD213PS   xmmreg,xmmreg,xmmrm128   FMA
\c VFMSUBADD213PS   ymmreg,ymmreg,ymmrm256   FMA
\c VFMSUBADD213PD   xmmreg,xmmreg,xmmrm128   FMA
\c VFMSUBADD213PD   ymmreg,ymmreg,ymmrm256   FMA
\c VFMSUBADD123PS   xmmreg,xmmreg,xmmrm128   FMA
\c VFMSUBADD123PS   ymmreg,ymmreg,ymmrm256   FMA
\c VFMSUBADD123PD   xmmreg,xmmreg,xmmrm128   FMA
\c VFMSUBADD123PD   ymmreg,ymmreg,ymmrm256   FMA
\c VFMSUBADD231PS   xmmreg,xmmreg,xmmrm128   FMA
\c VFMSUBADD231PS   ymmreg,ymmreg,ymmrm256   FMA
\c VFMSUBADD231PD   xmmreg,xmmreg,xmmrm128   FMA
\c VFMSUBADD231PD   ymmreg,ymmreg,ymmrm256   FMA
\c VFMSUBADD321PS   xmmreg,xmmreg,xmmrm128   FMA
\c VFMSUBADD321PS   ymmreg,ymmreg,ymmrm256   FMA
\c VFMSUBADD321PD   xmmreg,xmmreg,xmmrm128   FMA
\c VFMSUBADD321PD   ymmreg,ymmreg,ymmrm256   FMA
\c VFNMADD132PS     xmmreg,xmmreg,xmmrm128   FMA
\c VFNMADD132PS     ymmreg,ymmreg,ymmrm256   FMA
\c VFNMADD132PD     xmmreg,xmmreg,xmmrm128   FMA
\c VFNMADD132PD     ymmreg,ymmreg,ymmrm256   FMA
\c VFNMADD312PS     xmmreg,xmmreg,xmmrm128   FMA
\c VFNMADD312PS     ymmreg,ymmreg,ymmrm256   FMA
\c VFNMADD312PD     xmmreg,xmmreg,xmmrm128   FMA
\c VFNMADD312PD     ymmreg,ymmreg,ymmrm256   FMA
\c VFNMADD213PS     xmmreg,xmmreg,xmmrm128   FMA
\c VFNMADD213PS     ymmreg,ymmreg,ymmrm256   FMA
\c VFNMADD213PD     xmmreg,xmmreg,xmmrm128   FMA
\c VFNMADD213PD     ymmreg,ymmreg,ymmrm256   FMA
\c VFNMADD123PS     xmmreg,xmmreg,xmmrm128   FMA
\c VFNMADD123PS     ymmreg,ymmreg,ymmrm256   FMA
\c VFNMADD123PD     xmmreg,xmmreg,xmmrm128   FMA
\c VFNMADD123PD     ymmreg,ymmreg,ymmrm256   FMA
\c VFNMADD231PS     xmmreg,xmmreg,xmmrm128   FMA
\c VFNMADD231PS     ymmreg,ymmreg,ymmrm256   FMA
\c VFNMADD231PD     xmmreg,xmmreg,xmmrm128   FMA
\c VFNMADD231PD     ymmreg,ymmreg,ymmrm256   FMA
\c VFNMADD321PS     xmmreg,xmmreg,xmmrm128   FMA
\c VFNMADD321PS     ymmreg,ymmreg,ymmrm256   FMA
\c VFNMADD321PD     xmmreg,xmmreg,xmmrm128   FMA
\c VFNMADD321PD     ymmreg,ymmreg,ymmrm256   FMA
\c VFNMSUB132PS     xmmreg,xmmreg,xmmrm128   FMA
\c VFNMSUB132PS     ymmreg,ymmreg,ymmrm256   FMA
\c VFNMSUB132PD     xmmreg,xmmreg,xmmrm128   FMA
\c VFNMSUB132PD     ymmreg,ymmreg,ymmrm256   FMA
\c VFNMSUB312PS     xmmreg,xmmreg,xmmrm128   FMA
\c VFNMSUB312PS     ymmreg,ymmreg,ymmrm256   FMA
\c VFNMSUB312PD     xmmreg,xmmreg,xmmrm128   FMA
\c VFNMSUB312PD     ymmreg,ymmreg,ymmrm256   FMA
\c VFNMSUB213PS     xmmreg,xmmreg,xmmrm128   FMA
\c VFNMSUB213PS     ymmreg,ymmreg,ymmrm256   FMA
\c VFNMSUB213PD     xmmreg,xmmreg,xmmrm128   FMA
\c VFNMSUB213PD     ymmreg,ymmreg,ymmrm256   FMA
\c VFNMSUB123PS     xmmreg,xmmreg,xmmrm128   FMA
\c VFNMSUB123PS     ymmreg,ymmreg,ymmrm256   FMA
\c VFNMSUB123PD     xmmreg,xmmreg,xmmrm128   FMA
\c VFNMSUB123PD     ymmreg,ymmreg,ymmrm256   FMA
\c VFNMSUB231PS     xmmreg,xmmreg,xmmrm128   FMA
\c VFNMSUB231PS     ymmreg,ymmreg,ymmrm256   FMA
\c VFNMSUB231PD     xmmreg,xmmreg,xmmrm128   FMA
\c VFNMSUB231PD     ymmreg,ymmreg,ymmrm256   FMA
\c VFNMSUB321PS     xmmreg,xmmreg,xmmrm128   FMA
\c VFNMSUB321PS     ymmreg,ymmreg,ymmrm256   FMA
\c VFNMSUB321PD     xmmreg,xmmreg,xmmrm128   FMA
\c VFNMSUB321PD     ymmreg,ymmreg,ymmrm256   FMA
\c VFMADD132SS      xmmreg,xmmreg,xmmrm32    FMA
\c VFMADD132SD      xmmreg,xmmreg,xmmrm64    FMA
\c VFMADD312SS      xmmreg,xmmreg,xmmrm32    FMA
\c VFMADD312SD      xmmreg,xmmreg,xmmrm64    FMA
\c VFMADD213SS      xmmreg,xmmreg,xmmrm32    FMA
\c VFMADD213SD      xmmreg,xmmreg,xmmrm64    FMA
\c VFMADD123SS      xmmreg,xmmreg,xmmrm32    FMA
\c VFMADD123SD      xmmreg,xmmreg,xmmrm64    FMA
\c VFMADD231SS      xmmreg,xmmreg,xmmrm32    FMA
\c VFMADD231SD      xmmreg,xmmreg,xmmrm64    FMA
\c VFMADD321SS      xmmreg,xmmreg,xmmrm32    FMA
\c VFMADD321SD      xmmreg,xmmreg,xmmrm64    FMA
\c VFMSUB132SS      xmmreg,xmmreg,xmmrm32    FMA
\c VFMSUB132SD      xmmreg,xmmreg,xmmrm64    FMA
\c VFMSUB312SS      xmmreg,xmmreg,xmmrm32    FMA
\c VFMSUB312SD      xmmreg,xmmreg,xmmrm64    FMA
\c VFMSUB213SS      xmmreg,xmmreg,xmmrm32    FMA
\c VFMSUB213SD      xmmreg,xmmreg,xmmrm64    FMA
\c VFMSUB123SS      xmmreg,xmmreg,xmmrm32    FMA
\c VFMSUB123SD      xmmreg,xmmreg,xmmrm64    FMA
\c VFMSUB231SS      xmmreg,xmmreg,xmmrm32    FMA
\c VFMSUB231SD      xmmreg,xmmreg,xmmrm64    FMA
\c VFMSUB321SS      xmmreg,xmmreg,xmmrm32    FMA
\c VFMSUB321SD      xmmreg,xmmreg,xmmrm64    FMA
\c VFNMADD132SS     xmmreg,xmmreg,xmmrm32    FMA
\c VFNMADD132SD     xmmreg,xmmreg,xmmrm64    FMA
\c VFNMADD312SS     xmmreg,xmmreg,xmmrm32    FMA
\c VFNMADD312SD     xmmreg,xmmreg,xmmrm64    FMA
\c VFNMADD213SS     xmmreg,xmmreg,xmmrm32    FMA
\c VFNMADD213SD     xmmreg,xmmreg,xmmrm64    FMA
\c VFNMADD123SS     xmmreg,xmmreg,xmmrm32    FMA
\c VFNMADD123SD     xmmreg,xmmreg,xmmrm64    FMA
\c VFNMADD231SS     xmmreg,xmmreg,xmmrm32    FMA
\c VFNMADD231SD     xmmreg,xmmreg,xmmrm64    FMA
\c VFNMADD321SS     xmmreg,xmmreg,xmmrm32    FMA
\c VFNMADD321SD     xmmreg,xmmreg,xmmrm64    FMA
\c VFNMSUB132SS     xmmreg,xmmreg,xmmrm32    FMA
\c VFNMSUB132SD     xmmreg,xmmreg,xmmrm64    FMA
\c VFNMSUB312SS     xmmreg,xmmreg,xmmrm32    FMA
\c VFNMSUB312SD     xmmreg,xmmreg,xmmrm64    FMA
\c VFNMSUB213SS     xmmreg,xmmreg,xmmrm32    FMA
\c VFNMSUB213SD     xmmreg,xmmreg,xmmrm64    FMA
\c VFNMSUB123SS     xmmreg,xmmreg,xmmrm32    FMA
\c VFNMSUB123SD     xmmreg,xmmreg,xmmrm64    FMA
\c VFNMSUB231SS     xmmreg,xmmreg,xmmrm32    FMA
\c VFNMSUB231SD     xmmreg,xmmreg,xmmrm64    FMA
\c VFNMSUB321SS     xmmreg,xmmreg,xmmrm32    FMA
\c VFNMSUB321SD     xmmreg,xmmreg,xmmrm64    FMA

\S{} Intel post-32 nm processor instructions

\c RDFSBASE         reg32                    LONG
\c RDFSBASE         reg64                    LONG
\c RDGSBASE         reg32                    LONG
\c RDGSBASE         reg64                    LONG
\c RDRAND           reg16                    
\c RDRAND           reg32                    
\c RDRAND           reg64                    LONG
\c WRFSBASE         reg32                    LONG
\c WRFSBASE         reg64                    LONG
\c WRGSBASE         reg32                    LONG
\c WRGSBASE         reg64                    LONG
\c VCVTPH2PS        ymmreg,xmmrm128          AVX
\c VCVTPH2PS        xmmreg,xmmrm64           AVX
\c VCVTPS2PH        xmmrm128,ymmreg,imm8     AVX
\c VCVTPS2PH        xmmrm64,xmmreg,imm8      AVX
\c ADCX             reg32,rm32               
\c ADCX             reg64,rm64               LONG
\c ADOX             reg32,rm32               
\c ADOX             reg64,rm64               LONG
\c RDSEED           reg16                    
\c RDSEED           reg32                    
\c RDSEED           reg64                    LONG
\c CLAC                                      PRIV
\c STAC                                      PRIV

\S{} VIA (Centaur) security instructions

\c XSTORE                                    PENT,CYRIX
\c XCRYPTECB                                 PENT,CYRIX
\c XCRYPTCBC                                 PENT,CYRIX
\c XCRYPTCTR                                 PENT,CYRIX
\c XCRYPTCFB                                 PENT,CYRIX
\c XCRYPTOFB                                 PENT,CYRIX
\c MONTMUL                                   PENT,CYRIX
\c XSHA1                                     PENT,CYRIX
\c XSHA256                                   PENT,CYRIX

\S{} AMD Lightweight Profiling (LWP) instructions

\c LLWPCB           reg32                    AMD,386
\c LLWPCB           reg64                    AMD,X86_64,LONG
\c SLWPCB           reg32                    AMD,386
\c SLWPCB           reg64                    AMD,X86_64,LONG
\c LWPVAL           reg32,rm32,imm32         AMD,386
\c LWPVAL           reg64,rm32,imm32         AMD,X86_64,LONG
\c LWPINS           reg32,rm32,imm32         AMD,386
\c LWPINS           reg64,rm32,imm32         AMD,X86_64,LONG

\S{} AMD XOP and FMA4 instructions (SSE5)

\c VFMADDPD         xmmreg,xmmreg*,xmmrm128,xmmreg AMD,SSE5
\c VFMADDPD         ymmreg,ymmreg*,ymmrm256,ymmreg AMD,SSE5
\c VFMADDPD         xmmreg,xmmreg*,xmmreg,xmmrm128 AMD,SSE5
\c VFMADDPD         ymmreg,ymmreg*,ymmreg,ymmrm256 AMD,SSE5
\c VFMADDPS         xmmreg,xmmreg*,xmmrm128,xmmreg AMD,SSE5
\c VFMADDPS         ymmreg,ymmreg*,ymmrm256,ymmreg AMD,SSE5
\c VFMADDPS         xmmreg,xmmreg*,xmmreg,xmmrm128 AMD,SSE5
\c VFMADDPS         ymmreg,ymmreg*,ymmreg,ymmrm256 AMD,SSE5
\c VFMADDSD         xmmreg,xmmreg*,xmmrm64,xmmreg AMD,SSE5
\c VFMADDSD         xmmreg,xmmreg*,xmmreg,xmmrm64 AMD,SSE5
\c VFMADDSS         xmmreg,xmmreg*,xmmrm32,xmmreg AMD,SSE5
\c VFMADDSS         xmmreg,xmmreg*,xmmreg,xmmrm32 AMD,SSE5
\c VFMADDSUBPD      xmmreg,xmmreg*,xmmrm128,xmmreg AMD,SSE5
\c VFMADDSUBPD      ymmreg,ymmreg*,ymmrm256,ymmreg AMD,SSE5
\c VFMADDSUBPD      xmmreg,xmmreg*,xmmreg,xmmrm128 AMD,SSE5
\c VFMADDSUBPD      ymmreg,ymmreg*,ymmreg,ymmrm256 AMD,SSE5
\c VFMADDSUBPS      xmmreg,xmmreg*,xmmrm128,xmmreg AMD,SSE5
\c VFMADDSUBPS      ymmreg,ymmreg*,ymmrm256,ymmreg AMD,SSE5
\c VFMADDSUBPS      xmmreg,xmmreg*,xmmreg,xmmrm128 AMD,SSE5
\c VFMADDSUBPS      ymmreg,ymmreg*,ymmreg,ymmrm256 AMD,SSE5
\c VFMSUBADDPD      xmmreg,xmmreg*,xmmrm128,xmmreg AMD,SSE5
\c VFMSUBADDPD      ymmreg,ymmreg*,ymmrm256,ymmreg AMD,SSE5
\c VFMSUBADDPD      xmmreg,xmmreg*,xmmreg,xmmrm128 AMD,SSE5
\c VFMSUBADDPD      ymmreg,ymmreg*,ymmreg,ymmrm256 AMD,SSE5
\c VFMSUBADDPS      xmmreg,xmmreg*,xmmrm128,xmmreg AMD,SSE5
\c VFMSUBADDPS      ymmreg,ymmreg*,ymmrm256,ymmreg AMD,SSE5
\c VFMSUBADDPS      xmmreg,xmmreg*,xmmreg,xmmrm128 AMD,SSE5
\c VFMSUBADDPS      ymmreg,ymmreg*,ymmreg,ymmrm256 AMD,SSE5
\c VFMSUBPD         xmmreg,xmmreg*,xmmrm128,xmmreg AMD,SSE5
\c VFMSUBPD         ymmreg,ymmreg*,ymmrm256,ymmreg AMD,SSE5
\c VFMSUBPD         xmmreg,xmmreg*,xmmreg,xmmrm128 AMD,SSE5
\c VFMSUBPD         ymmreg,ymmreg*,ymmreg,ymmrm256 AMD,SSE5
\c VFMSUBPS         xmmreg,xmmreg*,xmmrm128,xmmreg AMD,SSE5
\c VFMSUBPS         ymmreg,ymmreg*,ymmrm256,ymmreg AMD,SSE5
\c VFMSUBPS         xmmreg,xmmreg*,xmmreg,xmmrm128 AMD,SSE5
\c VFMSUBPS         ymmreg,ymmreg*,ymmreg,ymmrm256 AMD,SSE5
\c VFMSUBSD         xmmreg,xmmreg*,xmmrm64,xmmreg AMD,SSE5
\c VFMSUBSD         xmmreg,xmmreg*,xmmreg,xmmrm64 AMD,SSE5
\c VFMSUBSS         xmmreg,xmmreg*,xmmrm32,xmmreg AMD,SSE5
\c VFMSUBSS         xmmreg,xmmreg*,xmmreg,xmmrm32 AMD,SSE5
\c VFNMADDPD        xmmreg,xmmreg*,xmmrm128,xmmreg AMD,SSE5
\c VFNMADDPD        ymmreg,ymmreg*,ymmrm256,ymmreg AMD,SSE5
\c VFNMADDPD        xmmreg,xmmreg*,xmmreg,xmmrm128 AMD,SSE5
\c VFNMADDPD        ymmreg,ymmreg*,ymmreg,ymmrm256 AMD,SSE5
\c VFNMADDPS        xmmreg,xmmreg*,xmmrm128,xmmreg AMD,SSE5
\c VFNMADDPS        ymmreg,ymmreg*,ymmrm256,ymmreg AMD,SSE5
\c VFNMADDPS        xmmreg,xmmreg*,xmmreg,xmmrm128 AMD,SSE5
\c VFNMADDPS        ymmreg,ymmreg*,ymmreg,ymmrm256 AMD,SSE5
\c VFNMADDSD        xmmreg,xmmreg*,xmmrm64,xmmreg AMD,SSE5
\c VFNMADDSD        xmmreg,xmmreg*,xmmreg,xmmrm64 AMD,SSE5
\c VFNMADDSS        xmmreg,xmmreg*,xmmrm32,xmmreg AMD,SSE5
\c VFNMADDSS        xmmreg,xmmreg*,xmmreg,xmmrm32 AMD,SSE5
\c VFNMSUBPD        xmmreg,xmmreg*,xmmrm128,xmmreg AMD,SSE5
\c VFNMSUBPD        ymmreg,ymmreg*,ymmrm256,ymmreg AMD,SSE5
\c VFNMSUBPD        xmmreg,xmmreg*,xmmreg,xmmrm128 AMD,SSE5
\c VFNMSUBPD        ymmreg,ymmreg*,ymmreg,ymmrm256 AMD,SSE5
\c VFNMSUBPS        xmmreg,xmmreg*,xmmrm128,xmmreg AMD,SSE5
\c VFNMSUBPS        ymmreg,ymmreg*,ymmrm256,ymmreg AMD,SSE5
\c VFNMSUBPS        xmmreg,xmmreg*,xmmreg,xmmrm128 AMD,SSE5
\c VFNMSUBPS        ymmreg,ymmreg*,ymmreg,ymmrm256 AMD,SSE5
\c VFNMSUBSD        xmmreg,xmmreg*,xmmrm64,xmmreg AMD,SSE5
\c VFNMSUBSD        xmmreg,xmmreg*,xmmreg,xmmrm64 AMD,SSE5
\c VFNMSUBSS        xmmreg,xmmreg*,xmmrm32,xmmreg AMD,SSE5
\c VFNMSUBSS        xmmreg,xmmreg*,xmmreg,xmmrm32 AMD,SSE5
\c VFRCZPD          xmmreg,xmmrm128*         AMD,SSE5
\c VFRCZPD          ymmreg,ymmrm256*         AMD,SSE5
\c VFRCZPS          xmmreg,xmmrm128*         AMD,SSE5
\c VFRCZPS          ymmreg,ymmrm256*         AMD,SSE5
\c VFRCZSD          xmmreg,xmmrm64*          AMD,SSE5
\c VFRCZSS          xmmreg,xmmrm32*          AMD,SSE5
\c VPCMOV           xmmreg,xmmreg*,xmmrm128,xmmreg AMD,SSE5
\c VPCMOV           ymmreg,ymmreg*,ymmrm256,ymmreg AMD,SSE5
\c VPCMOV           xmmreg,xmmreg*,xmmreg,xmmrm128 AMD,SSE5
\c VPCMOV           ymmreg,ymmreg*,ymmreg,ymmrm256 AMD,SSE5
\c VPCOMB           xmmreg,xmmreg*,xmmrm128,imm8 AMD,SSE5
\c VPCOMD           xmmreg,xmmreg*,xmmrm128,imm8 AMD,SSE5
\c VPCOMQ           xmmreg,xmmreg*,xmmrm128,imm8 AMD,SSE5
\c VPCOMUB          xmmreg,xmmreg*,xmmrm128,imm8 AMD,SSE5
\c VPCOMUD          xmmreg,xmmreg*,xmmrm128,imm8 AMD,SSE5
\c VPCOMUQ          xmmreg,xmmreg*,xmmrm128,imm8 AMD,SSE5
\c VPCOMUW          xmmreg,xmmreg*,xmmrm128,imm8 AMD,SSE5
\c VPCOMW           xmmreg,xmmreg*,xmmrm128,imm8 AMD,SSE5
\c VPHADDBD         xmmreg,xmmrm128*         AMD,SSE5
\c VPHADDBQ         xmmreg,xmmrm128*         AMD,SSE5
\c VPHADDBW         xmmreg,xmmrm128*         AMD,SSE5
\c VPHADDDQ         xmmreg,xmmrm128*         AMD,SSE5
\c VPHADDUBD        xmmreg,xmmrm128*         AMD,SSE5
\c VPHADDUBQ        xmmreg,xmmrm128*         AMD,SSE5
\c VPHADDUBW        xmmreg,xmmrm128*         AMD,SSE5
\c VPHADDUDQ        xmmreg,xmmrm128*         AMD,SSE5
\c VPHADDUWD        xmmreg,xmmrm128*         AMD,SSE5
\c VPHADDUWQ        xmmreg,xmmrm128*         AMD,SSE5
\c VPHADDWD         xmmreg,xmmrm128*         AMD,SSE5
\c VPHADDWQ         xmmreg,xmmrm128*         AMD,SSE5
\c VPHSUBBW         xmmreg,xmmrm128*         AMD,SSE5
\c VPHSUBDQ         xmmreg,xmmrm128*         AMD,SSE5
\c VPHSUBWD         xmmreg,xmmrm128*         AMD,SSE5
\c VPMACSDD         xmmreg,xmmreg*,xmmrm128,xmmreg AMD,SSE5
\c VPMACSDQH        xmmreg,xmmreg*,xmmrm128,xmmreg AMD,SSE5
\c VPMACSDQL        xmmreg,xmmreg*,xmmrm128,xmmreg AMD,SSE5
\c VPMACSSDD        xmmreg,xmmreg*,xmmrm128,xmmreg AMD,SSE5
\c VPMACSSDQH       xmmreg,xmmreg*,xmmrm128,xmmreg AMD,SSE5
\c VPMACSSDQL       xmmreg,xmmreg*,xmmrm128,xmmreg AMD,SSE5
\c VPMACSSWD        xmmreg,xmmreg*,xmmrm128,xmmreg AMD,SSE5
\c VPMACSSWW        xmmreg,xmmreg*,xmmrm128,xmmreg AMD,SSE5
\c VPMACSWD         xmmreg,xmmreg*,xmmrm128,xmmreg AMD,SSE5
\c VPMACSWW         xmmreg,xmmreg*,xmmrm128,xmmreg AMD,SSE5
\c VPMADCSSWD       xmmreg,xmmreg*,xmmrm128,xmmreg AMD,SSE5
\c VPMADCSWD        xmmreg,xmmreg*,xmmrm128,xmmreg AMD,SSE5
\c VPPERM           xmmreg,xmmreg*,xmmreg,xmmrm128 AMD,SSE5
\c VPPERM           xmmreg,xmmreg*,xmmrm128,xmmreg AMD,SSE5
\c VPROTB           xmmreg,xmmrm128*,xmmreg  AMD,SSE5
\c VPROTB           xmmreg,xmmreg*,xmmrm128  AMD,SSE5
\c VPROTB           xmmreg,xmmrm128*,imm8    AMD,SSE5
\c VPROTD           xmmreg,xmmrm128*,xmmreg  AMD,SSE5
\c VPROTD           xmmreg,xmmreg*,xmmrm128  AMD,SSE5
\c VPROTD           xmmreg,xmmrm128*,imm8    AMD,SSE5
\c VPROTQ           xmmreg,xmmrm128*,xmmreg  AMD,SSE5
\c VPROTQ           xmmreg,xmmreg*,xmmrm128  AMD,SSE5
\c VPROTQ           xmmreg,xmmrm128*,imm8    AMD,SSE5
\c VPROTW           xmmreg,xmmrm128*,xmmreg  AMD,SSE5
\c VPROTW           xmmreg,xmmreg*,xmmrm128  AMD,SSE5
\c VPROTW           xmmreg,xmmrm128*,imm8    AMD,SSE5
\c VPSHAB           xmmreg,xmmrm128*,xmmreg  AMD,SSE5
\c VPSHAB           xmmreg,xmmreg*,xmmrm128  AMD,SSE5
\c VPSHAD           xmmreg,xmmrm128*,xmmreg  AMD,SSE5
\c VPSHAD           xmmreg,xmmreg*,xmmrm128  AMD,SSE5
\c VPSHAQ           xmmreg,xmmrm128*,xmmreg  AMD,SSE5
\c VPSHAQ           xmmreg,xmmreg*,xmmrm128  AMD,SSE5
\c VPSHAW           xmmreg,xmmrm128*,xmmreg  AMD,SSE5
\c VPSHAW           xmmreg,xmmreg*,xmmrm128  AMD,SSE5
\c VPSHLB           xmmreg,xmmrm128*,xmmreg  AMD,SSE5
\c VPSHLB           xmmreg,xmmreg*,xmmrm128  AMD,SSE5
\c VPSHLD           xmmreg,xmmrm128*,xmmreg  AMD,SSE5
\c VPSHLD           xmmreg,xmmreg*,xmmrm128  AMD,SSE5
\c VPSHLQ           xmmreg,xmmrm128*,xmmreg  AMD,SSE5
\c VPSHLQ           xmmreg,xmmreg*,xmmrm128  AMD,SSE5
\c VPSHLW           xmmreg,xmmrm128*,xmmreg  AMD,SSE5
\c VPSHLW           xmmreg,xmmreg*,xmmrm128  AMD,SSE5

\S{} Intel AVX2 instructions

\c VMPSADBW         ymmreg,ymmreg*,ymmrm256,imm8 AVX2
\c VPABSB           ymmreg,ymmrm256          AVX2
\c VPABSW           ymmreg,ymmrm256          AVX2
\c VPABSD           ymmreg,ymmrm256          AVX2
\c VPACKSSWB        ymmreg,ymmreg*,ymmrm256  AVX2
\c VPACKSSDW        ymmreg,ymmreg*,ymmrm256  AVX2
\c VPACKUSDW        ymmreg,ymmreg*,ymmrm256  AVX2
\c VPACKUSWB        ymmreg,ymmreg*,ymmrm256  AVX2
\c VPADDB           ymmreg,ymmreg*,ymmrm256  AVX2
\c VPADDW           ymmreg,ymmreg*,ymmrm256  AVX2
\c VPADDD           ymmreg,ymmreg*,ymmrm256  AVX2
\c VPADDQ           ymmreg,ymmreg*,ymmrm256  AVX2
\c VPADDSB          ymmreg,ymmreg*,ymmrm256  AVX2
\c VPADDSW          ymmreg,ymmreg*,ymmrm256  AVX2
\c VPADDUSB         ymmreg,ymmreg*,ymmrm256  AVX2
\c VPADDUSW         ymmreg,ymmreg*,ymmrm256  AVX2
\c VPALIGNR         ymmreg,ymmreg*,ymmrm256,imm8 AVX2
\c VPAND            ymmreg,ymmreg*,ymmrm256  AVX2
\c VPANDN           ymmreg,ymmreg*,ymmrm256  AVX2
\c VPAVGB           ymmreg,ymmreg*,ymmrm256  AVX2
\c VPAVGW           ymmreg,ymmreg*,ymmrm256  AVX2
\c VPBLENDVB        ymmreg,ymmreg*,ymmrm256,ymmreg AVX2
\c VPBLENDW         ymmreg,ymmreg*,ymmrm256,imm8 AVX2
\c VPCMPEQB         ymmreg,ymmreg*,ymmrm256  AVX2
\c VPCMPEQW         ymmreg,ymmreg*,ymmrm256  AVX2
\c VPCMPEQD         ymmreg,ymmreg*,ymmrm256  AVX2
\c VPCMPEQQ         ymmreg,ymmreg*,ymmrm256  AVX2
\c VPCMPGTB         ymmreg,ymmreg*,ymmrm256  AVX2
\c VPCMPGTW         ymmreg,ymmreg*,ymmrm256  AVX2
\c VPCMPGTD         ymmreg,ymmreg*,ymmrm256  AVX2
\c VPCMPGTQ         ymmreg,ymmreg*,ymmrm256  AVX2
\c VPHADDW          ymmreg,ymmreg*,ymmrm256  AVX2
\c VPHADDD          ymmreg,ymmreg*,ymmrm256  AVX2
\c VPHADDSW         ymmreg,ymmreg*,ymmrm256  AVX2
\c VPHSUBW          ymmreg,ymmreg*,ymmrm256  AVX2
\c VPHSUBD          ymmreg,ymmreg*,ymmrm256  AVX2
\c VPHSUBSW         ymmreg,ymmreg*,ymmrm256  AVX2
\c VPMADDUBSW       ymmreg,ymmreg*,ymmrm256  AVX2
\c VPMADDWD         ymmreg,ymmreg*,ymmrm256  AVX2
\c VPMAXSB          ymmreg,ymmreg*,ymmrm256  AVX2
\c VPMAXSW          ymmreg,ymmreg*,ymmrm256  AVX2
\c VPMAXSD          ymmreg,ymmreg*,ymmrm256  AVX2
\c VPMAXUB          ymmreg,ymmreg*,ymmrm256  AVX2
\c VPMAXUW          ymmreg,ymmreg*,ymmrm256  AVX2
\c VPMAXUD          ymmreg,ymmreg*,ymmrm256  AVX2
\c VPMINSB          ymmreg,ymmreg*,ymmrm256  AVX2
\c VPMINSW          ymmreg,ymmreg*,ymmrm256  AVX2
\c VPMINSD          ymmreg,ymmreg*,ymmrm256  AVX2
\c VPMINUB          ymmreg,ymmreg*,ymmrm256  AVX2
\c VPMINUW          ymmreg,ymmreg*,ymmrm256  AVX2
\c VPMINUD          ymmreg,ymmreg*,ymmrm256  AVX2
\c VPMOVMSKB        reg32,ymmreg             AVX2
\c VPMOVMSKB        reg64,ymmreg             AVX2
\c VPMOVSXBW        ymmreg,xmmrm128          AVX2
\c VPMOVSXBD        ymmreg,mem64             AVX2
\c VPMOVSXBD        ymmreg,xmmreg            AVX2
\c VPMOVSXBQ        ymmreg,mem32             AVX2
\c VPMOVSXBQ        ymmreg,xmmreg            AVX2
\c VPMOVSXWD        ymmreg,xmmrm128          AVX2
\c VPMOVSXWQ        ymmreg,mem64             AVX2
\c VPMOVSXWQ        ymmreg,xmmreg            AVX2
\c VPMOVSXDQ        ymmreg,xmmrm128          AVX2
\c VPMOVZXBW        ymmreg,xmmrm128          AVX2
\c VPMOVZXBD        ymmreg,mem64             AVX2
\c VPMOVZXBD        ymmreg,xmmreg            AVX2
\c VPMOVZXBQ        ymmreg,mem32             AVX2
\c VPMOVZXBQ        ymmreg,xmmreg            AVX2
\c VPMOVZXWD        ymmreg,xmmrm128          AVX2
\c VPMOVZXWQ        ymmreg,mem64             AVX2
\c VPMOVZXWQ        ymmreg,xmmreg            AVX2
\c VPMOVZXDQ        ymmreg,xmmrm128          AVX2
\c VPMULDQ          ymmreg,ymmreg*,ymmrm256  AVX2
\c VPMULHRSW        ymmreg,ymmreg*,ymmrm256  AVX2
\c VPMULHUW         ymmreg,ymmreg*,ymmrm256  AVX2
\c VPMULHW          ymmreg,ymmreg*,ymmrm256  AVX2
\c VPMULLW          ymmreg,ymmreg*,ymmrm256  AVX2
\c VPMULLD          ymmreg,ymmreg*,ymmrm256  AVX2
\c VPMULUDQ         ymmreg,ymmreg*,ymmrm256  AVX2
\c VPOR             ymmreg,ymmreg*,ymmrm256  AVX2
\c VPSADBW          ymmreg,ymmreg*,ymmrm256  AVX2
\c VPSHUFB          ymmreg,ymmreg*,ymmrm256  AVX2
\c VPSHUFD          ymmreg,ymmrm256,imm8     AVX2
\c VPSHUFHW         ymmreg,ymmrm256,imm8     AVX2
\c VPSHUFLW         ymmreg,ymmrm256,imm8     AVX2
\c VPSIGNB          ymmreg,ymmreg*,ymmrm256  AVX2
\c VPSIGNW          ymmreg,ymmreg*,ymmrm256  AVX2
\c VPSIGND          ymmreg,ymmreg*,ymmrm256  AVX2
\c VPSLLDQ          ymmreg,ymmreg*,imm8      AVX2
\c VPSLLW           ymmreg,ymmreg*,xmmrm128  AVX2
\c VPSLLW           ymmreg,ymmreg*,imm8      AVX2
\c VPSLLD           ymmreg,ymmreg*,xmmrm128  AVX2
\c VPSLLD           ymmreg,ymmreg*,imm8      AVX2
\c VPSLLQ           ymmreg,ymmreg*,xmmrm128  AVX2
\c VPSLLQ           ymmreg,ymmreg*,imm8      AVX2
\c VPSRAW           ymmreg,ymmreg*,xmmrm128  AVX2
\c VPSRAW           ymmreg,ymmreg*,imm8      AVX2
\c VPSRAD           ymmreg,ymmreg*,xmmrm128  AVX2
\c VPSRAD           ymmreg,ymmreg*,imm8      AVX2
\c VPSRLDQ          ymmreg,ymmreg*,imm8      AVX2
\c VPSRLW           ymmreg,ymmreg*,xmmrm128  AVX2
\c VPSRLW           ymmreg,ymmreg*,imm8      AVX2
\c VPSRLD           ymmreg,ymmreg*,xmmrm128  AVX2
\c VPSRLD           ymmreg,ymmreg*,imm8      AVX2
\c VPSRLQ           ymmreg,ymmreg*,xmmrm128  AVX2
\c VPSRLQ           ymmreg,ymmreg*,imm8      AVX2
\c VPSUBB           ymmreg,ymmreg*,ymmrm256  AVX2
\c VPSUBW           ymmreg,ymmreg*,ymmrm256  AVX2
\c VPSUBD           ymmreg,ymmreg*,ymmrm256  AVX2
\c VPSUBQ           ymmreg,ymmreg*,ymmrm256  AVX2
\c VPSUBSB          ymmreg,ymmreg*,ymmrm256  AVX2
\c VPSUBSW          ymmreg,ymmreg*,ymmrm256  AVX2
\c VPSUBUSB         ymmreg,ymmreg*,ymmrm256  AVX2
\c VPSUBUSW         ymmreg,ymmreg*,ymmrm256  AVX2
\c VPUNPCKHBW       ymmreg,ymmreg*,ymmrm256  AVX2
\c VPUNPCKHWD       ymmreg,ymmreg*,ymmrm256  AVX2
\c VPUNPCKHDQ       ymmreg,ymmreg*,ymmrm256  AVX2
\c VPUNPCKHQDQ      ymmreg,ymmreg*,ymmrm256  AVX2
\c VPUNPCKLBW       ymmreg,ymmreg*,ymmrm256  AVX2
\c VPUNPCKLWD       ymmreg,ymmreg*,ymmrm256  AVX2
\c VPUNPCKLDQ       ymmreg,ymmreg*,ymmrm256  AVX2
\c VPUNPCKLQDQ      ymmreg,ymmreg*,ymmrm256  AVX2
\c VPXOR            ymmreg,ymmreg*,ymmrm256  AVX2
\c VMOVNTDQA        ymmreg,mem256            AVX2
\c VBROADCASTSS     xmmreg,xmmreg            AVX2
\c VBROADCASTSS     ymmreg,xmmreg            AVX2
\c VBROADCASTSD     ymmreg,xmmreg            AVX2
\c VBROADCASTI128   ymmreg,mem128            AVX2
\c VPBLENDD         xmmreg,xmmreg*,xmmrm128,imm8 AVX2
\c VPBLENDD         ymmreg,ymmreg*,ymmrm256,imm8 AVX2
\c VPBROADCASTB     xmmreg,mem8              AVX2
\c VPBROADCASTB     xmmreg,xmmreg            AVX2
\c VPBROADCASTB     ymmreg,mem8              AVX2
\c VPBROADCASTB     ymmreg,xmmreg            AVX2
\c VPBROADCASTW     xmmreg,mem16             AVX2
\c VPBROADCASTW     xmmreg,xmmreg            AVX2
\c VPBROADCASTW     ymmreg,mem16             AVX2
\c VPBROADCASTW     ymmreg,xmmreg            AVX2
\c VPBROADCASTD     xmmreg,mem32             AVX2
\c VPBROADCASTD     xmmreg,xmmreg            AVX2
\c VPBROADCASTD     ymmreg,mem32             AVX2
\c VPBROADCASTD     ymmreg,xmmreg            AVX2
\c VPBROADCASTQ     xmmreg,mem64             AVX2
\c VPBROADCASTQ     xmmreg,xmmreg            AVX2
\c VPBROADCASTQ     ymmreg,mem64             AVX2
\c VPBROADCASTQ     ymmreg,xmmreg            AVX2
\c VPERMD           ymmreg,ymmreg*,ymmrm256  AVX2
\c VPERMPD          ymmreg,ymmrm256,imm8     AVX2
\c VPERMPS          ymmreg,ymmreg*,ymmrm256  AVX2
\c VPERMQ           ymmreg,ymmrm256,imm8     AVX2
\c VPERM2I128       ymmreg,ymmreg*,ymmrm256,imm8 AVX2
\c VEXTRACTI128     xmmrm128,ymmreg,imm8     AVX2
\c VINSERTI128      ymmreg,ymmreg*,xmmrm128,imm8 AVX2
\c VPMASKMOVD       xmmreg,xmmreg*,mem128    AVX2
\c VPMASKMOVD       ymmreg,ymmreg*,mem256    AVX2
\c VPMASKMOVQ       xmmreg,xmmreg*,mem128    AVX2
\c VPMASKMOVQ       ymmreg,ymmreg*,mem256    AVX2
\c VPMASKMOVD       mem128,xmmreg*,xmmreg    AVX2
\c VPMASKMOVD       mem256,ymmreg*,ymmreg    AVX2
\c VPMASKMOVQ       mem128,xmmreg*,xmmreg    AVX2
\c VPMASKMOVQ       mem256,ymmreg*,ymmreg    AVX2
\c VPSLLVD          xmmreg,xmmreg*,xmmrm128  AVX2
\c VPSLLVQ          xmmreg,xmmreg*,xmmrm128  AVX2
\c VPSLLVD          ymmreg,ymmreg*,ymmrm256  AVX2
\c VPSLLVQ          ymmreg,ymmreg*,ymmrm256  AVX2
\c VPSRAVD          xmmreg,xmmreg*,xmmrm128  AVX2
\c VPSRAVD          ymmreg,ymmreg*,ymmrm256  AVX2
\c VPSRLVD          xmmreg,xmmreg*,xmmrm128  AVX2
\c VPSRLVQ          xmmreg,xmmreg*,xmmrm128  AVX2
\c VPSRLVD          ymmreg,ymmreg*,ymmrm256  AVX2
\c VPSRLVQ          ymmreg,ymmreg*,ymmrm256  AVX2
\c VGATHERDPD       xmmreg,xmem64,xmmreg     AVX2
\c VGATHERQPD       xmmreg,xmem64,xmmreg     AVX2
\c VGATHERDPD       ymmreg,xmem64,ymmreg     AVX2
\c VGATHERQPD       ymmreg,ymem64,ymmreg     AVX2
\c VGATHERDPS       xmmreg,xmem32,xmmreg     AVX2
\c VGATHERQPS       xmmreg,xmem32,xmmreg     AVX2
\c VGATHERDPS       ymmreg,ymem32,ymmreg     AVX2
\c VGATHERQPS       xmmreg,ymem32,xmmreg     AVX2
\c VPGATHERDD       xmmreg,xmem32,xmmreg     AVX2
\c VPGATHERQD       xmmreg,xmem32,xmmreg     AVX2
\c VPGATHERDD       ymmreg,ymem32,ymmreg     AVX2
\c VPGATHERQD       xmmreg,ymem32,xmmreg     AVX2
\c VPGATHERDQ       xmmreg,xmem64,xmmreg     AVX2
\c VPGATHERQQ       xmmreg,xmem64,xmmreg     AVX2
\c VPGATHERDQ       ymmreg,xmem64,ymmreg     AVX2
\c VPGATHERQQ       ymmreg,ymem64,ymmreg     AVX2

\S{} Intel Transactional Synchronization Extensions (TSX)

\c XABORT           imm                      RTM
\c XABORT           imm8                     RTM
\c XBEGIN           imm                      RTM
\c XBEGIN           imm|near                 RTM,ND
\c XBEGIN           imm16                    RTM,NOLONG
\c XBEGIN           imm16|near               RTM,NOLONG,ND
\c XBEGIN           imm32                    RTM,NOLONG
\c XBEGIN           imm32|near               RTM,NOLONG,ND
\c XBEGIN           imm64                    RTM,LONG
\c XBEGIN           imm64|near               RTM,LONG,ND
\c XEND                                      RTM
\c XTEST                                     HLE,RTM

\S{} Intel BMI1 and BMI2 instructions, AMD TBM instructions

\c ANDN             reg32,reg32,rm32         BMI1
\c ANDN             reg64,reg64,rm64         LONG,BMI1
\c BEXTR            reg32,rm32,reg32         BMI1
\c BEXTR            reg64,rm64,reg64         LONG,BMI1
\c BEXTR            reg32,rm32,imm32         TBM
\c BEXTR            reg64,rm64,imm32         LONG,TBM
\c BLCI             reg32,rm32               TBM
\c BLCI             reg64,rm64               LONG,TBM
\c BLCIC            reg32,rm32               TBM
\c BLCIC            reg64,rm64               LONG,TBM
\c BLSI             reg32,rm32               BMI1
\c BLSI             reg64,rm64               LONG,BMI1
\c BLSIC            reg32,rm32               TBM
\c BLSIC            reg64,rm64               LONG,TBM
\c BLCFILL          reg32,rm32               TBM
\c BLCFILL          reg64,rm64               LONG,TBM
\c BLSFILL          reg32,rm32               TBM
\c BLSFILL          reg64,rm64               LONG,TBM
\c BLCMSK           reg32,rm32               TBM
\c BLCMSK           reg64,rm64               LONG,TBM
\c BLSMSK           reg32,rm32               BMI1
\c BLSMSK           reg64,rm64               LONG,BMI1
\c BLSR             reg32,rm32               BMI1
\c BLSR             reg64,rm64               LONG,BMI1
\c BLCS             reg32,rm32               TBM
\c BLCS             reg64,rm64               LONG,TBM
\c BZHI             reg32,rm32,reg32         BMI2
\c BZHI             reg64,rm64,reg64         LONG,BMI2
\c MULX             reg32,reg32,rm32         BMI2
\c MULX             reg64,reg64,rm64         LONG,BMI2
\c PDEP             reg32,reg32,rm32         BMI2
\c PDEP             reg64,reg64,rm64         LONG,BMI2
\c PEXT             reg32,reg32,rm32         BMI2
\c PEXT             reg64,reg64,rm64         LONG,BMI2
\c RORX             reg32,rm32,imm8          BMI2
\c RORX             reg64,rm64,imm8          LONG,BMI2
\c SARX             reg32,rm32,reg32         BMI2
\c SARX             reg64,rm64,reg64         LONG,BMI2
\c SHLX             reg32,rm32,reg32         BMI2
\c SHLX             reg64,rm64,reg64         LONG,BMI2
\c SHRX             reg32,rm32,reg32         BMI2
\c SHRX             reg64,rm64,reg64         LONG,BMI2
\c TZCNT            reg16,rm16               BMI1
\c TZCNT            reg32,rm32               BMI1
\c TZCNT            reg64,rm64               LONG,BMI1
\c TZMSK            reg32,rm32               TBM
\c TZMSK            reg64,rm64               LONG,TBM
\c T1MSKC           reg32,rm32               TBM
\c T1MSKC           reg64,rm64               LONG,TBM
\c PREFETCHWT1      mem8                     PREFETCHWT1

\S{} Intel Memory Protection Extensions (MPX)

\c BNDMK            bndreg,mem               MPX,MIB
\c BNDCL            bndreg,mem               MPX
\c BNDCL            bndreg,reg32             MPX,NOLONG
\c BNDCL            bndreg,reg64             MPX,LONG
\c BNDCU            bndreg,mem               MPX
\c BNDCU            bndreg,reg32             MPX,NOLONG
\c BNDCU            bndreg,reg64             MPX,LONG
\c BNDCN            bndreg,mem               MPX
\c BNDCN            bndreg,reg32             MPX,NOLONG
\c BNDCN            bndreg,reg64             MPX,LONG
\c BNDMOV           bndreg,bndreg            MPX
\c BNDMOV           bndreg,mem               MPX
\c BNDMOV           bndreg,bndreg            MPX
\c BNDMOV           mem,bndreg               MPX
\c BNDLDX           bndreg,mem               MPX,MIB
\c BNDLDX           bndreg,mem,reg32         MPX,MIB,NOLONG
\c BNDLDX           bndreg,mem,reg64         MPX,MIB,LONG
\c BNDSTX           mem,bndreg               MPX,MIB
\c BNDSTX           mem,reg32,bndreg         MPX,MIB,NOLONG
\c BNDSTX           mem,reg64,bndreg         MPX,MIB,LONG
\c BNDSTX           mem,bndreg,reg32         MPX,MIB,NOLONG
\c BNDSTX           mem,bndreg,reg64         MPX,MIB,LONG

\S{} Intel SHA acceleration instructions

\c SHA1MSG1         xmmreg,xmmrm128          SHA
\c SHA1MSG2         xmmreg,xmmrm128          SHA
\c SHA1NEXTE        xmmreg,xmmrm128          SHA
\c SHA1RNDS4        xmmreg,xmmrm128,imm8     SHA
\c SHA256MSG1       xmmreg,xmmrm128          SHA
\c SHA256MSG2       xmmreg,xmmrm128          SHA
\c SHA256RNDS2      xmmreg,xmmrm128,xmm0     SHA
\c SHA256RNDS2      xmmreg,xmmrm128          SHA

\S{} AVX-512 mask register instructions

\c KADDB            kreg,kreg,kreg           
\c KADDD            kreg,kreg,kreg           
\c KADDQ            kreg,kreg,kreg           
\c KADDW            kreg,kreg,kreg           
\c KANDB            kreg,kreg,kreg           
\c KANDD            kreg,kreg,kreg           
\c KANDNB           kreg,kreg,kreg           
\c KANDND           kreg,kreg,kreg           
\c KANDNQ           kreg,kreg,kreg           
\c KANDNW           kreg,kreg,kreg           
\c KANDQ            kreg,kreg,kreg           
\c KANDW            kreg,kreg,kreg           
\c KMOVB            kreg,krm8                
\c KMOVB            mem8,kreg                
\c KMOVB            kreg,reg32               
\c KMOVB            kreg,reg8                ND
\c KMOVB            reg32,kreg               
\c KMOVD            kreg,krm32               
\c KMOVD            mem32,kreg               
\c KMOVD            kreg,reg32               
\c KMOVD            reg32,kreg               
\c KMOVQ            kreg,krm64               
\c KMOVQ            mem64,kreg               
\c KMOVQ            kreg,reg64               
\c KMOVQ            reg64,kreg               
\c KMOVW            kreg,krm16               
\c KMOVW            mem16,kreg               
\c KMOVW            kreg,reg32               
\c KMOVW            kreg,reg16               ND
\c KMOVW            reg32,kreg               
\c KNOTB            kreg,kreg                
\c KNOTD            kreg,kreg                
\c KNOTQ            kreg,kreg                
\c KNOTW            kreg,kreg                
\c KORB             kreg,kreg,kreg           
\c KORD             kreg,kreg,kreg           
\c KORQ             kreg,kreg,kreg           
\c KORW             kreg,kreg,kreg           
\c KORTESTB         kreg,kreg                
\c KORTESTD         kreg,kreg                
\c KORTESTQ         kreg,kreg                
\c KORTESTW         kreg,kreg                
\c KSHIFTLB         kreg,kreg,imm8           
\c KSHIFTLD         kreg,kreg,imm8           
\c KSHIFTLQ         kreg,kreg,imm8           
\c KSHIFTLW         kreg,kreg,imm8           
\c KSHIFTRB         kreg,kreg,imm8           
\c KSHIFTRD         kreg,kreg,imm8           
\c KSHIFTRQ         kreg,kreg,imm8           
\c KSHIFTRW         kreg,kreg,imm8           
\c KTESTB           kreg,kreg                
\c KTESTD           kreg,kreg                
\c KTESTQ           kreg,kreg                
\c KTESTW           kreg,kreg                
\c KUNPCKBW         kreg,kreg,kreg           
\c KUNPCKDQ         kreg,kreg,kreg           
\c KUNPCKWD         kreg,kreg,kreg           
\c KXNORB           kreg,kreg,kreg           
\c KXNORD           kreg,kreg,kreg           
\c KXNORQ           kreg,kreg,kreg           
\c KXNORW           kreg,kreg,kreg           
\c KXORB            kreg,kreg,kreg           
\c KXORD            kreg,kreg,kreg           
\c KXORQ            kreg,kreg,kreg           
\c KXORW            kreg,kreg,kreg           

\S{} AVX-512 mask register instructions (aliases requiring explicit size support)

\c KADD             kreg8,kreg,kreg          ND
\c KADD             kreg32,kreg,kreg         ND
\c KADD             kreg64,kreg,kreg         ND
\c KADD             kreg16,kreg,kreg         ND
\c KAND             kreg8,kreg,kreg          ND
\c KAND             kreg32,kreg,kreg         ND
\c KANDN            kreg64,kreg,kreg         ND
\c KANDN            kreg16,kreg,kreg         ND
\c KANDN            kreg8,kreg,kreg          ND
\c KANDN            kreg32,kreg,kreg         ND
\c KAND             kreg64,kreg,kreg         ND
\c KAND             kreg16,kreg,kreg         ND
\c KMOV             kreg8,krm8               ND
\c KMOV             mem8,kreg8               ND
\c KMOV             kreg8,reg32              ND,SX
\c KMOV             kreg8,reg8               ND
\c KMOV             reg32,kreg8              ND,SX
\c KMOV             kreg32,krm32             ND
\c KMOV             mem32,kreg32             ND
\c KMOV             kreg32,reg32             ND
\c KMOV             reg32,kreg32             ND
\c KMOV             kreg64,krm64             ND
\c KMOV             mem64,kreg64             ND
\c KMOV             kreg64,reg64             ND
\c KMOV             reg64,kreg64             ND
\c KMOV             kreg16,krm16             ND
\c KMOV             mem16,kreg16             ND
\c KMOV             kreg16,reg32             ND,SX
\c KMOV             reg32,kreg16             ND,SX
\c KMOV             kreg16,reg32             ND,SX
\c KMOV             kreg16,reg16             ND
\c KNOT             kreg8,kreg8              ND
\c KNOT             kreg32,kreg32            ND
\c KNOT             kreg64,kreg64            ND
\c KNOT             kreg16,kreg16            ND
\c KOR              kreg8,kreg,kreg          ND
\c KOR              kreg32,kreg,kreg         ND
\c KOR              kreg64,kreg,kreg         ND
\c KOR              kreg16,kreg,kreg         ND
\c KORTEST          kreg8,kreg               ND
\c KORTEST          kreg32,kreg              ND
\c KORTEST          kreg64,kreg              ND
\c KORTEST          kreg16,kreg              ND
\c KSHIFTL          kreg8,kreg,imm8          ND
\c KSHIFTL          kreg32,kreg,imm8         ND
\c KSHIFTL          kreg64,kreg,imm8         ND
\c KSHIFTL          kreg16,kreg,imm8         ND
\c KSHIFTR          kreg8,kreg,imm8          ND
\c KSHIFTR          kreg32,kreg,imm8         ND
\c KSHIFTR          kreg64,kreg,imm8         ND
\c KSHIFTR          kreg16,kreg,imm8         ND
\c KTEST            kreg8,kreg               ND
\c KTEST            kreg32,kreg              ND
\c KTEST            kreg64,kreg              ND
\c KTEST            kreg16,kreg              ND
\c KUNPCK           kreg16,kreg8,kreg8       ND
\c KUNPCK           kreg64,kreg32,kreg32     ND
\c KUNPCK           kreg32,kreg16,kreg16     ND
\c KXNOR            kreg8,kreg,kreg          ND
\c KXNOR            kreg32,kreg,kreg         ND
\c KXNOR            kreg64,kreg,kreg         ND
\c KXNOR            kreg16,kreg,kreg         ND
\c KXOR             kreg8,kreg,kreg          ND
\c KXOR             kreg32,kreg,kreg         ND
\c KXOR             kreg64,kreg,kreg         ND
\c KXOR             kreg16,kreg,kreg         ND

\S{} AVX-512 instructions

\c VADDPD           xmmreg|mask|z,xmmreg*,xmmrm128|b64 AVX512VL
\c VADDPD           ymmreg|mask|z,ymmreg*,ymmrm256|b64 AVX512VL
\c VADDPD           zmmreg|mask|z,zmmreg*,zmmrm512|b64|er AVX512
\c VADDPS           xmmreg|mask|z,xmmreg*,xmmrm128|b32 AVX512VL
\c VADDPS           ymmreg|mask|z,ymmreg*,ymmrm256|b32 AVX512VL
\c VADDPS           zmmreg|mask|z,zmmreg*,zmmrm512|b32|er AVX512
\c VADDSD           xmmreg|mask|z,xmmreg*,xmmrm64|er AVX512
\c VADDSS           xmmreg|mask|z,xmmreg*,xmmrm32|er AVX512
\c VALIGND          xmmreg|mask|z,xmmreg*,xmmrm128|b32,imm8 AVX512VL
\c VALIGND          ymmreg|mask|z,ymmreg*,ymmrm256|b32,imm8 AVX512VL
\c VALIGND          zmmreg|mask|z,zmmreg*,zmmrm512|b32,imm8 AVX512
\c VALIGNQ          xmmreg|mask|z,xmmreg*,xmmrm128|b64,imm8 AVX512VL
\c VALIGNQ          ymmreg|mask|z,ymmreg*,ymmrm256|b64,imm8 AVX512VL
\c VALIGNQ          zmmreg|mask|z,zmmreg*,zmmrm512|b64,imm8 AVX512
\c VANDNPD          xmmreg|mask|z,xmmreg*,xmmrm128|b64 AVX512VL/DQ
\c VANDNPD          ymmreg|mask|z,ymmreg*,ymmrm256|b64 AVX512VL/DQ
\c VANDNPD          zmmreg|mask|z,zmmreg*,zmmrm512|b64 AVX512DQ
\c VANDNPS          xmmreg|mask|z,xmmreg*,xmmrm128|b32 AVX512VL/DQ
\c VANDNPS          ymmreg|mask|z,ymmreg*,ymmrm256|b32 AVX512VL/DQ
\c VANDNPS          zmmreg|mask|z,zmmreg*,zmmrm512|b32 AVX512DQ
\c VANDPD           xmmreg|mask|z,xmmreg*,xmmrm128|b64 AVX512VL/DQ
\c VANDPD           ymmreg|mask|z,ymmreg*,ymmrm256|b64 AVX512VL/DQ
\c VANDPD           zmmreg|mask|z,zmmreg*,zmmrm512|b64 AVX512DQ
\c VANDPS           xmmreg|mask|z,xmmreg*,xmmrm128|b32 AVX512VL/DQ
\c VANDPS           ymmreg|mask|z,ymmreg*,ymmrm256|b32 AVX512VL/DQ
\c VANDPS           zmmreg|mask|z,zmmreg*,zmmrm512|b32 AVX512DQ
\c VBLENDMPD        xmmreg|mask|z,xmmreg,xmmrm128|b64 AVX512VL
\c VBLENDMPD        ymmreg|mask|z,ymmreg,ymmrm256|b64 AVX512VL
\c VBLENDMPD        zmmreg|mask|z,zmmreg,zmmrm512|b64 AVX512
\c VBLENDMPS        xmmreg|mask|z,xmmreg,xmmrm128|b32 AVX512VL
\c VBLENDMPS        ymmreg|mask|z,ymmreg,ymmrm256|b32 AVX512VL
\c VBLENDMPS        zmmreg|mask|z,zmmreg,zmmrm512|b32 AVX512
\c VBROADCASTF32X2  ymmreg|mask|z,xmmrm64    AVX512VL/DQ
\c VBROADCASTF32X2  zmmreg|mask|z,xmmrm64    AVX512DQ
\c VBROADCASTF32X4  ymmreg|mask|z,mem128     AVX512VL
\c VBROADCASTF32X4  zmmreg|mask|z,mem128     AVX512
\c VBROADCASTF32X8  zmmreg|mask|z,mem256     AVX512DQ
\c VBROADCASTF64X2  ymmreg|mask|z,mem128     AVX512VL/DQ
\c VBROADCASTF64X2  zmmreg|mask|z,mem128     AVX512DQ
\c VBROADCASTF64X4  zmmreg|mask|z,mem256     AVX512
\c VBROADCASTI32X2  xmmreg|mask|z,xmmrm64    AVX512VL/DQ
\c VBROADCASTI32X2  ymmreg|mask|z,xmmrm64    AVX512VL/DQ
\c VBROADCASTI32X2  zmmreg|mask|z,xmmrm64    AVX512DQ
\c VBROADCASTI32X4  ymmreg|mask|z,mem128     AVX512VL
\c VBROADCASTI32X4  zmmreg|mask|z,mem128     AVX512
\c VBROADCASTI32X8  zmmreg|mask|z,mem256     AVX512DQ
\c VBROADCASTI64X2  ymmreg|mask|z,mem128     AVX512VL/DQ
\c VBROADCASTI64X2  zmmreg|mask|z,mem128     AVX512DQ
\c VBROADCASTI64X4  zmmreg|mask|z,mem256     AVX512
\c VBROADCASTSD     ymmreg|mask|z,mem64      AVX512VL
\c VBROADCASTSD     zmmreg|mask|z,mem64      AVX512
\c VBROADCASTSD     ymmreg|mask|z,xmmreg     AVX512VL
\c VBROADCASTSD     zmmreg|mask|z,xmmreg     AVX512
\c VBROADCASTSS     xmmreg|mask|z,mem32      AVX512VL
\c VBROADCASTSS     ymmreg|mask|z,mem32      AVX512VL
\c VBROADCASTSS     zmmreg|mask|z,mem32      AVX512
\c VBROADCASTSS     xmmreg|mask|z,xmmreg     AVX512VL
\c VBROADCASTSS     ymmreg|mask|z,xmmreg     AVX512VL
\c VBROADCASTSS     zmmreg|mask|z,xmmreg     AVX512
\c VCMPEQPD         kreg|mask,xmmreg,xmmrm128|b64 AVX512VL
\c VCMPEQPD         kreg|mask,ymmreg,ymmrm256|b64 AVX512VL
\c VCMPEQPD         kreg|mask,zmmreg,zmmrm512|b64|sae AVX512
\c VCMPEQPS         kreg|mask,xmmreg,xmmrm128|b32 AVX512VL
\c VCMPEQPS         kreg|mask,ymmreg,ymmrm256|b32 AVX512VL
\c VCMPEQPS         kreg|mask,zmmreg,zmmrm512|b32|sae AVX512
\c VCMPEQSD         kreg|mask,xmmreg,xmmrm64|sae AVX512
\c VCMPEQSS         kreg|mask,xmmreg,xmmrm32|sae AVX512
\c VCMPEQ_OQPD      kreg|mask,xmmreg,xmmrm128|b64 AVX512VL
\c VCMPEQ_OQPD      kreg|mask,ymmreg,ymmrm256|b64 AVX512VL
\c VCMPEQ_OQPD      kreg|mask,zmmreg,zmmrm512|b64|sae AVX512
\c VCMPEQ_OQPS      kreg|mask,xmmreg,xmmrm128|b32 AVX512VL
\c VCMPEQ_OQPS      kreg|mask,ymmreg,ymmrm256|b32 AVX512VL
\c VCMPEQ_OQPS      kreg|mask,zmmreg,zmmrm512|b32|sae AVX512
\c VCMPEQ_OQSD      kreg|mask,xmmreg,xmmrm64|sae AVX512
\c VCMPEQ_OQSS      kreg|mask,xmmreg,xmmrm32|sae AVX512
\c VCMPLTPD         kreg|mask,xmmreg,xmmrm128|b64 AVX512VL
\c VCMPLTPD         kreg|mask,ymmreg,ymmrm256|b64 AVX512VL
\c VCMPLTPD         kreg|mask,zmmreg,zmmrm512|b64|sae AVX512
\c VCMPLTPS         kreg|mask,xmmreg,xmmrm128|b32 AVX512VL
\c VCMPLTPS         kreg|mask,ymmreg,ymmrm256|b32 AVX512VL
\c VCMPLTPS         kreg|mask,zmmreg,zmmrm512|b32|sae AVX512
\c VCMPLTSD         kreg|mask,xmmreg,xmmrm64|sae AVX512
\c VCMPLTSS         kreg|mask,xmmreg,xmmrm32|sae AVX512
\c VCMPLT_OSPD      kreg|mask,xmmreg,xmmrm128|b64 AVX512VL
\c VCMPLT_OSPD      kreg|mask,ymmreg,ymmrm256|b64 AVX512VL
\c VCMPLT_OSPD      kreg|mask,zmmreg,zmmrm512|b64|sae AVX512
\c VCMPLT_OSPS      kreg|mask,xmmreg,xmmrm128|b32 AVX512VL
\c VCMPLT_OSPS      kreg|mask,ymmreg,ymmrm256|b32 AVX512VL
\c VCMPLT_OSPS      kreg|mask,zmmreg,zmmrm512|b32|sae AVX512
\c VCMPLT_OSSD      kreg|mask,xmmreg,xmmrm64|sae AVX512
\c VCMPLT_OSSS      kreg|mask,xmmreg,xmmrm32|sae AVX512
\c VCMPLEPD         kreg|mask,xmmreg,xmmrm128|b64 AVX512VL
\c VCMPLEPD         kreg|mask,ymmreg,ymmrm256|b64 AVX512VL
\c VCMPLEPD         kreg|mask,zmmreg,zmmrm512|b64|sae AVX512
\c VCMPLEPS         kreg|mask,xmmreg,xmmrm128|b32 AVX512VL
\c VCMPLEPS         kreg|mask,ymmreg,ymmrm256|b32 AVX512VL
\c VCMPLEPS         kreg|mask,zmmreg,zmmrm512|b32|sae AVX512
\c VCMPLESD         kreg|mask,xmmreg,xmmrm64|sae AVX512
\c VCMPLESS         kreg|mask,xmmreg,xmmrm32|sae AVX512
\c VCMPLE_OSPD      kreg|mask,xmmreg,xmmrm128|b64 AVX512VL
\c VCMPLE_OSPD      kreg|mask,ymmreg,ymmrm256|b64 AVX512VL
\c VCMPLE_OSPD      kreg|mask,zmmreg,zmmrm512|b64|sae AVX512
\c VCMPLE_OSPS      kreg|mask,xmmreg,xmmrm128|b32 AVX512VL
\c VCMPLE_OSPS      kreg|mask,ymmreg,ymmrm256|b32 AVX512VL
\c VCMPLE_OSPS      kreg|mask,zmmreg,zmmrm512|b32|sae AVX512
\c VCMPLE_OSSD      kreg|mask,xmmreg,xmmrm64|sae AVX512
\c VCMPLE_OSSS      kreg|mask,xmmreg,xmmrm32|sae AVX512
\c VCMPUNORDPD      kreg|mask,xmmreg,xmmrm128|b64 AVX512VL
\c VCMPUNORDPD      kreg|mask,ymmreg,ymmrm256|b64 AVX512VL
\c VCMPUNORDPD      kreg|mask,zmmreg,zmmrm512|b64|sae AVX512
\c VCMPUNORDPS      kreg|mask,xmmreg,xmmrm128|b32 AVX512VL
\c VCMPUNORDPS      kreg|mask,ymmreg,ymmrm256|b32 AVX512VL
\c VCMPUNORDPS      kreg|mask,zmmreg,zmmrm512|b32|sae AVX512
\c VCMPUNORDSD      kreg|mask,xmmreg,xmmrm64|sae AVX512
\c VCMPUNORDSS      kreg|mask,xmmreg,xmmrm32|sae AVX512
\c VCMPUNORD_QPD    kreg|mask,xmmreg,xmmrm128|b64 AVX512VL
\c VCMPUNORD_QPD    kreg|mask,ymmreg,ymmrm256|b64 AVX512VL
\c VCMPUNORD_QPD    kreg|mask,zmmreg,zmmrm512|b64|sae AVX512
\c VCMPUNORD_QPS    kreg|mask,xmmreg,xmmrm128|b32 AVX512VL
\c VCMPUNORD_QPS    kreg|mask,ymmreg,ymmrm256|b32 AVX512VL
\c VCMPUNORD_QPS    kreg|mask,zmmreg,zmmrm512|b32|sae AVX512
\c VCMPUNORD_QSD    kreg|mask,xmmreg,xmmrm64|sae AVX512
\c VCMPUNORD_QSS    kreg|mask,xmmreg,xmmrm32|sae AVX512
\c VCMPNEQPD        kreg|mask,xmmreg,xmmrm128|b64 AVX512VL
\c VCMPNEQPD        kreg|mask,ymmreg,ymmrm256|b64 AVX512VL
\c VCMPNEQPD        kreg|mask,zmmreg,zmmrm512|b64|sae AVX512
\c VCMPNEQPS        kreg|mask,xmmreg,xmmrm128|b32 AVX512VL
\c VCMPNEQPS        kreg|mask,ymmreg,ymmrm256|b32 AVX512VL
\c VCMPNEQPS        kreg|mask,zmmreg,zmmrm512|b32|sae AVX512
\c VCMPNEQSD        kreg|mask,xmmreg,xmmrm64|sae AVX512
\c VCMPNEQSS        kreg|mask,xmmreg,xmmrm32|sae AVX512
\c VCMPNEQ_UQPD     kreg|mask,xmmreg,xmmrm128|b64 AVX512VL
\c VCMPNEQ_UQPD     kreg|mask,ymmreg,ymmrm256|b64 AVX512VL
\c VCMPNEQ_UQPD     kreg|mask,zmmreg,zmmrm512|b64|sae AVX512
\c VCMPNEQ_UQPS     kreg|mask,xmmreg,xmmrm128|b32 AVX512VL
\c VCMPNEQ_UQPS     kreg|mask,ymmreg,ymmrm256|b32 AVX512VL
\c VCMPNEQ_UQPS     kreg|mask,zmmreg,zmmrm512|b32|sae AVX512
\c VCMPNEQ_UQSD     kreg|mask,xmmreg,xmmrm64|sae AVX512
\c VCMPNEQ_UQSS     kreg|mask,xmmreg,xmmrm32|sae AVX512
\c VCMPNLTPD        kreg|mask,xmmreg,xmmrm128|b64 AVX512VL
\c VCMPNLTPD        kreg|mask,ymmreg,ymmrm256|b64 AVX512VL
\c VCMPNLTPD        kreg|mask,zmmreg,zmmrm512|b64|sae AVX512
\c VCMPNLTPS        kreg|mask,xmmreg,xmmrm128|b32 AVX512VL
\c VCMPNLTPS        kreg|mask,ymmreg,ymmrm256|b32 AVX512VL
\c VCMPNLTPS        kreg|mask,zmmreg,zmmrm512|b32|sae AVX512
\c VCMPNLTSD        kreg|mask,xmmreg,xmmrm64|sae AVX512
\c VCMPNLTSS        kreg|mask,xmmreg,xmmrm32|sae AVX512
\c VCMPNLT_USPD     kreg|mask,xmmreg,xmmrm128|b64 AVX512VL
\c VCMPNLT_USPD     kreg|mask,ymmreg,ymmrm256|b64 AVX512VL
\c VCMPNLT_USPD     kreg|mask,zmmreg,zmmrm512|b64|sae AVX512
\c VCMPNLT_USPS     kreg|mask,xmmreg,xmmrm128|b32 AVX512VL
\c VCMPNLT_USPS     kreg|mask,ymmreg,ymmrm256|b32 AVX512VL
\c VCMPNLT_USPS     kreg|mask,zmmreg,zmmrm512|b32|sae AVX512
\c VCMPNLT_USSD     kreg|mask,xmmreg,xmmrm64|sae AVX512
\c VCMPNLT_USSS     kreg|mask,xmmreg,xmmrm32|sae AVX512
\c VCMPNLEPD        kreg|mask,xmmreg,xmmrm128|b64 AVX512VL
\c VCMPNLEPD        kreg|mask,ymmreg,ymmrm256|b64 AVX512VL
\c VCMPNLEPD        kreg|mask,zmmreg,zmmrm512|b64|sae AVX512
\c VCMPNLEPS        kreg|mask,xmmreg,xmmrm128|b32 AVX512VL
\c VCMPNLEPS        kreg|mask,ymmreg,ymmrm256|b32 AVX512VL
\c VCMPNLEPS        kreg|mask,zmmreg,zmmrm512|b32|sae AVX512
\c VCMPNLESD        kreg|mask,xmmreg,xmmrm64|sae AVX512
\c VCMPNLESS        kreg|mask,xmmreg,xmmrm32|sae AVX512
\c VCMPNLE_USPD     kreg|mask,xmmreg,xmmrm128|b64 AVX512VL
\c VCMPNLE_USPD     kreg|mask,ymmreg,ymmrm256|b64 AVX512VL
\c VCMPNLE_USPD     kreg|mask,zmmreg,zmmrm512|b64|sae AVX512
\c VCMPNLE_USPS     kreg|mask,xmmreg,xmmrm128|b32 AVX512VL
\c VCMPNLE_USPS     kreg|mask,ymmreg,ymmrm256|b32 AVX512VL
\c VCMPNLE_USPS     kreg|mask,zmmreg,zmmrm512|b32|sae AVX512
\c VCMPNLE_USSD     kreg|mask,xmmreg,xmmrm64|sae AVX512
\c VCMPNLE_USSS     kreg|mask,xmmreg,xmmrm32|sae AVX512
\c VCMPORDPD        kreg|mask,xmmreg,xmmrm128|b64 AVX512VL
\c VCMPORDPD        kreg|mask,ymmreg,ymmrm256|b64 AVX512VL
\c VCMPORDPD        kreg|mask,zmmreg,zmmrm512|b64|sae AVX512
\c VCMPORDPS        kreg|mask,xmmreg,xmmrm128|b32 AVX512VL
\c VCMPORDPS        kreg|mask,ymmreg,ymmrm256|b32 AVX512VL
\c VCMPORDPS        kreg|mask,zmmreg,zmmrm512|b32|sae AVX512
\c VCMPORDSD        kreg|mask,xmmreg,xmmrm64|sae AVX512
\c VCMPORDSS        kreg|mask,xmmreg,xmmrm32|sae AVX512
\c VCMPORD_QPD      kreg|mask,xmmreg,xmmrm128|b64 AVX512VL
\c VCMPORD_QPD      kreg|mask,ymmreg,ymmrm256|b64 AVX512VL
\c VCMPORD_QPD      kreg|mask,zmmreg,zmmrm512|b64|sae AVX512
\c VCMPORD_QPS      kreg|mask,xmmreg,xmmrm128|b32 AVX512VL
\c VCMPORD_QPS      kreg|mask,ymmreg,ymmrm256|b32 AVX512VL
\c VCMPORD_QPS      kreg|mask,zmmreg,zmmrm512|b32|sae AVX512
\c VCMPORD_QSD      kreg|mask,xmmreg,xmmrm64|sae AVX512
\c VCMPORD_QSS      kreg|mask,xmmreg,xmmrm32|sae AVX512
\c VCMPEQ_UQPD      kreg|mask,xmmreg,xmmrm128|b64 AVX512VL
\c VCMPEQ_UQPD      kreg|mask,ymmreg,ymmrm256|b64 AVX512VL
\c VCMPEQ_UQPD      kreg|mask,zmmreg,zmmrm512|b64|sae AVX512
\c VCMPEQ_UQPS      kreg|mask,xmmreg,xmmrm128|b32 AVX512VL
\c VCMPEQ_UQPS      kreg|mask,ymmreg,ymmrm256|b32 AVX512VL
\c VCMPEQ_UQPS      kreg|mask,zmmreg,zmmrm512|b32|sae AVX512
\c VCMPEQ_UQSD      kreg|mask,xmmreg,xmmrm64|sae AVX512
\c VCMPEQ_UQSS      kreg|mask,xmmreg,xmmrm32|sae AVX512
\c VCMPNGEPD        kreg|mask,xmmreg,xmmrm128|b64 AVX512VL
\c VCMPNGEPD        kreg|mask,ymmreg,ymmrm256|b64 AVX512VL
\c VCMPNGEPD        kreg|mask,zmmreg,zmmrm512|b64|sae AVX512
\c VCMPNGEPS        kreg|mask,xmmreg,xmmrm128|b32 AVX512VL
\c VCMPNGEPS        kreg|mask,ymmreg,ymmrm256|b32 AVX512VL
\c VCMPNGEPS        kreg|mask,zmmreg,zmmrm512|b32|sae AVX512
\c VCMPNGESD        kreg|mask,xmmreg,xmmrm64|sae AVX512
\c VCMPNGESS        kreg|mask,xmmreg,xmmrm32|sae AVX512
\c VCMPNGE_USPD     kreg|mask,xmmreg,xmmrm128|b64 AVX512VL
\c VCMPNGE_USPD     kreg|mask,ymmreg,ymmrm256|b64 AVX512VL
\c VCMPNGE_USPD     kreg|mask,zmmreg,zmmrm512|b64|sae AVX512
\c VCMPNGE_USPS     kreg|mask,xmmreg,xmmrm128|b32 AVX512VL
\c VCMPNGE_USPS     kreg|mask,ymmreg,ymmrm256|b32 AVX512VL
\c VCMPNGE_USPS     kreg|mask,zmmreg,zmmrm512|b32|sae AVX512
\c VCMPNGE_USSD     kreg|mask,xmmreg,xmmrm64|sae AVX512
\c VCMPNGE_USSS     kreg|mask,xmmreg,xmmrm32|sae AVX512
\c VCMPNGTPD        kreg|mask,xmmreg,xmmrm128|b64 AVX512VL
\c VCMPNGTPD        kreg|mask,ymmreg,ymmrm256|b64 AVX512VL
\c VCMPNGTPD        kreg|mask,zmmreg,zmmrm512|b64|sae AVX512
\c VCMPNGTPS        kreg|mask,xmmreg,xmmrm128|b32 AVX512VL
\c VCMPNGTPS        kreg|mask,ymmreg,ymmrm256|b32 AVX512VL
\c VCMPNGTPS        kreg|mask,zmmreg,zmmrm512|b32|sae AVX512
\c VCMPNGTSD        kreg|mask,xmmreg,xmmrm64|sae AVX512
\c VCMPNGTSS        kreg|mask,xmmreg,xmmrm32|sae AVX512
\c VCMPNGT_USPD     kreg|mask,xmmreg,xmmrm128|b64 AVX512VL
\c VCMPNGT_USPD     kreg|mask,ymmreg,ymmrm256|b64 AVX512VL
\c VCMPNGT_USPD     kreg|mask,zmmreg,zmmrm512|b64|sae AVX512
\c VCMPNGT_USPS     kreg|mask,xmmreg,xmmrm128|b32 AVX512VL
\c VCMPNGT_USPS     kreg|mask,ymmreg,ymmrm256|b32 AVX512VL
\c VCMPNGT_USPS     kreg|mask,zmmreg,zmmrm512|b32|sae AVX512
\c VCMPNGT_USSD     kreg|mask,xmmreg,xmmrm64|sae AVX512
\c VCMPNGT_USSS     kreg|mask,xmmreg,xmmrm32|sae AVX512
\c VCMPFALSEPD      kreg|mask,xmmreg,xmmrm128|b64 AVX512VL
\c VCMPFALSEPD      kreg|mask,ymmreg,ymmrm256|b64 AVX512VL
\c VCMPFALSEPD      kreg|mask,zmmreg,zmmrm512|b64|sae AVX512
\c VCMPFALSEPS      kreg|mask,xmmreg,xmmrm128|b32 AVX512VL
\c VCMPFALSEPS      kreg|mask,ymmreg,ymmrm256|b32 AVX512VL
\c VCMPFALSEPS      kreg|mask,zmmreg,zmmrm512|b32|sae AVX512
\c VCMPFALSESD      kreg|mask,xmmreg,xmmrm64|sae AVX512
\c VCMPFALSESS      kreg|mask,xmmreg,xmmrm32|sae AVX512
\c VCMPFALSE_OQPD   kreg|mask,xmmreg,xmmrm128|b64 AVX512VL
\c VCMPFALSE_OQPD   kreg|mask,ymmreg,ymmrm256|b64 AVX512VL
\c VCMPFALSE_OQPD   kreg|mask,zmmreg,zmmrm512|b64|sae AVX512
\c VCMPFALSE_OQPS   kreg|mask,xmmreg,xmmrm128|b32 AVX512VL
\c VCMPFALSE_OQPS   kreg|mask,ymmreg,ymmrm256|b32 AVX512VL
\c VCMPFALSE_OQPS   kreg|mask,zmmreg,zmmrm512|b32|sae AVX512
\c VCMPFALSE_OQSD   kreg|mask,xmmreg,xmmrm64|sae AVX512
\c VCMPFALSE_OQSS   kreg|mask,xmmreg,xmmrm32|sae AVX512
\c VCMPNEQ_OQPD     kreg|mask,xmmreg,xmmrm128|b64 AVX512VL
\c VCMPNEQ_OQPD     kreg|mask,ymmreg,ymmrm256|b64 AVX512VL
\c VCMPNEQ_OQPD     kreg|mask,zmmreg,zmmrm512|b64|sae AVX512
\c VCMPNEQ_OQPS     kreg|mask,xmmreg,xmmrm128|b32 AVX512VL
\c VCMPNEQ_OQPS     kreg|mask,ymmreg,ymmrm256|b32 AVX512VL
\c VCMPNEQ_OQPS     kreg|mask,zmmreg,zmmrm512|b32|sae AVX512
\c VCMPNEQ_OQSD     kreg|mask,xmmreg,xmmrm64|sae AVX512
\c VCMPNEQ_OQSS     kreg|mask,xmmreg,xmmrm32|sae AVX512
\c VCMPGEPD         kreg|mask,xmmreg,xmmrm128|b64 AVX512VL
\c VCMPGEPD         kreg|mask,ymmreg,ymmrm256|b64 AVX512VL
\c VCMPGEPD         kreg|mask,zmmreg,zmmrm512|b64|sae AVX512
\c VCMPGEPS         kreg|mask,xmmreg,xmmrm128|b32 AVX512VL
\c VCMPGEPS         kreg|mask,ymmreg,ymmrm256|b32 AVX512VL
\c VCMPGEPS         kreg|mask,zmmreg,zmmrm512|b32|sae AVX512
\c VCMPGESD         kreg|mask,xmmreg,xmmrm64|sae AVX512
\c VCMPGESS         kreg|mask,xmmreg,xmmrm32|sae AVX512
\c VCMPGE_OSPD      kreg|mask,xmmreg,xmmrm128|b64 AVX512VL
\c VCMPGE_OSPD      kreg|mask,ymmreg,ymmrm256|b64 AVX512VL
\c VCMPGE_OSPD      kreg|mask,zmmreg,zmmrm512|b64|sae AVX512
\c VCMPGE_OSPS      kreg|mask,xmmreg,xmmrm128|b32 AVX512VL
\c VCMPGE_OSPS      kreg|mask,ymmreg,ymmrm256|b32 AVX512VL
\c VCMPGE_OSPS      kreg|mask,zmmreg,zmmrm512|b32|sae AVX512
\c VCMPGE_OSSD      kreg|mask,xmmreg,xmmrm64|sae AVX512
\c VCMPGE_OSSS      kreg|mask,xmmreg,xmmrm32|sae AVX512
\c VCMPGTPD         kreg|mask,xmmreg,xmmrm128|b64 AVX512VL
\c VCMPGTPD         kreg|mask,ymmreg,ymmrm256|b64 AVX512VL
\c VCMPGTPD         kreg|mask,zmmreg,zmmrm512|b64|sae AVX512
\c VCMPGTPS         kreg|mask,xmmreg,xmmrm128|b32 AVX512VL
\c VCMPGTPS         kreg|mask,ymmreg,ymmrm256|b32 AVX512VL
\c VCMPGTPS         kreg|mask,zmmreg,zmmrm512|b32|sae AVX512
\c VCMPGTSD         kreg|mask,xmmreg,xmmrm64|sae AVX512
\c VCMPGTSS         kreg|mask,xmmreg,xmmrm32|sae AVX512
\c VCMPGT_OSPD      kreg|mask,xmmreg,xmmrm128|b64 AVX512VL
\c VCMPGT_OSPD      kreg|mask,ymmreg,ymmrm256|b64 AVX512VL
\c VCMPGT_OSPD      kreg|mask,zmmreg,zmmrm512|b64|sae AVX512
\c VCMPGT_OSPS      kreg|mask,xmmreg,xmmrm128|b32 AVX512VL
\c VCMPGT_OSPS      kreg|mask,ymmreg,ymmrm256|b32 AVX512VL
\c VCMPGT_OSPS      kreg|mask,zmmreg,zmmrm512|b32|sae AVX512
\c VCMPGT_OSSD      kreg|mask,xmmreg,xmmrm64|sae AVX512
\c VCMPGT_OSSS      kreg|mask,xmmreg,xmmrm32|sae AVX512
\c VCMPTRUEPD       kreg|mask,xmmreg,xmmrm128|b64 AVX512VL
\c VCMPTRUEPD       kreg|mask,ymmreg,ymmrm256|b64 AVX512VL
\c VCMPTRUEPD       kreg|mask,zmmreg,zmmrm512|b64|sae AVX512
\c VCMPTRUEPS       kreg|mask,xmmreg,xmmrm128|b32 AVX512VL
\c VCMPTRUEPS       kreg|mask,ymmreg,ymmrm256|b32 AVX512VL
\c VCMPTRUEPS       kreg|mask,zmmreg,zmmrm512|b32|sae AVX512
\c VCMPTRUESD       kreg|mask,xmmreg,xmmrm64|sae AVX512
\c VCMPTRUESS       kreg|mask,xmmreg,xmmrm32|sae AVX512
\c VCMPTRUE_UQPD    kreg|mask,xmmreg,xmmrm128|b64 AVX512VL
\c VCMPTRUE_UQPD    kreg|mask,ymmreg,ymmrm256|b64 AVX512VL
\c VCMPTRUE_UQPD    kreg|mask,zmmreg,zmmrm512|b64|sae AVX512
\c VCMPTRUE_UQPS    kreg|mask,xmmreg,xmmrm128|b32 AVX512VL
\c VCMPTRUE_UQPS    kreg|mask,ymmreg,ymmrm256|b32 AVX512VL
\c VCMPTRUE_UQPS    kreg|mask,zmmreg,zmmrm512|b32|sae AVX512
\c VCMPTRUE_UQSD    kreg|mask,xmmreg,xmmrm64|sae AVX512
\c VCMPTRUE_UQSS    kreg|mask,xmmreg,xmmrm32|sae AVX512
\c VCMPEQ_OSPD      kreg|mask,xmmreg,xmmrm128|b64 AVX512VL
\c VCMPEQ_OSPD      kreg|mask,ymmreg,ymmrm256|b64 AVX512VL
\c VCMPEQ_OSPD      kreg|mask,zmmreg,zmmrm512|b64|sae AVX512
\c VCMPEQ_OSPS      kreg|mask,xmmreg,xmmrm128|b32 AVX512VL
\c VCMPEQ_OSPS      kreg|mask,ymmreg,ymmrm256|b32 AVX512VL
\c VCMPEQ_OSPS      kreg|mask,zmmreg,zmmrm512|b32|sae AVX512
\c VCMPEQ_OSSD      kreg|mask,xmmreg,xmmrm64|sae AVX512
\c VCMPEQ_OSSS      kreg|mask,xmmreg,xmmrm32|sae AVX512
\c VCMPLT_OQPD      kreg|mask,xmmreg,xmmrm128|b64 AVX512VL
\c VCMPLT_OQPD      kreg|mask,ymmreg,ymmrm256|b64 AVX512VL
\c VCMPLT_OQPD      kreg|mask,zmmreg,zmmrm512|b64|sae AVX512
\c VCMPLT_OQPS      kreg|mask,xmmreg,xmmrm128|b32 AVX512VL
\c VCMPLT_OQPS      kreg|mask,ymmreg,ymmrm256|b32 AVX512VL
\c VCMPLT_OQPS      kreg|mask,zmmreg,zmmrm512|b32|sae AVX512
\c VCMPLT_OQSD      kreg|mask,xmmreg,xmmrm64|sae AVX512
\c VCMPLT_OQSS      kreg|mask,xmmreg,xmmrm32|sae AVX512
\c VCMPLE_OQPD      kreg|mask,xmmreg,xmmrm128|b64 AVX512VL
\c VCMPLE_OQPD      kreg|mask,ymmreg,ymmrm256|b64 AVX512VL
\c VCMPLE_OQPD      kreg|mask,zmmreg,zmmrm512|b64|sae AVX512
\c VCMPLE_OQPS      kreg|mask,xmmreg,xmmrm128|b32 AVX512VL
\c VCMPLE_OQPS      kreg|mask,ymmreg,ymmrm256|b32 AVX512VL
\c VCMPLE_OQPS      kreg|mask,zmmreg,zmmrm512|b32|sae AVX512
\c VCMPLE_OQSD      kreg|mask,xmmreg,xmmrm64|sae AVX512
\c VCMPLE_OQSS      kreg|mask,xmmreg,xmmrm32|sae AVX512
\c VCMPUNORD_SPD    kreg|mask,xmmreg,xmmrm128|b64 AVX512VL
\c VCMPUNORD_SPD    kreg|mask,ymmreg,ymmrm256|b64 AVX512VL
\c VCMPUNORD_SPD    kreg|mask,zmmreg,zmmrm512|b64|sae AVX512
\c VCMPUNORD_SPS    kreg|mask,xmmreg,xmmrm128|b32 AVX512VL
\c VCMPUNORD_SPS    kreg|mask,ymmreg,ymmrm256|b32 AVX512VL
\c VCMPUNORD_SPS    kreg|mask,zmmreg,zmmrm512|b32|sae AVX512
\c VCMPUNORD_SSD    kreg|mask,xmmreg,xmmrm64|sae AVX512
\c VCMPUNORD_SSS    kreg|mask,xmmreg,xmmrm32|sae AVX512
\c VCMPNEQ_USPD     kreg|mask,xmmreg,xmmrm128|b64 AVX512VL
\c VCMPNEQ_USPD     kreg|mask,ymmreg,ymmrm256|b64 AVX512VL
\c VCMPNEQ_USPD     kreg|mask,zmmreg,zmmrm512|b64|sae AVX512
\c VCMPNEQ_USPS     kreg|mask,xmmreg,xmmrm128|b32 AVX512VL
\c VCMPNEQ_USPS     kreg|mask,ymmreg,ymmrm256|b32 AVX512VL
\c VCMPNEQ_USPS     kreg|mask,zmmreg,zmmrm512|b32|sae AVX512
\c VCMPNEQ_USSD     kreg|mask,xmmreg,xmmrm64|sae AVX512
\c VCMPNEQ_USSS     kreg|mask,xmmreg,xmmrm32|sae AVX512
\c VCMPNLT_UQPD     kreg|mask,xmmreg,xmmrm128|b64 AVX512VL
\c VCMPNLT_UQPD     kreg|mask,ymmreg,ymmrm256|b64 AVX512VL
\c VCMPNLT_UQPD     kreg|mask,zmmreg,zmmrm512|b64|sae AVX512
\c VCMPNLT_UQPS     kreg|mask,xmmreg,xmmrm128|b32 AVX512VL
\c VCMPNLT_UQPS     kreg|mask,ymmreg,ymmrm256|b32 AVX512VL
\c VCMPNLT_UQPS     kreg|mask,zmmreg,zmmrm512|b32|sae AVX512
\c VCMPNLT_UQSD     kreg|mask,xmmreg,xmmrm64|sae AVX512
\c VCMPNLT_UQSS     kreg|mask,xmmreg,xmmrm32|sae AVX512
\c VCMPNLE_UQPD     kreg|mask,xmmreg,xmmrm128|b64 AVX512VL
\c VCMPNLE_UQPD     kreg|mask,ymmreg,ymmrm256|b64 AVX512VL
\c VCMPNLE_UQPD     kreg|mask,zmmreg,zmmrm512|b64|sae AVX512
\c VCMPNLE_UQPS     kreg|mask,xmmreg,xmmrm128|b32 AVX512VL
\c VCMPNLE_UQPS     kreg|mask,ymmreg,ymmrm256|b32 AVX512VL
\c VCMPNLE_UQPS     kreg|mask,zmmreg,zmmrm512|b32|sae AVX512
\c VCMPNLE_UQSD     kreg|mask,xmmreg,xmmrm64|sae AVX512
\c VCMPNLE_UQSS     kreg|mask,xmmreg,xmmrm32|sae AVX512
\c VCMPORD_SPD      kreg|mask,xmmreg,xmmrm128|b64 AVX512VL
\c VCMPORD_SPD      kreg|mask,ymmreg,ymmrm256|b64 AVX512VL
\c VCMPORD_SPD      kreg|mask,zmmreg,zmmrm512|b64|sae AVX512
\c VCMPORD_SPS      kreg|mask,xmmreg,xmmrm128|b32 AVX512VL
\c VCMPORD_SPS      kreg|mask,ymmreg,ymmrm256|b32 AVX512VL
\c VCMPORD_SPS      kreg|mask,zmmreg,zmmrm512|b32|sae AVX512
\c VCMPORD_SSD      kreg|mask,xmmreg,xmmrm64|sae AVX512
\c VCMPORD_SSS      kreg|mask,xmmreg,xmmrm32|sae AVX512
\c VCMPEQ_USPD      kreg|mask,xmmreg,xmmrm128|b64 AVX512VL
\c VCMPEQ_USPD      kreg|mask,ymmreg,ymmrm256|b64 AVX512VL
\c VCMPEQ_USPD      kreg|mask,zmmreg,zmmrm512|b64|sae AVX512
\c VCMPEQ_USPS      kreg|mask,xmmreg,xmmrm128|b32 AVX512VL
\c VCMPEQ_USPS      kreg|mask,ymmreg,ymmrm256|b32 AVX512VL
\c VCMPEQ_USPS      kreg|mask,zmmreg,zmmrm512|b32|sae AVX512
\c VCMPEQ_USSD      kreg|mask,xmmreg,xmmrm64|sae AVX512
\c VCMPEQ_USSS      kreg|mask,xmmreg,xmmrm32|sae AVX512
\c VCMPNGE_UQPD     kreg|mask,xmmreg,xmmrm128|b64 AVX512VL
\c VCMPNGE_UQPD     kreg|mask,ymmreg,ymmrm256|b64 AVX512VL
\c VCMPNGE_UQPD     kreg|mask,zmmreg,zmmrm512|b64|sae AVX512
\c VCMPNGE_UQPS     kreg|mask,xmmreg,xmmrm128|b32 AVX512VL
\c VCMPNGE_UQPS     kreg|mask,ymmreg,ymmrm256|b32 AVX512VL
\c VCMPNGE_UQPS     kreg|mask,zmmreg,zmmrm512|b32|sae AVX512
\c VCMPNGE_UQSD     kreg|mask,xmmreg,xmmrm64|sae AVX512
\c VCMPNGE_UQSS     kreg|mask,xmmreg,xmmrm32|sae AVX512
\c VCMPNGT_UQPD     kreg|mask,xmmreg,xmmrm128|b64 AVX512VL
\c VCMPNGT_UQPD     kreg|mask,ymmreg,ymmrm256|b64 AVX512VL
\c VCMPNGT_UQPD     kreg|mask,zmmreg,zmmrm512|b64|sae AVX512
\c VCMPNGT_UQPS     kreg|mask,xmmreg,xmmrm128|b32 AVX512VL
\c VCMPNGT_UQPS     kreg|mask,ymmreg,ymmrm256|b32 AVX512VL
\c VCMPNGT_UQPS     kreg|mask,zmmreg,zmmrm512|b32|sae AVX512
\c VCMPNGT_UQSD     kreg|mask,xmmreg,xmmrm64|sae AVX512
\c VCMPNGT_UQSS     kreg|mask,xmmreg,xmmrm32|sae AVX512
\c VCMPFALSE_OSPD   kreg|mask,xmmreg,xmmrm128|b64 AVX512VL
\c VCMPFALSE_OSPD   kreg|mask,ymmreg,ymmrm256|b64 AVX512VL
\c VCMPFALSE_OSPD   kreg|mask,zmmreg,zmmrm512|b64|sae AVX512
\c VCMPFALSE_OSPS   kreg|mask,xmmreg,xmmrm128|b32 AVX512VL
\c VCMPFALSE_OSPS   kreg|mask,ymmreg,ymmrm256|b32 AVX512VL
\c VCMPFALSE_OSPS   kreg|mask,zmmreg,zmmrm512|b32|sae AVX512
\c VCMPFALSE_OSSD   kreg|mask,xmmreg,xmmrm64|sae AVX512
\c VCMPFALSE_OSSS   kreg|mask,xmmreg,xmmrm32|sae AVX512
\c VCMPNEQ_OSPD     kreg|mask,xmmreg,xmmrm128|b64 AVX512VL
\c VCMPNEQ_OSPD     kreg|mask,ymmreg,ymmrm256|b64 AVX512VL
\c VCMPNEQ_OSPD     kreg|mask,zmmreg,zmmrm512|b64|sae AVX512
\c VCMPNEQ_OSPS     kreg|mask,xmmreg,xmmrm128|b32 AVX512VL
\c VCMPNEQ_OSPS     kreg|mask,ymmreg,ymmrm256|b32 AVX512VL
\c VCMPNEQ_OSPS     kreg|mask,zmmreg,zmmrm512|b32|sae AVX512
\c VCMPNEQ_OSSD     kreg|mask,xmmreg,xmmrm64|sae AVX512
\c VCMPNEQ_OSSS     kreg|mask,xmmreg,xmmrm32|sae AVX512
\c VCMPGE_OQPD      kreg|mask,xmmreg,xmmrm128|b64 AVX512VL
\c VCMPGE_OQPD      kreg|mask,ymmreg,ymmrm256|b64 AVX512VL
\c VCMPGE_OQPD      kreg|mask,zmmreg,zmmrm512|b64|sae AVX512
\c VCMPGE_OQPS      kreg|mask,xmmreg,xmmrm128|b32 AVX512VL
\c VCMPGE_OQPS      kreg|mask,ymmreg,ymmrm256|b32 AVX512VL
\c VCMPGE_OQPS      kreg|mask,zmmreg,zmmrm512|b32|sae AVX512
\c VCMPGE_OQSD      kreg|mask,xmmreg,xmmrm64|sae AVX512
\c VCMPGE_OQSS      kreg|mask,xmmreg,xmmrm32|sae AVX512
\c VCMPGT_OQPD      kreg|mask,xmmreg,xmmrm128|b64 AVX512VL
\c VCMPGT_OQPD      kreg|mask,ymmreg,ymmrm256|b64 AVX512VL
\c VCMPGT_OQPD      kreg|mask,zmmreg,zmmrm512|b64|sae AVX512
\c VCMPGT_OQPS      kreg|mask,xmmreg,xmmrm128|b32 AVX512VL
\c VCMPGT_OQPS      kreg|mask,ymmreg,ymmrm256|b32 AVX512VL
\c VCMPGT_OQPS      kreg|mask,zmmreg,zmmrm512|b32|sae AVX512
\c VCMPGT_OQSD      kreg|mask,xmmreg,xmmrm64|sae AVX512
\c VCMPGT_OQSS      kreg|mask,xmmreg,xmmrm32|sae AVX512
\c VCMPTRUE_USPD    kreg|mask,xmmreg,xmmrm128|b64 AVX512VL
\c VCMPTRUE_USPD    kreg|mask,ymmreg,ymmrm256|b64 AVX512VL
\c VCMPTRUE_USPD    kreg|mask,zmmreg,zmmrm512|b64|sae AVX512
\c VCMPTRUE_USPS    kreg|mask,xmmreg,xmmrm128|b32 AVX512VL
\c VCMPTRUE_USPS    kreg|mask,ymmreg,ymmrm256|b32 AVX512VL
\c VCMPTRUE_USPS    kreg|mask,zmmreg,zmmrm512|b32|sae AVX512
\c VCMPTRUE_USSD    kreg|mask,xmmreg,xmmrm64|sae AVX512
\c VCMPTRUE_USSS    kreg|mask,xmmreg,xmmrm32|sae AVX512
\c VCMPPD           kreg|mask,xmmreg,xmmrm128|b64,imm8 AVX512VL
\c VCMPPD           kreg|mask,ymmreg,ymmrm256|b64,imm8 AVX512VL
\c VCMPPD           kreg|mask,zmmreg,zmmrm512|b64|sae,imm8 AVX512
\c VCMPPS           kreg|mask,xmmreg,xmmrm128|b32,imm8 AVX512VL
\c VCMPPS           kreg|mask,ymmreg,ymmrm256|b32,imm8 AVX512VL
\c VCMPPS           kreg|mask,zmmreg,zmmrm512|b32|sae,imm8 AVX512
\c VCMPSD           kreg|mask,xmmreg,xmmrm64|sae,imm8 AVX512
\c VCMPSS           kreg|mask,xmmreg,xmmrm32|sae,imm8 AVX512
\c VCOMISD          xmmreg,xmmrm64|sae       AVX512
\c VCOMISS          xmmreg,xmmrm32|sae       AVX512
\c VCOMPRESSPD      mem128|mask,xmmreg       AVX512VL
\c VCOMPRESSPD      mem256|mask,ymmreg       AVX512VL
\c VCOMPRESSPD      mem512|mask,zmmreg       AVX512
\c VCOMPRESSPD      xmmreg|mask|z,xmmreg     AVX512VL
\c VCOMPRESSPD      ymmreg|mask|z,ymmreg     AVX512VL
\c VCOMPRESSPD      zmmreg|mask|z,zmmreg     AVX512
\c VCOMPRESSPS      mem128|mask,xmmreg       AVX512VL
\c VCOMPRESSPS      mem256|mask,ymmreg       AVX512VL
\c VCOMPRESSPS      mem512|mask,zmmreg       AVX512
\c VCOMPRESSPS      xmmreg|mask|z,xmmreg     AVX512VL
\c VCOMPRESSPS      ymmreg|mask|z,ymmreg     AVX512VL
\c VCOMPRESSPS      zmmreg|mask|z,zmmreg     AVX512
\c VCVTDQ2PD        xmmreg|mask|z,xmmrm64|b32 AVX512VL
\c VCVTDQ2PD        ymmreg|mask|z,xmmrm128|b32 AVX512VL
\c VCVTDQ2PD        zmmreg|mask|z,ymmrm256|b32|er AVX512
\c VCVTDQ2PS        xmmreg|mask|z,xmmrm128|b32 AVX512VL
\c VCVTDQ2PS        ymmreg|mask|z,ymmrm256|b32 AVX512VL
\c VCVTDQ2PS        zmmreg|mask|z,zmmrm512|b32|er AVX512
\c VCVTPD2DQ        xmmreg|mask|z,xmmrm128|b64 AVX512VL
\c VCVTPD2DQ        xmmreg|mask|z,ymmrm256|b64 AVX512VL
\c VCVTPD2DQ        ymmreg|mask|z,zmmrm512|b64|er AVX512
\c VCVTPD2PS        xmmreg|mask|z,xmmrm128|b64 AVX512VL
\c VCVTPD2PS        xmmreg|mask|z,ymmrm256|b64 AVX512VL
\c VCVTPD2PS        ymmreg|mask|z,zmmrm512|b64|er AVX512
\c VCVTPD2QQ        xmmreg|mask|z,xmmrm128|b64 AVX512VL/DQ
\c VCVTPD2QQ        ymmreg|mask|z,ymmrm256|b64 AVX512VL/DQ
\c VCVTPD2QQ        zmmreg|mask|z,zmmrm512|b64|er AVX512DQ
\c VCVTPD2UDQ       xmmreg|mask|z,xmmrm128|b64 AVX512VL
\c VCVTPD2UDQ       xmmreg|mask|z,ymmrm256|b64 AVX512VL
\c VCVTPD2UDQ       ymmreg|mask|z,zmmrm512|b64|er AVX512
\c VCVTPD2UQQ       xmmreg|mask|z,xmmrm128|b64 AVX512VL/DQ
\c VCVTPD2UQQ       ymmreg|mask|z,ymmrm256|b64 AVX512VL/DQ
\c VCVTPD2UQQ       zmmreg|mask|z,zmmrm512|b64|er AVX512DQ
\c VCVTPH2PS        xmmreg|mask|z,xmmrm64    AVX512VL
\c VCVTPH2PS        ymmreg|mask|z,xmmrm128   AVX512VL
\c VCVTPH2PS        zmmreg|mask|z,ymmrm256|sae AVX512
\c VCVTPS2DQ        xmmreg|mask|z,xmmrm128|b32 AVX512VL
\c VCVTPS2DQ        ymmreg|mask|z,ymmrm256|b32 AVX512VL
\c VCVTPS2DQ        zmmreg|mask|z,zmmrm512|b32|er AVX512
\c VCVTPS2PD        xmmreg|mask|z,xmmrm64|b32 AVX512VL
\c VCVTPS2PD        ymmreg|mask|z,xmmrm128|b32 AVX512VL
\c VCVTPS2PD        zmmreg|mask|z,ymmrm256|b32|sae AVX512
\c VCVTPS2PH        xmmreg|mask|z,xmmreg,imm8 AVX512VL
\c VCVTPS2PH        xmmreg|mask|z,ymmreg,imm8 AVX512VL
\c VCVTPS2PH        ymmreg|mask|z,zmmreg|sae,imm8 AVX512
\c VCVTPS2PH        mem64|mask,xmmreg,imm8   AVX512VL
\c VCVTPS2PH        mem128|mask,ymmreg,imm8  AVX512VL
\c VCVTPS2PH        mem256|mask,zmmreg|sae,imm8 AVX512
\c VCVTPS2QQ        xmmreg|mask|z,xmmrm64|b32 AVX512VL/DQ
\c VCVTPS2QQ        ymmreg|mask|z,xmmrm128|b32 AVX512VL/DQ
\c VCVTPS2QQ        zmmreg|mask|z,ymmrm256|b32|er AVX512DQ
\c VCVTPS2UDQ       xmmreg|mask|z,xmmrm128|b32 AVX512VL
\c VCVTPS2UDQ       ymmreg|mask|z,ymmrm256|b32 AVX512VL
\c VCVTPS2UDQ       zmmreg|mask|z,zmmrm512|b32|er AVX512
\c VCVTPS2UQQ       xmmreg|mask|z,xmmrm64|b32 AVX512VL/DQ
\c VCVTPS2UQQ       ymmreg|mask|z,xmmrm128|b32 AVX512VL/DQ
\c VCVTPS2UQQ       zmmreg|mask|z,ymmrm256|b32|er AVX512DQ
\c VCVTQQ2PD        xmmreg|mask|z,xmmrm128|b64 AVX512VL/DQ
\c VCVTQQ2PD        ymmreg|mask|z,ymmrm256|b64 AVX512VL/DQ
\c VCVTQQ2PD        zmmreg|mask|z,zmmrm512|b64|er AVX512DQ
\c VCVTQQ2PS        xmmreg|mask|z,xmmrm128|b64 AVX512VL/DQ
\c VCVTQQ2PS        xmmreg|mask|z,ymmrm256|b64 AVX512VL/DQ
\c VCVTQQ2PS        ymmreg|mask|z,zmmrm512|b64|er AVX512DQ
\c VCVTSD2SI        reg32,xmmrm64|er         AVX512
\c VCVTSD2SI        reg64,xmmrm64|er         AVX512
\c VCVTSD2SS        xmmreg|mask|z,xmmreg,xmmrm64|er AVX512
\c VCVTSD2USI       reg32,xmmrm64|er         AVX512
\c VCVTSD2USI       reg64,xmmrm64|er         AVX512
\c VCVTSI2SD        xmmreg,xmmreg|er,rm32    AVX512
\c VCVTSI2SD        xmmreg,xmmreg|er,rm64    AVX512
\c VCVTSI2SS        xmmreg,xmmreg|er,rm32    AVX512
\c VCVTSI2SS        xmmreg,xmmreg|er,rm64    AVX512
\c VCVTSS2SD        xmmreg|mask|z,xmmreg,xmmrm32|sae AVX512
\c VCVTSS2SI        reg32,xmmrm32|er         AVX512
\c VCVTSS2SI        reg64,xmmrm32|er         AVX512
\c VCVTSS2USI       reg32,xmmrm32|er         AVX512
\c VCVTSS2USI       reg64,xmmrm32|er         AVX512
\c VCVTTPD2DQ       xmmreg|mask|z,xmmrm128|b64 AVX512VL
\c VCVTTPD2DQ       xmmreg|mask|z,ymmrm256|b64 AVX512VL
\c VCVTTPD2DQ       ymmreg|mask|z,zmmrm512|b64|sae AVX512
\c VCVTTPD2QQ       xmmreg|mask|z,xmmrm128|b64 AVX512VL/DQ
\c VCVTTPD2QQ       ymmreg|mask|z,ymmrm256|b64 AVX512VL/DQ
\c VCVTTPD2QQ       zmmreg|mask|z,zmmrm512|b64|sae AVX512DQ
\c VCVTTPD2UDQ      xmmreg|mask|z,xmmrm128|b64 AVX512VL
\c VCVTTPD2UDQ      xmmreg|mask|z,ymmrm256|b64 AVX512VL
\c VCVTTPD2UDQ      ymmreg|mask|z,zmmrm512|b64|sae AVX512
\c VCVTTPD2UQQ      xmmreg|mask|z,xmmrm128|b64 AVX512VL/DQ
\c VCVTTPD2UQQ      ymmreg|mask|z,ymmrm256|b64 AVX512VL/DQ
\c VCVTTPD2UQQ      zmmreg|mask|z,zmmrm512|b64|sae AVX512DQ
\c VCVTTPS2DQ       xmmreg|mask|z,xmmrm128|b32 AVX512VL
\c VCVTTPS2DQ       ymmreg|mask|z,ymmrm256|b32 AVX512VL
\c VCVTTPS2DQ       zmmreg|mask|z,zmmrm512|b32|sae AVX512
\c VCVTTPS2QQ       xmmreg|mask|z,xmmrm64|b32 AVX512VL/DQ
\c VCVTTPS2QQ       ymmreg|mask|z,xmmrm128|b32 AVX512VL/DQ
\c VCVTTPS2QQ       zmmreg|mask|z,ymmrm256|b32|sae AVX512DQ
\c VCVTTPS2UDQ      xmmreg|mask|z,xmmrm128|b32 AVX512VL
\c VCVTTPS2UDQ      ymmreg|mask|z,ymmrm256|b32 AVX512VL
\c VCVTTPS2UDQ      zmmreg|mask|z,zmmrm512|b32|sae AVX512
\c VCVTTPS2UQQ      xmmreg|mask|z,xmmrm64|b32 AVX512VL/DQ
\c VCVTTPS2UQQ      ymmreg|mask|z,xmmrm128|b32 AVX512VL/DQ
\c VCVTTPS2UQQ      zmmreg|mask|z,ymmrm256|b32|sae AVX512DQ
\c VCVTTSD2SI       reg32,xmmrm64|sae        AVX512
\c VCVTTSD2SI       reg64,xmmrm64|sae        AVX512
\c VCVTTSD2USI      reg32,xmmrm64|sae        AVX512
\c VCVTTSD2USI      reg64,xmmrm64|sae        AVX512
\c VCVTTSS2SI       reg32,xmmrm32|sae        AVX512
\c VCVTTSS2SI       reg64,xmmrm32|sae        AVX512
\c VCVTTSS2USI      reg32,xmmrm32|sae        AVX512
\c VCVTTSS2USI      reg64,xmmrm32|sae        AVX512
\c VCVTUDQ2PD       xmmreg|mask|z,xmmrm64|b32 AVX512VL
\c VCVTUDQ2PD       ymmreg|mask|z,xmmrm128|b32 AVX512VL
\c VCVTUDQ2PD       zmmreg|mask|z,ymmrm256|b32|er AVX512
\c VCVTUDQ2PS       xmmreg|mask|z,xmmrm128|b32 AVX512VL
\c VCVTUDQ2PS       ymmreg|mask|z,ymmrm256|b32 AVX512VL
\c VCVTUDQ2PS       zmmreg|mask|z,zmmrm512|b32|er AVX512
\c VCVTUQQ2PD       xmmreg|mask|z,xmmrm128|b64 AVX512VL/DQ
\c VCVTUQQ2PD       ymmreg|mask|z,ymmrm256|b64 AVX512VL/DQ
\c VCVTUQQ2PD       zmmreg|mask|z,zmmrm512|b64|er AVX512DQ
\c VCVTUQQ2PS       xmmreg|mask|z,xmmrm128|b64 AVX512VL/DQ
\c VCVTUQQ2PS       xmmreg|mask|z,ymmrm256|b64 AVX512VL/DQ
\c VCVTUQQ2PS       ymmreg|mask|z,zmmrm512|b64|er AVX512DQ
\c VCVTUSI2SD       xmmreg,xmmreg|er,rm32    AVX512
\c VCVTUSI2SD       xmmreg,xmmreg|er,rm64    AVX512
\c VCVTUSI2SS       xmmreg,xmmreg|er,rm32    AVX512
\c VCVTUSI2SS       xmmreg,xmmreg|er,rm64    AVX512
\c VDBPSADBW        xmmreg|mask|z,xmmreg*,xmmrm128,imm8 AVX512VL/BW
\c VDBPSADBW        ymmreg|mask|z,ymmreg*,ymmrm256,imm8 AVX512VL/BW
\c VDBPSADBW        zmmreg|mask|z,zmmreg*,zmmrm512,imm8 AVX512BW
\c VDIVPD           xmmreg|mask|z,xmmreg*,xmmrm128|b64 AVX512VL
\c VDIVPD           ymmreg|mask|z,ymmreg*,ymmrm256|b64 AVX512VL
\c VDIVPD           zmmreg|mask|z,zmmreg*,zmmrm512|b64|er AVX512
\c VDIVPS           xmmreg|mask|z,xmmreg*,xmmrm128|b32 AVX512VL
\c VDIVPS           ymmreg|mask|z,ymmreg*,ymmrm256|b32 AVX512VL
\c VDIVPS           zmmreg|mask|z,zmmreg*,zmmrm512|b32|er AVX512
\c VDIVSD           xmmreg|mask|z,xmmreg*,xmmrm64|er AVX512
\c VDIVSS           xmmreg|mask|z,xmmreg*,xmmrm32|er AVX512
\c VEXP2PD          zmmreg|mask|z,zmmrm512|b64|sae AVX512ER
\c VEXP2PS          zmmreg|mask|z,zmmrm512|b32|sae AVX512ER
\c VEXPANDPD        xmmreg|mask|z,mem128     AVX512VL
\c VEXPANDPD        ymmreg|mask|z,mem256     AVX512VL
\c VEXPANDPD        zmmreg|mask|z,mem512     AVX512
\c VEXPANDPD        xmmreg|mask|z,xmmreg     AVX512VL
\c VEXPANDPD        ymmreg|mask|z,ymmreg     AVX512VL
\c VEXPANDPD        zmmreg|mask|z,zmmreg     AVX512
\c VEXPANDPS        xmmreg|mask|z,mem128     AVX512VL
\c VEXPANDPS        ymmreg|mask|z,mem256     AVX512VL
\c VEXPANDPS        zmmreg|mask|z,mem512     AVX512
\c VEXPANDPS        xmmreg|mask|z,xmmreg     AVX512VL
\c VEXPANDPS        ymmreg|mask|z,ymmreg     AVX512VL
\c VEXPANDPS        zmmreg|mask|z,zmmreg     AVX512
\c VEXTRACTF32X4    xmmreg|mask|z,ymmreg,imm8 AVX512VL
\c VEXTRACTF32X4    xmmreg|mask|z,zmmreg,imm8 AVX512
\c VEXTRACTF32X4    mem128|mask,ymmreg,imm8  AVX512VL
\c VEXTRACTF32X4    mem128|mask,zmmreg,imm8  AVX512
\c VEXTRACTF32X8    ymmreg|mask|z,zmmreg,imm8 AVX512DQ
\c VEXTRACTF32X8    mem256|mask,zmmreg,imm8  AVX512DQ
\c VEXTRACTF64X2    xmmreg|mask|z,ymmreg,imm8 AVX512VL/DQ
\c VEXTRACTF64X2    xmmreg|mask|z,zmmreg,imm8 AVX512DQ
\c VEXTRACTF64X2    mem128|mask,ymmreg,imm8  AVX512VL/DQ
\c VEXTRACTF64X2    mem128|mask,zmmreg,imm8  AVX512DQ
\c VEXTRACTF64X4    ymmreg|mask|z,zmmreg,imm8 AVX512
\c VEXTRACTF64X4    mem256|mask,zmmreg,imm8  AVX512
\c VEXTRACTI32X4    xmmreg|mask|z,ymmreg,imm8 AVX512VL
\c VEXTRACTI32X4    xmmreg|mask|z,zmmreg,imm8 AVX512
\c VEXTRACTI32X4    mem128|mask,ymmreg,imm8  AVX512VL
\c VEXTRACTI32X4    mem128|mask,zmmreg,imm8  AVX512
\c VEXTRACTI32X8    ymmreg|mask|z,zmmreg,imm8 AVX512DQ
\c VEXTRACTI32X8    mem256|mask,zmmreg,imm8  AVX512DQ
\c VEXTRACTI64X2    xmmreg|mask|z,ymmreg,imm8 AVX512VL/DQ
\c VEXTRACTI64X2    xmmreg|mask|z,zmmreg,imm8 AVX512DQ
\c VEXTRACTI64X2    mem128|mask,ymmreg,imm8  AVX512VL/DQ
\c VEXTRACTI64X2    mem128|mask,zmmreg,imm8  AVX512DQ
\c VEXTRACTI64X4    ymmreg|mask|z,zmmreg,imm8 AVX512
\c VEXTRACTI64X4    mem256|mask,zmmreg,imm8  AVX512
\c VEXTRACTPS       reg32,xmmreg,imm8        AVX512
\c VEXTRACTPS       reg64,xmmreg,imm8        AVX512
\c VEXTRACTPS       mem32,xmmreg,imm8        AVX512
\c VFIXUPIMMPD      xmmreg|mask|z,xmmreg*,xmmrm128|b64,imm8 AVX512VL
\c VFIXUPIMMPD      ymmreg|mask|z,ymmreg*,ymmrm256|b64,imm8 AVX512VL
\c VFIXUPIMMPD      zmmreg|mask|z,zmmreg*,zmmrm512|b64|sae,imm8 AVX512
\c VFIXUPIMMPS      xmmreg|mask|z,xmmreg*,xmmrm128|b32,imm8 AVX512VL
\c VFIXUPIMMPS      ymmreg|mask|z,ymmreg*,ymmrm256|b32,imm8 AVX512VL
\c VFIXUPIMMPS      zmmreg|mask|z,zmmreg*,zmmrm512|b32|sae,imm8 AVX512
\c VFIXUPIMMSD      xmmreg|mask|z,xmmreg*,xmmrm64|sae,imm8 AVX512
\c VFIXUPIMMSS      xmmreg|mask|z,xmmreg*,xmmrm32|sae,imm8 AVX512
\c VFMADD132PD      xmmreg|mask|z,xmmreg,xmmrm128|b64 AVX512VL
\c VFMADD132PD      ymmreg|mask|z,ymmreg,ymmrm256|b64 AVX512VL
\c VFMADD132PD      zmmreg|mask|z,zmmreg,zmmrm512|b64|er AVX512
\c VFMADD132PS      xmmreg|mask|z,xmmreg,xmmrm128|b32 AVX512VL
\c VFMADD132PS      ymmreg|mask|z,ymmreg,ymmrm256|b32 AVX512VL
\c VFMADD132PS      zmmreg|mask|z,zmmreg,zmmrm512|b32|er AVX512
\c VFMADD132SD      xmmreg|mask|z,xmmreg,xmmrm64|er AVX512
\c VFMADD132SS      xmmreg|mask|z,xmmreg,xmmrm32|er AVX512
\c VFMADD213PD      xmmreg|mask|z,xmmreg,xmmrm128|b64 AVX512VL
\c VFMADD213PD      ymmreg|mask|z,ymmreg,ymmrm256|b64 AVX512VL
\c VFMADD213PD      zmmreg|mask|z,zmmreg,zmmrm512|b64|er AVX512
\c VFMADD213PS      xmmreg|mask|z,xmmreg,xmmrm128|b32 AVX512VL
\c VFMADD213PS      ymmreg|mask|z,ymmreg,ymmrm256|b32 AVX512VL
\c VFMADD213PS      zmmreg|mask|z,zmmreg,zmmrm512|b32|er AVX512
\c VFMADD213SD      xmmreg|mask|z,xmmreg,xmmrm64|er AVX512
\c VFMADD213SS      xmmreg|mask|z,xmmreg,xmmrm32|er AVX512
\c VFMADD231PD      xmmreg|mask|z,xmmreg,xmmrm128|b64 AVX512VL
\c VFMADD231PD      ymmreg|mask|z,ymmreg,ymmrm256|b64 AVX512VL
\c VFMADD231PD      zmmreg|mask|z,zmmreg,zmmrm512|b64|er AVX512
\c VFMADD231PS      xmmreg|mask|z,xmmreg,xmmrm128|b32 AVX512VL
\c VFMADD231PS      ymmreg|mask|z,ymmreg,ymmrm256|b32 AVX512VL
\c VFMADD231PS      zmmreg|mask|z,zmmreg,zmmrm512|b32|er AVX512
\c VFMADD231SD      xmmreg|mask|z,xmmreg,xmmrm64|er AVX512
\c VFMADD231SS      xmmreg|mask|z,xmmreg,xmmrm32|er AVX512
\c VFMADDSUB132PD   xmmreg|mask|z,xmmreg,xmmrm128|b64 AVX512VL
\c VFMADDSUB132PD   ymmreg|mask|z,ymmreg,ymmrm256|b64 AVX512VL
\c VFMADDSUB132PD   zmmreg|mask|z,zmmreg,zmmrm512|b64|er AVX512
\c VFMADDSUB132PS   xmmreg|mask|z,xmmreg,xmmrm128|b32 AVX512VL
\c VFMADDSUB132PS   ymmreg|mask|z,ymmreg,ymmrm256|b32 AVX512VL
\c VFMADDSUB132PS   zmmreg|mask|z,zmmreg,zmmrm512|b32|er AVX512
\c VFMADDSUB213PD   xmmreg|mask|z,xmmreg,xmmrm128|b64 AVX512VL
\c VFMADDSUB213PD   ymmreg|mask|z,ymmreg,ymmrm256|b64 AVX512VL
\c VFMADDSUB213PD   zmmreg|mask|z,zmmreg,zmmrm512|b64|er AVX512
\c VFMADDSUB213PS   xmmreg|mask|z,xmmreg,xmmrm128|b32 AVX512VL
\c VFMADDSUB213PS   ymmreg|mask|z,ymmreg,ymmrm256|b32 AVX512VL
\c VFMADDSUB213PS   zmmreg|mask|z,zmmreg,zmmrm512|b32|er AVX512
\c VFMADDSUB231PD   xmmreg|mask|z,xmmreg,xmmrm128|b64 AVX512VL
\c VFMADDSUB231PD   ymmreg|mask|z,ymmreg,ymmrm256|b64 AVX512VL
\c VFMADDSUB231PD   zmmreg|mask|z,zmmreg,zmmrm512|b64|er AVX512
\c VFMADDSUB231PS   xmmreg|mask|z,xmmreg,xmmrm128|b32 AVX512VL
\c VFMADDSUB231PS   ymmreg|mask|z,ymmreg,ymmrm256|b32 AVX512VL
\c VFMADDSUB231PS   zmmreg|mask|z,zmmreg,zmmrm512|b32|er AVX512
\c VFMSUB132PD      xmmreg|mask|z,xmmreg,xmmrm128|b64 AVX512VL
\c VFMSUB132PD      ymmreg|mask|z,ymmreg,ymmrm256|b64 AVX512VL
\c VFMSUB132PD      zmmreg|mask|z,zmmreg,zmmrm512|b64|er AVX512
\c VFMSUB132PS      xmmreg|mask|z,xmmreg,xmmrm128|b32 AVX512VL
\c VFMSUB132PS      ymmreg|mask|z,ymmreg,ymmrm256|b32 AVX512VL
\c VFMSUB132PS      zmmreg|mask|z,zmmreg,zmmrm512|b32|er AVX512
\c VFMSUB132SD      xmmreg|mask|z,xmmreg,xmmrm64|er AVX512
\c VFMSUB132SS      xmmreg|mask|z,xmmreg,xmmrm32|er AVX512
\c VFMSUB213PD      xmmreg|mask|z,xmmreg,xmmrm128|b64 AVX512VL
\c VFMSUB213PD      ymmreg|mask|z,ymmreg,ymmrm256|b64 AVX512VL
\c VFMSUB213PD      zmmreg|mask|z,zmmreg,zmmrm512|b64|er AVX512
\c VFMSUB213PS      xmmreg|mask|z,xmmreg,xmmrm128|b32 AVX512VL
\c VFMSUB213PS      ymmreg|mask|z,ymmreg,ymmrm256|b32 AVX512VL
\c VFMSUB213PS      zmmreg|mask|z,zmmreg,zmmrm512|b32|er AVX512
\c VFMSUB213SD      xmmreg|mask|z,xmmreg,xmmrm64|er AVX512
\c VFMSUB213SS      xmmreg|mask|z,xmmreg,xmmrm32|er AVX512
\c VFMSUB231PD      xmmreg|mask|z,xmmreg,xmmrm128|b64 AVX512VL
\c VFMSUB231PD      ymmreg|mask|z,ymmreg,ymmrm256|b64 AVX512VL
\c VFMSUB231PD      zmmreg|mask|z,zmmreg,zmmrm512|b64|er AVX512
\c VFMSUB231PS      xmmreg|mask|z,xmmreg,xmmrm128|b32 AVX512VL
\c VFMSUB231PS      ymmreg|mask|z,ymmreg,ymmrm256|b32 AVX512VL
\c VFMSUB231PS      zmmreg|mask|z,zmmreg,zmmrm512|b32|er AVX512
\c VFMSUB231SD      xmmreg|mask|z,xmmreg,xmmrm64|er AVX512
\c VFMSUB231SS      xmmreg|mask|z,xmmreg,xmmrm32|er AVX512
\c VFMSUBADD132PD   xmmreg|mask|z,xmmreg,xmmrm128|b64 AVX512VL
\c VFMSUBADD132PD   ymmreg|mask|z,ymmreg,ymmrm256|b64 AVX512VL
\c VFMSUBADD132PD   zmmreg|mask|z,zmmreg,zmmrm512|b64|er AVX512
\c VFMSUBADD132PS   xmmreg|mask|z,xmmreg,xmmrm128|b32 AVX512VL
\c VFMSUBADD132PS   ymmreg|mask|z,ymmreg,ymmrm256|b32 AVX512VL
\c VFMSUBADD132PS   zmmreg|mask|z,zmmreg,zmmrm512|b32|er AVX512
\c VFMSUBADD213PD   xmmreg|mask|z,xmmreg,xmmrm128|b64 AVX512VL
\c VFMSUBADD213PD   ymmreg|mask|z,ymmreg,ymmrm256|b64 AVX512VL
\c VFMSUBADD213PD   zmmreg|mask|z,zmmreg,zmmrm512|b64|er AVX512
\c VFMSUBADD213PS   xmmreg|mask|z,xmmreg,xmmrm128|b32 AVX512VL
\c VFMSUBADD213PS   ymmreg|mask|z,ymmreg,ymmrm256|b32 AVX512VL
\c VFMSUBADD213PS   zmmreg|mask|z,zmmreg,zmmrm512|b32|er AVX512
\c VFMSUBADD231PD   xmmreg|mask|z,xmmreg,xmmrm128|b64 AVX512VL
\c VFMSUBADD231PD   ymmreg|mask|z,ymmreg,ymmrm256|b64 AVX512VL
\c VFMSUBADD231PD   zmmreg|mask|z,zmmreg,zmmrm512|b64|er AVX512
\c VFMSUBADD231PS   xmmreg|mask|z,xmmreg,xmmrm128|b32 AVX512VL
\c VFMSUBADD231PS   ymmreg|mask|z,ymmreg,ymmrm256|b32 AVX512VL
\c VFMSUBADD231PS   zmmreg|mask|z,zmmreg,zmmrm512|b32|er AVX512
\c VFNMADD132PD     xmmreg|mask|z,xmmreg,xmmrm128|b64 AVX512VL
\c VFNMADD132PD     ymmreg|mask|z,ymmreg,ymmrm256|b64 AVX512VL
\c VFNMADD132PD     zmmreg|mask|z,zmmreg,zmmrm512|b64|er AVX512
\c VFNMADD132PS     xmmreg|mask|z,xmmreg,xmmrm128|b32 AVX512VL
\c VFNMADD132PS     ymmreg|mask|z,ymmreg,ymmrm256|b32 AVX512VL
\c VFNMADD132PS     zmmreg|mask|z,zmmreg,zmmrm512|b32|er AVX512
\c VFNMADD132SD     xmmreg|mask|z,xmmreg,xmmrm64|er AVX512
\c VFNMADD132SS     xmmreg|mask|z,xmmreg,xmmrm32|er AVX512
\c VFNMADD213PD     xmmreg|mask|z,xmmreg,xmmrm128|b64 AVX512VL
\c VFNMADD213PD     ymmreg|mask|z,ymmreg,ymmrm256|b64 AVX512VL
\c VFNMADD213PD     zmmreg|mask|z,zmmreg,zmmrm512|b64|er AVX512
\c VFNMADD213PS     xmmreg|mask|z,xmmreg,xmmrm128|b32 AVX512VL
\c VFNMADD213PS     ymmreg|mask|z,ymmreg,ymmrm256|b32 AVX512VL
\c VFNMADD213PS     zmmreg|mask|z,zmmreg,zmmrm512|b32|er AVX512
\c VFNMADD213SD     xmmreg|mask|z,xmmreg,xmmrm64|er AVX512
\c VFNMADD213SS     xmmreg|mask|z,xmmreg,xmmrm32|er AVX512
\c VFNMADD231PD     xmmreg|mask|z,xmmreg,xmmrm128|b64 AVX512VL
\c VFNMADD231PD     ymmreg|mask|z,ymmreg,ymmrm256|b64 AVX512VL
\c VFNMADD231PD     zmmreg|mask|z,zmmreg,zmmrm512|b64|er AVX512
\c VFNMADD231PS     xmmreg|mask|z,xmmreg,xmmrm128|b32 AVX512VL
\c VFNMADD231PS     ymmreg|mask|z,ymmreg,ymmrm256|b32 AVX512VL
\c VFNMADD231PS     zmmreg|mask|z,zmmreg,zmmrm512|b32|er AVX512
\c VFNMADD231SD     xmmreg|mask|z,xmmreg,xmmrm64|er AVX512
\c VFNMADD231SS     xmmreg|mask|z,xmmreg,xmmrm32|er AVX512
\c VFNMSUB132PD     xmmreg|mask|z,xmmreg,xmmrm128|b64 AVX512VL
\c VFNMSUB132PD     ymmreg|mask|z,ymmreg,ymmrm256|b64 AVX512VL
\c VFNMSUB132PD     zmmreg|mask|z,zmmreg,zmmrm512|b64|er AVX512
\c VFNMSUB132PS     xmmreg|mask|z,xmmreg,xmmrm128|b32 AVX512VL
\c VFNMSUB132PS     ymmreg|mask|z,ymmreg,ymmrm256|b32 AVX512VL
\c VFNMSUB132PS     zmmreg|mask|z,zmmreg,zmmrm512|b32|er AVX512
\c VFNMSUB132SD     xmmreg|mask|z,xmmreg,xmmrm64|er AVX512
\c VFNMSUB132SS     xmmreg|mask|z,xmmreg,xmmrm32|er AVX512
\c VFNMSUB213PD     xmmreg|mask|z,xmmreg,xmmrm128|b64 AVX512VL
\c VFNMSUB213PD     ymmreg|mask|z,ymmreg,ymmrm256|b64 AVX512VL
\c VFNMSUB213PD     zmmreg|mask|z,zmmreg,zmmrm512|b64|er AVX512
\c VFNMSUB213PS     xmmreg|mask|z,xmmreg,xmmrm128|b32 AVX512VL
\c VFNMSUB213PS     ymmreg|mask|z,ymmreg,ymmrm256|b32 AVX512VL
\c VFNMSUB213PS     zmmreg|mask|z,zmmreg,zmmrm512|b32|er AVX512
\c VFNMSUB213SD     xmmreg|mask|z,xmmreg,xmmrm64|er AVX512
\c VFNMSUB213SS     xmmreg|mask|z,xmmreg,xmmrm32|er AVX512
\c VFNMSUB231PD     xmmreg|mask|z,xmmreg,xmmrm128|b64 AVX512VL
\c VFNMSUB231PD     ymmreg|mask|z,ymmreg,ymmrm256|b64 AVX512VL
\c VFNMSUB231PD     zmmreg|mask|z,zmmreg,zmmrm512|b64|er AVX512
\c VFNMSUB231PS     xmmreg|mask|z,xmmreg,xmmrm128|b32 AVX512VL
\c VFNMSUB231PS     ymmreg|mask|z,ymmreg,ymmrm256|b32 AVX512VL
\c VFNMSUB231PS     zmmreg|mask|z,zmmreg,zmmrm512|b32|er AVX512
\c VFNMSUB231SD     xmmreg|mask|z,xmmreg,xmmrm64|er AVX512
\c VFNMSUB231SS     xmmreg|mask|z,xmmreg,xmmrm32|er AVX512
\c VFPCLASSPD       kreg|mask,xmmrm128|b64,imm8 AVX512VL/DQ
\c VFPCLASSPD       kreg|mask,ymmrm256|b64,imm8 AVX512VL/DQ
\c VFPCLASSPD       kreg|mask,zmmrm512|b64,imm8 AVX512DQ
\c VFPCLASSPS       kreg|mask,xmmrm128|b32,imm8 AVX512VL/DQ
\c VFPCLASSPS       kreg|mask,ymmrm256|b32,imm8 AVX512VL/DQ
\c VFPCLASSPS       kreg|mask,zmmrm512|b32,imm8 AVX512DQ
\c VFPCLASSSD       kreg|mask,xmmrm64,imm8   AVX512DQ
\c VFPCLASSSS       kreg|mask,xmmrm32,imm8   AVX512DQ
\c VGATHERDPD       xmmreg|mask,xmem64       AVX512VL
\c VGATHERDPD       ymmreg|mask,xmem64       AVX512VL
\c VGATHERDPD       zmmreg|mask,ymem64       AVX512
\c VGATHERDPS       xmmreg|mask,xmem32       AVX512VL
\c VGATHERDPS       ymmreg|mask,ymem32       AVX512VL
\c VGATHERDPS       zmmreg|mask,zmem32       AVX512
\c VGATHERPF0DPD    ymem64|mask              AVX512PF
\c VGATHERPF0DPS    zmem32|mask              AVX512PF
\c VGATHERPF0QPD    zmem64|mask              AVX512PF
\c VGATHERPF0QPS    zmem32|mask              AVX512PF
\c VGATHERPF1DPD    ymem64|mask              AVX512PF
\c VGATHERPF1DPS    zmem32|mask              AVX512PF
\c VGATHERPF1QPD    zmem64|mask              AVX512PF
\c VGATHERPF1QPS    zmem32|mask              AVX512PF
\c VGATHERQPD       xmmreg|mask,xmem64       AVX512VL
\c VGATHERQPD       ymmreg|mask,ymem64       AVX512VL
\c VGATHERQPD       zmmreg|mask,zmem64       AVX512
\c VGATHERQPS       xmmreg|mask,xmem32       AVX512VL
\c VGATHERQPS       xmmreg|mask,ymem32       AVX512VL
\c VGATHERQPS       ymmreg|mask,zmem32       AVX512
\c VGETEXPPD        xmmreg|mask|z,xmmrm128|b64 AVX512VL
\c VGETEXPPD        ymmreg|mask|z,ymmrm256|b64 AVX512VL
\c VGETEXPPD        zmmreg|mask|z,zmmrm512|b64|sae AVX512
\c VGETEXPPS        xmmreg|mask|z,xmmrm128|b32 AVX512VL
\c VGETEXPPS        ymmreg|mask|z,ymmrm256|b32 AVX512VL
\c VGETEXPPS        zmmreg|mask|z,zmmrm512|b32|sae AVX512
\c VGETEXPSD        xmmreg|mask|z,xmmreg,xmmrm64|sae AVX512
\c VGETEXPSS        xmmreg|mask|z,xmmreg,xmmrm32|sae AVX512
\c VGETMANTPD       xmmreg|mask|z,xmmrm128|b64,imm8 AVX512VL
\c VGETMANTPD       ymmreg|mask|z,ymmrm256|b64,imm8 AVX512VL
\c VGETMANTPD       zmmreg|mask|z,zmmrm512|b64|sae,imm8 AVX512
\c VGETMANTPS       xmmreg|mask|z,xmmrm128|b32,imm8 AVX512VL
\c VGETMANTPS       ymmreg|mask|z,ymmrm256|b32,imm8 AVX512VL
\c VGETMANTPS       zmmreg|mask|z,zmmrm512|b32|sae,imm8 AVX512
\c VGETMANTSD       xmmreg|mask|z,xmmreg,xmmrm64|sae,imm8 AVX512
\c VGETMANTSS       xmmreg|mask|z,xmmreg,xmmrm32|sae,imm8 AVX512
\c VINSERTF32X4     ymmreg|mask|z,ymmreg*,xmmrm128,imm8 AVX512VL
\c VINSERTF32X4     zmmreg|mask|z,zmmreg*,xmmrm128,imm8 AVX512
\c VINSERTF32X8     zmmreg|mask|z,zmmreg*,ymmrm256,imm8 AVX512DQ
\c VINSERTF64X2     ymmreg|mask|z,ymmreg*,xmmrm128,imm8 AVX512VL/DQ
\c VINSERTF64X2     zmmreg|mask|z,zmmreg*,xmmrm128,imm8 AVX512DQ
\c VINSERTF64X4     zmmreg|mask|z,zmmreg*,ymmrm256,imm8 AVX512
\c VINSERTI32X4     ymmreg|mask|z,ymmreg*,xmmrm128,imm8 AVX512VL
\c VINSERTI32X4     zmmreg|mask|z,zmmreg*,xmmrm128,imm8 AVX512
\c VINSERTI32X8     zmmreg|mask|z,zmmreg*,ymmrm256,imm8 AVX512DQ
\c VINSERTI64X2     ymmreg|mask|z,ymmreg*,xmmrm128,imm8 AVX512VL/DQ
\c VINSERTI64X2     zmmreg|mask|z,zmmreg*,xmmrm128,imm8 AVX512DQ
\c VINSERTI64X4     zmmreg|mask|z,zmmreg*,ymmrm256,imm8 AVX512
\c VINSERTPS        xmmreg,xmmreg*,xmmrm32,imm8 AVX512
\c VMAXPD           xmmreg|mask|z,xmmreg*,xmmrm128|b64 AVX512VL
\c VMAXPD           ymmreg|mask|z,ymmreg*,ymmrm256|b64 AVX512VL
\c VMAXPD           zmmreg|mask|z,zmmreg*,zmmrm512|b64|sae AVX512
\c VMAXPS           xmmreg|mask|z,xmmreg*,xmmrm128|b32 AVX512VL
\c VMAXPS           ymmreg|mask|z,ymmreg*,ymmrm256|b32 AVX512VL
\c VMAXPS           zmmreg|mask|z,zmmreg*,zmmrm512|b32|sae AVX512
\c VMAXSD           xmmreg|mask|z,xmmreg*,xmmrm64|sae AVX512
\c VMAXSS           xmmreg|mask|z,xmmreg*,xmmrm32|sae AVX512
\c VMINPD           xmmreg|mask|z,xmmreg*,xmmrm128|b64 AVX512VL
\c VMINPD           ymmreg|mask|z,ymmreg*,ymmrm256|b64 AVX512VL
\c VMINPD           zmmreg|mask|z,zmmreg*,zmmrm512|b64|sae AVX512
\c VMINPS           xmmreg|mask|z,xmmreg*,xmmrm128|b32 AVX512VL
\c VMINPS           ymmreg|mask|z,ymmreg*,ymmrm256|b32 AVX512VL
\c VMINPS           zmmreg|mask|z,zmmreg*,zmmrm512|b32|sae AVX512
\c VMINSD           xmmreg|mask|z,xmmreg*,xmmrm64|sae AVX512
\c VMINSS           xmmreg|mask|z,xmmreg*,xmmrm32|sae AVX512
\c VMOVAPD          xmmreg|mask|z,xmmrm128   AVX512VL
\c VMOVAPD          ymmreg|mask|z,ymmrm256   AVX512VL
\c VMOVAPD          zmmreg|mask|z,zmmrm512   AVX512
\c VMOVAPD          xmmreg|mask|z,xmmreg     AVX512VL
\c VMOVAPD          ymmreg|mask|z,ymmreg     AVX512VL
\c VMOVAPD          zmmreg|mask|z,zmmreg     AVX512
\c VMOVAPD          mem128|mask,xmmreg       AVX512VL
\c VMOVAPD          mem256|mask,ymmreg       AVX512VL
\c VMOVAPD          mem512|mask,zmmreg       AVX512
\c VMOVAPS          xmmreg|mask|z,xmmrm128   AVX512VL
\c VMOVAPS          ymmreg|mask|z,ymmrm256   AVX512VL
\c VMOVAPS          zmmreg|mask|z,zmmrm512   AVX512
\c VMOVAPS          xmmreg|mask|z,xmmreg     AVX512VL
\c VMOVAPS          ymmreg|mask|z,ymmreg     AVX512VL
\c VMOVAPS          zmmreg|mask|z,zmmreg     AVX512
\c VMOVAPS          mem128|mask,xmmreg       AVX512VL
\c VMOVAPS          mem256|mask,ymmreg       AVX512VL
\c VMOVAPS          mem512|mask,zmmreg       AVX512
\c VMOVD            xmmreg,rm32              AVX512
\c VMOVD            rm32,xmmreg              AVX512
\c VMOVDDUP         xmmreg|mask|z,xmmrm64    AVX512VL
\c VMOVDDUP         ymmreg|mask|z,ymmrm256   AVX512VL
\c VMOVDDUP         zmmreg|mask|z,zmmrm512   AVX512
\c VMOVDQA32        xmmreg|mask|z,xmmrm128   AVX512VL
\c VMOVDQA32        ymmreg|mask|z,ymmrm256   AVX512VL
\c VMOVDQA32        zmmreg|mask|z,zmmrm512   AVX512
\c VMOVDQA32        xmmrm128|mask|z,xmmreg   AVX512VL
\c VMOVDQA32        ymmrm256|mask|z,ymmreg   AVX512VL
\c VMOVDQA32        zmmrm512|mask|z,zmmreg   AVX512
\c VMOVDQA64        xmmreg|mask|z,xmmrm128   AVX512VL
\c VMOVDQA64        ymmreg|mask|z,ymmrm256   AVX512VL
\c VMOVDQA64        zmmreg|mask|z,zmmrm512   AVX512
\c VMOVDQA64        xmmrm128|mask|z,xmmreg   AVX512VL
\c VMOVDQA64        ymmrm256|mask|z,ymmreg   AVX512VL
\c VMOVDQA64        zmmrm512|mask|z,zmmreg   AVX512
\c VMOVDQU16        xmmreg|mask|z,xmmrm128   AVX512VL/BW
\c VMOVDQU16        ymmreg|mask|z,ymmrm256   AVX512VL/BW
\c VMOVDQU16        zmmreg|mask|z,zmmrm512   AVX512BW
\c VMOVDQU16        xmmrm128|mask|z,xmmreg   AVX512VL/BW
\c VMOVDQU16        ymmrm256|mask|z,ymmreg   AVX512VL/BW
\c VMOVDQU16        zmmrm512|mask|z,zmmreg   AVX512BW
\c VMOVDQU32        xmmreg|mask|z,xmmrm128   AVX512VL
\c VMOVDQU32        ymmreg|mask|z,ymmrm256   AVX512VL
\c VMOVDQU32        zmmreg|mask|z,zmmrm512   AVX512
\c VMOVDQU32        xmmrm128|mask|z,xmmreg   AVX512VL
\c VMOVDQU32        ymmrm256|mask|z,ymmreg   AVX512VL
\c VMOVDQU32        zmmrm512|mask|z,zmmreg   AVX512
\c VMOVDQU64        xmmreg|mask|z,xmmrm128   AVX512VL
\c VMOVDQU64        ymmreg|mask|z,ymmrm256   AVX512VL
\c VMOVDQU64        zmmreg|mask|z,zmmrm512   AVX512
\c VMOVDQU64        xmmrm128|mask|z,xmmreg   AVX512VL
\c VMOVDQU64        ymmrm256|mask|z,ymmreg   AVX512VL
\c VMOVDQU64        zmmrm512|mask|z,zmmreg   AVX512
\c VMOVDQU8         xmmreg|mask|z,xmmrm128   AVX512VL/BW
\c VMOVDQU8         ymmreg|mask|z,ymmrm256   AVX512VL/BW
\c VMOVDQU8         zmmreg|mask|z,zmmrm512   AVX512BW
\c VMOVDQU8         xmmrm128|mask|z,xmmreg   AVX512VL/BW
\c VMOVDQU8         ymmrm256|mask|z,ymmreg   AVX512VL/BW
\c VMOVDQU8         zmmrm512|mask|z,zmmreg   AVX512BW
\c VMOVHLPS         xmmreg,xmmreg*,xmmreg    AVX512
\c VMOVHPD          xmmreg,xmmreg*,mem64     AVX512
\c VMOVHPD          mem64,xmmreg             AVX512
\c VMOVHPS          xmmreg,xmmreg*,mem64     AVX512
\c VMOVHPS          mem64,xmmreg             AVX512
\c VMOVLHPS         xmmreg,xmmreg*,xmmreg    AVX512
\c VMOVLPD          xmmreg,xmmreg*,mem64     AVX512
\c VMOVLPD          mem64,xmmreg             AVX512
\c VMOVLPS          xmmreg,xmmreg*,mem64     AVX512
\c VMOVLPS          mem64,xmmreg             AVX512
\c VMOVNTDQ         mem128,xmmreg            AVX512VL
\c VMOVNTDQ         mem256,ymmreg            AVX512VL
\c VMOVNTDQ         mem512,zmmreg            AVX512
\c VMOVNTDQA        xmmreg,mem128            AVX512VL
\c VMOVNTDQA        ymmreg,mem256            AVX512VL
\c VMOVNTDQA        zmmreg,mem512            AVX512
\c VMOVNTPD         mem128,xmmreg            AVX512VL
\c VMOVNTPD         mem256,ymmreg            AVX512VL
\c VMOVNTPD         mem512,zmmreg            AVX512
\c VMOVNTPS         mem128,xmmreg            AVX512VL
\c VMOVNTPS         mem256,ymmreg            AVX512VL
\c VMOVNTPS         mem512,zmmreg            AVX512
\c VMOVQ            xmmreg,rm64              AVX512
\c VMOVQ            rm64,xmmreg              AVX512
\c VMOVQ            xmmreg,xmmrm64           AVX512
\c VMOVQ            xmmrm64,xmmreg           AVX512
\c VMOVSD           xmmreg|mask|z,mem64      AVX512
\c VMOVSD           mem64|mask,xmmreg        AVX512
\c VMOVSD           xmmreg|mask|z,xmmreg*,xmmreg AVX512
\c VMOVSD           xmmreg|mask|z,xmmreg*,xmmreg AVX512
\c VMOVSHDUP        xmmreg|mask|z,xmmrm128   AVX512VL
\c VMOVSHDUP        ymmreg|mask|z,ymmrm256   AVX512VL
\c VMOVSHDUP        zmmreg|mask|z,zmmrm512   AVX512
\c VMOVSLDUP        xmmreg|mask|z,xmmrm128   AVX512VL
\c VMOVSLDUP        ymmreg|mask|z,ymmrm256   AVX512VL
\c VMOVSLDUP        zmmreg|mask|z,zmmrm512   AVX512
\c VMOVSS           xmmreg|mask|z,mem32      AVX512
\c VMOVSS           mem32|mask,xmmreg        AVX512
\c VMOVSS           xmmreg|mask|z,xmmreg*,xmmreg AVX512
\c VMOVSS           xmmreg|mask|z,xmmreg*,xmmreg AVX512
\c VMOVUPD          xmmreg|mask|z,xmmrm128   AVX512VL
\c VMOVUPD          ymmreg|mask|z,ymmrm256   AVX512VL
\c VMOVUPD          zmmreg|mask|z,zmmrm512   AVX512
\c VMOVUPD          xmmreg|mask|z,xmmreg     AVX512VL
\c VMOVUPD          ymmreg|mask|z,ymmreg     AVX512VL
\c VMOVUPD          zmmreg|mask|z,zmmreg     AVX512
\c VMOVUPD          mem128|mask,xmmreg       AVX512VL
\c VMOVUPD          mem256|mask,ymmreg       AVX512VL
\c VMOVUPD          mem512|mask,zmmreg       AVX512
\c VMOVUPS          xmmreg|mask|z,xmmrm128   AVX512VL
\c VMOVUPS          ymmreg|mask|z,ymmrm256   AVX512VL
\c VMOVUPS          zmmreg|mask|z,zmmrm512   AVX512
\c VMOVUPS          xmmreg|mask|z,xmmreg     AVX512VL
\c VMOVUPS          ymmreg|mask|z,ymmreg     AVX512VL
\c VMOVUPS          zmmreg|mask|z,zmmreg     AVX512
\c VMOVUPS          mem128|mask,xmmreg       AVX512VL
\c VMOVUPS          mem256|mask,ymmreg       AVX512VL
\c VMOVUPS          mem512|mask,zmmreg       AVX512
\c VMULPD           xmmreg|mask|z,xmmreg*,xmmrm128|b64 AVX512VL
\c VMULPD           ymmreg|mask|z,ymmreg*,ymmrm256|b64 AVX512VL
\c VMULPD           zmmreg|mask|z,zmmreg*,zmmrm512|b64|er AVX512
\c VMULPS           xmmreg|mask|z,xmmreg*,xmmrm128|b32 AVX512VL
\c VMULPS           ymmreg|mask|z,ymmreg*,ymmrm256|b32 AVX512VL
\c VMULPS           zmmreg|mask|z,zmmreg*,zmmrm512|b32|er AVX512
\c VMULSD           xmmreg|mask|z,xmmreg*,xmmrm64|er AVX512
\c VMULSS           xmmreg|mask|z,xmmreg*,xmmrm32|er AVX512
\c VORPD            xmmreg|mask|z,xmmreg*,xmmrm128|b64 AVX512VL/DQ
\c VORPD            ymmreg|mask|z,ymmreg*,ymmrm256|b64 AVX512VL/DQ
\c VORPD            zmmreg|mask|z,zmmreg*,zmmrm512|b64 AVX512DQ
\c VORPS            xmmreg|mask|z,xmmreg*,xmmrm128|b32 AVX512VL/DQ
\c VORPS            ymmreg|mask|z,ymmreg*,ymmrm256|b32 AVX512VL/DQ
\c VORPS            zmmreg|mask|z,zmmreg*,zmmrm512|b32 AVX512DQ
\c VPABSB           xmmreg|mask|z,xmmrm128   AVX512VL/BW
\c VPABSB           ymmreg|mask|z,ymmrm256   AVX512VL/BW
\c VPABSB           zmmreg|mask|z,zmmrm512   AVX512BW
\c VPABSD           xmmreg|mask|z,xmmrm128|b32 AVX512VL
\c VPABSD           ymmreg|mask|z,ymmrm256|b32 AVX512VL
\c VPABSD           zmmreg|mask|z,zmmrm512|b32 AVX512
\c VPABSQ           xmmreg|mask|z,xmmrm128|b64 AVX512VL
\c VPABSQ           ymmreg|mask|z,ymmrm256|b64 AVX512VL
\c VPABSQ           zmmreg|mask|z,zmmrm512|b64 AVX512
\c VPABSW           xmmreg|mask|z,xmmrm128   AVX512VL/BW
\c VPABSW           ymmreg|mask|z,ymmrm256   AVX512VL/BW
\c VPABSW           zmmreg|mask|z,zmmrm512   AVX512BW
\c VPACKSSDW        xmmreg|mask|z,xmmreg*,xmmrm128|b32 AVX512VL/BW
\c VPACKSSDW        ymmreg|mask|z,ymmreg*,ymmrm256|b32 AVX512VL/BW
\c VPACKSSDW        zmmreg|mask|z,zmmreg*,zmmrm512|b32 AVX512BW
\c VPACKSSWB        xmmreg|mask|z,xmmreg*,xmmrm128 AVX512VL/BW
\c VPACKSSWB        ymmreg|mask|z,ymmreg*,ymmrm256 AVX512VL/BW
\c VPACKSSWB        zmmreg|mask|z,zmmreg*,zmmrm512 AVX512BW
\c VPACKUSDW        xmmreg|mask|z,xmmreg*,xmmrm128|b32 AVX512VL/BW
\c VPACKUSDW        ymmreg|mask|z,ymmreg*,ymmrm256|b32 AVX512VL/BW
\c VPACKUSDW        zmmreg|mask|z,zmmreg*,zmmrm512|b32 AVX512BW
\c VPACKUSWB        xmmreg|mask|z,xmmreg*,xmmrm128 AVX512VL/BW
\c VPACKUSWB        ymmreg|mask|z,ymmreg*,ymmrm256 AVX512VL/BW
\c VPACKUSWB        zmmreg|mask|z,zmmreg*,zmmrm512 AVX512BW
\c VPADDB           xmmreg|mask|z,xmmreg*,xmmrm128 AVX512VL/BW
\c VPADDB           ymmreg|mask|z,ymmreg*,ymmrm256 AVX512VL/BW
\c VPADDB           zmmreg|mask|z,zmmreg*,zmmrm512 AVX512BW
\c VPADDD           xmmreg|mask|z,xmmreg*,xmmrm128|b32 AVX512VL
\c VPADDD           ymmreg|mask|z,ymmreg*,ymmrm256|b32 AVX512VL
\c VPADDD           zmmreg|mask|z,zmmreg*,zmmrm512|b32 AVX512
\c VPADDQ           xmmreg|mask|z,xmmreg*,xmmrm128|b64 AVX512VL
\c VPADDQ           ymmreg|mask|z,ymmreg*,ymmrm256|b64 AVX512VL
\c VPADDQ           zmmreg|mask|z,zmmreg*,zmmrm512|b64 AVX512
\c VPADDSB          xmmreg|mask|z,xmmreg*,xmmrm128 AVX512VL/BW
\c VPADDSB          ymmreg|mask|z,ymmreg*,ymmrm256 AVX512VL/BW
\c VPADDSB          zmmreg|mask|z,zmmreg*,zmmrm512 AVX512BW
\c VPADDSW          xmmreg|mask|z,xmmreg*,xmmrm128 AVX512VL/BW
\c VPADDSW          ymmreg|mask|z,ymmreg*,ymmrm256 AVX512VL/BW
\c VPADDSW          zmmreg|mask|z,zmmreg*,zmmrm512 AVX512BW
\c VPADDUSB         xmmreg|mask|z,xmmreg*,xmmrm128 AVX512VL/BW
\c VPADDUSB         ymmreg|mask|z,ymmreg*,ymmrm256 AVX512VL/BW
\c VPADDUSB         zmmreg|mask|z,zmmreg*,zmmrm512 AVX512BW
\c VPADDUSW         xmmreg|mask|z,xmmreg*,xmmrm128 AVX512VL/BW
\c VPADDUSW         ymmreg|mask|z,ymmreg*,ymmrm256 AVX512VL/BW
\c VPADDUSW         zmmreg|mask|z,zmmreg*,zmmrm512 AVX512BW
\c VPADDW           xmmreg|mask|z,xmmreg*,xmmrm128 AVX512VL/BW
\c VPADDW           ymmreg|mask|z,ymmreg*,ymmrm256 AVX512VL/BW
\c VPADDW           zmmreg|mask|z,zmmreg*,zmmrm512 AVX512BW
\c VPALIGNR         xmmreg|mask|z,xmmreg*,xmmrm128,imm8 AVX512VL/BW
\c VPALIGNR         ymmreg|mask|z,ymmreg*,ymmrm256,imm8 AVX512VL/BW
\c VPALIGNR         zmmreg|mask|z,zmmreg*,zmmrm512,imm8 AVX512BW
\c VPANDD           xmmreg|mask|z,xmmreg*,xmmrm128|b32 AVX512VL
\c VPANDD           ymmreg|mask|z,ymmreg*,ymmrm256|b32 AVX512VL
\c VPANDD           zmmreg|mask|z,zmmreg*,zmmrm512|b32 AVX512
\c VPANDND          xmmreg|mask|z,xmmreg*,xmmrm128|b32 AVX512VL
\c VPANDND          ymmreg|mask|z,ymmreg*,ymmrm256|b32 AVX512VL
\c VPANDND          zmmreg|mask|z,zmmreg*,zmmrm512|b32 AVX512
\c VPANDNQ          xmmreg|mask|z,xmmreg*,xmmrm128|b64 AVX512VL
\c VPANDNQ          ymmreg|mask|z,ymmreg*,ymmrm256|b64 AVX512VL
\c VPANDNQ          zmmreg|mask|z,zmmreg*,zmmrm512|b64 AVX512
\c VPANDQ           xmmreg|mask|z,xmmreg*,xmmrm128|b64 AVX512VL
\c VPANDQ           ymmreg|mask|z,ymmreg*,ymmrm256|b64 AVX512VL
\c VPANDQ           zmmreg|mask|z,zmmreg*,zmmrm512|b64 AVX512
\c VPAVGB           xmmreg|mask|z,xmmreg*,xmmrm128 AVX512VL/BW
\c VPAVGB           ymmreg|mask|z,ymmreg*,ymmrm256 AVX512VL/BW
\c VPAVGB           zmmreg|mask|z,zmmreg*,zmmrm512 AVX512BW
\c VPAVGW           xmmreg|mask|z,xmmreg*,xmmrm128 AVX512VL/BW
\c VPAVGW           ymmreg|mask|z,ymmreg*,ymmrm256 AVX512VL/BW
\c VPAVGW           zmmreg|mask|z,zmmreg*,zmmrm512 AVX512BW
\c VPBLENDMB        xmmreg|mask|z,xmmreg,xmmrm128 AVX512VL/BW
\c VPBLENDMB        ymmreg|mask|z,ymmreg,ymmrm256 AVX512VL/BW
\c VPBLENDMB        zmmreg|mask|z,zmmreg,zmmrm512 AVX512BW
\c VPBLENDMD        xmmreg|mask|z,xmmreg,xmmrm128|b32 AVX512VL
\c VPBLENDMD        ymmreg|mask|z,ymmreg,ymmrm256|b32 AVX512VL
\c VPBLENDMD        zmmreg|mask|z,zmmreg,zmmrm512|b32 AVX512
\c VPBLENDMQ        xmmreg|mask|z,xmmreg,xmmrm128|b64 AVX512VL
\c VPBLENDMQ        ymmreg|mask|z,ymmreg,ymmrm256|b64 AVX512VL
\c VPBLENDMQ        zmmreg|mask|z,zmmreg,zmmrm512|b64 AVX512
\c VPBLENDMW        xmmreg|mask|z,xmmreg,xmmrm128 AVX512VL/BW
\c VPBLENDMW        ymmreg|mask|z,ymmreg,ymmrm256 AVX512VL/BW
\c VPBLENDMW        zmmreg|mask|z,zmmreg,zmmrm512 AVX512BW
\c VPBROADCASTB     xmmreg|mask|z,xmmrm8     AVX512VL/BW
\c VPBROADCASTB     ymmreg|mask|z,xmmrm8     AVX512VL/BW
\c VPBROADCASTB     zmmreg|mask|z,xmmrm8     AVX512BW
\c VPBROADCASTB     xmmreg|mask|z,reg8       AVX512VL/BW
\c VPBROADCASTB     xmmreg|mask|z,reg16      AVX512VL/BW
\c VPBROADCASTB     xmmreg|mask|z,reg32      AVX512VL/BW
\c VPBROADCASTB     xmmreg|mask|z,reg64      AVX512VL/BW
\c VPBROADCASTB     ymmreg|mask|z,reg8       AVX512VL/BW
\c VPBROADCASTB     ymmreg|mask|z,reg16      AVX512VL/BW
\c VPBROADCASTB     ymmreg|mask|z,reg32      AVX512VL/BW
\c VPBROADCASTB     ymmreg|mask|z,reg64      AVX512VL/BW
\c VPBROADCASTB     zmmreg|mask|z,reg8       AVX512BW
\c VPBROADCASTB     zmmreg|mask|z,reg16      AVX512BW
\c VPBROADCASTB     zmmreg|mask|z,reg32      AVX512BW
\c VPBROADCASTB     zmmreg|mask|z,reg64      AVX512BW
\c VPBROADCASTD     xmmreg|mask|z,mem32      AVX512VL
\c VPBROADCASTD     ymmreg|mask|z,mem32      AVX512VL
\c VPBROADCASTD     zmmreg|mask|z,mem32      AVX512
\c VPBROADCASTD     xmmreg|mask|z,xmmreg     AVX512VL
\c VPBROADCASTD     ymmreg|mask|z,xmmreg     AVX512VL
\c VPBROADCASTD     zmmreg|mask|z,xmmreg     AVX512
\c VPBROADCASTD     xmmreg|mask|z,reg32      AVX512VL
\c VPBROADCASTD     ymmreg|mask|z,reg32      AVX512VL
\c VPBROADCASTD     zmmreg|mask|z,reg32      AVX512
\c VPBROADCASTMB2Q  xmmreg,kreg              AVX512VL/CD
\c VPBROADCASTMB2Q  ymmreg,kreg              AVX512VL/CD
\c VPBROADCASTMB2Q  zmmreg,kreg              AVX512CD
\c VPBROADCASTMW2D  xmmreg,kreg              AVX512VL/CD
\c VPBROADCASTMW2D  ymmreg,kreg              AVX512VL/CD
\c VPBROADCASTMW2D  zmmreg,kreg              AVX512CD
\c VPBROADCASTQ     xmmreg|mask|z,mem64      AVX512VL
\c VPBROADCASTQ     ymmreg|mask|z,mem64      AVX512VL
\c VPBROADCASTQ     zmmreg|mask|z,mem64      AVX512
\c VPBROADCASTQ     xmmreg|mask|z,xmmreg     AVX512VL
\c VPBROADCASTQ     ymmreg|mask|z,xmmreg     AVX512VL
\c VPBROADCASTQ     zmmreg|mask|z,xmmreg     AVX512
\c VPBROADCASTQ     xmmreg|mask|z,reg64      AVX512VL
\c VPBROADCASTQ     ymmreg|mask|z,reg64      AVX512VL
\c VPBROADCASTQ     zmmreg|mask|z,reg64      AVX512
\c VPBROADCASTW     xmmreg|mask|z,xmmrm16    AVX512VL/BW
\c VPBROADCASTW     ymmreg|mask|z,xmmrm16    AVX512VL/BW
\c VPBROADCASTW     zmmreg|mask|z,xmmrm16    AVX512BW
\c VPBROADCASTW     xmmreg|mask|z,reg16      AVX512VL/BW
\c VPBROADCASTW     xmmreg|mask|z,reg32      AVX512VL/BW
\c VPBROADCASTW     xmmreg|mask|z,reg64      AVX512VL/BW
\c VPBROADCASTW     ymmreg|mask|z,reg16      AVX512VL/BW
\c VPBROADCASTW     ymmreg|mask|z,reg32      AVX512VL/BW
\c VPBROADCASTW     ymmreg|mask|z,reg64      AVX512VL/BW
\c VPBROADCASTW     zmmreg|mask|z,reg16      AVX512BW
\c VPBROADCASTW     zmmreg|mask|z,reg32      AVX512BW
\c VPBROADCASTW     zmmreg|mask|z,reg64      AVX512BW
\c VPCMPEQB         kreg|mask,xmmreg,xmmrm128 AVX512VL/BW
\c VPCMPEQB         kreg|mask,ymmreg,ymmrm256 AVX512VL/BW
\c VPCMPEQB         kreg|mask,zmmreg,zmmrm512 AVX512BW
\c VPCMPEQD         kreg|mask,xmmreg,xmmrm128|b32 AVX512VL
\c VPCMPEQD         kreg|mask,ymmreg,ymmrm256|b32 AVX512VL
\c VPCMPEQD         kreg|mask,zmmreg,zmmrm512|b32 AVX512
\c VPCMPEQQ         kreg|mask,xmmreg,xmmrm128|b64 AVX512VL
\c VPCMPEQQ         kreg|mask,ymmreg,ymmrm256|b64 AVX512VL
\c VPCMPEQQ         kreg|mask,zmmreg,zmmrm512|b64 AVX512
\c VPCMPEQW         kreg|mask,xmmreg,xmmrm128 AVX512VL/BW
\c VPCMPEQW         kreg|mask,ymmreg,ymmrm256 AVX512VL/BW
\c VPCMPEQW         kreg|mask,zmmreg,zmmrm512 AVX512BW
\c VPCMPGTB         kreg|mask,xmmreg,xmmrm128 AVX512VL/BW
\c VPCMPGTB         kreg|mask,ymmreg,ymmrm256 AVX512VL/BW
\c VPCMPGTB         kreg|mask,zmmreg,zmmrm512 AVX512BW
\c VPCMPGTD         kreg|mask,xmmreg,xmmrm128|b32 AVX512VL
\c VPCMPGTD         kreg|mask,ymmreg,ymmrm256|b32 AVX512VL
\c VPCMPGTD         kreg|mask,zmmreg,zmmrm512|b32 AVX512
\c VPCMPGTQ         kreg|mask,xmmreg,xmmrm128|b64 AVX512VL
\c VPCMPGTQ         kreg|mask,ymmreg,ymmrm256|b64 AVX512VL
\c VPCMPGTQ         kreg|mask,zmmreg,zmmrm512|b64 AVX512
\c VPCMPGTW         kreg|mask,xmmreg,xmmrm128 AVX512VL/BW
\c VPCMPGTW         kreg|mask,ymmreg,ymmrm256 AVX512VL/BW
\c VPCMPGTW         kreg|mask,zmmreg,zmmrm512 AVX512BW
\c VPCMPEQB         kreg|mask,xmmreg,xmmrm128 AVX512VL/BW
\c VPCMPEQB         kreg|mask,ymmreg,ymmrm256 AVX512VL/BW
\c VPCMPEQB         kreg|mask,zmmreg,zmmrm512 AVX512BW
\c VPCMPEQD         kreg|mask,xmmreg,xmmrm128|b32 AVX512VL
\c VPCMPEQD         kreg|mask,ymmreg,ymmrm256|b32 AVX512VL
\c VPCMPEQD         kreg|mask,zmmreg,zmmrm512|b32 AVX512
\c VPCMPEQQ         kreg|mask,xmmreg,xmmrm128|b64 AVX512VL
\c VPCMPEQQ         kreg|mask,ymmreg,ymmrm256|b64 AVX512VL
\c VPCMPEQQ         kreg|mask,zmmreg,zmmrm512|b64 AVX512
\c VPCMPEQUB        kreg|mask,xmmreg,xmmrm128 AVX512VL/BW
\c VPCMPEQUB        kreg|mask,ymmreg,ymmrm256 AVX512VL/BW
\c VPCMPEQUB        kreg|mask,zmmreg,zmmrm512 AVX512BW
\c VPCMPEQUD        kreg|mask,xmmreg,xmmrm128|b32 AVX512VL
\c VPCMPEQUD        kreg|mask,ymmreg,ymmrm256|b32 AVX512VL
\c VPCMPEQUD        kreg|mask,zmmreg,zmmrm512|b32 AVX512
\c VPCMPEQUQ        kreg|mask,xmmreg,xmmrm128|b64 AVX512VL
\c VPCMPEQUQ        kreg|mask,ymmreg,ymmrm256|b64 AVX512VL
\c VPCMPEQUQ        kreg|mask,zmmreg,zmmrm512|b64 AVX512
\c VPCMPEQUW        kreg|mask,xmmreg,xmmrm128 AVX512VL/BW
\c VPCMPEQUW        kreg|mask,ymmreg,ymmrm256 AVX512VL/BW
\c VPCMPEQUW        kreg|mask,zmmreg,zmmrm512 AVX512BW
\c VPCMPEQW         kreg|mask,xmmreg,xmmrm128 AVX512VL/BW
\c VPCMPEQW         kreg|mask,ymmreg,ymmrm256 AVX512VL/BW
\c VPCMPEQW         kreg|mask,zmmreg,zmmrm512 AVX512BW
\c VPCMPGEB         kreg|mask,xmmreg,xmmrm128 AVX512VL/BW
\c VPCMPGEB         kreg|mask,ymmreg,ymmrm256 AVX512VL/BW
\c VPCMPGEB         kreg|mask,zmmreg,zmmrm512 AVX512BW
\c VPCMPGED         kreg|mask,xmmreg,xmmrm128|b32 AVX512VL
\c VPCMPGED         kreg|mask,ymmreg,ymmrm256|b32 AVX512VL
\c VPCMPGED         kreg|mask,zmmreg,zmmrm512|b32 AVX512
\c VPCMPGEQ         kreg|mask,xmmreg,xmmrm128|b64 AVX512VL
\c VPCMPGEQ         kreg|mask,ymmreg,ymmrm256|b64 AVX512VL
\c VPCMPGEQ         kreg|mask,zmmreg,zmmrm512|b64 AVX512
\c VPCMPGEUB        kreg|mask,xmmreg,xmmrm128 AVX512VL/BW
\c VPCMPGEUB        kreg|mask,ymmreg,ymmrm256 AVX512VL/BW
\c VPCMPGEUB        kreg|mask,zmmreg,zmmrm512 AVX512BW
\c VPCMPGEUD        kreg|mask,xmmreg,xmmrm128|b32 AVX512VL
\c VPCMPGEUD        kreg|mask,ymmreg,ymmrm256|b32 AVX512VL
\c VPCMPGEUD        kreg|mask,zmmreg,zmmrm512|b32 AVX512
\c VPCMPGEUQ        kreg|mask,xmmreg,xmmrm128|b64 AVX512VL
\c VPCMPGEUQ        kreg|mask,ymmreg,ymmrm256|b64 AVX512VL
\c VPCMPGEUQ        kreg|mask,zmmreg,zmmrm512|b64 AVX512
\c VPCMPGEUW        kreg|mask,xmmreg,xmmrm128 AVX512VL/BW
\c VPCMPGEUW        kreg|mask,ymmreg,ymmrm256 AVX512VL/BW
\c VPCMPGEUW        kreg|mask,zmmreg,zmmrm512 AVX512BW
\c VPCMPGEW         kreg|mask,xmmreg,xmmrm128 AVX512VL/BW
\c VPCMPGEW         kreg|mask,ymmreg,ymmrm256 AVX512VL/BW
\c VPCMPGEW         kreg|mask,zmmreg,zmmrm512 AVX512BW
\c VPCMPGTB         kreg|mask,xmmreg,xmmrm128 AVX512VL/BW
\c VPCMPGTB         kreg|mask,ymmreg,ymmrm256 AVX512VL/BW
\c VPCMPGTB         kreg|mask,zmmreg,zmmrm512 AVX512BW
\c VPCMPGTD         kreg|mask,xmmreg,xmmrm128|b32 AVX512VL
\c VPCMPGTD         kreg|mask,ymmreg,ymmrm256|b32 AVX512VL
\c VPCMPGTD         kreg|mask,zmmreg,zmmrm512|b32 AVX512
\c VPCMPGTQ         kreg|mask,xmmreg,xmmrm128|b64 AVX512VL
\c VPCMPGTQ         kreg|mask,ymmreg,ymmrm256|b64 AVX512VL
\c VPCMPGTQ         kreg|mask,zmmreg,zmmrm512|b64 AVX512
\c VPCMPGTUB        kreg|mask,xmmreg,xmmrm128 AVX512VL/BW
\c VPCMPGTUB        kreg|mask,ymmreg,ymmrm256 AVX512VL/BW
\c VPCMPGTUB        kreg|mask,zmmreg,zmmrm512 AVX512BW
\c VPCMPGTUD        kreg|mask,xmmreg,xmmrm128|b32 AVX512VL
\c VPCMPGTUD        kreg|mask,ymmreg,ymmrm256|b32 AVX512VL
\c VPCMPGTUD        kreg|mask,zmmreg,zmmrm512|b32 AVX512
\c VPCMPGTUQ        kreg|mask,xmmreg,xmmrm128|b64 AVX512VL
\c VPCMPGTUQ        kreg|mask,ymmreg,ymmrm256|b64 AVX512VL
\c VPCMPGTUQ        kreg|mask,zmmreg,zmmrm512|b64 AVX512
\c VPCMPGTUW        kreg|mask,xmmreg,xmmrm128 AVX512VL/BW
\c VPCMPGTUW        kreg|mask,ymmreg,ymmrm256 AVX512VL/BW
\c VPCMPGTUW        kreg|mask,zmmreg,zmmrm512 AVX512BW
\c VPCMPGTW         kreg|mask,xmmreg,xmmrm128 AVX512VL/BW
\c VPCMPGTW         kreg|mask,ymmreg,ymmrm256 AVX512VL/BW
\c VPCMPGTW         kreg|mask,zmmreg,zmmrm512 AVX512BW
\c VPCMPLEB         kreg|mask,xmmreg,xmmrm128 AVX512VL/BW
\c VPCMPLEB         kreg|mask,ymmreg,ymmrm256 AVX512VL/BW
\c VPCMPLEB         kreg|mask,zmmreg,zmmrm512 AVX512BW
\c VPCMPLED         kreg|mask,xmmreg,xmmrm128|b32 AVX512VL
\c VPCMPLED         kreg|mask,ymmreg,ymmrm256|b32 AVX512VL
\c VPCMPLED         kreg|mask,zmmreg,zmmrm512|b32 AVX512
\c VPCMPLEQ         kreg|mask,xmmreg,xmmrm128|b64 AVX512VL
\c VPCMPLEQ         kreg|mask,ymmreg,ymmrm256|b64 AVX512VL
\c VPCMPLEQ         kreg|mask,zmmreg,zmmrm512|b64 AVX512
\c VPCMPLEUB        kreg|mask,xmmreg,xmmrm128 AVX512VL/BW
\c VPCMPLEUB        kreg|mask,ymmreg,ymmrm256 AVX512VL/BW
\c VPCMPLEUB        kreg|mask,zmmreg,zmmrm512 AVX512BW
\c VPCMPLEUD        kreg|mask,xmmreg,xmmrm128|b32 AVX512VL
\c VPCMPLEUD        kreg|mask,ymmreg,ymmrm256|b32 AVX512VL
\c VPCMPLEUD        kreg|mask,zmmreg,zmmrm512|b32 AVX512
\c VPCMPLEUQ        kreg|mask,xmmreg,xmmrm128|b64 AVX512VL
\c VPCMPLEUQ        kreg|mask,ymmreg,ymmrm256|b64 AVX512VL
\c VPCMPLEUQ        kreg|mask,zmmreg,zmmrm512|b64 AVX512
\c VPCMPLEUW        kreg|mask,xmmreg,xmmrm128 AVX512VL/BW
\c VPCMPLEUW        kreg|mask,ymmreg,ymmrm256 AVX512VL/BW
\c VPCMPLEUW        kreg|mask,zmmreg,zmmrm512 AVX512BW
\c VPCMPLEW         kreg|mask,xmmreg,xmmrm128 AVX512VL/BW
\c VPCMPLEW         kreg|mask,ymmreg,ymmrm256 AVX512VL/BW
\c VPCMPLEW         kreg|mask,zmmreg,zmmrm512 AVX512BW
\c VPCMPLTB         kreg|mask,xmmreg,xmmrm128 AVX512VL/BW
\c VPCMPLTB         kreg|mask,ymmreg,ymmrm256 AVX512VL/BW
\c VPCMPLTB         kreg|mask,zmmreg,zmmrm512 AVX512BW
\c VPCMPLTD         kreg|mask,xmmreg,xmmrm128|b32 AVX512VL
\c VPCMPLTD         kreg|mask,ymmreg,ymmrm256|b32 AVX512VL
\c VPCMPLTD         kreg|mask,zmmreg,zmmrm512|b32 AVX512
\c VPCMPLTQ         kreg|mask,xmmreg,xmmrm128|b64 AVX512VL
\c VPCMPLTQ         kreg|mask,ymmreg,ymmrm256|b64 AVX512VL
\c VPCMPLTQ         kreg|mask,zmmreg,zmmrm512|b64 AVX512
\c VPCMPLTUB        kreg|mask,xmmreg,xmmrm128 AVX512VL/BW
\c VPCMPLTUB        kreg|mask,ymmreg,ymmrm256 AVX512VL/BW
\c VPCMPLTUB        kreg|mask,zmmreg,zmmrm512 AVX512BW
\c VPCMPLTUD        kreg|mask,xmmreg,xmmrm128|b32 AVX512VL
\c VPCMPLTUD        kreg|mask,ymmreg,ymmrm256|b32 AVX512VL
\c VPCMPLTUD        kreg|mask,zmmreg,zmmrm512|b32 AVX512
\c VPCMPLTUQ        kreg|mask,xmmreg,xmmrm128|b64 AVX512VL
\c VPCMPLTUQ        kreg|mask,ymmreg,ymmrm256|b64 AVX512VL
\c VPCMPLTUQ        kreg|mask,zmmreg,zmmrm512|b64 AVX512
\c VPCMPLTUW        kreg|mask,xmmreg,xmmrm128 AVX512VL/BW
\c VPCMPLTUW        kreg|mask,ymmreg,ymmrm256 AVX512VL/BW
\c VPCMPLTUW        kreg|mask,zmmreg,zmmrm512 AVX512BW
\c VPCMPLTW         kreg|mask,xmmreg,xmmrm128 AVX512VL/BW
\c VPCMPLTW         kreg|mask,ymmreg,ymmrm256 AVX512VL/BW
\c VPCMPLTW         kreg|mask,zmmreg,zmmrm512 AVX512BW
\c VPCMPNEQB        kreg|mask,xmmreg,xmmrm128 AVX512VL/BW
\c VPCMPNEQB        kreg|mask,ymmreg,ymmrm256 AVX512VL/BW
\c VPCMPNEQB        kreg|mask,zmmreg,zmmrm512 AVX512BW
\c VPCMPNEQD        kreg|mask,xmmreg,xmmrm128|b32 AVX512VL
\c VPCMPNEQD        kreg|mask,ymmreg,ymmrm256|b32 AVX512VL
\c VPCMPNEQD        kreg|mask,zmmreg,zmmrm512|b32 AVX512
\c VPCMPNEQQ        kreg|mask,xmmreg,xmmrm128|b64 AVX512VL
\c VPCMPNEQQ        kreg|mask,ymmreg,ymmrm256|b64 AVX512VL
\c VPCMPNEQQ        kreg|mask,zmmreg,zmmrm512|b64 AVX512
\c VPCMPNEQUB       kreg|mask,xmmreg,xmmrm128 AVX512VL/BW
\c VPCMPNEQUB       kreg|mask,ymmreg,ymmrm256 AVX512VL/BW
\c VPCMPNEQUB       kreg|mask,zmmreg,zmmrm512 AVX512BW
\c VPCMPNEQUD       kreg|mask,xmmreg,xmmrm128|b32 AVX512VL
\c VPCMPNEQUD       kreg|mask,ymmreg,ymmrm256|b32 AVX512VL
\c VPCMPNEQUD       kreg|mask,zmmreg,zmmrm512|b32 AVX512
\c VPCMPNEQUQ       kreg|mask,xmmreg,xmmrm128|b64 AVX512VL
\c VPCMPNEQUQ       kreg|mask,ymmreg,ymmrm256|b64 AVX512VL
\c VPCMPNEQUQ       kreg|mask,zmmreg,zmmrm512|b64 AVX512
\c VPCMPNEQUW       kreg|mask,xmmreg,xmmrm128 AVX512VL/BW
\c VPCMPNEQUW       kreg|mask,ymmreg,ymmrm256 AVX512VL/BW
\c VPCMPNEQUW       kreg|mask,zmmreg,zmmrm512 AVX512BW
\c VPCMPNEQW        kreg|mask,xmmreg,xmmrm128 AVX512VL/BW
\c VPCMPNEQW        kreg|mask,ymmreg,ymmrm256 AVX512VL/BW
\c VPCMPNEQW        kreg|mask,zmmreg,zmmrm512 AVX512BW
\c VPCMPNGTB        kreg|mask,xmmreg,xmmrm128 AVX512VL/BW
\c VPCMPNGTB        kreg|mask,ymmreg,ymmrm256 AVX512VL/BW
\c VPCMPNGTB        kreg|mask,zmmreg,zmmrm512 AVX512BW
\c VPCMPNGTD        kreg|mask,xmmreg,xmmrm128|b32 AVX512VL
\c VPCMPNGTD        kreg|mask,ymmreg,ymmrm256|b32 AVX512VL
\c VPCMPNGTD        kreg|mask,zmmreg,zmmrm512|b32 AVX512
\c VPCMPNGTQ        kreg|mask,xmmreg,xmmrm128|b64 AVX512VL
\c VPCMPNGTQ        kreg|mask,ymmreg,ymmrm256|b64 AVX512VL
\c VPCMPNGTQ        kreg|mask,zmmreg,zmmrm512|b64 AVX512
\c VPCMPNGTUB       kreg|mask,xmmreg,xmmrm128 AVX512VL/BW
\c VPCMPNGTUB       kreg|mask,ymmreg,ymmrm256 AVX512VL/BW
\c VPCMPNGTUB       kreg|mask,zmmreg,zmmrm512 AVX512BW
\c VPCMPNGTUD       kreg|mask,xmmreg,xmmrm128|b32 AVX512VL
\c VPCMPNGTUD       kreg|mask,ymmreg,ymmrm256|b32 AVX512VL
\c VPCMPNGTUD       kreg|mask,zmmreg,zmmrm512|b32 AVX512
\c VPCMPNGTUQ       kreg|mask,xmmreg,xmmrm128|b64 AVX512VL
\c VPCMPNGTUQ       kreg|mask,ymmreg,ymmrm256|b64 AVX512VL
\c VPCMPNGTUQ       kreg|mask,zmmreg,zmmrm512|b64 AVX512
\c VPCMPNGTUW       kreg|mask,xmmreg,xmmrm128 AVX512VL/BW
\c VPCMPNGTUW       kreg|mask,ymmreg,ymmrm256 AVX512VL/BW
\c VPCMPNGTUW       kreg|mask,zmmreg,zmmrm512 AVX512BW
\c VPCMPNGTW        kreg|mask,xmmreg,xmmrm128 AVX512VL/BW
\c VPCMPNGTW        kreg|mask,ymmreg,ymmrm256 AVX512VL/BW
\c VPCMPNGTW        kreg|mask,zmmreg,zmmrm512 AVX512BW
\c VPCMPNLEB        kreg|mask,xmmreg,xmmrm128 AVX512VL/BW
\c VPCMPNLEB        kreg|mask,ymmreg,ymmrm256 AVX512VL/BW
\c VPCMPNLEB        kreg|mask,zmmreg,zmmrm512 AVX512BW
\c VPCMPNLED        kreg|mask,xmmreg,xmmrm128|b32 AVX512VL
\c VPCMPNLED        kreg|mask,ymmreg,ymmrm256|b32 AVX512VL
\c VPCMPNLED        kreg|mask,zmmreg,zmmrm512|b32 AVX512
\c VPCMPNLEQ        kreg|mask,xmmreg,xmmrm128|b64 AVX512VL
\c VPCMPNLEQ        kreg|mask,ymmreg,ymmrm256|b64 AVX512VL
\c VPCMPNLEQ        kreg|mask,zmmreg,zmmrm512|b64 AVX512
\c VPCMPNLEUB       kreg|mask,xmmreg,xmmrm128 AVX512VL/BW
\c VPCMPNLEUB       kreg|mask,ymmreg,ymmrm256 AVX512VL/BW
\c VPCMPNLEUB       kreg|mask,zmmreg,zmmrm512 AVX512BW
\c VPCMPNLEUD       kreg|mask,xmmreg,xmmrm128|b32 AVX512VL
\c VPCMPNLEUD       kreg|mask,ymmreg,ymmrm256|b32 AVX512VL
\c VPCMPNLEUD       kreg|mask,zmmreg,zmmrm512|b32 AVX512
\c VPCMPNLEUQ       kreg|mask,xmmreg,xmmrm128|b64 AVX512VL
\c VPCMPNLEUQ       kreg|mask,ymmreg,ymmrm256|b64 AVX512VL
\c VPCMPNLEUQ       kreg|mask,zmmreg,zmmrm512|b64 AVX512
\c VPCMPNLEUW       kreg|mask,xmmreg,xmmrm128 AVX512VL/BW
\c VPCMPNLEUW       kreg|mask,ymmreg,ymmrm256 AVX512VL/BW
\c VPCMPNLEUW       kreg|mask,zmmreg,zmmrm512 AVX512BW
\c VPCMPNLEW        kreg|mask,xmmreg,xmmrm128 AVX512VL/BW
\c VPCMPNLEW        kreg|mask,ymmreg,ymmrm256 AVX512VL/BW
\c VPCMPNLEW        kreg|mask,zmmreg,zmmrm512 AVX512BW
\c VPCMPNLTB        kreg|mask,xmmreg,xmmrm128 AVX512VL/BW
\c VPCMPNLTB        kreg|mask,ymmreg,ymmrm256 AVX512VL/BW
\c VPCMPNLTB        kreg|mask,zmmreg,zmmrm512 AVX512BW
\c VPCMPNLTD        kreg|mask,xmmreg,xmmrm128|b32 AVX512VL
\c VPCMPNLTD        kreg|mask,ymmreg,ymmrm256|b32 AVX512VL
\c VPCMPNLTD        kreg|mask,zmmreg,zmmrm512|b32 AVX512
\c VPCMPNLTQ        kreg|mask,xmmreg,xmmrm128|b64 AVX512VL
\c VPCMPNLTQ        kreg|mask,ymmreg,ymmrm256|b64 AVX512VL
\c VPCMPNLTQ        kreg|mask,zmmreg,zmmrm512|b64 AVX512
\c VPCMPNLTUB       kreg|mask,xmmreg,xmmrm128 AVX512VL/BW
\c VPCMPNLTUB       kreg|mask,ymmreg,ymmrm256 AVX512VL/BW
\c VPCMPNLTUB       kreg|mask,zmmreg,zmmrm512 AVX512BW
\c VPCMPNLTUD       kreg|mask,xmmreg,xmmrm128|b32 AVX512VL
\c VPCMPNLTUD       kreg|mask,ymmreg,ymmrm256|b32 AVX512VL
\c VPCMPNLTUD       kreg|mask,zmmreg,zmmrm512|b32 AVX512
\c VPCMPNLTUQ       kreg|mask,xmmreg,xmmrm128|b64 AVX512VL
\c VPCMPNLTUQ       kreg|mask,ymmreg,ymmrm256|b64 AVX512VL
\c VPCMPNLTUQ       kreg|mask,zmmreg,zmmrm512|b64 AVX512
\c VPCMPNLTUW       kreg|mask,xmmreg,xmmrm128 AVX512VL/BW
\c VPCMPNLTUW       kreg|mask,ymmreg,ymmrm256 AVX512VL/BW
\c VPCMPNLTUW       kreg|mask,zmmreg,zmmrm512 AVX512BW
\c VPCMPNLTW        kreg|mask,xmmreg,xmmrm128 AVX512VL/BW
\c VPCMPNLTW        kreg|mask,ymmreg,ymmrm256 AVX512VL/BW
\c VPCMPNLTW        kreg|mask,zmmreg,zmmrm512 AVX512BW
\c VPCMPB           kreg|mask,xmmreg,xmmrm128,imm8 AVX512VL/BW
\c VPCMPB           kreg|mask,ymmreg,ymmrm256,imm8 AVX512VL/BW
\c VPCMPB           kreg|mask,zmmreg,zmmrm512,imm8 AVX512BW
\c VPCMPD           kreg|mask,xmmreg,xmmrm128|b32,imm8 AVX512VL
\c VPCMPD           kreg|mask,ymmreg,ymmrm256|b32,imm8 AVX512VL
\c VPCMPD           kreg|mask,zmmreg,zmmrm512|b32,imm8 AVX512
\c VPCMPQ           kreg|mask,xmmreg,xmmrm128|b64,imm8 AVX512VL
\c VPCMPQ           kreg|mask,ymmreg,ymmrm256|b64,imm8 AVX512VL
\c VPCMPQ           kreg|mask,zmmreg,zmmrm512|b64,imm8 AVX512
\c VPCMPUB          kreg|mask,xmmreg,xmmrm128,imm8 AVX512VL/BW
\c VPCMPUB          kreg|mask,ymmreg,ymmrm256,imm8 AVX512VL/BW
\c VPCMPUB          kreg|mask,zmmreg,zmmrm512,imm8 AVX512BW
\c VPCMPUD          kreg|mask,xmmreg,xmmrm128|b32,imm8 AVX512VL
\c VPCMPUD          kreg|mask,ymmreg,ymmrm256|b32,imm8 AVX512VL
\c VPCMPUD          kreg|mask,zmmreg,zmmrm512|b32,imm8 AVX512
\c VPCMPUQ          kreg|mask,xmmreg,xmmrm128|b64,imm8 AVX512VL
\c VPCMPUQ          kreg|mask,ymmreg,ymmrm256|b64,imm8 AVX512VL
\c VPCMPUQ          kreg|mask,zmmreg,zmmrm512|b64,imm8 AVX512
\c VPCMPUW          kreg|mask,xmmreg,xmmrm128,imm8 AVX512VL/BW
\c VPCMPUW          kreg|mask,ymmreg,ymmrm256,imm8 AVX512VL/BW
\c VPCMPUW          kreg|mask,zmmreg,zmmrm512,imm8 AVX512BW
\c VPCMPW           kreg|mask,xmmreg,xmmrm128,imm8 AVX512VL/BW
\c VPCMPW           kreg|mask,ymmreg,ymmrm256,imm8 AVX512VL/BW
\c VPCMPW           kreg|mask,zmmreg,zmmrm512,imm8 AVX512BW
\c VPCOMPRESSD      mem128|mask,xmmreg       AVX512VL
\c VPCOMPRESSD      mem256|mask,ymmreg       AVX512VL
\c VPCOMPRESSD      mem512|mask,zmmreg       AVX512
\c VPCOMPRESSD      xmmreg|mask|z,xmmreg     AVX512VL
\c VPCOMPRESSD      ymmreg|mask|z,ymmreg     AVX512VL
\c VPCOMPRESSD      zmmreg|mask|z,zmmreg     AVX512
\c VPCOMPRESSQ      mem128|mask,xmmreg       AVX512VL
\c VPCOMPRESSQ      mem256|mask,ymmreg       AVX512VL
\c VPCOMPRESSQ      mem512|mask,zmmreg       AVX512
\c VPCOMPRESSQ      xmmreg|mask|z,xmmreg     AVX512VL
\c VPCOMPRESSQ      ymmreg|mask|z,ymmreg     AVX512VL
\c VPCOMPRESSQ      zmmreg|mask|z,zmmreg     AVX512
\c VPCONFLICTD      xmmreg|mask|z,xmmrm128|b32 AVX512VL/CD
\c VPCONFLICTD      ymmreg|mask|z,ymmrm256|b32 AVX512VL/CD
\c VPCONFLICTD      zmmreg|mask|z,zmmrm512|b32 AVX512CD
\c VPCONFLICTQ      xmmreg|mask|z,xmmrm128|b64 AVX512VL/CD
\c VPCONFLICTQ      ymmreg|mask|z,ymmrm256|b64 AVX512VL/CD
\c VPCONFLICTQ      zmmreg|mask|z,zmmrm512|b64 AVX512CD
\c VPERMB           xmmreg|mask|z,xmmreg*,xmmrm128 AVX512VL/VBMI
\c VPERMB           ymmreg|mask|z,ymmreg*,ymmrm256 AVX512VL/VBMI
\c VPERMB           zmmreg|mask|z,zmmreg*,zmmrm512 AVX512VBMI
\c VPERMD           ymmreg|mask|z,ymmreg*,ymmrm256|b32 AVX512VL
\c VPERMD           zmmreg|mask|z,zmmreg*,zmmrm512|b32 AVX512
\c VPERMI2B         xmmreg|mask|z,xmmreg,xmmrm128 AVX512VL/VBMI
\c VPERMI2B         ymmreg|mask|z,ymmreg,ymmrm256 AVX512VL/VBMI
\c VPERMI2B         zmmreg|mask|z,zmmreg,zmmrm512 AVX512VBMI
\c VPERMI2D         xmmreg|mask|z,xmmreg,xmmrm128|b32 AVX512VL
\c VPERMI2D         ymmreg|mask|z,ymmreg,ymmrm256|b32 AVX512VL
\c VPERMI2D         zmmreg|mask|z,zmmreg,zmmrm512|b32 AVX512
\c VPERMI2PD        xmmreg|mask|z,xmmreg,xmmrm128|b64 AVX512VL
\c VPERMI2PD        ymmreg|mask|z,ymmreg,ymmrm256|b64 AVX512VL
\c VPERMI2PD        zmmreg|mask|z,zmmreg,zmmrm512|b64 AVX512
\c VPERMI2PS        xmmreg|mask|z,xmmreg,xmmrm128|b32 AVX512VL
\c VPERMI2PS        ymmreg|mask|z,ymmreg,ymmrm256|b32 AVX512VL
\c VPERMI2PS        zmmreg|mask|z,zmmreg,zmmrm512|b32 AVX512
\c VPERMI2Q         xmmreg|mask|z,xmmreg,xmmrm128|b64 AVX512VL
\c VPERMI2Q         ymmreg|mask|z,ymmreg,ymmrm256|b64 AVX512VL
\c VPERMI2Q         zmmreg|mask|z,zmmreg,zmmrm512|b64 AVX512
\c VPERMI2W         xmmreg|mask|z,xmmreg,xmmrm128 AVX512VL/BW
\c VPERMI2W         ymmreg|mask|z,ymmreg,ymmrm256 AVX512VL/BW
\c VPERMI2W         zmmreg|mask|z,zmmreg,zmmrm512 AVX512BW
\c VPERMILPD        xmmreg|mask|z,xmmrm128|b64,imm8 AVX512VL
\c VPERMILPD        ymmreg|mask|z,ymmrm256|b64,imm8 AVX512VL
\c VPERMILPD        zmmreg|mask|z,zmmrm512|b64,imm8 AVX512
\c VPERMILPD        xmmreg|mask|z,xmmreg*,xmmrm128|b64 AVX512VL
\c VPERMILPD        ymmreg|mask|z,ymmreg*,ymmrm256|b64 AVX512VL
\c VPERMILPD        zmmreg|mask|z,zmmreg*,zmmrm512|b64 AVX512
\c VPERMILPS        xmmreg|mask|z,xmmrm128|b32,imm8 AVX512VL
\c VPERMILPS        ymmreg|mask|z,ymmrm256|b32,imm8 AVX512VL
\c VPERMILPS        zmmreg|mask|z,zmmrm512|b32,imm8 AVX512
\c VPERMILPS        xmmreg|mask|z,xmmreg*,xmmrm128|b32 AVX512VL
\c VPERMILPS        ymmreg|mask|z,ymmreg*,ymmrm256|b32 AVX512VL
\c VPERMILPS        zmmreg|mask|z,zmmreg*,zmmrm512|b32 AVX512
\c VPERMPD          ymmreg|mask|z,ymmrm256|b64,imm8 AVX512VL
\c VPERMPD          zmmreg|mask|z,zmmrm512|b64,imm8 AVX512
\c VPERMPD          ymmreg|mask|z,ymmreg*,ymmrm256|b64 AVX512VL
\c VPERMPD          zmmreg|mask|z,zmmreg*,zmmrm512|b64 AVX512
\c VPERMPS          ymmreg|mask|z,ymmreg*,ymmrm256|b32 AVX512VL
\c VPERMPS          zmmreg|mask|z,zmmreg*,zmmrm512|b32 AVX512
\c VPERMQ           ymmreg|mask|z,ymmrm256|b64,imm8 AVX512VL
\c VPERMQ           zmmreg|mask|z,zmmrm512|b64,imm8 AVX512
\c VPERMQ           ymmreg|mask|z,ymmreg*,ymmrm256|b64 AVX512VL
\c VPERMQ           zmmreg|mask|z,zmmreg*,zmmrm512|b64 AVX512
\c VPERMT2B         xmmreg|mask|z,xmmreg,xmmrm128 AVX512VL/VBMI
\c VPERMT2B         ymmreg|mask|z,ymmreg,ymmrm256 AVX512VL/VBMI
\c VPERMT2B         zmmreg|mask|z,zmmreg,zmmrm512 AVX512VBMI
\c VPERMT2D         xmmreg|mask|z,xmmreg,xmmrm128|b32 AVX512VL
\c VPERMT2D         ymmreg|mask|z,ymmreg,ymmrm256|b32 AVX512VL
\c VPERMT2D         zmmreg|mask|z,zmmreg,zmmrm512|b32 AVX512
\c VPERMT2PD        xmmreg|mask|z,xmmreg,xmmrm128|b64 AVX512VL
\c VPERMT2PD        ymmreg|mask|z,ymmreg,ymmrm256|b64 AVX512VL
\c VPERMT2PD        zmmreg|mask|z,zmmreg,zmmrm512|b64 AVX512
\c VPERMT2PS        xmmreg|mask|z,xmmreg,xmmrm128|b32 AVX512VL
\c VPERMT2PS        ymmreg|mask|z,ymmreg,ymmrm256|b32 AVX512VL
\c VPERMT2PS        zmmreg|mask|z,zmmreg,zmmrm512|b32 AVX512
\c VPERMT2Q         xmmreg|mask|z,xmmreg,xmmrm128|b64 AVX512VL
\c VPERMT2Q         ymmreg|mask|z,ymmreg,ymmrm256|b64 AVX512VL
\c VPERMT2Q         zmmreg|mask|z,zmmreg,zmmrm512|b64 AVX512
\c VPERMT2W         xmmreg|mask|z,xmmreg,xmmrm128 AVX512VL/BW
\c VPERMT2W         ymmreg|mask|z,ymmreg,ymmrm256 AVX512VL/BW
\c VPERMT2W         zmmreg|mask|z,zmmreg,zmmrm512 AVX512BW
\c VPERMW           xmmreg|mask|z,xmmreg*,xmmrm128 AVX512VL/BW
\c VPERMW           ymmreg|mask|z,ymmreg*,ymmrm256 AVX512VL/BW
\c VPERMW           zmmreg|mask|z,zmmreg*,zmmrm512 AVX512BW
\c VPEXPANDD        xmmreg|mask|z,mem128     AVX512VL
\c VPEXPANDD        ymmreg|mask|z,mem256     AVX512VL
\c VPEXPANDD        zmmreg|mask|z,mem512     AVX512
\c VPEXPANDD        xmmreg|mask|z,xmmreg     AVX512VL
\c VPEXPANDD        ymmreg|mask|z,ymmreg     AVX512VL
\c VPEXPANDD        zmmreg|mask|z,zmmreg     AVX512
\c VPEXPANDQ        xmmreg|mask|z,mem128     AVX512VL
\c VPEXPANDQ        ymmreg|mask|z,mem256     AVX512VL
\c VPEXPANDQ        zmmreg|mask|z,mem512     AVX512
\c VPEXPANDQ        xmmreg|mask|z,xmmreg     AVX512VL
\c VPEXPANDQ        ymmreg|mask|z,ymmreg     AVX512VL
\c VPEXPANDQ        zmmreg|mask|z,zmmreg     AVX512
\c VPEXTRB          reg8,xmmreg,imm8         AVX512BW
\c VPEXTRB          reg16,xmmreg,imm8        AVX512BW
\c VPEXTRB          reg32,xmmreg,imm8        AVX512BW
\c VPEXTRB          reg64,xmmreg,imm8        AVX512BW
\c VPEXTRB          mem8,xmmreg,imm8         AVX512BW
\c VPEXTRD          rm32,xmmreg,imm8         AVX512DQ
\c VPEXTRQ          rm64,xmmreg,imm8         AVX512DQ
\c VPEXTRW          reg16,xmmreg,imm8        AVX512BW
\c VPEXTRW          reg32,xmmreg,imm8        AVX512BW
\c VPEXTRW          reg64,xmmreg,imm8        AVX512BW
\c VPEXTRW          mem16,xmmreg,imm8        AVX512BW
\c VPEXTRW          reg16,xmmreg,imm8        AVX512BW
\c VPEXTRW          reg32,xmmreg,imm8        AVX512BW
\c VPEXTRW          reg64,xmmreg,imm8        AVX512BW
\c VPGATHERDD       xmmreg|mask,xmem32       AVX512VL
\c VPGATHERDD       ymmreg|mask,ymem32       AVX512VL
\c VPGATHERDD       zmmreg|mask,zmem32       AVX512
\c VPGATHERDQ       xmmreg|mask,xmem64       AVX512VL
\c VPGATHERDQ       ymmreg|mask,xmem64       AVX512VL
\c VPGATHERDQ       zmmreg|mask,ymem64       AVX512
\c VPGATHERQD       xmmreg|mask,xmem32       AVX512VL
\c VPGATHERQD       xmmreg|mask,ymem32       AVX512VL
\c VPGATHERQD       ymmreg|mask,zmem32       AVX512
\c VPGATHERQQ       xmmreg|mask,xmem64       AVX512VL
\c VPGATHERQQ       ymmreg|mask,ymem64       AVX512VL
\c VPGATHERQQ       zmmreg|mask,zmem64       AVX512
\c VPINSRB          xmmreg,xmmreg*,reg32,imm8 AVX512BW
\c VPINSRB          xmmreg,xmmreg*,mem8,imm8 AVX512BW
\c VPINSRD          xmmreg,xmmreg*,rm32,imm8 AVX512DQ
\c VPINSRQ          xmmreg,xmmreg*,rm64,imm8 AVX512DQ
\c VPINSRW          xmmreg,xmmreg*,reg32,imm8 AVX512BW
\c VPINSRW          xmmreg,xmmreg*,mem16,imm8 AVX512BW
\c VPLZCNTD         xmmreg|mask|z,xmmrm128|b32 AVX512VL/CD
\c VPLZCNTD         ymmreg|mask|z,ymmrm256|b32 AVX512VL/CD
\c VPLZCNTD         zmmreg|mask|z,zmmrm512|b32 AVX512CD
\c VPLZCNTQ         xmmreg|mask|z,xmmrm128|b64 AVX512VL/CD
\c VPLZCNTQ         ymmreg|mask|z,ymmrm256|b64 AVX512VL/CD
\c VPLZCNTQ         zmmreg|mask|z,zmmrm512|b64 AVX512CD
\c VPMADD52HUQ      xmmreg|mask|z,xmmreg,xmmrm128|b64 AVX512VL/IFMA
\c VPMADD52HUQ      ymmreg|mask|z,ymmreg,ymmrm256|b64 AVX512VL/IFMA
\c VPMADD52HUQ      zmmreg|mask|z,zmmreg,zmmrm512|b64 AVX512IFMA
\c VPMADD52LUQ      xmmreg|mask|z,xmmreg,xmmrm128|b64 AVX512VL/IFMA
\c VPMADD52LUQ      ymmreg|mask|z,ymmreg,ymmrm256|b64 AVX512VL/IFMA
\c VPMADD52LUQ      zmmreg|mask|z,zmmreg,zmmrm512|b64 AVX512IFMA
\c VPMADDUBSW       xmmreg|mask|z,xmmreg*,xmmrm128 AVX512VL/BW
\c VPMADDUBSW       ymmreg|mask|z,ymmreg*,ymmrm256 AVX512VL/BW
\c VPMADDUBSW       zmmreg|mask|z,zmmreg*,zmmrm512 AVX512BW
\c VPMADDWD         xmmreg|mask|z,xmmreg*,xmmrm128 AVX512VL/BW
\c VPMADDWD         ymmreg|mask|z,ymmreg*,ymmrm256 AVX512VL/BW
\c VPMADDWD         zmmreg|mask|z,zmmreg*,zmmrm512 AVX512BW
\c VPMAXSB          xmmreg|mask|z,xmmreg*,xmmrm128 AVX512VL/BW
\c VPMAXSB          ymmreg|mask|z,ymmreg*,ymmrm256 AVX512VL/BW
\c VPMAXSB          zmmreg|mask|z,zmmreg*,zmmrm512 AVX512BW
\c VPMAXSD          xmmreg|mask|z,xmmreg*,xmmrm128|b32 AVX512VL
\c VPMAXSD          ymmreg|mask|z,ymmreg*,ymmrm256|b32 AVX512VL
\c VPMAXSD          zmmreg|mask|z,zmmreg*,zmmrm512|b32 AVX512
\c VPMAXSQ          xmmreg|mask|z,xmmreg*,xmmrm128|b64 AVX512VL
\c VPMAXSQ          ymmreg|mask|z,ymmreg*,ymmrm256|b64 AVX512VL
\c VPMAXSQ          zmmreg|mask|z,zmmreg*,zmmrm512|b64 AVX512
\c VPMAXSW          xmmreg|mask|z,xmmreg*,xmmrm128 AVX512VL/BW
\c VPMAXSW          ymmreg|mask|z,ymmreg*,ymmrm256 AVX512VL/BW
\c VPMAXSW          zmmreg|mask|z,zmmreg*,zmmrm512 AVX512BW
\c VPMAXUB          xmmreg|mask|z,xmmreg*,xmmrm128 AVX512VL/BW
\c VPMAXUB          ymmreg|mask|z,ymmreg*,ymmrm256 AVX512VL/BW
\c VPMAXUB          zmmreg|mask|z,zmmreg*,zmmrm512 AVX512BW
\c VPMAXUD          xmmreg|mask|z,xmmreg*,xmmrm128|b32 AVX512VL
\c VPMAXUD          ymmreg|mask|z,ymmreg*,ymmrm256|b32 AVX512VL
\c VPMAXUD          zmmreg|mask|z,zmmreg*,zmmrm512|b32 AVX512
\c VPMAXUQ          xmmreg|mask|z,xmmreg*,xmmrm128|b64 AVX512VL
\c VPMAXUQ          ymmreg|mask|z,ymmreg*,ymmrm256|b64 AVX512VL
\c VPMAXUQ          zmmreg|mask|z,zmmreg*,zmmrm512|b64 AVX512
\c VPMAXUW          xmmreg|mask|z,xmmreg*,xmmrm128 AVX512VL/BW
\c VPMAXUW          ymmreg|mask|z,ymmreg*,ymmrm256 AVX512VL/BW
\c VPMAXUW          zmmreg|mask|z,zmmreg*,zmmrm512 AVX512BW
\c VPMINSB          xmmreg|mask|z,xmmreg*,xmmrm128 AVX512VL/BW
\c VPMINSB          ymmreg|mask|z,ymmreg*,ymmrm256 AVX512VL/BW
\c VPMINSB          zmmreg|mask|z,zmmreg*,zmmrm512 AVX512BW
\c VPMINSD          xmmreg|mask|z,xmmreg*,xmmrm128|b32 AVX512VL
\c VPMINSD          ymmreg|mask|z,ymmreg*,ymmrm256|b32 AVX512VL
\c VPMINSD          zmmreg|mask|z,zmmreg*,zmmrm512|b32 AVX512
\c VPMINSQ          xmmreg|mask|z,xmmreg*,xmmrm128|b64 AVX512VL
\c VPMINSQ          ymmreg|mask|z,ymmreg*,ymmrm256|b64 AVX512VL
\c VPMINSQ          zmmreg|mask|z,zmmreg*,zmmrm512|b64 AVX512
\c VPMINSW          xmmreg|mask|z,xmmreg*,xmmrm128 AVX512VL/BW
\c VPMINSW          ymmreg|mask|z,ymmreg*,ymmrm256 AVX512VL/BW
\c VPMINSW          zmmreg|mask|z,zmmreg*,zmmrm512 AVX512BW
\c VPMINUB          xmmreg|mask|z,xmmreg*,xmmrm128 AVX512VL/BW
\c VPMINUB          ymmreg|mask|z,ymmreg*,ymmrm256 AVX512VL/BW
\c VPMINUB          zmmreg|mask|z,zmmreg*,zmmrm512 AVX512BW
\c VPMINUD          xmmreg|mask|z,xmmreg*,xmmrm128|b32 AVX512VL
\c VPMINUD          ymmreg|mask|z,ymmreg*,ymmrm256|b32 AVX512VL
\c VPMINUD          zmmreg|mask|z,zmmreg*,zmmrm512|b32 AVX512
\c VPMINUQ          xmmreg|mask|z,xmmreg*,xmmrm128|b64 AVX512VL
\c VPMINUQ          ymmreg|mask|z,ymmreg*,ymmrm256|b64 AVX512VL
\c VPMINUQ          zmmreg|mask|z,zmmreg*,zmmrm512|b64 AVX512
\c VPMINUW          xmmreg|mask|z,xmmreg*,xmmrm128 AVX512VL/BW
\c VPMINUW          ymmreg|mask|z,ymmreg*,ymmrm256 AVX512VL/BW
\c VPMINUW          zmmreg|mask|z,zmmreg*,zmmrm512 AVX512BW
\c VPMOVB2M         kreg,xmmreg              AVX512VL/BW
\c VPMOVB2M         kreg,ymmreg              AVX512VL/BW
\c VPMOVB2M         kreg,zmmreg              AVX512BW
\c VPMOVD2M         kreg,xmmreg              AVX512VL/DQ
\c VPMOVD2M         kreg,ymmreg              AVX512VL/DQ
\c VPMOVD2M         kreg,zmmreg              AVX512DQ
\c VPMOVDB          xmmreg|mask|z,xmmreg     AVX512VL
\c VPMOVDB          xmmreg|mask|z,ymmreg     AVX512VL
\c VPMOVDB          xmmreg|mask|z,zmmreg     AVX512
\c VPMOVDB          mem32|mask,xmmreg        AVX512VL
\c VPMOVDB          mem64|mask,ymmreg        AVX512VL
\c VPMOVDB          mem128|mask,zmmreg       AVX512
\c VPMOVDW          xmmreg|mask|z,xmmreg     AVX512VL
\c VPMOVDW          xmmreg|mask|z,ymmreg     AVX512VL
\c VPMOVDW          ymmreg|mask|z,zmmreg     AVX512
\c VPMOVDW          mem64|mask,xmmreg        AVX512VL
\c VPMOVDW          mem128|mask,ymmreg       AVX512VL
\c VPMOVDW          mem256|mask,zmmreg       AVX512
\c VPMOVM2B         xmmreg,kreg              AVX512VL/BW
\c VPMOVM2B         ymmreg,kreg              AVX512VL/BW
\c VPMOVM2B         zmmreg,kreg              AVX512BW
\c VPMOVM2D         xmmreg,kreg              AVX512VL/DQ
\c VPMOVM2D         ymmreg,kreg              AVX512VL/DQ
\c VPMOVM2D         zmmreg,kreg              AVX512DQ
\c VPMOVM2Q         xmmreg,kreg              AVX512VL/DQ
\c VPMOVM2Q         ymmreg,kreg              AVX512VL/DQ
\c VPMOVM2Q         zmmreg,kreg              AVX512DQ
\c VPMOVM2W         xmmreg,kreg              AVX512VL/BW
\c VPMOVM2W         ymmreg,kreg              AVX512VL/BW
\c VPMOVM2W         zmmreg,kreg              AVX512BW
\c VPMOVQ2M         kreg,xmmreg              AVX512VL/DQ
\c VPMOVQ2M         kreg,ymmreg              AVX512VL/DQ
\c VPMOVQ2M         kreg,zmmreg              AVX512DQ
\c VPMOVQB          xmmreg|mask|z,xmmreg     AVX512VL
\c VPMOVQB          xmmreg|mask|z,ymmreg     AVX512VL
\c VPMOVQB          xmmreg|mask|z,zmmreg     AVX512
\c VPMOVQB          mem16|mask,xmmreg        AVX512VL
\c VPMOVQB          mem32|mask,ymmreg        AVX512VL
\c VPMOVQB          mem64|mask,zmmreg        AVX512
\c VPMOVQD          xmmreg|mask|z,xmmreg     AVX512VL
\c VPMOVQD          xmmreg|mask|z,ymmreg     AVX512VL
\c VPMOVQD          ymmreg|mask|z,zmmreg     AVX512
\c VPMOVQD          mem64|mask,xmmreg        AVX512VL
\c VPMOVQD          mem128|mask,ymmreg       AVX512VL
\c VPMOVQD          mem256|mask,zmmreg       AVX512
\c VPMOVQW          xmmreg|mask|z,xmmreg     AVX512VL
\c VPMOVQW          xmmreg|mask|z,ymmreg     AVX512VL
\c VPMOVQW          xmmreg|mask|z,zmmreg     AVX512
\c VPMOVQW          mem32|mask,xmmreg        AVX512VL
\c VPMOVQW          mem64|mask,ymmreg        AVX512VL
\c VPMOVQW          mem128|mask,zmmreg       AVX512
\c VPMOVSDB         xmmreg|mask|z,xmmreg     AVX512VL
\c VPMOVSDB         xmmreg|mask|z,ymmreg     AVX512VL
\c VPMOVSDB         xmmreg|mask|z,zmmreg     AVX512
\c VPMOVSDB         mem32|mask,xmmreg        AVX512VL
\c VPMOVSDB         mem64|mask,ymmreg        AVX512VL
\c VPMOVSDB         mem128|mask,zmmreg       AVX512
\c VPMOVSDW         xmmreg|mask|z,xmmreg     AVX512VL
\c VPMOVSDW         xmmreg|mask|z,ymmreg     AVX512VL
\c VPMOVSDW         ymmreg|mask|z,zmmreg     AVX512
\c VPMOVSDW         mem64|mask,xmmreg        AVX512VL
\c VPMOVSDW         mem128|mask,ymmreg       AVX512VL
\c VPMOVSDW         mem256|mask,zmmreg       AVX512
\c VPMOVSQB         xmmreg|mask|z,xmmreg     AVX512VL
\c VPMOVSQB         xmmreg|mask|z,ymmreg     AVX512VL
\c VPMOVSQB         xmmreg|mask|z,zmmreg     AVX512
\c VPMOVSQB         mem16|mask,xmmreg        AVX512VL
\c VPMOVSQB         mem32|mask,ymmreg        AVX512VL
\c VPMOVSQB         mem64|mask,zmmreg        AVX512
\c VPMOVSQD         xmmreg|mask|z,xmmreg     AVX512VL
\c VPMOVSQD         xmmreg|mask|z,ymmreg     AVX512VL
\c VPMOVSQD         ymmreg|mask|z,zmmreg     AVX512
\c VPMOVSQD         mem64|mask,xmmreg        AVX512VL
\c VPMOVSQD         mem128|mask,ymmreg       AVX512VL
\c VPMOVSQD         mem256|mask,zmmreg       AVX512
\c VPMOVSQW         xmmreg|mask|z,xmmreg     AVX512VL
\c VPMOVSQW         xmmreg|mask|z,ymmreg     AVX512VL
\c VPMOVSQW         xmmreg|mask|z,zmmreg     AVX512
\c VPMOVSQW         mem32|mask,xmmreg        AVX512VL
\c VPMOVSQW         mem64|mask,ymmreg        AVX512VL
\c VPMOVSQW         mem128|mask,zmmreg       AVX512
\c VPMOVSWB         xmmreg|mask|z,xmmreg     AVX512VL/BW
\c VPMOVSWB         xmmreg|mask|z,ymmreg     AVX512VL/BW
\c VPMOVSWB         ymmreg|mask|z,zmmreg     AVX512BW
\c VPMOVSWB         mem64|mask,xmmreg        AVX512VL/BW
\c VPMOVSWB         mem128|mask,ymmreg       AVX512VL/BW
\c VPMOVSWB         mem256|mask,zmmreg       AVX512BW
\c VPMOVSXBD        xmmreg|mask|z,xmmrm32    AVX512VL
\c VPMOVSXBD        ymmreg|mask|z,xmmrm64    AVX512VL
\c VPMOVSXBD        zmmreg|mask|z,xmmrm128   AVX512
\c VPMOVSXBQ        xmmreg|mask|z,xmmrm16    AVX512VL
\c VPMOVSXBQ        ymmreg|mask|z,xmmrm32    AVX512VL
\c VPMOVSXBQ        zmmreg|mask|z,xmmrm64    AVX512
\c VPMOVSXBW        xmmreg|mask|z,xmmrm64    AVX512VL/BW
\c VPMOVSXBW        ymmreg|mask|z,xmmrm128   AVX512VL/BW
\c VPMOVSXBW        zmmreg|mask|z,ymmrm256   AVX512BW
\c VPMOVSXDQ        xmmreg|mask|z,xmmrm64    AVX512VL
\c VPMOVSXDQ        ymmreg|mask|z,xmmrm128   AVX512VL
\c VPMOVSXDQ        zmmreg|mask|z,ymmrm256   AVX512
\c VPMOVSXWD        xmmreg|mask|z,xmmrm64    AVX512VL
\c VPMOVSXWD        ymmreg|mask|z,xmmrm128   AVX512VL
\c VPMOVSXWD        zmmreg|mask|z,ymmrm256   AVX512
\c VPMOVSXWQ        xmmreg|mask|z,xmmrm32    AVX512VL
\c VPMOVSXWQ        ymmreg|mask|z,xmmrm64    AVX512VL
\c VPMOVSXWQ        zmmreg|mask|z,xmmrm128   AVX512
\c VPMOVUSDB        xmmreg|mask|z,xmmreg     AVX512VL
\c VPMOVUSDB        xmmreg|mask|z,ymmreg     AVX512VL
\c VPMOVUSDB        xmmreg|mask|z,zmmreg     AVX512
\c VPMOVUSDB        mem32|mask,xmmreg        AVX512VL
\c VPMOVUSDB        mem64|mask,ymmreg        AVX512VL
\c VPMOVUSDB        mem128|mask,zmmreg       AVX512
\c VPMOVUSDW        xmmreg|mask|z,xmmreg     AVX512VL
\c VPMOVUSDW        xmmreg|mask|z,ymmreg     AVX512VL
\c VPMOVUSDW        ymmreg|mask|z,zmmreg     AVX512
\c VPMOVUSDW        mem64|mask,xmmreg        AVX512VL
\c VPMOVUSDW        mem128|mask,ymmreg       AVX512VL
\c VPMOVUSDW        mem256|mask,zmmreg       AVX512
\c VPMOVUSQB        xmmreg|mask|z,xmmreg     AVX512VL
\c VPMOVUSQB        xmmreg|mask|z,ymmreg     AVX512VL
\c VPMOVUSQB        xmmreg|mask|z,zmmreg     AVX512
\c VPMOVUSQB        mem16|mask,xmmreg        AVX512VL
\c VPMOVUSQB        mem32|mask,ymmreg        AVX512VL
\c VPMOVUSQB        mem64|mask,zmmreg        AVX512
\c VPMOVUSQD        xmmreg|mask|z,xmmreg     AVX512VL
\c VPMOVUSQD        xmmreg|mask|z,ymmreg     AVX512VL
\c VPMOVUSQD        ymmreg|mask|z,zmmreg     AVX512
\c VPMOVUSQD        mem64|mask,xmmreg        AVX512VL
\c VPMOVUSQD        mem128|mask,ymmreg       AVX512VL
\c VPMOVUSQD        mem256|mask,zmmreg       AVX512
\c VPMOVUSQW        xmmreg|mask|z,xmmreg     AVX512VL
\c VPMOVUSQW        xmmreg|mask|z,ymmreg     AVX512VL
\c VPMOVUSQW        xmmreg|mask|z,zmmreg     AVX512
\c VPMOVUSQW        mem32|mask,xmmreg        AVX512VL
\c VPMOVUSQW        mem64|mask,ymmreg        AVX512VL
\c VPMOVUSQW        mem128|mask,zmmreg       AVX512
\c VPMOVUSWB        xmmreg|mask|z,xmmreg     AVX512VL/BW
\c VPMOVUSWB        xmmreg|mask|z,ymmreg     AVX512VL/BW
\c VPMOVUSWB        ymmreg|mask|z,zmmreg     AVX512BW
\c VPMOVUSWB        mem64|mask,xmmreg        AVX512VL/BW
\c VPMOVUSWB        mem128|mask,ymmreg       AVX512VL/BW
\c VPMOVUSWB        mem256|mask,zmmreg       AVX512BW
\c VPMOVW2M         kreg,xmmreg              AVX512VL/BW
\c VPMOVW2M         kreg,ymmreg              AVX512VL/BW
\c VPMOVW2M         kreg,zmmreg              AVX512BW
\c VPMOVWB          xmmreg|mask|z,xmmreg     AVX512VL/BW
\c VPMOVWB          xmmreg|mask|z,ymmreg     AVX512VL/BW
\c VPMOVWB          ymmreg|mask|z,zmmreg     AVX512BW
\c VPMOVWB          mem64|mask,xmmreg        AVX512VL/BW
\c VPMOVWB          mem128|mask,ymmreg       AVX512VL/BW
\c VPMOVWB          mem256|mask,zmmreg       AVX512BW
\c VPMOVZXBD        xmmreg|mask|z,xmmrm32    AVX512VL
\c VPMOVZXBD        ymmreg|mask|z,xmmrm64    AVX512VL
\c VPMOVZXBD        zmmreg|mask|z,xmmrm128   AVX512
\c VPMOVZXBQ        xmmreg|mask|z,xmmrm16    AVX512VL
\c VPMOVZXBQ        ymmreg|mask|z,xmmrm32    AVX512VL
\c VPMOVZXBQ        zmmreg|mask|z,xmmrm64    AVX512
\c VPMOVZXBW        xmmreg|mask|z,xmmrm64    AVX512VL/BW
\c VPMOVZXBW        ymmreg|mask|z,xmmrm128   AVX512VL/BW
\c VPMOVZXBW        zmmreg|mask|z,ymmrm256   AVX512BW
\c VPMOVZXDQ        xmmreg|mask|z,xmmrm64    AVX512VL
\c VPMOVZXDQ        ymmreg|mask|z,xmmrm128   AVX512VL
\c VPMOVZXDQ        zmmreg|mask|z,ymmrm256   AVX512
\c VPMOVZXWD        xmmreg|mask|z,xmmrm64    AVX512VL
\c VPMOVZXWD        ymmreg|mask|z,xmmrm128   AVX512VL
\c VPMOVZXWD        zmmreg|mask|z,ymmrm256   AVX512
\c VPMOVZXWQ        xmmreg|mask|z,xmmrm32    AVX512VL
\c VPMOVZXWQ        ymmreg|mask|z,xmmrm64    AVX512VL
\c VPMOVZXWQ        zmmreg|mask|z,xmmrm128   AVX512
\c VPMULDQ          xmmreg|mask|z,xmmreg*,xmmrm128|b64 AVX512VL
\c VPMULDQ          ymmreg|mask|z,ymmreg*,ymmrm256|b64 AVX512VL
\c VPMULDQ          zmmreg|mask|z,zmmreg*,zmmrm512|b64 AVX512
\c VPMULHRSW        xmmreg|mask|z,xmmreg*,xmmrm128 AVX512VL/BW
\c VPMULHRSW        ymmreg|mask|z,ymmreg*,ymmrm256 AVX512VL/BW
\c VPMULHRSW        zmmreg|mask|z,zmmreg*,zmmrm512 AVX512BW
\c VPMULHUW         xmmreg|mask|z,xmmreg*,xmmrm128 AVX512VL/BW
\c VPMULHUW         ymmreg|mask|z,ymmreg*,ymmrm256 AVX512VL/BW
\c VPMULHUW         zmmreg|mask|z,zmmreg*,zmmrm512 AVX512BW
\c VPMULHW          xmmreg|mask|z,xmmreg*,xmmrm128 AVX512VL/BW
\c VPMULHW          ymmreg|mask|z,ymmreg*,ymmrm256 AVX512VL/BW
\c VPMULHW          zmmreg|mask|z,zmmreg*,zmmrm512 AVX512BW
\c VPMULLD          xmmreg|mask|z,xmmreg*,xmmrm128|b32 AVX512VL
\c VPMULLD          ymmreg|mask|z,ymmreg*,ymmrm256|b32 AVX512VL
\c VPMULLD          zmmreg|mask|z,zmmreg*,zmmrm512|b32 AVX512
\c VPMULLQ          xmmreg|mask|z,xmmreg*,xmmrm128|b64 AVX512VL/DQ
\c VPMULLQ          ymmreg|mask|z,ymmreg*,ymmrm256|b64 AVX512VL/DQ
\c VPMULLQ          zmmreg|mask|z,zmmreg*,zmmrm512|b64 AVX512DQ
\c VPMULLW          xmmreg|mask|z,xmmreg*,xmmrm128 AVX512VL/BW
\c VPMULLW          ymmreg|mask|z,ymmreg*,ymmrm256 AVX512VL/BW
\c VPMULLW          zmmreg|mask|z,zmmreg*,zmmrm512 AVX512BW
\c VPMULTISHIFTQB   xmmreg|mask|z,xmmreg*,xmmrm128|b64 AVX512VL/VBMI
\c VPMULTISHIFTQB   ymmreg|mask|z,ymmreg*,ymmrm256|b64 AVX512VL/VBMI
\c VPMULTISHIFTQB   zmmreg|mask|z,zmmreg*,zmmrm512|b64 AVX512VBMI
\c VPMULUDQ         xmmreg|mask|z,xmmreg*,xmmrm128|b64 AVX512VL
\c VPMULUDQ         ymmreg|mask|z,ymmreg*,ymmrm256|b64 AVX512VL
\c VPMULUDQ         zmmreg|mask|z,zmmreg*,zmmrm512|b64 AVX512
\c VPORD            xmmreg|mask|z,xmmreg*,xmmrm128|b32 AVX512VL
\c VPORD            ymmreg|mask|z,ymmreg*,ymmrm256|b32 AVX512VL
\c VPORD            zmmreg|mask|z,zmmreg*,zmmrm512|b32 AVX512
\c VPORQ            xmmreg|mask|z,xmmreg*,xmmrm128|b64 AVX512VL
\c VPORQ            ymmreg|mask|z,ymmreg*,ymmrm256|b64 AVX512VL
\c VPORQ            zmmreg|mask|z,zmmreg*,zmmrm512|b64 AVX512
\c VPROLD           xmmreg|mask|z,xmmrm128|b32*,imm8 AVX512VL
\c VPROLD           ymmreg|mask|z,ymmrm256|b32*,imm8 AVX512VL
\c VPROLD           zmmreg|mask|z,zmmrm512|b32*,imm8 AVX512
\c VPROLQ           xmmreg|mask|z,xmmrm128|b64*,imm8 AVX512VL
\c VPROLQ           ymmreg|mask|z,ymmrm256|b64*,imm8 AVX512VL
\c VPROLQ           zmmreg|mask|z,zmmrm512|b64*,imm8 AVX512
\c VPROLVD          xmmreg|mask|z,xmmreg*,xmmrm128|b32 AVX512VL
\c VPROLVD          ymmreg|mask|z,ymmreg*,ymmrm256|b32 AVX512VL
\c VPROLVD          zmmreg|mask|z,zmmreg*,zmmrm512|b32 AVX512
\c VPROLVQ          xmmreg|mask|z,xmmreg*,xmmrm128|b64 AVX512VL
\c VPROLVQ          ymmreg|mask|z,ymmreg*,ymmrm256|b64 AVX512VL
\c VPROLVQ          zmmreg|mask|z,zmmreg*,zmmrm512|b64 AVX512
\c VPRORD           xmmreg|mask|z,xmmrm128|b32*,imm8 AVX512VL
\c VPRORD           ymmreg|mask|z,ymmrm256|b32*,imm8 AVX512VL
\c VPRORD           zmmreg|mask|z,zmmrm512|b32*,imm8 AVX512
\c VPRORQ           xmmreg|mask|z,xmmrm128|b64*,imm8 AVX512VL
\c VPRORQ           ymmreg|mask|z,ymmrm256|b64*,imm8 AVX512VL
\c VPRORQ           zmmreg|mask|z,zmmrm512|b64*,imm8 AVX512
\c VPRORVD          xmmreg|mask|z,xmmreg*,xmmrm128|b32 AVX512VL
\c VPRORVD          ymmreg|mask|z,ymmreg*,ymmrm256|b32 AVX512VL
\c VPRORVD          zmmreg|mask|z,zmmreg*,zmmrm512|b32 AVX512
\c VPRORVQ          xmmreg|mask|z,xmmreg*,xmmrm128|b64 AVX512VL
\c VPRORVQ          ymmreg|mask|z,ymmreg*,ymmrm256|b64 AVX512VL
\c VPRORVQ          zmmreg|mask|z,zmmreg*,zmmrm512|b64 AVX512
\c VPSADBW          xmmreg,xmmreg*,xmmrm128  AVX512VL/BW
\c VPSADBW          ymmreg,ymmreg*,ymmrm256  AVX512VL/BW
\c VPSADBW          zmmreg,zmmreg*,zmmrm512  AVX512BW
\c VPSCATTERDD      xmem32|mask,xmmreg       AVX512VL
\c VPSCATTERDD      ymem32|mask,ymmreg       AVX512VL
\c VPSCATTERDD      zmem32|mask,zmmreg       AVX512
\c VPSCATTERDQ      xmem64|mask,xmmreg       AVX512VL
\c VPSCATTERDQ      xmem64|mask,ymmreg       AVX512VL
\c VPSCATTERDQ      ymem64|mask,zmmreg       AVX512
\c VPSCATTERQD      xmem32|mask,xmmreg       AVX512VL
\c VPSCATTERQD      ymem32|mask,xmmreg       AVX512VL
\c VPSCATTERQD      zmem32|mask,ymmreg       AVX512
\c VPSCATTERQQ      xmem64|mask,xmmreg       AVX512VL
\c VPSCATTERQQ      ymem64|mask,ymmreg       AVX512VL
\c VPSCATTERQQ      zmem64|mask,zmmreg       AVX512
\c VPSHUFB          xmmreg|mask|z,xmmreg*,xmmrm128 AVX512VL/BW
\c VPSHUFB          ymmreg|mask|z,ymmreg*,ymmrm256 AVX512VL/BW
\c VPSHUFB          zmmreg|mask|z,zmmreg*,zmmrm512 AVX512BW
\c VPSHUFD          xmmreg|mask|z,xmmrm128|b32,imm8 AVX512VL
\c VPSHUFD          ymmreg|mask|z,ymmrm256|b32,imm8 AVX512VL
\c VPSHUFD          zmmreg|mask|z,zmmrm512|b32,imm8 AVX512
\c VPSHUFHW         xmmreg|mask|z,xmmrm128,imm8 AVX512VL/BW
\c VPSHUFHW         ymmreg|mask|z,ymmrm256,imm8 AVX512VL/BW
\c VPSHUFHW         zmmreg|mask|z,zmmrm512,imm8 AVX512BW
\c VPSHUFLW         xmmreg|mask|z,xmmrm128,imm8 AVX512VL/BW
\c VPSHUFLW         ymmreg|mask|z,ymmrm256,imm8 AVX512VL/BW
\c VPSHUFLW         zmmreg|mask|z,zmmrm512,imm8 AVX512BW
\c VPSLLD           xmmreg|mask|z,xmmreg*,xmmrm128 AVX512VL
\c VPSLLD           ymmreg|mask|z,ymmreg*,xmmrm128 AVX512VL
\c VPSLLD           zmmreg|mask|z,zmmreg*,xmmrm128 AVX512
\c VPSLLD           xmmreg|mask|z,xmmrm128|b32*,imm8 AVX512VL
\c VPSLLD           ymmreg|mask|z,ymmrm256|b32*,imm8 AVX512VL
\c VPSLLD           zmmreg|mask|z,zmmrm512|b32*,imm8 AVX512
\c VPSLLDQ          xmmreg,xmmrm128*,imm8    AVX512VL/BW
\c VPSLLDQ          ymmreg,ymmrm256*,imm8    AVX512VL/BW
\c VPSLLDQ          zmmreg,zmmrm512*,imm8    AVX512BW
\c VPSLLQ           xmmreg|mask|z,xmmreg*,xmmrm128 AVX512VL
\c VPSLLQ           ymmreg|mask|z,ymmreg*,xmmrm128 AVX512VL
\c VPSLLQ           zmmreg|mask|z,zmmreg*,xmmrm128 AVX512
\c VPSLLQ           xmmreg|mask|z,xmmrm128|b64*,imm8 AVX512VL
\c VPSLLQ           ymmreg|mask|z,ymmrm256|b64*,imm8 AVX512VL
\c VPSLLQ           zmmreg|mask|z,zmmrm512|b64*,imm8 AVX512
\c VPSLLVD          xmmreg|mask|z,xmmreg*,xmmrm128|b32 AVX512VL
\c VPSLLVD          ymmreg|mask|z,ymmreg*,ymmrm256|b32 AVX512VL
\c VPSLLVD          zmmreg|mask|z,zmmreg*,zmmrm512|b32 AVX512
\c VPSLLVQ          xmmreg|mask|z,xmmreg*,xmmrm128|b64 AVX512VL
\c VPSLLVQ          ymmreg|mask|z,ymmreg*,ymmrm256|b64 AVX512VL
\c VPSLLVQ          zmmreg|mask|z,zmmreg*,zmmrm512|b64 AVX512
\c VPSLLVW          xmmreg|mask|z,xmmreg*,xmmrm128 AVX512VL/BW
\c VPSLLVW          ymmreg|mask|z,ymmreg*,ymmrm256 AVX512VL/BW
\c VPSLLVW          zmmreg|mask|z,zmmreg*,zmmrm512 AVX512BW
\c VPSLLW           xmmreg|mask|z,xmmreg*,xmmrm128 AVX512VL/BW
\c VPSLLW           ymmreg|mask|z,ymmreg*,xmmrm128 AVX512VL/BW
\c VPSLLW           zmmreg|mask|z,zmmreg*,xmmrm128 AVX512BW
\c VPSLLW           xmmreg|mask|z,xmmrm128*,imm8 AVX512VL/BW
\c VPSLLW           ymmreg|mask|z,ymmrm256*,imm8 AVX512VL/BW
\c VPSLLW           zmmreg|mask|z,zmmrm512*,imm8 AVX512BW
\c VPSRAD           xmmreg|mask|z,xmmreg*,xmmrm128 AVX512VL
\c VPSRAD           ymmreg|mask|z,ymmreg*,xmmrm128 AVX512VL
\c VPSRAD           zmmreg|mask|z,zmmreg*,xmmrm128 AVX512
\c VPSRAD           xmmreg|mask|z,xmmrm128|b32*,imm8 AVX512VL
\c VPSRAD           ymmreg|mask|z,ymmrm256|b32*,imm8 AVX512VL
\c VPSRAD           zmmreg|mask|z,zmmrm512|b32*,imm8 AVX512
\c VPSRAQ           xmmreg|mask|z,xmmreg*,xmmrm128 AVX512VL
\c VPSRAQ           ymmreg|mask|z,ymmreg*,xmmrm128 AVX512VL
\c VPSRAQ           zmmreg|mask|z,zmmreg*,xmmrm128 AVX512
\c VPSRAQ           xmmreg|mask|z,xmmrm128|b64*,imm8 AVX512VL
\c VPSRAQ           ymmreg|mask|z,ymmrm256|b64*,imm8 AVX512VL
\c VPSRAQ           zmmreg|mask|z,zmmrm512|b64*,imm8 AVX512
\c VPSRAVD          xmmreg|mask|z,xmmreg*,xmmrm128|b32 AVX512VL
\c VPSRAVD          ymmreg|mask|z,ymmreg*,ymmrm256|b32 AVX512VL
\c VPSRAVD          zmmreg|mask|z,zmmreg*,zmmrm512|b32 AVX512
\c VPSRAVQ          xmmreg|mask|z,xmmreg*,xmmrm128|b64 AVX512VL
\c VPSRAVQ          ymmreg|mask|z,ymmreg*,ymmrm256|b64 AVX512VL
\c VPSRAVQ          zmmreg|mask|z,zmmreg*,zmmrm512|b64 AVX512
\c VPSRAVW          xmmreg|mask|z,xmmreg*,xmmrm128 AVX512VL/BW
\c VPSRAVW          ymmreg|mask|z,ymmreg*,ymmrm256 AVX512VL/BW
\c VPSRAVW          zmmreg|mask|z,zmmreg*,zmmrm512 AVX512BW
\c VPSRAW           xmmreg|mask|z,xmmreg*,xmmrm128 AVX512VL/BW
\c VPSRAW           ymmreg|mask|z,ymmreg*,xmmrm128 AVX512VL/BW
\c VPSRAW           zmmreg|mask|z,zmmreg*,xmmrm128 AVX512BW
\c VPSRAW           xmmreg|mask|z,xmmrm128*,imm8 AVX512VL/BW
\c VPSRAW           ymmreg|mask|z,ymmrm256*,imm8 AVX512VL/BW
\c VPSRAW           zmmreg|mask|z,zmmrm512*,imm8 AVX512BW
\c VPSRLD           xmmreg|mask|z,xmmreg*,xmmrm128 AVX512VL
\c VPSRLD           ymmreg|mask|z,ymmreg*,xmmrm128 AVX512VL
\c VPSRLD           zmmreg|mask|z,zmmreg*,xmmrm128 AVX512
\c VPSRLD           xmmreg|mask|z,xmmrm128|b32*,imm8 AVX512VL
\c VPSRLD           ymmreg|mask|z,ymmrm256|b32*,imm8 AVX512VL
\c VPSRLD           zmmreg|mask|z,zmmrm512|b32*,imm8 AVX512
\c VPSRLDQ          xmmreg,xmmrm128*,imm8    AVX512VL/BW
\c VPSRLDQ          ymmreg,ymmrm256*,imm8    AVX512VL/BW
\c VPSRLDQ          zmmreg,zmmrm512*,imm8    AVX512BW
\c VPSRLQ           xmmreg|mask|z,xmmreg*,xmmrm128 AVX512VL
\c VPSRLQ           ymmreg|mask|z,ymmreg*,xmmrm128 AVX512VL
\c VPSRLQ           zmmreg|mask|z,zmmreg*,xmmrm128 AVX512
\c VPSRLQ           xmmreg|mask|z,xmmrm128|b64*,imm8 AVX512VL
\c VPSRLQ           ymmreg|mask|z,ymmrm256|b64*,imm8 AVX512VL
\c VPSRLQ           zmmreg|mask|z,zmmrm512|b64*,imm8 AVX512
\c VPSRLVD          xmmreg|mask|z,xmmreg*,xmmrm128|b32 AVX512VL
\c VPSRLVD          ymmreg|mask|z,ymmreg*,ymmrm256|b32 AVX512VL
\c VPSRLVD          zmmreg|mask|z,zmmreg*,zmmrm512|b32 AVX512
\c VPSRLVQ          xmmreg|mask|z,xmmreg*,xmmrm128|b64 AVX512VL
\c VPSRLVQ          ymmreg|mask|z,ymmreg*,ymmrm256|b64 AVX512VL
\c VPSRLVQ          zmmreg|mask|z,zmmreg*,zmmrm512|b64 AVX512
\c VPSRLVW          xmmreg|mask|z,xmmreg*,xmmrm128 AVX512VL/BW
\c VPSRLVW          ymmreg|mask|z,ymmreg*,ymmrm256 AVX512VL/BW
\c VPSRLVW          zmmreg|mask|z,zmmreg*,zmmrm512 AVX512BW
\c VPSRLW           xmmreg|mask|z,xmmreg*,xmmrm128 AVX512VL/BW
\c VPSRLW           ymmreg|mask|z,ymmreg*,xmmrm128 AVX512VL/BW
\c VPSRLW           zmmreg|mask|z,zmmreg*,xmmrm128 AVX512BW
\c VPSRLW           xmmreg|mask|z,xmmrm128*,imm8 AVX512VL/BW
\c VPSRLW           ymmreg|mask|z,ymmrm256*,imm8 AVX512VL/BW
\c VPSRLW           zmmreg|mask|z,zmmrm512*,imm8 AVX512BW
\c VPSUBB           xmmreg|mask|z,xmmreg*,xmmrm128 AVX512VL/BW
\c VPSUBB           ymmreg|mask|z,ymmreg*,ymmrm256 AVX512VL/BW
\c VPSUBB           zmmreg|mask|z,zmmreg*,zmmrm512 AVX512BW
\c VPSUBD           xmmreg|mask|z,xmmreg*,xmmrm128|b32 AVX512VL
\c VPSUBD           ymmreg|mask|z,ymmreg*,ymmrm256|b32 AVX512VL
\c VPSUBD           zmmreg|mask|z,zmmreg*,zmmrm512|b32 AVX512
\c VPSUBQ           xmmreg|mask|z,xmmreg*,xmmrm128|b64 AVX512VL
\c VPSUBQ           ymmreg|mask|z,ymmreg*,ymmrm256|b64 AVX512VL
\c VPSUBQ           zmmreg|mask|z,zmmreg*,zmmrm512|b64 AVX512
\c VPSUBSB          xmmreg|mask|z,xmmreg*,xmmrm128 AVX512VL/BW
\c VPSUBSB          ymmreg|mask|z,ymmreg*,ymmrm256 AVX512VL/BW
\c VPSUBSB          zmmreg|mask|z,zmmreg*,zmmrm512 AVX512BW
\c VPSUBSW          xmmreg|mask|z,xmmreg*,xmmrm128 AVX512VL/BW
\c VPSUBSW          ymmreg|mask|z,ymmreg*,ymmrm256 AVX512VL/BW
\c VPSUBSW          zmmreg|mask|z,zmmreg*,zmmrm512 AVX512BW
\c VPSUBUSB         xmmreg|mask|z,xmmreg*,xmmrm128 AVX512VL/BW
\c VPSUBUSB         ymmreg|mask|z,ymmreg*,ymmrm256 AVX512VL/BW
\c VPSUBUSB         zmmreg|mask|z,zmmreg*,zmmrm512 AVX512BW
\c VPSUBUSW         xmmreg|mask|z,xmmreg*,xmmrm128 AVX512VL/BW
\c VPSUBUSW         ymmreg|mask|z,ymmreg*,ymmrm256 AVX512VL/BW
\c VPSUBUSW         zmmreg|mask|z,zmmreg*,zmmrm512 AVX512BW
\c VPSUBW           xmmreg|mask|z,xmmreg*,xmmrm128 AVX512VL/BW
\c VPSUBW           ymmreg|mask|z,ymmreg*,ymmrm256 AVX512VL/BW
\c VPSUBW           zmmreg|mask|z,zmmreg*,zmmrm512 AVX512BW
\c VPTERNLOGD       xmmreg|mask|z,xmmreg,xmmrm128|b32,imm8 AVX512VL
\c VPTERNLOGD       ymmreg|mask|z,ymmreg,ymmrm256|b32,imm8 AVX512VL
\c VPTERNLOGD       zmmreg|mask|z,zmmreg,zmmrm512|b32,imm8 AVX512
\c VPTERNLOGQ       xmmreg|mask|z,xmmreg,xmmrm128|b64,imm8 AVX512VL
\c VPTERNLOGQ       ymmreg|mask|z,ymmreg,ymmrm256|b64,imm8 AVX512VL
\c VPTERNLOGQ       zmmreg|mask|z,zmmreg,zmmrm512|b64,imm8 AVX512
\c VPTESTMB         kreg|mask,xmmreg,xmmrm128 AVX512VL/BW
\c VPTESTMB         kreg|mask,ymmreg,ymmrm256 AVX512VL/BW
\c VPTESTMB         kreg|mask,zmmreg,zmmrm512 AVX512BW
\c VPTESTMD         kreg|mask,xmmreg,xmmrm128|b32 AVX512VL
\c VPTESTMD         kreg|mask,ymmreg,ymmrm256|b32 AVX512VL
\c VPTESTMD         kreg|mask,zmmreg,zmmrm512|b32 AVX512
\c VPTESTMQ         kreg|mask,xmmreg,xmmrm128|b64 AVX512VL
\c VPTESTMQ         kreg|mask,ymmreg,ymmrm256|b64 AVX512VL
\c VPTESTMQ         kreg|mask,zmmreg,zmmrm512|b64 AVX512
\c VPTESTMW         kreg|mask,xmmreg,xmmrm128 AVX512VL/BW
\c VPTESTMW         kreg|mask,ymmreg,ymmrm256 AVX512VL/BW
\c VPTESTMW         kreg|mask,zmmreg,zmmrm512 AVX512BW
\c VPTESTNMB        kreg|mask,xmmreg,xmmrm128 AVX512VL/BW
\c VPTESTNMB        kreg|mask,ymmreg,ymmrm256 AVX512VL/BW
\c VPTESTNMB        kreg|mask,zmmreg,zmmrm512 AVX512BW
\c VPTESTNMD        kreg|mask,xmmreg,xmmrm128|b32 AVX512VL
\c VPTESTNMD        kreg|mask,ymmreg,ymmrm256|b32 AVX512VL
\c VPTESTNMD        kreg|mask,zmmreg,zmmrm512|b32 AVX512
\c VPTESTNMQ        kreg|mask,xmmreg,xmmrm128|b64 AVX512VL
\c VPTESTNMQ        kreg|mask,ymmreg,ymmrm256|b64 AVX512VL
\c VPTESTNMQ        kreg|mask,zmmreg,zmmrm512|b64 AVX512
\c VPTESTNMW        kreg|mask,xmmreg,xmmrm128 AVX512VL/BW
\c VPTESTNMW        kreg|mask,ymmreg,ymmrm256 AVX512VL/BW
\c VPTESTNMW        kreg|mask,zmmreg,zmmrm512 AVX512BW
\c VPUNPCKHBW       xmmreg|mask|z,xmmreg*,xmmrm128 AVX512VL/BW
\c VPUNPCKHBW       ymmreg|mask|z,ymmreg*,ymmrm256 AVX512VL/BW
\c VPUNPCKHBW       zmmreg|mask|z,zmmreg*,zmmrm512 AVX512BW
\c VPUNPCKHDQ       xmmreg|mask|z,xmmreg*,xmmrm128|b32 AVX512VL
\c VPUNPCKHDQ       ymmreg|mask|z,ymmreg*,ymmrm256|b32 AVX512VL
\c VPUNPCKHDQ       zmmreg|mask|z,zmmreg*,zmmrm512|b32 AVX512
\c VPUNPCKHQDQ      xmmreg|mask|z,xmmreg*,xmmrm128|b64 AVX512VL
\c VPUNPCKHQDQ      ymmreg|mask|z,ymmreg*,ymmrm256|b64 AVX512VL
\c VPUNPCKHQDQ      zmmreg|mask|z,zmmreg*,zmmrm512|b64 AVX512
\c VPUNPCKHWD       xmmreg|mask|z,xmmreg*,xmmrm128 AVX512VL/BW
\c VPUNPCKHWD       ymmreg|mask|z,ymmreg*,ymmrm256 AVX512VL/BW
\c VPUNPCKHWD       zmmreg|mask|z,zmmreg*,zmmrm512 AVX512BW
\c VPUNPCKLBW       xmmreg|mask|z,xmmreg*,xmmrm128 AVX512VL/BW
\c VPUNPCKLBW       ymmreg|mask|z,ymmreg*,ymmrm256 AVX512VL/BW
\c VPUNPCKLBW       zmmreg|mask|z,zmmreg*,zmmrm512 AVX512BW
\c VPUNPCKLDQ       xmmreg|mask|z,xmmreg*,xmmrm128|b32 AVX512VL
\c VPUNPCKLDQ       ymmreg|mask|z,ymmreg*,ymmrm256|b32 AVX512VL
\c VPUNPCKLDQ       zmmreg|mask|z,zmmreg*,zmmrm512|b32 AVX512
\c VPUNPCKLQDQ      xmmreg|mask|z,xmmreg*,xmmrm128|b64 AVX512VL
\c VPUNPCKLQDQ      ymmreg|mask|z,ymmreg*,ymmrm256|b64 AVX512VL
\c VPUNPCKLQDQ      zmmreg|mask|z,zmmreg*,zmmrm512|b64 AVX512
\c VPUNPCKLWD       xmmreg|mask|z,xmmreg*,xmmrm128 AVX512VL/BW
\c VPUNPCKLWD       ymmreg|mask|z,ymmreg*,ymmrm256 AVX512VL/BW
\c VPUNPCKLWD       zmmreg|mask|z,zmmreg*,zmmrm512 AVX512BW
\c VPXORD           xmmreg|mask|z,xmmreg*,xmmrm128|b32 AVX512VL
\c VPXORD           ymmreg|mask|z,ymmreg*,ymmrm256|b32 AVX512VL
\c VPXORD           zmmreg|mask|z,zmmreg*,zmmrm512|b32 AVX512
\c VPXORQ           xmmreg|mask|z,xmmreg*,xmmrm128|b64 AVX512VL
\c VPXORQ           ymmreg|mask|z,ymmreg*,ymmrm256|b64 AVX512VL
\c VPXORQ           zmmreg|mask|z,zmmreg*,zmmrm512|b64 AVX512
\c VRANGEPD         xmmreg|mask|z,xmmreg*,xmmrm128|b64,imm8 AVX512VL/DQ
\c VRANGEPD         ymmreg|mask|z,ymmreg*,ymmrm256|b64,imm8 AVX512VL/DQ
\c VRANGEPD         zmmreg|mask|z,zmmreg*,zmmrm512|b64|sae,imm8 AVX512DQ
\c VRANGEPS         xmmreg|mask|z,xmmreg*,xmmrm128|b32,imm8 AVX512VL/DQ
\c VRANGEPS         ymmreg|mask|z,ymmreg*,ymmrm256|b32,imm8 AVX512VL/DQ
\c VRANGEPS         zmmreg|mask|z,zmmreg*,zmmrm512|b32|sae,imm8 AVX512DQ
\c VRANGESD         xmmreg|mask|z,xmmreg*,xmmrm64|sae,imm8 AVX512DQ
\c VRANGESS         xmmreg|mask|z,xmmreg*,xmmrm32|sae,imm8 AVX512DQ
\c VRCP14PD         xmmreg|mask|z,xmmrm128|b64 AVX512VL
\c VRCP14PD         ymmreg|mask|z,ymmrm256|b64 AVX512VL
\c VRCP14PD         zmmreg|mask|z,zmmrm512|b64 AVX512
\c VRCP14PS         xmmreg|mask|z,xmmrm128|b32 AVX512VL
\c VRCP14PS         ymmreg|mask|z,ymmrm256|b32 AVX512VL
\c VRCP14PS         zmmreg|mask|z,zmmrm512|b32 AVX512
\c VRCP14SD         xmmreg|mask|z,xmmreg*,xmmrm64 AVX512
\c VRCP14SS         xmmreg|mask|z,xmmreg*,xmmrm32 AVX512
\c VRCP28PD         zmmreg|mask|z,zmmrm512|b64|sae AVX512ER
\c VRCP28PS         zmmreg|mask|z,zmmrm512|b32|sae AVX512ER
\c VRCP28SD         xmmreg|mask|z,xmmreg*,xmmrm64|sae AVX512ER
\c VRCP28SS         xmmreg|mask|z,xmmreg*,xmmrm32|sae AVX512ER
\c VREDUCEPD        xmmreg|mask|z,xmmrm128|b64,imm8 AVX512VL/DQ
\c VREDUCEPD        ymmreg|mask|z,ymmrm256|b64,imm8 AVX512VL/DQ
\c VREDUCEPD        zmmreg|mask|z,zmmrm512|b64|sae,imm8 AVX512DQ
\c VREDUCEPS        xmmreg|mask|z,xmmrm128|b32,imm8 AVX512VL/DQ
\c VREDUCEPS        ymmreg|mask|z,ymmrm256|b32,imm8 AVX512VL/DQ
\c VREDUCEPS        zmmreg|mask|z,zmmrm512|b32|sae,imm8 AVX512DQ
\c VREDUCESD        xmmreg|mask|z,xmmreg*,xmmrm64|sae,imm8 AVX512DQ
\c VREDUCESS        xmmreg|mask|z,xmmreg*,xmmrm32|sae,imm8 AVX512DQ
\c VRNDSCALEPD      xmmreg|mask|z,xmmrm128|b64,imm8 AVX512VL
\c VRNDSCALEPD      ymmreg|mask|z,ymmrm256|b64,imm8 AVX512VL
\c VRNDSCALEPD      zmmreg|mask|z,zmmrm512|b64|sae,imm8 AVX512
\c VRNDSCALEPS      xmmreg|mask|z,xmmrm128|b32,imm8 AVX512VL
\c VRNDSCALEPS      ymmreg|mask|z,ymmrm256|b32,imm8 AVX512VL
\c VRNDSCALEPS      zmmreg|mask|z,zmmrm512|b32|sae,imm8 AVX512
\c VRNDSCALESD      xmmreg|mask|z,xmmreg*,xmmrm64|sae,imm8 AVX512
\c VRNDSCALESS      xmmreg|mask|z,xmmreg*,xmmrm32|sae,imm8 AVX512
\c VRSQRT14PD       xmmreg|mask|z,xmmrm128|b64 AVX512VL
\c VRSQRT14PD       ymmreg|mask|z,ymmrm256|b64 AVX512VL
\c VRSQRT14PD       zmmreg|mask|z,zmmrm512|b64 AVX512
\c VRSQRT14PS       xmmreg|mask|z,xmmrm128|b32 AVX512VL
\c VRSQRT14PS       ymmreg|mask|z,ymmrm256|b32 AVX512VL
\c VRSQRT14PS       zmmreg|mask|z,zmmrm512|b32 AVX512
\c VRSQRT14SD       xmmreg|mask|z,xmmreg*,xmmrm64 AVX512
\c VRSQRT14SS       xmmreg|mask|z,xmmreg*,xmmrm32 AVX512
\c VRSQRT28PD       zmmreg|mask|z,zmmrm512|b64|sae AVX512ER
\c VRSQRT28PS       zmmreg|mask|z,zmmrm512|b32|sae AVX512ER
\c VRSQRT28SD       xmmreg|mask|z,xmmreg*,xmmrm64|sae AVX512ER
\c VRSQRT28SS       xmmreg|mask|z,xmmreg*,xmmrm32|sae AVX512ER
\c VSCALEFPD        xmmreg|mask|z,xmmreg*,xmmrm128|b64 AVX512VL
\c VSCALEFPD        ymmreg|mask|z,ymmreg*,ymmrm256|b64 AVX512VL
\c VSCALEFPD        zmmreg|mask|z,zmmreg*,zmmrm512|b64|er AVX512
\c VSCALEFPS        xmmreg|mask|z,xmmreg*,xmmrm128|b32 AVX512VL
\c VSCALEFPS        ymmreg|mask|z,ymmreg*,ymmrm256|b32 AVX512VL
\c VSCALEFPS        zmmreg|mask|z,zmmreg*,zmmrm512|b32|er AVX512
\c VSCALEFSD        xmmreg|mask|z,xmmreg*,xmmrm64|er AVX512
\c VSCALEFSS        xmmreg|mask|z,xmmreg*,xmmrm32|er AVX512
\c VSCATTERDPD      xmem64|mask,xmmreg       AVX512VL
\c VSCATTERDPD      xmem64|mask,ymmreg       AVX512VL
\c VSCATTERDPD      ymem64|mask,zmmreg       AVX512
\c VSCATTERDPS      xmem32|mask,xmmreg       AVX512VL
\c VSCATTERDPS      ymem32|mask,ymmreg       AVX512VL
\c VSCATTERDPS      zmem32|mask,zmmreg       AVX512
\c VSCATTERPF0DPD   ymem64|mask              AVX512PF
\c VSCATTERPF0DPS   zmem32|mask              AVX512PF
\c VSCATTERPF0QPD   zmem64|mask              AVX512PF
\c VSCATTERPF0QPS   zmem32|mask              AVX512PF
\c VSCATTERPF1DPD   ymem64|mask              AVX512PF
\c VSCATTERPF1DPS   zmem32|mask              AVX512PF
\c VSCATTERPF1QPD   zmem64|mask              AVX512PF
\c VSCATTERPF1QPS   zmem32|mask              AVX512PF
\c VSCATTERQPD      xmem64|mask,xmmreg       AVX512VL
\c VSCATTERQPD      ymem64|mask,ymmreg       AVX512VL
\c VSCATTERQPD      zmem64|mask,zmmreg       AVX512
\c VSCATTERQPS      xmem32|mask,xmmreg       AVX512VL
\c VSCATTERQPS      ymem32|mask,xmmreg       AVX512VL
\c VSCATTERQPS      zmem32|mask,ymmreg       AVX512
\c VSHUFF32X4       ymmreg|mask|z,ymmreg*,ymmrm256|b32,imm8 AVX512VL
\c VSHUFF32X4       zmmreg|mask|z,zmmreg*,zmmrm512|b32,imm8 AVX512
\c VSHUFF64X2       ymmreg|mask|z,ymmreg*,ymmrm256|b64,imm8 AVX512VL
\c VSHUFF64X2       zmmreg|mask|z,zmmreg*,zmmrm512|b64,imm8 AVX512
\c VSHUFI32X4       ymmreg|mask|z,ymmreg*,ymmrm256|b32,imm8 AVX512VL
\c VSHUFI32X4       zmmreg|mask|z,zmmreg*,zmmrm512|b32,imm8 AVX512
\c VSHUFI64X2       ymmreg|mask|z,ymmreg*,ymmrm256|b64,imm8 AVX512VL
\c VSHUFI64X2       zmmreg|mask|z,zmmreg*,zmmrm512|b64,imm8 AVX512
\c VSHUFPD          xmmreg|mask|z,xmmreg*,xmmrm128|b64,imm8 AVX512VL
\c VSHUFPD          ymmreg|mask|z,ymmreg*,ymmrm256|b64,imm8 AVX512VL
\c VSHUFPD          zmmreg|mask|z,zmmreg*,zmmrm512|b64,imm8 AVX512
\c VSHUFPS          xmmreg|mask|z,xmmreg*,xmmrm128|b32,imm8 AVX512VL
\c VSHUFPS          ymmreg|mask|z,ymmreg*,ymmrm256|b32,imm8 AVX512VL
\c VSHUFPS          zmmreg|mask|z,zmmreg*,zmmrm512|b32,imm8 AVX512
\c VSQRTPD          xmmreg|mask|z,xmmrm128|b64 AVX512VL
\c VSQRTPD          ymmreg|mask|z,ymmrm256|b64 AVX512VL
\c VSQRTPD          zmmreg|mask|z,zmmrm512|b64|er AVX512
\c VSQRTPS          xmmreg|mask|z,xmmrm128|b32 AVX512VL
\c VSQRTPS          ymmreg|mask|z,ymmrm256|b32 AVX512VL
\c VSQRTPS          zmmreg|mask|z,zmmrm512|b32|er AVX512
\c VSQRTSD          xmmreg|mask|z,xmmreg*,xmmrm64|er AVX512
\c VSQRTSS          xmmreg|mask|z,xmmreg*,xmmrm32|er AVX512
\c VSUBPD           xmmreg|mask|z,xmmreg*,xmmrm128|b64 AVX512VL
\c VSUBPD           ymmreg|mask|z,ymmreg*,ymmrm256|b64 AVX512VL
\c VSUBPD           zmmreg|mask|z,zmmreg*,zmmrm512|b64|er AVX512
\c VSUBPS           xmmreg|mask|z,xmmreg*,xmmrm128|b32 AVX512VL
\c VSUBPS           ymmreg|mask|z,ymmreg*,ymmrm256|b32 AVX512VL
\c VSUBPS           zmmreg|mask|z,zmmreg*,zmmrm512|b32|er AVX512
\c VSUBSD           xmmreg|mask|z,xmmreg*,xmmrm64|er AVX512
\c VSUBSS           xmmreg|mask|z,xmmreg*,xmmrm32|er AVX512
\c VUCOMISD         xmmreg,xmmrm64|sae       AVX512
\c VUCOMISS         xmmreg,xmmrm32|sae       AVX512
\c VUNPCKHPD        xmmreg|mask|z,xmmreg*,xmmrm128|b64 AVX512VL
\c VUNPCKHPD        ymmreg|mask|z,ymmreg*,ymmrm256|b64 AVX512VL
\c VUNPCKHPD        zmmreg|mask|z,zmmreg*,zmmrm512|b64 AVX512
\c VUNPCKHPS        xmmreg|mask|z,xmmreg*,xmmrm128|b32 AVX512VL
\c VUNPCKHPS        ymmreg|mask|z,ymmreg*,ymmrm256|b32 AVX512VL
\c VUNPCKHPS        zmmreg|mask|z,zmmreg*,zmmrm512|b32 AVX512
\c VUNPCKLPD        xmmreg|mask|z,xmmreg*,xmmrm128|b64 AVX512VL
\c VUNPCKLPD        ymmreg|mask|z,ymmreg*,ymmrm256|b64 AVX512VL
\c VUNPCKLPD        zmmreg|mask|z,zmmreg*,zmmrm512|b64 AVX512
\c VUNPCKLPS        xmmreg|mask|z,xmmreg*,xmmrm128|b32 AVX512VL
\c VUNPCKLPS        ymmreg|mask|z,ymmreg*,ymmrm256|b32 AVX512VL
\c VUNPCKLPS        zmmreg|mask|z,zmmreg*,zmmrm512|b32 AVX512
\c VXORPD           xmmreg|mask|z,xmmreg*,xmmrm128|b64 AVX512VL/DQ
\c VXORPD           ymmreg|mask|z,ymmreg*,ymmrm256|b64 AVX512VL/DQ
\c VXORPD           zmmreg|mask|z,zmmreg*,zmmrm512|b64 AVX512DQ
\c VXORPS           xmmreg|mask|z,xmmreg*,xmmrm128|b32 AVX512VL/DQ
\c VXORPS           ymmreg|mask|z,ymmreg*,ymmrm256|b32 AVX512VL/DQ
\c VXORPS           zmmreg|mask|z,zmmreg*,zmmrm512|b32 AVX512DQ

\S{} Intel memory protection keys for userspace (PKU aka PKEYs)

\c RDPKRU                                    LONG
\c WRPKRU                                    LONG

\S{} Read Processor ID

\c RDPID            reg32                    NOLONG
\c RDPID            reg64                    LONG
\c RDPID            reg32                    LONG,UNDOC

\S{} New memory instructions

\c CLFLUSHOPT       mem                      
\c CLWB             mem                      
\c PCOMMIT                                   NEVER,NOP
\c CLZERO                                    AMD
\c CLZERO           reg_ax                   AMD,ND,NOLONG
\c CLZERO           reg_eax                  AMD,ND
\c CLZERO           reg_rax                  AMD,ND,LONG

\S{} Processor trace write

\c PTWRITE          rm32                     
\c PTWRITE          rm64                     LONG

\S{} Instructions from the Intel Instruction Set Extensions,


\S{} doc 319433-034 May 2018

\c CLDEMOTE         mem                      
\c MOVDIRI          mem32,reg32              SD
\c MOVDIRI          mem64,reg64              LONG
\c MOVDIR64B        reg16,mem512             NOLONG
\c MOVDIR64B        reg32,mem512             
\c MOVDIR64B        reg64,mem512             LONG
\c PCONFIG                                   
\c TPAUSE           reg32                    
\c TPAUSE           reg32,reg_edx,reg_eax    ND
\c UMONITOR         reg16                    NOLONG
\c UMONITOR         reg32                    
\c UMONITOR         reg64                    LONG
\c UMWAIT           reg32                    
\c UMWAIT           reg32,reg_edx,reg_eax    ND
\c WBNOINVD                                  

\S{} Galois field operations (GFNI)

\c GF2P8AFFINEINVQB xmmreg,xmmrm128,imm8     GFNI,SSE
\c VGF2P8AFFINEINVQB xmmreg,xmmreg*,xmmrm128,imm8 GFNI,AVX
\c VGF2P8AFFINEINVQB ymmreg,ymmreg*,ymmrm256,imm8 GFNI,AVX
\c VGF2P8AFFINEINVQB xmmreg|mask|z,xmmreg*,xmmrm128|b64,imm8 AVX512VL,GFNI
\c VGF2P8AFFINEINVQB ymmreg|mask|z,ymmreg*,ymmrm256|b64,imm8 AVX512VL,GFNI
\c VGF2P8AFFINEINVQB zmmreg|mask|z,zmmreg*,zmmrm512|b64,imm8 AVX512,GFNI
\c GF2P8AFFINEQB    xmmreg,xmmrm128,imm8     GFNI,SSE
\c VGF2P8AFFINEQB   xmmreg,xmmreg*,xmmrm128,imm8 GFNI,AVX
\c VGF2P8AFFINEQB   ymmreg,ymmreg*,ymmrm256,imm8 GFNI,AVX
\c VGF2P8AFFINEQB   xmmreg|mask|z,xmmreg*,xmmrm128|b64,imm8 AVX512VL,GFNI
\c VGF2P8AFFINEQB   ymmreg|mask|z,ymmreg*,ymmrm256|b64,imm8 AVX512VL,GFNI
\c VGF2P8AFFINEQB   zmmreg|mask|z,zmmreg*,zmmrm512|b64,imm8 AVX512,GFNI
\c GF2P8MULB        xmmreg,xmmrm128          GFNI,SSE
\c VGF2P8MULB       xmmreg,xmmreg*,xmmrm128  GFNI,AVX
\c VGF2P8MULB       ymmreg,ymmreg*,ymmrm256  GFNI,AVX
\c VGF2P8MULB       xmmreg|mask|z,xmmreg*,xmmrm128 AVX512VL,GFNI
\c VGF2P8MULB       ymmreg|mask|z,ymmreg*,ymmrm256 AVX512VL,GFNI
\c VGF2P8MULB       zmmreg|mask|z,zmmreg*,zmmrm512 AVX512,GFNI

\S{} AVX512 Vector Bit Manipulation Instructions 2

\c VPCOMPRESSB      mem128|mask,xmmreg       AVX512VBMI2/VL
\c VPCOMPRESSB      mem256|mask,ymmreg       AVX512VBMI2/VL
\c VPCOMPRESSB      mem512|mask,zmmreg       AVX512VBMI2
\c VPCOMPRESSB      xmmreg|mask|z,xmmreg     AVX512VBMI2/VL
\c VPCOMPRESSB      ymmreg|mask|z,ymmreg     AVX512VBMI2/VL
\c VPCOMPRESSB      zmmreg|mask|z,zmmreg     AVX512VBMI2
\c VPCOMPRESSW      mem128|mask,xmmreg       AVX512VBMI2/VL
\c VPCOMPRESSW      mem256|mask,ymmreg       AVX512VBMI2/VL
\c VPCOMPRESSW      mem512|mask,zmmreg       AVX512VBMI2
\c VPCOMPRESSW      xmmreg|mask|z,xmmreg     AVX512VBMI2/VL
\c VPCOMPRESSW      ymmreg|mask|z,ymmreg     AVX512VBMI2/VL
\c VPCOMPRESSW      zmmreg|mask|z,zmmreg     AVX512VBMI2
\c VPEXPANDB        mem128|mask,xmmreg       AVX512VBMI2/VL
\c VPEXPANDB        mem256|mask,ymmreg       AVX512VBMI2/VL
\c VPEXPANDB        mem512|mask,zmmreg       AVX512VBMI2
\c VPEXPANDB        xmmreg|mask|z,xmmreg     AVX512VBMI2/VL
\c VPEXPANDB        ymmreg|mask|z,ymmreg     AVX512VBMI2/VL
\c VPEXPANDB        zmmreg|mask|z,zmmreg     AVX512VBMI2
\c VPEXPANDW        mem128|mask,xmmreg       AVX512VBMI2/VL
\c VPEXPANDW        mem256|mask,ymmreg       AVX512VBMI2/VL
\c VPEXPANDW        mem512|mask,zmmreg       AVX512VBMI2
\c VPEXPANDW        xmmreg|mask|z,xmmreg     AVX512VBMI2/VL
\c VPEXPANDW        ymmreg|mask|z,ymmreg     AVX512VBMI2/VL
\c VPEXPANDW        zmmreg|mask|z,zmmreg     AVX512VBMI2
\c VPSHLDW          xmmreg|mask|z,xmmreg*,xmmrm128,imm8 AVX512VBMI2/VL
\c VPSHLDW          ymmreg|mask|z,ymmreg*,ymmrm256,imm8 AVX512VBMI2/VL
\c VPSHLDW          zmmreg|mask|z,zmmreg*,zmmrm512,imm8 AVX512VBMI2
\c VPSHLDD          xmmreg|mask|z,xmmreg*,xmmrm128|b32,imm8 AVX512VBMI2/VL
\c VPSHLDD          ymmreg|mask|z,ymmreg*,ymmrm256|b32,imm8 AVX512VBMI2/VL
\c VPSHLDD          zmmreg|mask|z,zmmreg*,zmmrm512|b32,imm8 AVX512VBMI2
\c VPSHLDQ          xmmreg|mask|z,xmmreg*,xmmrm128|b64,imm8 AVX512VBMI2/VL
\c VPSHLDQ          ymmreg|mask|z,ymmreg*,ymmrm256|b64,imm8 AVX512VBMI2/VL
\c VPSHLDQ          zmmreg|mask|z,zmmreg*,zmmrm512|b64,imm8 AVX512VBMI2
\c VPSHLDVW         xmmreg|mask|z,xmmreg*,xmmrm128 AVX512VBMI2/VL
\c VPSHLDVW         ymmreg|mask|z,ymmreg*,ymmrm256 AVX512VBMI2/VL
\c VPSHLDVW         zmmreg|mask|z,zmmreg*,zmmrm512 AVX512VBMI2
\c VPSHLDVD         xmmreg|mask|z,xmmreg*,xmmrm128|b32 AVX512VBMI2/VL
\c VPSHLDVD         ymmreg|mask|z,ymmreg*,ymmrm256|b32 AVX512VBMI2/VL
\c VPSHLDVD         zmmreg|mask|z,zmmreg*,zmmrm512|b32 AVX512VBMI2
\c VPSHLDVQ         xmmreg|mask|z,xmmreg*,xmmrm128|b64 AVX512VBMI2/VL
\c VPSHLDVQ         ymmreg|mask|z,ymmreg*,ymmrm256|b64 AVX512VBMI2/VL
\c VPSHLDVQ         zmmreg|mask|z,zmmreg*,zmmrm512|b64 AVX512VBMI2
\c VPSHRDW          xmmreg|mask|z,xmmreg*,xmmrm128,imm8 AVX512VBMI2/VL
\c VPSHRDW          ymmreg|mask|z,ymmreg*,ymmrm256,imm8 AVX512VBMI2/VL
\c VPSHRDW          zmmreg|mask|z,zmmreg*,zmmrm512,imm8 AVX512VBMI2
\c VPSHRDD          xmmreg|mask|z,xmmreg*,xmmrm128|b32,imm8 AVX512VBMI2/VL
\c VPSHRDD          ymmreg|mask|z,ymmreg*,ymmrm256|b32,imm8 AVX512VBMI2/VL
\c VPSHRDD          zmmreg|mask|z,zmmreg*,zmmrm512|b32,imm8 AVX512VBMI2
\c VPSHRDQ          xmmreg|mask|z,xmmreg*,xmmrm128|b64,imm8 AVX512VBMI2/VL
\c VPSHRDQ          ymmreg|mask|z,ymmreg*,ymmrm256|b64,imm8 AVX512VBMI2/VL
\c VPSHRDQ          zmmreg|mask|z,zmmreg*,zmmrm512|b64,imm8 AVX512VBMI2
\c VPSHRDVW         xmmreg|mask|z,xmmreg*,xmmrm128 AVX512VBMI2/VL
\c VPSHRDVW         ymmreg|mask|z,ymmreg*,ymmrm256 AVX512VBMI2/VL
\c VPSHRDVW         zmmreg|mask|z,zmmreg*,zmmrm512 AVX512VBMI2
\c VPSHRDVD         xmmreg|mask|z,xmmreg*,xmmrm128|b32 AVX512VBMI2/VL
\c VPSHRDVD         ymmreg|mask|z,ymmreg*,ymmrm256|b32 AVX512VBMI2/VL
\c VPSHRDVD         zmmreg|mask|z,zmmreg*,zmmrm512|b32 AVX512VBMI2
\c VPSHRDVQ         xmmreg|mask|z,xmmreg*,xmmrm128|b64 AVX512VBMI2/VL
\c VPSHRDVQ         ymmreg|mask|z,ymmreg*,ymmrm256|b64 AVX512VBMI2/VL
\c VPSHRDVQ         zmmreg|mask|z,zmmreg*,zmmrm512|b64 AVX512VBMI2

\S{} AVX512 VNNI

\c VPDPBUSD         xmmreg|mask|z,xmmreg*,xmmrm128|b32 AVX512VNNI/VL
\c VPDPBUSD         ymmreg|mask|z,ymmreg*,ymmrm256|b32 AVX512VNNI/VL
\c VPDPBUSD         zmmreg|mask|z,zmmreg*,zmmrm512|b32 AVX512VNNI
\c VPDPBUSDS        xmmreg|mask|z,xmmreg*,xmmrm128|b32 AVX512VNNI/VL
\c VPDPBUSDS        ymmreg|mask|z,ymmreg*,ymmrm256|b32 AVX512VNNI/VL
\c VPDPBUSDS        zmmreg|mask|z,zmmreg*,zmmrm512|b32 AVX512VNNI
\c VPDPWSSD         xmmreg|mask|z,xmmreg*,xmmrm128|b32 AVX512VNNI/VL
\c VPDPWSSD         ymmreg|mask|z,ymmreg*,ymmrm256|b32 AVX512VNNI/VL
\c VPDPWSSD         zmmreg|mask|z,zmmreg*,zmmrm512|b32 AVX512VNNI
\c VPDPWSSDS        xmmreg|mask|z,xmmreg*,xmmrm128|b32 AVX512VNNI/VL
\c VPDPWSSDS        ymmreg|mask|z,ymmreg*,ymmrm256|b32 AVX512VNNI/VL
\c VPDPWSSDS        zmmreg|mask|z,zmmreg*,zmmrm512|b32 AVX512VNNI

\S{} AVX512 Bit Algorithms

\c VPOPCNTB         xmmreg|mask|z,xmmrm128   AVX512BITALG/VL
\c VPOPCNTB         ymmreg|mask|z,ymmrm256   AVX512BITALG/VL
\c VPOPCNTB         zmmreg|mask|z,zmmrm512   AVX512BITALG
\c VPOPCNTW         xmmreg|mask|z,xmmrm128   AVX512BITALG/VL
\c VPOPCNTW         ymmreg|mask|z,ymmrm256   AVX512BITALG/VL
\c VPOPCNTW         zmmreg|mask|z,zmmrm512   AVX512BITALG
\c VPOPCNTD         xmmreg|mask|z,xmmrm128   AVX512VPOPCNTDQ/VL
\c VPOPCNTD         ymmreg|mask|z,ymmrm256   AVX512VPOPCNTDQ/VL
\c VPOPCNTD         zmmreg|mask|z,zmmrm512   AVX512VPOPCNTDQ
\c VPOPCNTQ         xmmreg|mask|z,xmmrm128   AVX512VPOPCNTDQ/VL
\c VPOPCNTQ         ymmreg|mask|z,ymmrm256   AVX512VPOPCNTDQ/VL
\c VPOPCNTQ         zmmreg|mask|z,zmmrm512   AVX512VPOPCNTDQ
\c VPSHUFBITQMB     kreg|mask,xmmreg,xmmrm128 AVX512BITALG/VL
\c VPSHUFBITQMB     kreg|mask,ymmreg,ymmrm256 AVX512BITALG/VL
\c VPSHUFBITQMB     kreg|mask,zmmreg,zmmrm512 AVX512BITALG

\S{} AVX512 4-iteration Multiply-Add

\c V4FMADDPS        zmmreg|mask|z,zmmreg|rs4,mem AVX5124FMAPS,SO
\c V4FNMADDPS       zmmreg|mask|z,zmmreg|rs4,mem AVX5124FMAPS,SO
\c V4FMADDSS        zmmreg|mask|z,zmmreg|rs4,mem AVX5124FMAPS,SO
\c V4FNMADDSS       zmmreg|mask|z,zmmreg|rs4,mem AVX5124FMAPS,SO

\S{} AVX512 4-iteration Dot Product

\c V4DPWSSDS        zmmreg|mask|z,zmmreg|rs4,mem AVX5124VNNIW,SO
\c V4DPWSSD         zmmreg|mask|z,zmmreg|rs4,mem AVX5124VNNIW,SO

\S{} Intel Software Guard Extensions (SGX)

\c ENCLS                                     SGX
\c ENCLU                                     SGX
\c ENCLV                                     SGX

\S{} Intel Control-Flow Enforcement Technology (CET)

\c CLRSSBSY         mem64                    CET
\c ENDBR32                                   CET
\c ENDBR64                                   CET
\c INCSSPD          reg32                    CET
\c INCSSPQ          reg64                    CET,LONG
\c RDSSPD           reg32                    CET
\c RDSSPQ           reg64                    CET,LONG
\c RSTORSSP         mem64                    CET
\c SAVEPREVSSP                               CET
\c SETSSBSY                                  CET
\c WRUSSD           mem32,reg32              CET
\c WRUSSQ           mem64,reg64              CET,LONG
\c WRSSD            mem32,reg32              CET
\c WRSSQ            mem64,reg64              CET,LONG

\S{} Instructions from ISE doc 319433-040, June 2020

\c ENQCMD           reg16,mem512             ENQCMD
\c ENQCMD           reg32,mem512             ENQCMD,ND
\c ENQCMD           reg32,mem512             ENQCMD
\c ENQCMD           reg64,mem512             ENQCMD,LONG
\c ENQCMDS          reg16,mem512             ENQCMD,PRIV
\c ENQCMDS          reg32,mem512             ENQCMD,PRIV,ND
\c ENQCMDS          reg32,mem512             ENQCMD,PRIV
\c ENQCMDS          reg64,mem512             ENQCMD,PRIV,LONG
\c PCONFIG                                   PCONFIG,PRIV
\c SERIALIZE                                 SERIALIZE
\c WBNOINVD                                  WBNOINVD,PRIV
\c XRESLDTRK                                 TSXLDTRK
\c XSUSLDTRK                                 TSXLDTRK

\S{} AVX512 Bfloat16 instructions

\c VCVTNE2PS2BF16   xmmreg|mask|z,xmmreg*,xmmrm128|b32 AVX512BF16
\c VCVTNE2PS2BF16   ymmreg|mask|z,ymmreg*,ymmrm256|b32 AVX512BF16
\c VCVTNE2PS2BF16   zmmreg|mask|z,zmmreg*,zmmrm512|b32 AVX512BF16
\c VCVTNE2PS2BF16   xmmreg|mask|z,xmmreg*,xmmrm128|b32 AVX512BF16
\c VCVTNE2PS2BF16   ymmreg|mask|z,ymmreg*,ymmrm256|b32 AVX512BF16
\c VCVTNE2PS2BF16   zmmreg|mask|z,zmmreg*,zmmrm512|b32 AVX512BF16
\c VDPBF16PS        xmmreg|mask|z,xmmreg*,xmmrm128|b32 AVX512BF16
\c VDPBF16PS        ymmreg|mask|z,ymmreg*,ymmrm128|b32 AVX512BF16
\c VDPBF16PS        zmmreg|mask|z,zmmreg*,zmmrm128|b32 AVX512BF16

\S{} AVX512 mask intersect instructions

\c VP2INTERSECTD    kreg|rs2,xmmreg,xmmrm128|b32 AVX512BF16
\c VP2INTERSECTD    kreg|rs2,ymmreg,ymmrm128|b32 AVX512BF16
\c VP2INTERSECTD    kreg|rs2,zmmreg,zmmrm128|b32 AVX512BF16

\S{} Intel Advanced Matrix Extensions (AMX)

\c LDTILECFG        mem512                   AMXTILE,SZ,LONG
\c STTILECFG        mem512                   AMXTILE,SZ,LONG
\c TDPBF16PS        tmmreg,tmmreg,tmmreg     AMXBF16,LONG
\c TDPBSSD          tmmreg,tmmreg,tmmreg     AMXINT8,LONG
\c TDPBSUD          tmmreg,tmmreg,tmmreg     AMXINT8,LONG
\c TDPBUSD          tmmreg,tmmreg,tmmreg     AMXINT8,LONG
\c TDPBUUD          tmmreg,tmmreg,tmmreg     AMXINT8,LONG
\c TILELOADD        tmmreg,mem               AMXTILE,MIB,SIB,SX,LONG
\c TILELOADDT1      tmmreg,mem               AMXTILE,MIB,SIB,SX,LONG
\c TILERELEASE                               AMXTILE,LONG
\c TILESTORED       mem,tmmreg               AMXTILE,MIB,SIB,SX,LONG
\c TILEZERO         tmmreg                   AMXTILE,LONG

\S{} Systematic names for the hinting nop instructions

\c HINT_NOP0        rm16                     P6,UNDOC
\c HINT_NOP0        rm32                     P6,UNDOC
\c HINT_NOP0        rm64                     X86_64,LONG,UNDOC
\c HINT_NOP1        rm16                     P6,UNDOC
\c HINT_NOP1        rm32                     P6,UNDOC
\c HINT_NOP1        rm64                     X86_64,LONG,UNDOC
\c HINT_NOP2        rm16                     P6,UNDOC
\c HINT_NOP2        rm32                     P6,UNDOC
\c HINT_NOP2        rm64                     X86_64,LONG,UNDOC
\c HINT_NOP3        rm16                     P6,UNDOC
\c HINT_NOP3        rm32                     P6,UNDOC
\c HINT_NOP3        rm64                     X86_64,LONG,UNDOC
\c HINT_NOP4        rm16                     P6,UNDOC
\c HINT_NOP4        rm32                     P6,UNDOC
\c HINT_NOP4        rm64                     X86_64,LONG,UNDOC
\c HINT_NOP5        rm16                     P6,UNDOC
\c HINT_NOP5        rm32                     P6,UNDOC
\c HINT_NOP5        rm64                     X86_64,LONG,UNDOC
\c HINT_NOP6        rm16                     P6,UNDOC
\c HINT_NOP6        rm32                     P6,UNDOC
\c HINT_NOP6        rm64                     X86_64,LONG,UNDOC
\c HINT_NOP7        rm16                     P6,UNDOC
\c HINT_NOP7        rm32                     P6,UNDOC
\c HINT_NOP7        rm64                     X86_64,LONG,UNDOC
\c HINT_NOP8        rm16                     P6,UNDOC
\c HINT_NOP8        rm32                     P6,UNDOC
\c HINT_NOP8        rm64                     X86_64,LONG,UNDOC
\c HINT_NOP9        rm16                     P6,UNDOC
\c HINT_NOP9        rm32                     P6,UNDOC
\c HINT_NOP9        rm64                     X86_64,LONG,UNDOC
\c HINT_NOP10       rm16                     P6,UNDOC
\c HINT_NOP10       rm32                     P6,UNDOC
\c HINT_NOP10       rm64                     X86_64,LONG,UNDOC
\c HINT_NOP11       rm16                     P6,UNDOC
\c HINT_NOP11       rm32                     P6,UNDOC
\c HINT_NOP11       rm64                     X86_64,LONG,UNDOC
\c HINT_NOP12       rm16                     P6,UNDOC
\c HINT_NOP12       rm32                     P6,UNDOC
\c HINT_NOP12       rm64                     X86_64,LONG,UNDOC
\c HINT_NOP13       rm16                     P6,UNDOC
\c HINT_NOP13       rm32                     P6,UNDOC
\c HINT_NOP13       rm64                     X86_64,LONG,UNDOC
\c HINT_NOP14       rm16                     P6,UNDOC
\c HINT_NOP14       rm32                     P6,UNDOC
\c HINT_NOP14       rm64                     X86_64,LONG,UNDOC
\c HINT_NOP15       rm16                     P6,UNDOC
\c HINT_NOP15       rm32                     P6,UNDOC
\c HINT_NOP15       rm64                     X86_64,LONG,UNDOC
\c HINT_NOP16       rm16                     P6,UNDOC
\c HINT_NOP16       rm32                     P6,UNDOC
\c HINT_NOP16       rm64                     X86_64,LONG,UNDOC
\c HINT_NOP17       rm16                     P6,UNDOC
\c HINT_NOP17       rm32                     P6,UNDOC
\c HINT_NOP17       rm64                     X86_64,LONG,UNDOC
\c HINT_NOP18       rm16                     P6,UNDOC
\c HINT_NOP18       rm32                     P6,UNDOC
\c HINT_NOP18       rm64                     X86_64,LONG,UNDOC
\c HINT_NOP19       rm16                     P6,UNDOC
\c HINT_NOP19       rm32                     P6,UNDOC
\c HINT_NOP19       rm64                     X86_64,LONG,UNDOC
\c HINT_NOP20       rm16                     P6,UNDOC
\c HINT_NOP20       rm32                     P6,UNDOC
\c HINT_NOP20       rm64                     X86_64,LONG,UNDOC
\c HINT_NOP21       rm16                     P6,UNDOC
\c HINT_NOP21       rm32                     P6,UNDOC
\c HINT_NOP21       rm64                     X86_64,LONG,UNDOC
\c HINT_NOP22       rm16                     P6,UNDOC
\c HINT_NOP22       rm32                     P6,UNDOC
\c HINT_NOP22       rm64                     X86_64,LONG,UNDOC
\c HINT_NOP23       rm16                     P6,UNDOC
\c HINT_NOP23       rm32                     P6,UNDOC
\c HINT_NOP23       rm64                     X86_64,LONG,UNDOC
\c HINT_NOP24       rm16                     P6,UNDOC
\c HINT_NOP24       rm32                     P6,UNDOC
\c HINT_NOP24       rm64                     X86_64,LONG,UNDOC
\c HINT_NOP25       rm16                     P6,UNDOC
\c HINT_NOP25       rm32                     P6,UNDOC
\c HINT_NOP25       rm64                     X86_64,LONG,UNDOC
\c HINT_NOP26       rm16                     P6,UNDOC
\c HINT_NOP26       rm32                     P6,UNDOC
\c HINT_NOP26       rm64                     X86_64,LONG,UNDOC
\c HINT_NOP27       rm16                     P6,UNDOC
\c HINT_NOP27       rm32                     P6,UNDOC
\c HINT_NOP27       rm64                     X86_64,LONG,UNDOC
\c HINT_NOP28       rm16                     P6,UNDOC
\c HINT_NOP28       rm32                     P6,UNDOC
\c HINT_NOP28       rm64                     X86_64,LONG,UNDOC
\c HINT_NOP29       rm16                     P6,UNDOC
\c HINT_NOP29       rm32                     P6,UNDOC
\c HINT_NOP29       rm64                     X86_64,LONG,UNDOC
\c HINT_NOP30       rm16                     P6,UNDOC
\c HINT_NOP30       rm32                     P6,UNDOC
\c HINT_NOP30       rm64                     X86_64,LONG,UNDOC
\c HINT_NOP31       rm16                     P6,UNDOC
\c HINT_NOP31       rm32                     P6,UNDOC
\c HINT_NOP31       rm64                     X86_64,LONG,UNDOC
\c HINT_NOP32       rm16                     P6,UNDOC
\c HINT_NOP32       rm32                     P6,UNDOC
\c HINT_NOP32       rm64                     X86_64,LONG,UNDOC
\c HINT_NOP33       rm16                     P6,UNDOC
\c HINT_NOP33       rm32                     P6,UNDOC
\c HINT_NOP33       rm64                     X86_64,LONG,UNDOC
\c HINT_NOP34       rm16                     P6,UNDOC
\c HINT_NOP34       rm32                     P6,UNDOC
\c HINT_NOP34       rm64                     X86_64,LONG,UNDOC
\c HINT_NOP35       rm16                     P6,UNDOC
\c HINT_NOP35       rm32                     P6,UNDOC
\c HINT_NOP35       rm64                     X86_64,LONG,UNDOC
\c HINT_NOP36       rm16                     P6,UNDOC
\c HINT_NOP36       rm32                     P6,UNDOC
\c HINT_NOP36       rm64                     X86_64,LONG,UNDOC
\c HINT_NOP37       rm16                     P6,UNDOC
\c HINT_NOP37       rm32                     P6,UNDOC
\c HINT_NOP37       rm64                     X86_64,LONG,UNDOC
\c HINT_NOP38       rm16                     P6,UNDOC
\c HINT_NOP38       rm32                     P6,UNDOC
\c HINT_NOP38       rm64                     X86_64,LONG,UNDOC
\c HINT_NOP39       rm16                     P6,UNDOC
\c HINT_NOP39       rm32                     P6,UNDOC
\c HINT_NOP39       rm64                     X86_64,LONG,UNDOC
\c HINT_NOP40       rm16                     P6,UNDOC
\c HINT_NOP40       rm32                     P6,UNDOC
\c HINT_NOP40       rm64                     X86_64,LONG,UNDOC
\c HINT_NOP41       rm16                     P6,UNDOC
\c HINT_NOP41       rm32                     P6,UNDOC
\c HINT_NOP41       rm64                     X86_64,LONG,UNDOC
\c HINT_NOP42       rm16                     P6,UNDOC
\c HINT_NOP42       rm32                     P6,UNDOC
\c HINT_NOP42       rm64                     X86_64,LONG,UNDOC
\c HINT_NOP43       rm16                     P6,UNDOC
\c HINT_NOP43       rm32                     P6,UNDOC
\c HINT_NOP43       rm64                     X86_64,LONG,UNDOC
\c HINT_NOP44       rm16                     P6,UNDOC
\c HINT_NOP44       rm32                     P6,UNDOC
\c HINT_NOP44       rm64                     X86_64,LONG,UNDOC
\c HINT_NOP45       rm16                     P6,UNDOC
\c HINT_NOP45       rm32                     P6,UNDOC
\c HINT_NOP45       rm64                     X86_64,LONG,UNDOC
\c HINT_NOP46       rm16                     P6,UNDOC
\c HINT_NOP46       rm32                     P6,UNDOC
\c HINT_NOP46       rm64                     X86_64,LONG,UNDOC
\c HINT_NOP47       rm16                     P6,UNDOC
\c HINT_NOP47       rm32                     P6,UNDOC
\c HINT_NOP47       rm64                     X86_64,LONG,UNDOC
\c HINT_NOP48       rm16                     P6,UNDOC
\c HINT_NOP48       rm32                     P6,UNDOC
\c HINT_NOP48       rm64                     X86_64,LONG,UNDOC
\c HINT_NOP49       rm16                     P6,UNDOC
\c HINT_NOP49       rm32                     P6,UNDOC
\c HINT_NOP49       rm64                     X86_64,LONG,UNDOC
\c HINT_NOP50       rm16                     P6,UNDOC
\c HINT_NOP50       rm32                     P6,UNDOC
\c HINT_NOP50       rm64                     X86_64,LONG,UNDOC
\c HINT_NOP51       rm16                     P6,UNDOC
\c HINT_NOP51       rm32                     P6,UNDOC
\c HINT_NOP51       rm64                     X86_64,LONG,UNDOC
\c HINT_NOP52       rm16                     P6,UNDOC
\c HINT_NOP52       rm32                     P6,UNDOC
\c HINT_NOP52       rm64                     X86_64,LONG,UNDOC
\c HINT_NOP53       rm16                     P6,UNDOC
\c HINT_NOP53       rm32                     P6,UNDOC
\c HINT_NOP53       rm64                     X86_64,LONG,UNDOC
\c HINT_NOP54       rm16                     P6,UNDOC
\c HINT_NOP54       rm32                     P6,UNDOC
\c HINT_NOP54       rm64                     X86_64,LONG,UNDOC
\c HINT_NOP55       rm16                     P6,UNDOC
\c HINT_NOP55       rm32                     P6,UNDOC
\c HINT_NOP55       rm64                     X86_64,LONG,UNDOC
\c HINT_NOP56       rm16                     P6,UNDOC
\c HINT_NOP56       rm32                     P6,UNDOC
\c HINT_NOP56       rm64                     X86_64,LONG,UNDOC
\c HINT_NOP57       rm16                     P6,UNDOC
\c HINT_NOP57       rm32                     P6,UNDOC
\c HINT_NOP57       rm64                     X86_64,LONG,UNDOC
\c HINT_NOP58       rm16                     P6,UNDOC
\c HINT_NOP58       rm32                     P6,UNDOC
\c HINT_NOP58       rm64                     X86_64,LONG,UNDOC
\c HINT_NOP59       rm16                     P6,UNDOC
\c HINT_NOP59       rm32                     P6,UNDOC
\c HINT_NOP59       rm64                     X86_64,LONG,UNDOC
\c HINT_NOP60       rm16                     P6,UNDOC
\c HINT_NOP60       rm32                     P6,UNDOC
\c HINT_NOP60       rm64                     X86_64,LONG,UNDOC
\c HINT_NOP61       rm16                     P6,UNDOC
\c HINT_NOP61       rm32                     P6,UNDOC
\c HINT_NOP61       rm64                     X86_64,LONG,UNDOC
\c HINT_NOP62       rm16                     P6,UNDOC
\c HINT_NOP62       rm32                     P6,UNDOC
\c HINT_NOP62       rm64                     X86_64,LONG,UNDOC
\c HINT_NOP63       rm16                     P6,UNDOC
\c HINT_NOP63       rm32                     P6,UNDOC
\c HINT_NOP63       rm64                     X86_64,LONG,UNDOC

