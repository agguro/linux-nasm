
../objectfiles/FpuFLtoA.o:     file format pe-i386


Disassembly of section .text:

00000000 <_FpuFLtoA@16>:
   0:	55                   	push   ebp
   1:	8b ec                	mov    ebp,esp
   3:	81 c4 54 ff ff ff    	add    esp,0xffffff54
   9:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
   c:	f7 45 14 00 04 00 00 	test   DWORD PTR [ebp+0x14],0x400
  13:	74 02                	je     17 <_FpuFLtoA@16+0x17>
  15:	8b 00                	mov    eax,DWORD PTR [eax]
  17:	50                   	push   eax
  18:	0f b6 c0             	movzx  eax,al
  1b:	83 f8 0f             	cmp    eax,0xf
  1e:	76 05                	jbe    25 <_FpuFLtoA@16+0x25>
  20:	b8 0f 00 00 00       	mov    eax,0xf
  25:	89 45 f0             	mov    DWORD PTR [ebp-0x10],eax
  28:	58                   	pop    eax
  29:	0f b6 c4             	movzx  eax,ah
  2c:	83 f8 11             	cmp    eax,0x11
  2f:	76 05                	jbe    36 <_FpuFLtoA@16+0x36>
  31:	b8 11 00 00 00       	mov    eax,0x11
  36:	89 45 f4             	mov    DWORD PTR [ebp-0xc],eax
  39:	f7 45 14 01 00 00 00 	test   DWORD PTR [ebp+0x14],0x1
  40:	74 0d                	je     4f <_FpuFLtoA@16+0x4f>
  42:	d9 e5                	fxam   
  44:	9b df e0             	fstsw  ax
  47:	9b                   	fwait
  48:	9e                   	sahf   
  49:	73 04                	jae    4f <_FpuFLtoA@16+0x4f>
  4b:	7a 02                	jp     4f <_FpuFLtoA@16+0x4f>
  4d:	74 42                	je     91 <_FpuFLtoA@16+0x91>
  4f:	9b dd 75 80          	fsave  [ebp-0x80]
  53:	f7 45 14 01 00 00 00 	test   DWORD PTR [ebp+0x14],0x1
  5a:	74 08                	je     64 <_FpuFLtoA@16+0x64>
  5c:	8d 45 80             	lea    eax,[ebp-0x80]
  5f:	db 68 1c             	fld    TBYTE PTR [eax+0x1c]
  62:	eb 44                	jmp    a8 <_FpuFLtoA@16+0xa8>
  64:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
  67:	f7 45 14 02 00 00 00 	test   DWORD PTR [ebp+0x14],0x2
  6e:	74 04                	je     74 <_FpuFLtoA@16+0x74>
  70:	db 28                	fld    TBYTE PTR [eax]
  72:	eb 34                	jmp    a8 <_FpuFLtoA@16+0xa8>
  74:	f7 45 14 00 00 02 00 	test   DWORD PTR [ebp+0x14],0x20000
  7b:	74 04                	je     81 <_FpuFLtoA@16+0x81>
  7d:	dd 00                	fld    QWORD PTR [eax]
  7f:	eb 27                	jmp    a8 <_FpuFLtoA@16+0xa8>
  81:	f7 45 14 00 00 01 00 	test   DWORD PTR [ebp+0x14],0x10000
  88:	74 04                	je     8e <_FpuFLtoA@16+0x8e>
  8a:	d9 00                	fld    DWORD PTR [eax]
  8c:	eb 1a                	jmp    a8 <_FpuFLtoA@16+0xa8>
  8e:	dd 65 80             	frstor [ebp-0x80]
  91:	57                   	push   edi
  92:	8b 7d 10             	mov    edi,DWORD PTR [ebp+0x10]
  95:	b8 45 52 52 4f       	mov    eax,0x4f525245
  9a:	ab                   	stos   DWORD PTR es:[edi],eax
  9b:	66 b8 52 00          	mov    ax,0x52
  9f:	66 ab                	stos   WORD PTR es:[edi],ax
  a1:	5f                   	pop    edi
  a2:	33 c0                	xor    eax,eax
  a4:	c9                   	leave  
  a5:	c2 10 00             	ret    0x10
  a8:	d9 e5                	fxam   
  aa:	9b df e0             	fstsw  ax
  ad:	9b                   	fwait
  ae:	9e                   	sahf   
  af:	74 25                	je     d6 <_FpuFLtoA@16+0xd6>
  b1:	7b db                	jnp    8e <_FpuFLtoA@16+0x8e>
  b3:	73 4b                	jae    100 <_FpuFLtoA@16+0x100>
  b5:	51                   	push   ecx
  b6:	56                   	push   esi
  b7:	57                   	push   edi
  b8:	8b 7d 10             	mov    edi,DWORD PTR [ebp+0x10]
  bb:	b0 2b                	mov    al,0x2b
  bd:	f6 c4 02             	test   ah,0x2
  c0:	74 02                	je     c4 <_FpuFLtoA@16+0xc4>
  c2:	b0 2d                	mov    al,0x2d
  c4:	aa                   	stos   BYTE PTR es:[edi],al
  c5:	b8 49 4e 46 49       	mov    eax,0x49464e49
  ca:	ab                   	stos   DWORD PTR es:[edi],eax
  cb:	b8 4e 49 54 59       	mov    eax,0x5954494e
  d0:	ab                   	stos   DWORD PTR es:[edi],eax
  d1:	e9 0d 02 00 00       	jmp    2e3 <_FpuFLtoA@16+0x2e3>
  d6:	7a 28                	jp     100 <_FpuFLtoA@16+0x100>
  d8:	dd d8                	fstp   st(0)
  da:	51                   	push   ecx
  db:	56                   	push   esi
  dc:	57                   	push   edi
  dd:	8b 7d 10             	mov    edi,DWORD PTR [ebp+0x10]
  e0:	f7 45 14 00 80 00 00 	test   DWORD PTR [ebp+0x14],0x8000
  e7:	75 0c                	jne    f5 <_FpuFLtoA@16+0xf5>
  e9:	8b 4d f4             	mov    ecx,DWORD PTR [ebp-0xc]
  ec:	83 e9 02             	sub    ecx,0x2
  ef:	7e 04                	jle    f5 <_FpuFLtoA@16+0xf5>
  f1:	b0 20                	mov    al,0x20
  f3:	f3 aa                	rep stos BYTE PTR es:[edi],al
  f5:	66 b8 20 30          	mov    ax,0x3020
  f9:	66 ab                	stos   WORD PTR es:[edi],ax
  fb:	e9 e3 01 00 00       	jmp    2e3 <_FpuFLtoA@16+0x2e3>
 100:	d9 ec                	fldlg2 
 102:	d9 c1                	fld    st(1)
 104:	d9 e1                	fabs   
 106:	d9 f1                	fyl2x  
 108:	9b d9 bd 6a ff ff ff 	fstcw  WORD PTR [ebp-0x96]
 10f:	9b                   	fwait
 110:	66 8b 85 6a ff ff ff 	mov    ax,WORD PTR [ebp-0x96]
 117:	66 0d 00 0c          	or     ax,0xc00
 11b:	66 89 85 68 ff ff ff 	mov    WORD PTR [ebp-0x98],ax
 122:	d9 ad 68 ff ff ff    	fldcw  WORD PTR [ebp-0x98]
 128:	db 55 f8             	fist   DWORD PTR [ebp-0x8]
 12b:	d9 ad 6a ff ff ff    	fldcw  WORD PTR [ebp-0x96]
 131:	d9 e4                	ftst   
 133:	9b df e0             	fstsw  ax
 136:	9b                   	fwait
 137:	9e                   	sahf   
 138:	83 5d f8 00          	sbb    DWORD PTR [ebp-0x8],0x0
 13c:	dd d8                	fstp   st(0)
 13e:	8b 45 14             	mov    eax,DWORD PTR [ebp+0x14]
 141:	25 00 80 00 00       	and    eax,0x8000
 146:	c7 45 ec 00 00 00 00 	mov    DWORD PTR [ebp-0x14],0x0
 14d:	0b c0                	or     eax,eax
 14f:	75 32                	jne    183 <_FpuFLtoA@16+0x183>
 151:	8b 45 f8             	mov    eax,DWORD PTR [ebp-0x8]
 154:	0b c0                	or     eax,eax
 156:	78 23                	js     17b <_FpuFLtoA@16+0x17b>
 158:	83 f8 0f             	cmp    eax,0xf
 15b:	76 10                	jbe    16d <_FpuFLtoA@16+0x16d>
 15d:	81 4d 14 00 80 00 00 	or     DWORD PTR [ebp+0x14],0x8000
 164:	c7 45 f0 0f 00 00 00 	mov    DWORD PTR [ebp-0x10],0xf
 16b:	eb 16                	jmp    183 <_FpuFLtoA@16+0x183>
 16d:	03 45 f0             	add    eax,DWORD PTR [ebp-0x10]
 170:	83 f8 0f             	cmp    eax,0xf
 173:	76 06                	jbe    17b <_FpuFLtoA@16+0x17b>
 175:	83 e8 0f             	sub    eax,0xf
 178:	29 45 f0             	sub    DWORD PTR [ebp-0x10],eax
 17b:	ff 75 f0             	push   DWORD PTR [ebp-0x10]
 17e:	8f 45 fc             	pop    DWORD PTR [ebp-0x4]
 181:	eb 1b                	jmp    19e <_FpuFLtoA@16+0x19e>
 183:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
 186:	2b 45 f8             	sub    eax,DWORD PTR [ebp-0x8]
 189:	3d 43 13 00 00       	cmp    eax,0x1343
 18e:	7e 0b                	jle    19b <_FpuFLtoA@16+0x19b>
 190:	b9 43 13 00 00       	mov    ecx,0x1343
 195:	2b c1                	sub    eax,ecx
 197:	91                   	xchg   ecx,eax
 198:	89 4d ec             	mov    DWORD PTR [ebp-0x14],ecx
 19b:	89 45 fc             	mov    DWORD PTR [ebp-0x4],eax
 19e:	83 7d fc 00          	cmp    DWORD PTR [ebp-0x4],0x0
 1a2:	74 3c                	je     1e0 <_FpuFLtoA@16+0x1e0>
 1a4:	db 45 fc             	fild   DWORD PTR [ebp-0x4]
 1a7:	d9 e9                	fldl2t 
 1a9:	de c9                	fmulp  st(1),st
 1ab:	d9 c0                	fld    st(0)
 1ad:	d9 fc                	frndint 
 1af:	d9 c9                	fxch   st(1)
 1b1:	d8 e1                	fsub   st,st(1)
 1b3:	d9 f0                	f2xm1  
 1b5:	d9 e8                	fld1   
 1b7:	de c1                	faddp  st(1),st
 1b9:	d9 fd                	fscale 
 1bb:	dd d9                	fstp   st(1)
 1bd:	de c9                	fmulp  st(1),st
 1bf:	83 7d ec 00          	cmp    DWORD PTR [ebp-0x14],0x0
 1c3:	74 1b                	je     1e0 <_FpuFLtoA@16+0x1e0>
 1c5:	db 45 ec             	fild   DWORD PTR [ebp-0x14]
 1c8:	d9 e9                	fldl2t 
 1ca:	de c9                	fmulp  st(1),st
 1cc:	d9 c0                	fld    st(0)
 1ce:	d9 fc                	frndint 
 1d0:	d9 c9                	fxch   st(1)
 1d2:	d8 e1                	fsub   st,st(1)
 1d4:	d9 f0                	f2xm1  
 1d6:	d9 e8                	fld1   
 1d8:	de c1                	faddp  st(1),st
 1da:	d9 fd                	fscale 
 1dc:	dd d9                	fstp   st(1)
 1de:	de c9                	fmulp  st(1),st
 1e0:	df b5 6c ff ff ff    	fbstp  TBYTE PTR [ebp-0x94]
 1e6:	9b df e0             	fstsw  ax
 1e9:	9b                   	fwait
 1ea:	d1 e8                	shr    eax,1
 1ec:	0f 82 9c fe ff ff    	jb     8e <_FpuFLtoA@16+0x8e>
 1f2:	51                   	push   ecx
 1f3:	56                   	push   esi
 1f4:	57                   	push   edi
 1f5:	8d b5 75 ff ff ff    	lea    esi,[ebp-0x8b]
 1fb:	8d bd 54 ff ff ff    	lea    edi,[ebp-0xac]
 201:	b8 20 30 00 00       	mov    eax,0x3020
 206:	8a 0e                	mov    cl,BYTE PTR [esi]
 208:	80 f9 80             	cmp    cl,0x80
 20b:	75 02                	jne    20f <_FpuFLtoA@16+0x20f>
 20d:	b0 2d                	mov    al,0x2d
 20f:	66 ab                	stos   WORD PTR es:[edi],ax
 211:	b9 09 00 00 00       	mov    ecx,0x9
 216:	4e                   	dec    esi
 217:	0f b6 06             	movzx  eax,BYTE PTR [esi]
 21a:	66 c1 c8 04          	ror    ax,0x4
 21e:	c0 cc 04             	ror    ah,0x4
 221:	66 05 30 30          	add    ax,0x3030
 225:	66 ab                	stos   WORD PTR es:[edi],ax
 227:	49                   	dec    ecx
 228:	75 ec                	jne    216 <_FpuFLtoA@16+0x216>
 22a:	8b 7d 10             	mov    edi,DWORD PTR [ebp+0x10]
 22d:	8d b5 54 ff ff ff    	lea    esi,[ebp-0xac]
 233:	f7 45 14 00 80 00 00 	test   DWORD PTR [ebp+0x14],0x8000
 23a:	75 55                	jne    291 <_FpuFLtoA@16+0x291>
 23c:	8b 4d f4             	mov    ecx,DWORD PTR [ebp-0xc]
 23f:	0b c9                	or     ecx,ecx
 241:	74 16                	je     259 <_FpuFLtoA@16+0x259>
 243:	ba 02 00 00 00       	mov    edx,0x2
 248:	8b 45 f8             	mov    eax,DWORD PTR [ebp-0x8]
 24b:	0b c0                	or     eax,eax
 24d:	78 02                	js     251 <_FpuFLtoA@16+0x251>
 24f:	03 d0                	add    edx,eax
 251:	2b ca                	sub    ecx,edx
 253:	7e 04                	jle    259 <_FpuFLtoA@16+0x259>
 255:	b0 20                	mov    al,0x20
 257:	f3 aa                	rep stos BYTE PTR es:[edi],al
 259:	9c                   	pushf  
 25a:	a4                   	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
 25b:	b9 01 00 00 00       	mov    ecx,0x1
 260:	8b 45 f8             	mov    eax,DWORD PTR [ebp-0x8]
 263:	0b c0                	or     eax,eax
 265:	78 02                	js     269 <_FpuFLtoA@16+0x269>
 267:	03 c8                	add    ecx,eax
 269:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
 26c:	03 c1                	add    eax,ecx
 26e:	83 e8 13             	sub    eax,0x13
 271:	2b f0                	sub    esi,eax
 273:	58                   	pop    eax
 274:	80 7e ff 31          	cmp    BYTE PTR [esi-0x1],0x31
 278:	75 07                	jne    281 <_FpuFLtoA@16+0x281>
 27a:	4e                   	dec    esi
 27b:	41                   	inc    ecx
 27c:	50                   	push   eax
 27d:	9d                   	popf   
 27e:	7e 01                	jle    281 <_FpuFLtoA@16+0x281>
 280:	4f                   	dec    edi
 281:	f3 a4                	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
 283:	8b 4d f0             	mov    ecx,DWORD PTR [ebp-0x10]
 286:	0b c9                	or     ecx,ecx
 288:	74 05                	je     28f <_FpuFLtoA@16+0x28f>
 28a:	b0 2e                	mov    al,0x2e
 28c:	aa                   	stos   BYTE PTR es:[edi],al
 28d:	f3 a4                	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
 28f:	eb 52                	jmp    2e3 <_FpuFLtoA@16+0x2e3>
 291:	a4                   	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
 292:	8b 4d f0             	mov    ecx,DWORD PTR [ebp-0x10]
 295:	b8 12 00 00 00       	mov    eax,0x12
 29a:	2b c1                	sub    eax,ecx
 29c:	03 f0                	add    esi,eax
 29e:	80 7e ff 31          	cmp    BYTE PTR [esi-0x1],0x31
 2a2:	9c                   	pushf  
 2a3:	75 01                	jne    2a6 <_FpuFLtoA@16+0x2a6>
 2a5:	4e                   	dec    esi
 2a6:	a4                   	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
 2a7:	b0 2e                	mov    al,0x2e
 2a9:	aa                   	stos   BYTE PTR es:[edi],al
 2aa:	f3 a4                	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
 2ac:	b0 45                	mov    al,0x45
 2ae:	aa                   	stos   BYTE PTR es:[edi],al
 2af:	b0 2b                	mov    al,0x2b
 2b1:	8b 4d f8             	mov    ecx,DWORD PTR [ebp-0x8]
 2b4:	9d                   	popf   
 2b5:	75 01                	jne    2b8 <_FpuFLtoA@16+0x2b8>
 2b7:	41                   	inc    ecx
 2b8:	0b c9                	or     ecx,ecx
 2ba:	79 04                	jns    2c0 <_FpuFLtoA@16+0x2c0>
 2bc:	b0 2d                	mov    al,0x2d
 2be:	f7 d9                	neg    ecx
 2c0:	aa                   	stos   BYTE PTR es:[edi],al
 2c1:	8b c1                	mov    eax,ecx
 2c3:	b1 64                	mov    cl,0x64
 2c5:	f6 f1                	div    cl
 2c7:	50                   	push   eax
 2c8:	25 ff 00 00 00       	and    eax,0xff
 2cd:	b1 0a                	mov    cl,0xa
 2cf:	f6 f1                	div    cl
 2d1:	66 05 30 30          	add    ax,0x3030
 2d5:	66 ab                	stos   WORD PTR es:[edi],ax
 2d7:	58                   	pop    eax
 2d8:	c1 e8 08             	shr    eax,0x8
 2db:	f6 f1                	div    cl
 2dd:	66 05 30 30          	add    ax,0x3030
 2e1:	66 ab                	stos   WORD PTR es:[edi],ax
 2e3:	33 c0                	xor    eax,eax
 2e5:	aa                   	stos   BYTE PTR es:[edi],al
 2e6:	5f                   	pop    edi
 2e7:	5e                   	pop    esi
 2e8:	59                   	pop    ecx
 2e9:	dd 65 80             	frstor [ebp-0x80]
 2ec:	0c 01                	or     al,0x1
 2ee:	c9                   	leave  
 2ef:	c2 10 00             	ret    0x10
