     1                                  ;name: OOPDemo.asm
     2                                  ;
     3                                  ;description:
     4                                  ;
     5                                  
     6                                  bits 64
     7                                  
     8                                  %include "OOPDemo.inc"
     1                              <1> %ifndef _OOPDemo_inc_
     2                              <1> %define _OOPDemo_inc_
     3                              <1> 
     4                              <1> [list -]
     7                              <1> ;; %include "integer.inc"
     8                              <1> 
     9                              <1> 
    10                              <1> %endif 		;; _OOPDemo_inc_
     9                                  
    10                                  struc INT_STRUC
    11 00000000 <res 00000008>          	.value:	resq	1
    12 00000008 <res 00000008>          	.Get:	resq	1		;;pointer to get the value
    13 00000010 <res 00000008>          	.Set:	resq	1		;;pointer to set the value
    14 00000018 <res 00000008>          	.Write:	resq	1		;;pointer to write function
    15                                  endstruc
    16                                  
    17                                  %macro Integer 1-2 0
    18                                  %1:
    19                                  istruc INT_STRUC
    20                                  	at INT_STRUC.value, dq %2
    21                                  	at INT_STRUC.Get,	dq get_function
    22                                  	at INT_STRUC.Set,	dq set_function
    23                                  	at INT_STRUC.Write,	dq 0
    24                                  iend
    25                                  %define %1.Get		INT_FUNC_GET	%1
    26                                  %define %1.Set		INT_FUNC_SET	%1
    27                                  %define %1.Write	INT_FUNC_WRITE	%1
    28                                  
    29                                  %endmacro
    30                                  
    31                                  %macro INT_FUNC_GET 1
    32                                  	mov		rdi,%1
    33                                  	call	qword[%1 + INT_STRUC.Get]
    34                                  %endmacro
    35                                  
    36                                  %macro INT_FUNC_SET 1
    37                                  	mov		rsi,rdi							;move value into rsi
    38                                  	mov		rdi,%1
    39                                  	call	qword[%1 + INT_STRUC.Set]
    40                                  %endmacro
    41                                  
    42                                  %macro INT_FUNC_WRITE 1
    43                                  	mov		rdi,%1
    44                                  	call	qword[%1 + INT_STRUC.Write]
    45                                  %endmacro
    46                                  
    47                                  
    48                                  global _start
    49                                  
    50                                  section .bss
    51                                  
    52                                  section .data
    53                                  ;2struc declaration as data
    54                                  	Integer a,5
    54                              <1> %1:
    54                              <1> istruc INT_STRUC
    54 00000000 0500000000000000    <1>  at INT_STRUC.value, dq %2
    54 00000008 [D200000000000000]  <1>  at INT_STRUC.Get, dq get_function
    54 00000010 [D600000000000000]  <1>  at INT_STRUC.Set, dq set_function
    54 00000018 0000000000000000    <1>  at INT_STRUC.Write, dq 0
    54                              <1> iend
    54                              <1> %define %1.Get INT_FUNC_GET %1
    54                              <1> %define %1.Set INT_FUNC_SET %1
    54                              <1> %define %1.Write INT_FUNC_WRITE %1
    54                              <1> 
    55                                  	Integer b,6
    55                              <1> %1:
    55                              <1> istruc INT_STRUC
    55 00000020 0600000000000000    <1>  at INT_STRUC.value, dq %2
    55 00000028 [D200000000000000]  <1>  at INT_STRUC.Get, dq get_function
    55 00000030 [D600000000000000]  <1>  at INT_STRUC.Set, dq set_function
    55 00000038 0000000000000000    <1>  at INT_STRUC.Write, dq 0
    55                              <1> iend
    55                              <1> %define %1.Get INT_FUNC_GET %1
    55                              <1> %define %1.Set INT_FUNC_SET %1
    55                              <1> %define %1.Write INT_FUNC_WRITE %1
    55                              <1> 
    56                                  
    57                                  section .text
    58                                  
    59                                  _start:
    60                                  
    61                                  	a.Get
    61 00000000 48BF-               <1>  mov rdi,%1
    61 00000002 [0000000000000000]  <1>
    61 0000000A FF1425[08000000]    <1>  call qword[%1 + INT_STRUC.Get]
    62                                  	b.Get
    62 00000011 48BF-               <1>  mov rdi,%1
    62 00000013 [2000000000000000]  <1>
    62 0000001B FF1425[28000000]    <1>  call qword[%1 + INT_STRUC.Get]
    63 00000022 BF0A000000              	mov	rdi,10
    64                                  	a.Set
    64 00000027 4889FE              <1>  mov rsi,rdi
    64 0000002A 48BF-               <1>  mov rdi,%1
    64 0000002C [0000000000000000]  <1>
    64 00000034 FF1425[10000000]    <1>  call qword[%1 + INT_STRUC.Set]
    65 0000003B BFE6040000              	mov	rdi,1254
    66                                  	b.Set
    66 00000040 4889FE              <1>  mov rsi,rdi
    66 00000043 48BF-               <1>  mov rdi,%1
    66 00000045 [2000000000000000]  <1>
    66 0000004D FF1425[30000000]    <1>  call qword[%1 + INT_STRUC.Set]
    67                                  	a.Get
    67 00000054 48BF-               <1>  mov rdi,%1
    67 00000056 [0000000000000000]  <1>
    67 0000005E FF1425[08000000]    <1>  call qword[%1 + INT_STRUC.Get]
    68                                  	b.Get
    68 00000065 48BF-               <1>  mov rdi,%1
    68 00000067 [2000000000000000]  <1>
    68 0000006F FF1425[28000000]    <1>  call qword[%1 + INT_STRUC.Get]
    69 00000076 48BF-                   	mov		rdi,a
    69 00000078 [0000000000000000] 
    70 00000080 48B8-                   	mov		rax,a_print_function
    70 00000082 [DD00000000000000] 
    71 0000008A 48894718                	mov		[rdi+INT_STRUC.Write],rax
    72                                  
    73 0000008E 48BF-                   	mov		rdi,b
    73 00000090 [2000000000000000] 
    74 00000098 48B8-                   	mov		rax,b_print_function
    74 0000009A [1C00000000000000] 
    75 000000A2 48894718                	mov		[rdi+INT_STRUC.Write],rax
    76                                  
    77                                  	a.Write
    77 000000A6 48BF-               <1>  mov rdi,%1
    77 000000A8 [0000000000000000]  <1>
    77 000000B0 FF1425[18000000]    <1>  call qword[%1 + INT_STRUC.Write]
    78                                  	b.Write
    78 000000B7 48BF-               <1>  mov rdi,%1
    78 000000B9 [2000000000000000]  <1>
    78 000000C1 FF1425[38000000]    <1>  call qword[%1 + INT_STRUC.Write]
    79 000000C8 4831FFB83C0000000F-     	syscall exit,0
    79 000000D1 05                 
    80                                  
    81                                  get_function:
    82 000000D2 488B07                  	mov		rax,qword[rdi+INT_STRUC.value]
    83 000000D5 C3                      	ret
    84                                  
    85                                  set_function:
    86 000000D6 4889F0                  	mov		rax,rsi
    87 000000D9 488907                  	mov		qword[rdi+INT_STRUC.value],rax
    88 000000DC C3                      	ret
    89                                  
    90                                  a_print_function:
    91                                  [section .data]
    92 00000040 68656C6C6F2066726F-     	msga:	db	"hello from Integer object A",10
    92 00000049 6D20496E7465676572-
    92 00000052 206F626A6563742041-
    92 0000005B 0A                 
    93                                  	.len:	equ	$-msga
    94                                  [section .code]
    95 00000000 BA1C000000              	mov		rdx,msga.len
    96 00000005 48BE-                   	mov		rsi,msga
    96 00000007 [4000000000000000] 
    97 0000000F BF01000000              	mov		rdi,stdout
    98 00000014 B8010000000F05          	syscall	write
    99 0000001B C3                      	ret
   100                                  
   101                                  b_print_function:
   102                                  [section .data]
   103 0000005C 68656C6C6F2066726F-     	msgb:	db	"hello from Integer object B",10
   103 00000065 6D20496E7465676572-
   103 0000006E 206F626A6563742042-
   103 00000077 0A                 
   104                                  	.len:	equ	$-msgb
   105                                  [section .code]
   106 0000001C BA1C000000              	mov		rdx,msgb.len
   107 00000021 48BE-                   	mov		rsi,msgb
   107 00000023 [5C00000000000000] 
   108 0000002B BF01000000              	mov		rdi,stdout
   109 00000030 B8010000000F05          	syscall	write
   110 00000037 C3                      	ret
