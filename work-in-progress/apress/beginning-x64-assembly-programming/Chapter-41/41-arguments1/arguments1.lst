     1                                  ; arguments1.asm
     2                                  ; the program in the bookis for Windows.  This one is modified for Linux
     3                                  
     4                                  extern printf
     5                                  section .data				
     6 00000000 4100                    	first	db	"A",0					
     7 00000002 4200                    	second	db	"B",0
     8 00000004 4300                    	third	db	"C",0
     9 00000006 4400                    	fourth	db	"D",0			
    10 00000008 4500                    	fifth	db	"E",0
    11 0000000A 4600                    	sixth	db	"F",0
    12 0000000C 4700                    	seventh	db	"G",0
    13 0000000E 4800                    	eighth  db	"H",0
    14 00000010 4900                    	ninth   db	"I",0
    15 00000012 4A00                    	tenth   db	"J",0
    16 00000014 54686520737472696E-      	fmt	db	"The string is: %s%s%s%s%s%s%s%s%s%s",10,0
    16 0000001D 672069733A20257325-
    16 00000026 732573257325732573-
    16 0000002F 25732573257325730A-
    16 00000038 00                 
    17                                   	
    18                                  section .bss										
    19                                  section .text									
    20                                  	global main						
    21                                  main:
    22                                  
    23 00000000 55                          push	rbp
    24 00000001 4889E5                      mov 	rbp,rsp
    25 00000004 4883EC08                    sub     rsp,8               ;align stack
    26                                      
    27 00000008 B800000000                  mov rax,0
    28 0000000D 48BF-                       mov rdi, fmt
    28 0000000F [1400000000000000] 
    29 00000017 48BE-                       mov rsi, first
    29 00000019 [0000000000000000] 
    30 00000021 48BA-                       mov rdx, second
    30 00000023 [0200000000000000] 
    31 0000002B 48B9-                       mov rcx, third
    31 0000002D [0400000000000000] 
    32 00000035 49B8-                       mov r8, fourth
    32 00000037 [0600000000000000] 
    33 0000003F 49B9-                       mov r9, fifth
    33 00000041 [0800000000000000] 
    34                                      
    35 00000049 68[12000000]                push    tenth
    36 0000004E 68[10000000]                push    ninth
    37 00000053 68[0E000000]                push    eighth
    38 00000058 68[0C000000]                push    seventh
    39 0000005D 68[0A000000]                push    sixth
    40                                  
    41 00000062 E8(00000000)                call    printf
    42 00000067 4883C430                    add     rsp,48              ;adjust stack 5 variables + alignment
    43                                           
    44                                  ;windowsstyle    
    45                                  ;	sub	rsp,8
    46                                  ;	mov rcx, fmt					
    47                                  ;	mov rdx, first	
    48                                  ;	mov r8, second
    49                                  ;	mov r9, third			
    50                                  ;	push tenth			; now start pushing in
    51                                  ;	push ninth			; reverse order
    52                                  ;	push eighth			
    53                                  ;	push seventh
    54                                  ;	push sixth
    55                                  ;	push fifth
    56                                  ;	push fourth
    57                                  ;	sub  rsp,32       	; shadow space
    58                                  ;	call printf
    59                                  ;	add	rsp,32+8	
    60                                  
    61 0000006B 4889EC                      mov rsp,rbp
    62 0000006E 5D                          pop rbp
    63 0000006F C3                      ret
