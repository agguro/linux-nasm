     1                                  ; sse_string2_imp.asm
     2                                  ; compare strings implicit length
     3                                  extern printf
     4                                  section .data
     5                                  						
     6 00000000 74686520717569636B-             string1	db 	"the quick brown fox jumps over the lazy "
     6 00000009 2062726F776E20666F-
     6 00000012 78206A756D7073206F-
     6 0000001B 76657220746865206C-
     6 00000024 617A7920           
     7 00000028 72697665720A00          			 	db	"river",10,0 
     8 0000002F 74686520717569636B-             string2   	db 	"the quick brown fox jumps over the lazy "
     8 00000038 2062726F776E20666F-
     8 00000041 78206A756D7073206F-
     8 0000004A 76657220746865206C-
     8 00000053 617A7920           
     9 00000057 72697665720A00          				db	"river",10,0
    10 0000005E 74686520717569636B-             string3   	db 	"the quick brown fox jumps over the lazy "
    10 00000067 2062726F776E20666F-
    10 00000070 78206A756D7073206F-
    10 00000079 76657220746865206C-
    10 00000082 617A7920           
    11 00000086 646F670A00              				db	"dog",10,0     
    12                                  
    13 0000008B 537472696E67732031-             fmt1 	db "Strings 1 and 2 are equal.",10,0                 
    13 00000094 20616E642032206172-
    13 0000009D 6520657175616C2E0A-
    13 000000A6 00                 
    14 000000A7 537472696E67732031-             fmt11 	db "Strings 1 and 2 differ at position %i.",10,0
    14 000000B0 20616E642032206469-
    14 000000B9 666665722061742070-
    14 000000C2 6F736974696F6E2025-
    14 000000CB 692E0A00           
    15 000000CF 537472696E67732032-             fmt2 	db "Strings 2 and 3 are equal.",10,0                 
    15 000000D8 20616E642033206172-
    15 000000E1 6520657175616C2E0A-
    15 000000EA 00                 
    16 000000EB 537472696E67732032-             fmt22 	db "Strings 2 and 3 differ at position %i.",10,0
    16 000000F4 20616E642033206469-
    16 000000FD 666665722061742070-
    16 00000106 6F736974696F6E2025-
    16 0000010F 692E0A00           
    17                                   
    18                                  section .bss
    19                                  section .text							
    20                                  	global main					
    21                                  main:
    22 00000000 55                      push	rbp
    23 00000001 4889E5                  mov	rbp,rsp
    24                                  
    25                                  ;first print the strings
    26 00000004 48BF-                      	mov 	rdi, string1
    26 00000006 [0000000000000000] 
    27 0000000E 4831C0                      	xor 	rax,rax
    28 00000011 E8(00000000)                	call	printf 
    29 00000016 48BF-                       	mov 	rdi, string2
    29 00000018 [2F00000000000000] 
    30 00000020 4831C0                      	xor 	rax,rax
    31 00000023 E8(00000000)                	call printf 
    32 00000028 48BF-                       	mov 	rdi, string3
    32 0000002A [5E00000000000000] 
    33 00000032 4831C0                      	xor 	rax,rax
    34 00000035 E8(00000000)                	call printf   
    35                                  ; compare string 1 and 2
    36 0000003A 48BF-                       	mov 	rdi, string1
    36 0000003C [0000000000000000] 
    37 00000044 48BE-                       	mov 	rsi, string2
    37 00000046 [2F00000000000000] 
    38 0000004E E865000000                  	call	pstrcmp
    39 00000053 48BF-                       	mov 	rdi,fmt1
    39 00000055 [8B00000000000000] 
    40 0000005D 4883F800                    	cmp 	rax,0
    41 00000061 740A                        	je 	eql1		;the strings are equal
    42 00000063 48BF-                       	mov 	rdi,fmt11	;the strings are unequal
    42 00000065 [A700000000000000] 
    43                                   eql1:
    44 0000006D 4889C6                      	mov 	rsi, rax
    45 00000070 4831C0                      	xor 	rax,rax
    46 00000073 E8(00000000)                	call printf
    47                                   ; compare string 2 and 3
    48 00000078 48BF-                       	mov 	rdi, string2
    48 0000007A [2F00000000000000] 
    49 00000082 48BE-                       	mov 	rsi, string3
    49 00000084 [5E00000000000000] 
    50 0000008C E827000000                  	call	pstrcmp
    51 00000091 48BF-                       	mov 	rdi,fmt2
    51 00000093 [CF00000000000000] 
    52 0000009B 4883F800                    	cmp 	rax,0
    53 0000009F 740A                        	je 	eql2		;the strings are equal
    54 000000A1 48BF-                       	mov 	rdi,fmt22	;the strings are unequal
    54 000000A3 [EB00000000000000] 
    55                                   eql2:
    56 000000AB 4889C6                      	mov 	rsi, rax
    57 000000AE 4831C0                      	xor 	rax,rax
    58 000000B1 E8(00000000)                	call	printf   
    59 000000B6 C9                      leave
    60 000000B7 C3                      ret
    61                                  
    62                                  pstrcmp:
    63 000000B8 55                      push	rbp		
    64 000000B9 4889E5                  mov	rbp,rsp
    65 000000BC 4831C0                      	xor	rax, rax		; 
    66 000000BF 4831DB                  	xor	rbx, rbx		; 
    67 000000C2 F30F6F0C1F              .loop:	movdqu     xmm1, [rdi + rbx]
    68 000000C7 660F3A630C1E18          	pcmpistri  xmm1, [rsi + rbx], 0x18	; EQUAL_EACH | NEGATIVE_POLARITY
    69 000000CE 7208                    	jc         .differ
    70 000000D0 740F                    	jz         .equal
    71 000000D2 4883C310                	add        rbx, 16
    72 000000D6 EBEA                    	jmp        .loop
    73                                  
    74                                  .differ:
    75 000000D8 4889D8                      mov	rax,rbx         
    76 000000DB 4801C8                      add 	rax,rcx	;rax contains the position of the differing character
    77 000000DE 48FFC0                      inc 	rax         ;because the index starts at 0
    78                                  .equal: 
    79 000000E1 C9                      leave
    80 000000E2 C3                      ret
