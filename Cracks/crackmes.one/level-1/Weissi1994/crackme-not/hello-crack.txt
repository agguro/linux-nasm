;max length is 8 characters
;tip: look at ascii table for printable and inputable characters or you are lost
;password is each character of name + 5 displacement in ascii table
;try: name: 01234 password: 56789
;     name: abcdefghijklm password: fghijklm

objdump -f hello

hello:     file format elf64-x86-64
architecture: i386:x86-64, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x0000000000401000

objdump -M intel -d hello 

hello:     file format elf64-x86-64

Disassembly of section .text:

0000000000401000 <_start>:
  401000:	b8 01 00 00 00       	mov    eax,0x1
  401005:	bf 01 00 00 00       	mov    edi,0x1
  40100a:	48 be 00 20 40 00 00 	movabs rsi,0x402000
  401011:	00 00 00 
  401014:	ba 19 00 00 00       	mov    edx,0x19
  401019:	0f 05                	syscall                                     ;write Please enter your name:
  
  40101b:	b8 00 00 00 00       	mov    eax,0x0
  401020:	bf 00 00 00 00       	mov    edi,0x0
  401025:	48 be 74 20 40 00 00 	movabs rsi,0x402074
  40102c:	00 00 00 
  40102f:	ba 20 00 00 00       	mov    edx,0x20
  401034:	0f 05                	syscall                                     ;read the name, max 20 bytes (but it's a decoy)

  401036:	48 83 f8 00          	cmp    rax,0x0                              ;if nothing is entered then bail out (will never happen because there is always a EOL (0x0A input)
                                                                                ;unless the writer wants to check errors on read syscall
  40103a:	0f 8c d4 00 00 00    	jl     401114 <_start.error>

  401040:	49 89 c6             	mov    r14,rax                              ;put nbytesread in r14
  401043:	49 83 c6 06          	add    r14,0x6                              ;add number of bytes read with 6
                                                                                ;why? it will be overridden at 0x4010bc
  401047:	48 8b 04 25 19 20 40 	mov    rax,QWORD PTR ds:0x402019            ;read 8 bytes from 0x402019, (hello   )
  40104e:	00 
  40104f:	48 89 04 25 94 20 40 	mov    QWORD PTR ds:0x402094,rax            ;copy 8 bytes in buffer at 0x402094
  401056:	00 
  401057:	48 8b 04 25 74 20 40 	mov    rax,QWORD PTR ds:0x402074            ;read 8 bytes from 0x402074 in rax (here the name is stored)
  40105e:	00 
  40105f:	48 89 04 25 9a 20 40 	mov    QWORD PTR ds:0x40209a,rax            ;copy to position right behind 'hello '
  401066:	00 
  401067:	b8 01 00 00 00       	mov    eax,0x1
  40106c:	bf 01 00 00 00       	mov    edi,0x1
  401071:	48 be 94 20 40 00 00 	movabs rsi,0x402094
  401078:	00 00 00 
  40107b:	4c 89 f2             	mov    rdx,r14
  40107e:	0f 05                	syscall                                     ;print 'hello ' with the name
  
  401080:	b8 01 00 00 00       	mov    eax,0x1
  401085:	bf 01 00 00 00       	mov    edi,0x1
  40108a:	48 be 20 20 40 00 00 	movabs rsi,0x402020
  401091:	00 00 00 
  401094:	ba 16 00 00 00       	mov    edx,0x16
  401099:	0f 05                	syscall                                     ;print 'Enter your password: '

  40109b:	b8 00 00 00 00       	mov    eax,0x0
  4010a0:	bf 00 00 00 00       	mov    edi,0x0
  4010a5:	48 be 74 20 40 00 00 	movabs rsi,0x402074                         ;buffer
  4010ac:	00 00 00 
  4010af:	ba 20 00 00 00       	mov    edx,0x20                             ;max bytes to read,buffer has the same size as the name buffer
  4010b4:	0f 05                	syscall

  4010b6:	49 89 c7             	mov    r15,rax                              ;nbytesread in r15
  4010b9:	49 ff cf             	dec    r15                                  ;minus 1 for EOL(0x0A)

;this loop checks if each byte of the password match with each byte of the name with
;a plus 5 displacement in the ascii code tabel.  Thus:
;name:     abcdefghijklmnopqrstuvwxyz
;password: fghijklmnopqrstuvwxyzabcde

00000000004010bc <_start.l1>:
  4010bc:	4d 89 fe             	mov    r14,r15                              ;length input in r14
  4010bf:	49 83 c6 05          	add    r14,0x5                              ;add 5 (length 'hello ') and at first entry points to last byte of input before 0x0a
  4010c3:	41 8a 86 94 20 40 00 	mov    al,BYTE PTR [r14+0x402094]           ;read r14th byte in al
  
  4010ca:	04 05                	add    al,0x5                               ;add 5 to this byte (ascii displacement)
  4010cc:	41 3a 87 73 20 40 00 	cmp    al,BYTE PTR [r15+0x402073]           ;cmp with byte in buffer, initialy at end of input buffer
  4010d3:	75 22                	jne    4010f7 <_start.wrong>                ;if not equal -> wrong
  4010d5:	49 ff cf             	dec    r15                                  ;length - 1
  4010d8:	75 e2                	jne    4010bc <_start.l1>                   ;repeat until zero
  
  4010da:	b8 01 00 00 00       	mov    eax,0x1
  4010df:	bf 01 00 00 00       	mov    edi,0x1
  4010e4:	48 be 53 20 40 00 00 	movabs rsi,0x402053
  4010eb:	00 00 00 
  4010ee:	ba 18 00 00 00       	mov    edx,0x18
  4010f3:	0f 05                	syscall                                     ;succes 
  4010f5:	eb 25                	jmp    40111c <_start.exit>                 ;jmp to exit

00000000004010f7 <_start.wrong>:
  4010f7:	b8 01 00 00 00       	mov    eax,0x1
  4010fc:	bf 01 00 00 00       	mov    edi,0x1
  401101:	48 be 36 20 40 00 00 	movabs rsi,0x402036
  401108:	00 00 00 
  40110b:	ba 18 00 00 00       	mov    edx,0x18
  401110:	0f 05                	syscall                                     ;wrong password
  401112:	eb 08                	jmp    40111c <_start.exit>                 ;jmp to exit

0000000000401114 <_start.error>:
  401114:	48 89 04 25 70 20 40 	mov    QWORD PTR ds:0x402070,rax            ;unused code
  40111b:	00 

000000000040111c <_start.exit>:
  40111c:	b8 3c 00 00 00       	mov    eax,0x3c
  401121:	48 bf 70 20 40 00 00 	movabs rdi,0x402070
  401128:	00 00 00 
  40112b:	0f 05                	syscall                                     ;exit

objdump -s -j .data hello 

hello:     file format elf64-x86-64

Contents of section .data:
 402000 506c6561 73652065 6e746572 20796f75  Please enter you
 402010 72206e61 6d653a20 0048656c 6c6f2000  r name: .Hello .
 402020 456e7465 7220796f 75722050 61737377  Enter your Passw
 402030 6f72643a 20001b5b 33316d57 726f6e67  ord: ..[31mWrong
 402040 20437265 64656e74 69616c73 2c204754   Credentials, GT
 402050 464f001b 5b33326d 47726561 74204834  FO..[32mGreat H4
 402060 78307220 536b696c 6c7a2121 21212100  x0r Skillz!!!!!.
 402070 00                                   .               