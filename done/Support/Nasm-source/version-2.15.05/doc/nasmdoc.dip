meta :author
The NASM Development Team
meta :category
Programming
meta :copyright_tail
-- All Rights Reserved
meta :epslogo
nasmlogo.eps
meta :infofile
nasm
meta :infoname
NASM
meta :infotitle
The Netwide Assembler for x86
meta :license
This document is redistributable under the license given in the section "License".
meta :logoyadj
-72
meta :subtitle
version 2.15.05
meta :summary
This file documents NASM, the Netwide Assembler: an assembler targetting the Intel x86 series of processors, with portable source.
meta :title
NASM - The Netwide Assembler
meta :version
2.15.05
meta :year
1996-2020
chap 1 :chapter-1
n Introduction
head 1.1 :section-1.1
n Whatspn Isspn NASM?
norm
n Thespn Netwidespn Assembler,spn NASM,spn isspn anspn 80x86spn andspn x86-n 64spn assemblerspn designedspn forspn portabilityspn andspn modularity.spn Itspn supportsspn aspn rangespn ofspn objectspn filespn formats,spn includingspn Linuxspn andspn *BSDspc a.outn ,spn ELF,spn Mach-n O,spn 16-n bitspn andspn 32-n bitspc .objspn (OMF)spn format,spn COFFspn (includingspn itsspn Win32spn andspn Win64spn variants.)spn Itspn canspn alsospn outputspn plainspn binaryspn files,spn Intelspn hexspn andspn Motorolaspn S-n Recordspn formats.spn Itsspn syntaxspn isspn designedspn tospn bespn simplespn andspn easyspn tospn understand,spn similarspn tospn thespn syntaxspn inspn thespn Intelspn Softwarespn Developerspn Manualspn withspn minimalspn complexity.spn Itspn supportsspn allspn currentlyspn knownspn x86spn architecturalspn extensions,spn andspn hasspn strongspn supportspn forspn macros.
subh 1.1.1 :section-1.1.1
i licensen License
norm
n NASMspn isspn underspn thespn so-n calledspn 2-n clausespn BSDspn license,spn alsospn knownspn asspn thespn simplifiedspn BSDspn license:
norm
n Copyrightspn 1996-n 2020spn thespn NASMspn Authorsspdaspn Allspn rightsspn reserved.
norm
n Redistributionspn andspn usespn inspn sourcespn andspn binaryspn forms,spn withspn orspn withoutspn modification,spn arespn permittedspn providedspn thatspn thespn followingspn conditionsspn arespn met:
bull
n Redistributionsspn ofspn sourcespn codespn mustspn retainspn thespn abovespn copyrightspn notice,spn thisspn listspn ofspn conditionsspn andspn thespn followingspn disclaimer.
bull
n Redistributionsspn inspn binaryspn formspn mustspn reproducespn thespn abovespn copyrightspn notice,spn thisspn listspn ofspn conditionsspn andspn thespn followingspn disclaimerspn inspn thespn documentationspn and/orspn otherspn materialsspn providedspn withspn thespn distribution.
norm
n THISspn SOFTWAREspn ISspn PROVIDEDspn BYspn THEspn COPYRIGHTspn HOLDERSspn ANDspn CONTRIBUTORSspn "ASspn IS"spn ANDspn ANYspn EXPRESSspn ORspn IMPLIEDspn WARRANTIES,spn INCLUDING,spn BUTspn NOTspn LIMITEDspn TO,spn THEspn IMPLIEDspn WARRANTIESspn OFspn MERCHANTABILITYspn ANDspn FITNESSspn FORspn Aspn PARTICULARspn PURPOSEspn AREspn DISCLAIMED.spn INspn NOspn EVENTspn SHALLspn THEspn COPYRIGHTspn OWNERspn ORspn CONTRIBUTORSspn BEspn LIABLEspn FORspn ANYspn DIRECT,spn INDIRECT,spn INCIDENTAL,spn SPECIAL,spn EXEMPLARY,spn ORspn CONSEQUENTIALspn DAMAGESspn (INCLUDING,spn BUTspn NOTspn LIMITEDspn TO,spn PROCUREMENTspn OFspn SUBSTITUTEspn GOODSspn ORspn SERVICES;spn LOSSspn OFspn USE,spn DATA,spn ORspn PROFITS;spn ORspn BUSINESSspn INTERRUPTION)spn HOWEVERspn CAUSEDspn ANDspn ONspn ANYspn THEORYspn OFspn LIABILITY,spn WHETHERspn INspn CONTRACT,spn STRICTspn LIABILITY,spn ORspn TORTspn (INCLUDINGspn NEGLIGENCEspn ORspn OTHERWISE)spn ARISINGspn INspn ANYspn WAYspn OUTspn OFspn THEspn USEspn OFspn THISspn SOFTWARE,spn EVENspn IFspn ADVISEDspn OFspn THEspn POSSIBILITYspn OFspn SUCHspn DAMAGE.
chap 2 :chapter-2
n Runningspn NASM
head 2.1 :section-2.1
n NASMspi command-linen Command-Linespn Syntax
norm
n Tospn assemblespn aspn file,spn youspn issuespn aspn commandspn ofspn thespn form
code
nasm -f <format> <filename> [-o <output>]
norm
n Forspn example,
code
nasm -f elf myfile.asm
norm
n willspn assemblespc myfile.asmspn intospn anspn ELFspn objectspn filespc myfile.on .spn And
code
nasm -f bin myfile.asm -o myfile.com
norm
n willspn assemblespc myfile.asmspn intospn aspn rawspn binaryspn filespc myfile.comn .
norm
n Tospn producespn aspn listingspn file,spn withspn thespn hexspn codesspn outputspn fromspn NASMspn displayedspn onspn thespn leftspn ofspn thespn originalspn sources,spn usespn thespc -lspn optionspn tospn givespn aspn listingspn filespn name,spn forspn example:
code
nasm -f coff myfile.asm -l myfile.lst
norm
n Tospn getspn furtherspn usagespn instructionsspn fromspn NASM,spn tryspn typing
code
nasm -h
norm
n Thespn optionspc --helpspn isspn anspn aliasspn forspn thespc -hspn option.
norm
n Ifspn youspn usespn Linuxspn butspn aren'tspn surespn whetherspn yourspn systemspn isspc a.outspn orspn ELF,spn type
code
file nasm
norm
n (inspn thespn directoryspn inspn whichspn youspn putspn thespn NASMspn binaryspn whenspn youspn installedspn it).spn Ifspn itspn saysspn somethingspn like
code
nasm: ELF 32-bit LSB executable i386 (386 and up) Version 1
norm
n thenspn yourspn systemspn isspc ELFn ,spn andspn youspn shouldspn usespn thespn optionspc -f elfspn whenspn youspn wantspn NASMspn tospn producespn Linuxspn objectspn files.spn Ifspn itspn says
code
nasm: Linux/i386 demand-paged executable (QMAGIC)
norm
n orspn somethingspn similar,spn yourspn systemspn isspc a.outn ,spn andspn youspn shouldspn usespc -f aoutspn insteadspn (Linuxspc a.outspn systemsspn havespn longspn beenspn obsolete,spn andspn arespn rarespn thesespn days.)
norm
n Likespn Unixspn compilersspn andspn assemblers,spn NASMspn isspn silentspn unlessspn itspn goesspn wrong:spn youspn won'tspn seespn anyspn outputspn atspn all,spn unlessspn itspn givesspn errorspn messages.
subh 2.1.1 :section-2.1.1
n Thespi -oc -ospn Option:spn Specifyingspn thespn Outputspn Filespn Name
norm
n NASMspn willspn normallyspn choosespn thespn namespn ofspn yourspn outputspn filespn forspn you;spn preciselyspn howspn itspn doesspn thisspn isspn dependentspn onspn thespn objectspn filespn format.spn Forspn Microsoftspn objectspn filespn formatsspn (c objn ,spc win32spn andspc win64n ),spn itspn willspn removespn thespc .asmspi extensionn extensionspn (orspn whateverspn extensionspn youspn likespn tospn usespdaspn NASMspn doesn'tspn care)spn fromspn yourspn sourcespn filespn namespn andspn substitutespc .objn .spn Forspn Unixspn objectspn filespn formatsspn (c aoutn ,spc as86n ,spc coffn ,spc elf32n ,spc elf64n ,spc elfx32n ,spc ieeen ,spc macho32spn andspc macho64n )spn itspn willspn substitutespc .on .spn Forspc dbgn ,spc rdfn ,spc ithspn andspc srecn ,spn itspn willspn usespc .dbgn ,spc .rdfn ,spc .ithspn andspc .srecn ,spn respectively,spn andspn forspn thespc binspn formatspn itspn willspn simplyspn removespn thespn extension,spn sospn thatspc myfile.asmspn producesspn thespn outputspn filespc myfilen .
norm
n Ifspn thespn outputspn filespn alreadyspn exists,spn NASMspn willspn overwritespn it,spn unlessspn itspn hasspn thespn samespn namespn asspn thespn inputspn file,spn inspn whichspn casespn itspn willspn givespn aspn warningspn andspn usespi nasm.outc nasm.outspn asspn thespn outputspn filespn namespn instead.
norm
n Forspn situationsspn inspn whichspn thisspn behaviourspn isspn unacceptable,spn NASMspn providesspn thespc -ospn command-n linespn option,spn whichspn allowsspn youspn tospn specifyspn yourspn desiredspn outputspn filespn name.spn Youspn invokespc -ospn byspn followingspn itspn withspn thespn namespn youspn wishspn forspn thespn outputspn file,spn eitherspn withspn orspn withoutspn anspn interveningspn space.spn Forspn example:
code
nasm -f bin program.asm -o program.com nasm -f bin driver.asm -odriver.sys
norm
n Notespn thatspn thisspn isspn aspn smallspn o,spn andspn isspn differentspn fromspn aspn capitalspn Ospn ,spn whichspn isspn usedspn tospn specifyspn thespn numberspn ofspn optimizationspn passesspn required.spn Seespx section-2.1.24n sectionspn 2.1.24xesection-2.1.24n .
subh 2.1.2 :section-2.1.2
n Thespi -fc -fspn Option:spn Specifyingspn thespi output file formatn Outputspn Filespn Format
norm
n Ifspn youspn dospn notspn supplyspn thespc -fspn optionspn tospn NASM,spn itspn willspn choosespn anspn outputspn filespn formatspn forspn youspn itself.spn Inspn thespn distributionspn versionsspn ofspn NASM,spn thespn defaultspn isspn alwaysspi binc binn ;spn ifspn you'vespn compiledspn yourspn ownspn copyspn ofspn NASM,spn youspn canspn redefinespi OF_DEFAULTc OF_DEFAULTspn atspn compilespn timespn andspn choosespn whatspn youspn wantspn thespn defaultspn tospn be.
norm
n Likespc -on ,spn thespn interveningspn spacespn betweenspc -fspn andspn thespn outputspn filespn formatspn isspn optional;spn sospc -f elfspn andspc -felfspn arespn bothspn valid.
norm
n Aspn completespn listspn ofspn thespn availablespn outputspn filespn formatsspn canspn bespn givenspn byspn issuingspn thespn commandspi nasm -hc nasm -hn .
subh 2.1.3 :section-2.1.3
n Thespi -lc -lspn Option:spn Generatingspn aspi listing filen Listingspn File
norm
n Ifspn youspn supplyspn thespc -lspn optionspn tospn NASM,spn followedspn (withspn thespn usualspn optionalspn space)spn byspn aspn filespn name,spn NASMspn willspn generatespn aspi source-listing filen source-listingspn filespn forspn you,spn inspn whichspn addressesspn andspn generatedspn codespn arespn listedspn onspn thespn left,spn andspn thespn actualspn sourcespn code,spn withspn expansionsspn ofspn multi-n linespn macrosspn (exceptspn thosespn whichspn specificallyspn requestspn nospn expansionspn inspn sourcespn listings:spn seespx section-4.3.11n sectionspn 4.3.11xesection-4.3.11n )spn onspn thespn right.spn Forspn example:
code
nasm -f elf myfile.asm -l myfile.lst
norm
n Ifspn aspn listspn filespn isspn selected,spn youspn mayspn turnspn offspn listingspn forspn aspn sectionspn ofspn yourspn sourcespn withspc [list -]n ,spn andspn turnspn itspn backspn onspn withspc [list +]n ,spn (thespn default,spn obviously).spn Therespn isspn nospn "userspn form"spn (withoutspn thespn brackets).spn Thisspn canspn bespn usedspn tospn listspn onlyspn sectionsspn ofspn interest,spn avoidingspn excessivelyspn longspn listings.
subh 2.1.4 :section-2.1.4
n Thespi -Lc -Lspn Option:spn Additionalspn orspn Modifiedspn Listingspn Info
norm
n Usespn thisspn optionspn tospn specifyspn listingspn outputspn details.
norm
n Supportedspn optionsspn are:
bull
c -Lbspn showspn builtinspn macrospn packagesspn (standardspn andspc %usen )
bull
c -Ldspn showspn bytespn andspn repeatspn countsspn inspn decimal,spn notspn hex
bull
c -Lespn showspn thespn preprocessedspn input
bull
c -Lfspn ignorespc .nolistspn andspn forcespn listingspn output
bull
c -Lmspn showspn multi-n linespn macrospn callsspn withspn expandedspn parameters
bull
c -Lpspn outputspn aspn listspn filespn inspn everyspn pass,spn inspn casespn ofspn errors
bull
c -Lsspn showspn allspn single-n linespn macrospn definitions
bull
c -Lwspn flushspn thespn outputspn afterspn everyspn linespn (veryspn slow,spn mainlyspn usefulspn tospn debugspn NASMspn crashes)
bull
c -L+spn enablespeoallspn listingspn optionsspn exceptspc -Lwspn (veryspn verbose)
norm
n Thesespn optionsspn canspn bespn enabledspn orspn disabledspn atspn runtimespn usingspn thespc %pragma list optionsspn directive:
code
%pragma list options [+|-]flags...
norm
n Forspn example,spn tospn turnspn onspn thespc dspn andspc mspn flagsspn butspn disablespn thespc sspn flag:
code
%pragma list options +dm -s
norm
n Forspn forwardspn compatilityspn reasons,spn anspn undefinedspn flagspn willspn bespn ignored.spn Thus,spn aspn newspn flagspn introducedspn inspn aspn newerspn versionspn ofspn NASMspn canspn bespn specifiedspn withoutspn breakingspn olderspn versions.spn Listingspn flagsspn willspn alwaysspn bespn aspn singlespn alphanumericspn characterspn andspn arespn casespn sensitive.
subh 2.1.5 :section-2.1.5
n Thespi -Mc -Mspn Option:spn Generatespi makefile dependenciesn Makefilespn Dependencies
norm
n Thisspn optionspn canspn bespn usedspn tospn generatespn makefilespn dependenciesspn onspn stdout.spn Thisspn canspn bespn redirectedspn tospn aspn filespn forspn furtherspn processing.spn Forspn example:
code
nasm -M myfile.asm > myfile.dep
subh 2.1.6 :section-2.1.6
n Thespi -MGc -MGspn Option:spn Generatespi makefile dependenciesn Makefilespn Dependencies
norm
n Thisspn optionspn canspn bespn usedspn tospn generatespn makefilespn dependenciesspn onspn stdout.spn Thisspn differsspn fromspn thespc -Mspn optionspn inspn thatspn ifspn aspn nonexistingspn filespn isspn encountered,spn itspn isspn assumedspn tospn bespn aspn generatedspn filespn andspn isspn addedspn tospn thespn dependencyspn listspn withoutspn aspn prefix.
subh 2.1.7 :section-2.1.7
n Thespi -MFc -MFspn Option:spn Setspn Makefilespn Dependencyspn File
norm
n Thisspn optionspn canspn bespn usedspn withspn thespc -Mspn orspc -MGspn optionsspn tospn sendspn thespn outputspn tospn aspn file,spn ratherspn thanspn tospn stdout.spn Forspn example:
code
nasm -M -MF myfile.dep myfile.asm
subh 2.1.8 :section-2.1.8
n Thespi -MDc -MDspn Option:spn Assemblespn andspn Generatespn Dependencies
norm
n Thespc -MDspn optionspn actsspn asspn thespn combinationspn ofspn thespc -Mspn andspc -MFspn optionsspn (i.e.spn aspn filenamespn hasspn tospn bespn specified.)spn However,spn unlikespn thespc -Mspn orspc -MGspn options,spc -MDspn doesspeonotspn inhibitspn thespn normalspn operationspn ofspn thespn assembler.spn Usespn thisspn tospn automaticallyspn generatespn updatedspn dependenciesspn withspn everyspn assemblyspn session.spn Forspn example:
code
nasm -f elf -o myfile.o -MD myfile.dep myfile.asm
norm
n Ifspn thespn argumentspn afterspc -MDspn isspn anspn optionspn ratherspn thanspn aspn filename,spn thenspn thespn outputspn filenamespn isspn thespn firstspn applicablespn onespn of:
bull
n thespn filenamespn setspn inspn thespc -MFspn option;
bull
n thespn outputspn filenamespn fromspn thespc -ospn optionspn withspc .dspn appended;
bull
n thespn inputspn filenamespn withspn thespn extensionspn setspn tospc .dn .
subh 2.1.9 :section-2.1.9
n Thespi -MTc -MTspn Option:spn Dependencyspn Targetspn Name
norm
n Thespc -MTspn optionspn canspn bespn usedspn tospn overridespn thespn defaultspn namespn ofspn thespn dependencyspn target.spn Thisspn isspn normallyspn thespn samespn asspn thespn outputspn filename,spn specifiedspn byspn thespc -ospn option.
subh 2.1.10 :section-2.1.10
n Thespi -MQc -MQspn Option:spn Dependencyspn Targetspn Namespn (Quoted)
norm
n Thespc -MQspn optionspn actsspn asspn thespc -MTspn option,spn exceptspn itspn triesspn tospn quotespn charactersspn thatspn havespn specialspn meaningspn inspn Makefilespn syntax.spn Thisspn isspn notspn foolproof,spn asspn notspn allspn charactersspn withspn specialspn meaningspn arespn quotablespn inspn Make.spn Thespn defaultspn outputspn (ifspn nospc -MTspn orspc -MQspn optionspn isspn specified)spn isspn automaticallyspn quoted.
subh 2.1.11 :section-2.1.11
n Thespi -MPc -MPspn Option:spn Emitspn phonyspn targets
norm
n Whenspn usedspn withspn anyspn ofspn thespn dependencyspn generationspn options,spn thespc -MPspn optionspn causesspn NASMspn tospn emitspn aspn phonyspn targetspn withoutspn dependenciesspn forspn eachspn headerspn file.spn Thisspn preventsspn Makespn fromspn complainingspn ifspn aspn headerspn filespn hasspn beenspn removed.
subh 2.1.12 :section-2.1.12
n Thespi -MWc -MWspn Option:spn Watcomspn Makespn quotingspn style
norm
n Thisspn optionspn causesspn NASMspn tospn attemptspn tospn quotespn dependenciesspn accordingspn tospn Watcomspn Makespn conventionsspn ratherspn thanspn POSIXspn Makespn conventionsspn (alsospn usedspn byspn mostspn otherspn Makespn variants.)spn Thisspn quotesspc #spn asspc $#spn ratherspn thanspc \#n ,spn usesspc &spn ratherspn thanspc \spn forspn continuationspn lines,spn andspn enclosesspn filenamesspn containingspn whitespacespn inspn doublespn quotes.
subh 2.1.13 :section-2.1.13
n Thespi -Fc -Fspn Option:spn Selectingspn aspi debug information formatn Debugspn Informationspn Format
norm
n Thisspn optionspn isspn usedspn tospn selectspn thespn formatspn ofspn thespn debugspn informationspn emittedspn intospn thespn outputspn file,spn tospn bespn usedspn byspn aspn debuggerspn (orspeowillspn be).spn Priorspn tospn versionspn 2.03.01,spn thespn usespn ofspn thisspn switchspn didspeonotspn enablespn outputspn ofspn thespn selectedspn debugspn infospn format.spn Usespc -gn ,spn seespx section-2.1.14n sectionspn 2.1.14xesection-2.1.14n ,spn tospn enablespn output.spn Versionsspn 2.03.01spn andspn laterspn automaticallyspn enablespc -gspn ifspc -Fspn isspn specified.
norm
n Aspn completespn listspn ofspn thespn availablespn debugspn filespn formatsspn forspn anspn outputspn formatspn canspn bespn seenspn byspn issuingspn thespn commandspc nasm -hn .spn Notspn allspn outputspn formatsspn currentlyspn supportspn debuggingspn output.
norm
n Thisspn shouldspn notspn bespn confusedspn withspn thespc -f dbgspn outputspn formatspn option,spn seespx section-8.14n sectionspn 8.14xesection-8.14n .
subh 2.1.14 :section-2.1.14
n Thespi -gc -gspn Option:spn Enablingspi debug informationn Debugspn Informationn .
norm
n Thisspn optionspn canspn bespn usedspn tospn generatespn debuggingspn informationspn inspn thespn specifiedspn format.spn Seespx section-2.1.13n sectionspn 2.1.13xesection-2.1.13n .spn Usingspc -gspn withoutspc -Fspn resultsspn inspn emittingspn debugspn infospn inspn thespn defaultspn format,spn ifspn any,spn forspn thespn selectedspn outputspn format.spn Ifspn nospn debugspn informationspn isspn currentlyspn implementedspn inspn thespn selectedspn outputspn format,spc -gspn isspessilentlyspeeignoredn .
subh 2.1.15 :section-2.1.15
n Thespi -Xc -Xspn Option:spn Selectingspn anspi error reporting formatn Errorspn Reportingspn Format
norm
n Thisspn optionspn canspn bespn usedspn tospn selectspn anspn errorspn reportingspn formatspn forspn anyspn errorspn messagesspn thatspn mightspn bespn producedspn byspn NASM.
norm
n Currently,spn twospn errorspn reportingspn formatsspn mayspn bespn selected.spn Theyspn arespn thespc -Xvcspn optionspn andspn thespc -Xgnuspn option.spn Thespn GNUspn formatspn isspn thespn defaultspn andspn looksspn likespn this:
code
filename.asm:65: error: specific error message
norm
n wherespc filename.asmspn isspn thespn namespn ofspn thespn sourcespn filespn inspn whichspn thespn errorspn wasspn detected,spc 65spn isspn thespn sourcespn filespn linespn numberspn onspn whichspn thespn errorspn wasspn detected,spc errorspn isspn thespn severityspn ofspn thespn errorspn (thisspn couldspn bespc warningn ),spn andspc specific error messagespn isspn aspn morespn detailedspn textspn messagespn whichspn shouldspn helpspn pinpointspn thespn exactspn problem.
norm
n Thespn otherspn format,spn specifiedspn byspc -Xvcspn isspn thespn stylespn usedspn byspn Microsoftspn Visualspn C++spn andspn somespn otherspn programs.spn Itspn looksspn likespn this:
code
filename.asm(65) : error: specific error message
norm
n wherespn thespn onlyspn differencespn isspn thatspn thespn linespn numberspn isspn inspn parenthesesspn insteadspn ofspn beingspn delimitedspn byspn colons.
norm
n Seespn alsospn thespc Visual C++spn outputspn format,spx section-8.5n sectionspn 8.5xesection-8.5n .
subh 2.1.16 :section-2.1.16
n Thespi -Zc -Zspn Option:spn Sendspn Errorsspn tospn aspn File
norm
n Underspi dosc MS-DOSspn itspn canspn bespn difficultspn (thoughspn therespn arespn ways)spn tospn redirectspn thespn standard-n errorspn outputspn ofspn aspn programspn tospn aspn file.spn Sincespn NASMspn usuallyspn producesspn itsspn warningspn andspi error messagesn errorspn messagesspn onspi stderrc stderrn ,spn thisspn canspn makespn itspn hardspn tospn capturespn thespn errorsspn ifspn (forspn example)spn youspn wantspn tospn loadspn themspn intospn anspn editor.
norm
n NASMspn thereforespn providesspn thespc -Zspn option,spn takingspn aspn filenamespn argumentspn whichspn causesspn errorsspn tospn bespn sentspn tospn thespn specifiedspn filesspn ratherspn thanspn standardspn error.spn Thereforespn youspn canspi redirecting errorsn redirectspn thespn errorsspn intospn aspn filespn byspn typing
code
nasm -Z myfile.err -f obj myfile.asm
norm
n Inspn earlierspn versionsspn ofspn NASM,spn thisspn optionspn wasspn calledspc -En ,spn butspn itspn wasspn changedspn sincespc -Espn isspn anspn optionspn conventionallyspn usedspn forspn preprocessingspn only,spn withspn disastrousspn results.spn Seespx section-2.1.22n sectionspn 2.1.22xesection-2.1.22n .
subh 2.1.17 :section-2.1.17
n Thespi -sc -sspn Option:spn Sendspn Errorsspn tospi stdoutc stdout
norm
n Thespc -sspn optionspn redirectsspi error messagesn errorspn messagesspn tospc stdoutspn ratherspn thanspc stderrn ,spn sospn itspn canspn bespn redirectedspn underspi dosc MS-DOSn .spn Tospn assemblespn thespn filespc myfile.asmspn andspn pipespn itsspn outputspn tospn thespc morespn program,spn youspn canspn type:
code
nasm -s -f obj myfile.asm | more
norm
n Seespn alsospn thespc -Zspn option,spx section-2.1.16n sectionspn 2.1.16xesection-2.1.16n .
subh 2.1.18 :section-2.1.18
n Thespi -ic -ii -Ispn Option:spn Includespn Filespn Searchspn Directories
norm
n Whenspn NASMspn seesspn thespi %includec %includespn orspi %pathsearchc %pathsearchspn directivespn inspn aspn sourcespn filespn (seespx section-4.6.1n sectionspn 4.6.1xesection-4.6.1n ,spx section-4.6.2n sectionspn 4.6.2xesection-4.6.2spn orspx section-3.2.3n sectionspn 3.2.3xesection-3.2.3n ),spn itspn willspn searchspn forspn thespn givenspn filespn notspn onlyspn inspn thespn currentspn directory,spn butspn alsospn inspn anyspn directoriesspn specifiedspn onspn thespn commandspn linespn byspn thespn usespn ofspn thespc -ispn option.spn Thereforespn youspn canspn includespn filesspn fromspn aspi macro libraryn macrospn libraryn ,spn forspn example,spn byspn typing
code
nasm -ic:\macrolib\ -f obj myfile.asm
norm
n (Asspn usual,spn aspn spacespn betweenspc -ispn andspn thespn pathspn namespn isspn allowed,spn andspn optional).
norm
n Priorspn NASMspn 2.14spn aspn pathspn providedspn inspn thespn optionspn hasspn beenspn consideredspn asspn aspn verbatimspn copyspn andspn providingspn aspn pathspn separatorspn beenspn upspn tospn aspn caller.spn Onespn couldspn implicitlyspn concatenatespn aspn searchspn pathspn togetherspn withspn aspn filename.spn Stillspn thisspn wasspn ratherspn aspn trickspn thanspn somethingspn useful.spn Nowspn thespn trailingspn pathspn separatorspn isspn madespn tospn alwaysspn present,spn thusspc -ifoospn willspn bespn consideredspn asspn thespc -ifoo/spn directory.
norm
n Ifspn youspn wantspn tospn definespn aspeostandardspi include search pathn includespn searchspn pathn ,spn similarspn tospc /usr/includespn onspn Unixspn systems,spn youspn shouldspn placespn onespn orspn morespc -ispn directivesspn inspn thespc NASMENVspn environmentspn variablespn (seespx section-2.1.35n sectionspn 2.1.35xesection-2.1.35n ).
norm
n Forspn Makefilespn compatibilityspn withspn manyspn Cspn compilers,spn thisspn optionspn canspn alsospn bespn specifiedspn asspc -In .
subh 2.1.19 :section-2.1.19
n Thespi -pc -pi -Pspn Option:spi pre-including filesn Pre-n Includespn aspn File
norm
i %includen NASMspn allowsspn youspn tospn specifyspn filesspn tospn bespeopre-includedspn intospn yourspn sourcespn file,spn byspn thespn usespn ofspn thespc -pspn option.spn Sospn running
code
nasm myfile.asm -p myinc.inc
norm
n isspn equivalentspn tospn runningspc nasm myfile.asmspn andspn placingspn thespn directivespc %include "myinc.inc"spn atspn thespn startspn ofspn thespn file.
norm
c --includespn optionspn isspn alsospn accepted.
norm
n Forspn consistencyspn withspn thespc -In ,spc -Dspn andspc -Uspn options,spn thisspn optionspn canspn alsospn bespn specifiedspn asspc -Pn .
subh 2.1.20 :section-2.1.20
n Thespi -dc -di -Dspn Option:spi pre-definen Pre-n Definespn aspn Macro
norm
i %definen Justspn asspn thespc -pspn optionspn givesspn anspn alternativespn tospn placingspc %includespn directivesspn atspn thespn startspn ofspn aspn sourcespn file,spn thespc -dspn optionspn givesspn anspn alternativespn tospn placingspn aspc %definespn directive.spn Youspn couldspn code
code
nasm myfile.asm -dFOO=100
norm
n asspn anspn alternativespn tospn placingspn thespn directive
code
%define FOO 100
norm
n atspn thespn startspn ofspn thespn file.spn Youspn canspn missspn offspn thespn macrospn value,spn asspn well:spn thespn optionspc -dFOOspn isspn equivalentspn tospn codingspc %define FOOn .spn Thisspn formspn ofspn thespn directivespn mayspn bespn usefulspn forspn selectingspi assembly-time optionsn assembly-timespn optionsspn whichspn arespn thenspn testedspn usingspc %ifdefn ,spn forspn examplespc -dDEBUGn .
norm
n Forspn Makefilespn compatibilityspn withspn manyspn Cspn compilers,spn thisspn optionspn canspn alsospn bespn specifiedspn asspc -Dn .
subh 2.1.21 :section-2.1.21
n Thespi -uc -ui -Uspn Option:spi undefining macrosn Undefinespn aspn Macro
norm
i %undefn Thespc -uspn optionspn undefinesspn aspn macrospn thatspn wouldspn otherwisespn havespn beenspn pre-n defined,spn eitherspn automaticallyspn orspn byspn aspc -pspn orspc -dspn optionspn specifiedspn earlierspn onspn thespn commandspn lines.
norm
n Forspn example,spn thespn followingspn commandspn line:
code
nasm myfile.asm -dFOO=100 -uFOO
norm
n wouldspn resultspn inspc FOOspeonotspn beingspn aspn predefinedspn macrospn inspn thespn program.spn Thisspn isspn usefulspn tospn overridespn optionsspn specifiedspn atspn aspn differentspn pointspn inspn aspn Makefile.
norm
n Forspn Makefilespn compatibilityspn withspn manyspn Cspn compilers,spn thisspn optionspn canspn alsospn bespn specifiedspn asspc -Un .
subh 2.1.22 :section-2.1.22
n Thespi -Ec -Ei -espn Option:spn Preprocessspn Only
norm
n NASMspn allowsspn thespi preprocessorn preprocessorspn tospn bespn runspn onspn itsspn own,spn upspn tospn aspn point.spn Usingspn thespc -Espn optionspn (whichspn requiresspn nospn arguments)spn willspn causespn NASMspn tospn preprocessspn itsspn inputspn file,spn expandspn allspn thespn macrospn references,spn removespn allspn thespn commentsspn andspn preprocessorspn directives,spn andspn printspn thespn resultingspn filespn onspn standardspn outputspn (orspn savespn itspn tospn aspn file,spn ifspn thespc -ospn optionspn isspn alsospn used).
norm
n Thisspn optionspn cannotspn bespn appliedspn tospn programsspn whichspn requirespn thespn preprocessorspn tospn evaluatespi preprocessor, expressionsi expressionsn expressionsspn whichspn dependspn onspn thespn valuesspn ofspn symbols:spn sospn codespn suchspn as
code
%assign tablesize ($-tablestart)
norm
n willspn causespn anspn errorspn inspi preprocess-only moden preprocess-onlyspn moden .
norm
n Forspn compatiblityspn withspn olderspn versionspn ofspn NASM,spn thisspn optionspn canspn alsospn bespn writtenspc -en .spc -Espn inspn olderspn versionsspn ofspn NASMspn wasspn thespn equivalentspn ofspn thespn currentspc -Zspn option,spx section-2.1.16n sectionspn 2.1.16xesection-2.1.16n .
subh 2.1.23 :section-2.1.23
n Thespi -ac -aspn Option:spn Don'tspn Preprocessspn Atspn All
norm
n Ifspn NASMspn isspn beingspn usedspn asspn thespn backspn endspn tospn aspn compiler,spn itspn mightspn bespn desirablespn tospi suppressing preprocessingn suppressspn preprocessingspn completelyspn andspn assumespn thespn compilerspn hasspn alreadyspn donespn it,spn tospn savespn timespn andspn increasespn compilationspn speeds.spn Thespc -aspn option,spn requiringspn nospn argument,spn instructsspn NASMspn tospn replacespn itsspn powerfulspi preprocessorn preprocessorspn withspn aspi stub preprocessorn stubspn preprocessorspn whichspn doesspn nothing.
subh 2.1.24 :section-2.1.24
n Thespi -Oc -Ospn Option:spn Specifyingspi multipass optimizationn Multipassspn Optimization
norm
n Usingspn thespc -Ospn option,spn youspn canspn tellspn NASMspn tospn carryspn outspn differentspn levelsspn ofspn optimization.spn Multiplespn flagsspn canspn bespn specifiedspn afterspn thespc -Ospn options,spn somespn ofspn whichspn canspn bespn combinedspn inspn aspn singlespn option,spn e.g.spc -Oxvn .
bull
c -O0n :spn Nospn optimization.spn Allspn operandsspn takespn theirspn longspn forms,spn ifspn aspn shortspn formspn isspn notspn specified,spn exceptspn conditionalspn jumps.spn Thisspn isspn intendedspn tospn matchspn NASMspn 0.98spn behavior.
bull
c -O1n :spn Minimalspn optimization.spn Asspn above,spn butspn immediatespn operandsspn whichspn willspn fitspn inspn aspn signedspn bytespn arespn optimized,spn unlessspn thespn longspn formspn isspn specified.spn Conditionalspn jumpsspn defaultspn tospn thespn longspn formspn unlessspn otherwisespn specified.
bull
c -Oxspn (wherespc xspn isspn thespn actualspn letterspc xn ):spn Multipassspn optimization.spn Minimizespn branchspn offsetsspn andspn signedspn immediatespn bytes,spn overridingspn sizespn specificationspn unlessspn thespc strictspn keywordspn hasspn beenspn usedspn (seespx section-3.7n sectionspn 3.7xesection-3.7n ).spn Forspn compatibilityspn withspn earlierspn releases,spn thespn letterspc xspn mayspn alsospn bespn anyspn numberspn greaterspn thanspn one.spn Thisspn numberspn hasspn nospn effectspn onspn thespn actualspn numberspn ofspn passes.
bull
c -Ovn :spn Atspn thespn endspn ofspn assembly,spn printspn thespn numberspn ofspn passesspn actuallyspn executed.
norm
n Thespc -Oxspn modespn isspn recommendedspn forspn mostspn uses,spn andspn isspn thespn defaultspn sincespn NASMspn 2.09.
norm
n Notespn thatspn thisspn isspn aspn capitalspc On ,spn andspn isspn differentspn fromspn aspn smallspc on ,spn whichspn isspn usedspn tospn specifyspn thespn outputspn filespn name.spn Seespx section-2.1.1n sectionspn 2.1.1xesection-2.1.1n .
subh 2.1.25 :section-2.1.25
n Thespi -tc -tspn Option:spn Enablespn TASMspn Compatibilityspn Mode
norm
n NASMspn includesspn aspn limitedspn formspn ofspn compatibilityspn withspn Borland'sspi TASMc TASMn .spn Whenspn NASM'sspc -tspn optionspn isspn used,spn thespn followingspn changesspn arespn made:
bull
n localspn labelsspn mayspn bespn prefixedspn withspc @@spn insteadspn ofspc .
bull
n sizespn overridespn isspn supportedspn withinspn brackets.spn Inspn TASMspn compatiblespn mode,spn aspn sizespn overridespn insidespn squarespn bracketsspn changesspn thespn sizespn ofspn thespn operand,spn andspn notspn thespn addressspn typespn ofspn thespn operandspn asspn itspn doesspn inspn NASMspn syntax.spn E.g.spc mov eax,[DWORD val]spn isspn validspn syntaxspn inspn TASMspn compatibilityspn mode.spn Notespn thatspn youspn losespn thespn abilityspn tospn overridespn thespn defaultspn addressspn typespn forspn thespn instruction.
bull
n unprefixedspn formsspn ofspn somespn directivesspn supportedspn (c argn ,spc elifn ,spc elsen ,spc endifn ,spc ifn ,spc ifdefn ,spc ifdifin ,spc ifndefn ,spc includen ,spc localn )
subh 2.1.26 :section-2.1.26
n Thespi -wc -wspn andspi -Wc -Wspn Options:spn Enablespn orspn Disablespn Assemblyspi warningsn Warnings
norm
n NASMspn canspn observespn manyspn conditionsspn duringspn thespn coursespn ofspn assemblyspn whichspn arespn worthspn mentioningspn tospn thespn user,spn butspn notspn aspn sufficientlyspn severespn errorspn tospn justifyspn NASMspn refusingspn tospn generatespn anspn outputspn file.spn Thesespn conditionsspn arespn reportedspn likespn errors,spn butspn comespn upspn withspn thespn wordspn `warning'spn beforespn thespn message.spn Warningsspn dospn notspn preventspn NASMspn fromspn generatingspn anspn outputspn filespn andspn returningspn aspn successspn statusspn tospn thespn operatingspn system.
norm
n Somespn conditionsspn arespn evenspn lessspn severespn thanspn that:spn theyspn arespn onlyspn sometimesspn worthspn mentioningspn tospn thespn user.spn Thereforespn NASMspn supportsspn thespc -wspn command-n linespn option,spn whichspn enablesspn orspn disablesspn certainspn classesspn ofspn assemblyspn warning.spn Suchspn warningspn classesspn arespn describedspn byspn aspn name,spn forspn examplespc label-orphann ;spn youspn canspn enablespn warningsspn ofspn thisspn classspn byspn thespn command-n linespn optionspc -w+label-orphanspn andspn disablespn itspn byspc -w-label-orphann .
norm
n Thespn currentspi warning classesn warningspn classesspn are:
bull
i allc allspn isspn anspn groupspn aliasspn forspeoallspn warningspn classes.spn Thus,spc -w+allspn enablesspn allspn availablespn warnings,spn andspc -w-allspn disablesspn warningsspn entirelyspn (sincespn NASMspn 2.13).
bull
i bad-pragmac bad-pragmaspn isspn aspn backwardsspn compatibilityspn aliasspn forspc pragma-badn .
bull
i bndc bndspn warnsspn aboutspn ineffectivespn usespn ofspn thespc BNDspn prefixspn whenspn thespc JMPspn instructionspn isspn convertedspn tospn thespc SHORTspn form.spn Thisspn shouldspn bespn extremelyspn rarespn sincespn thespn shortspc JMPspn onlyspn isspn applicablespn tospn jumpsspn insidespn thespn samespn module,spn butspn ifspn itspn isspn legitimate,spn itspn mayspn bespn necessaryspn tospn usespc bnd jmp dwordn .
indt
n Enabledspn byspn default.
bull
i db-emptyc db-emptyspn warnsspn aboutspn aspc DBn ,spc DWn ,spn etcspn declarationspn withspn nospn operands,spn producingspn nospn output.spn Thisspn isspn permitted,spn butspn oftenspn indicativespn ofspn anspn error.spn Seespx section-3.2.1n sectionspn 3.2.1xesection-3.2.1n .
indt
n Enabledspn byspn default.
bull
i environmentc environmentspn warnsspn ifspn aspn nonexistentspn environmentspn variablespn isspn accessedspn usingspn thespc %!spn preprocessorspn constructspn (seespx section-4.11.2n sectionspn 4.11.2xesection-4.11.2n .)spn Suchspn environmentspn variablesspn arespn treatedspn asspn emptyspn (withspn thisspn warningspn issued)spn startingspn inspn NASMspn 2.15;spn earlierspn versionsspn ofspn NASMspn wouldspn treatspn thisspn asspn anspn error.
indt
n Enabledspn byspn default.
bull
i floatc floatspn isspn aspn groupspn aliasspn forspn allspn warningspn classesspn prefixedspn byspc float-n ;spn currentlyspc float-denormn ,spc float-overflown ,spc float-toolongn ,spn andspc float-underflown .
bull
i float-denormc float-denormspn warnsspn aboutspn denormalspn floatingspn pointspn constants.
indt
n Disabledspn byspn default.
bull
i float-overflowc float-overflowspn warnsspn aboutspn floatingspn pointspn underflow.
indt
n Enabledspn byspn default.
bull
i float-toolongc float-toolongspn warnsspn aboutspn toospn manyspn digitsspn inspn floating-n pointspn numbers.
indt
n Enabledspn byspn default.
bull
i float-underflowc float-underflowspn warnsspn aboutspn floatingspn pointspn underflowspn (aspn nonzerospn constantspn roundedspn tospn zero.)
indt
n Disabledspn byspn default.
bull
i hlec hlespn warnsspn aboutspn invalidspn usespn ofspn thespn HLEspc XACQUIREspn orspc XRELEASEspn prefixes.
indt
n Enabledspn byspn default.
bull
i labelc labelspn isspn aspn groupspn aliasspn forspn allspn warningspn classesspn prefixedspn byspc label-n ;spn currentlyspc label-orphann ,spc label-redefn ,spn andspc label-redef-laten .
bull
i label-orphanc label-orphanspn warnsspn aboutspn sourcespn linesspn whichspn containspn nospn instructionspn butspn definespn aspn labelspn withoutspn aspn trailingspn colon.spn Thisspn isspn mostspn likelyspn indicativespn ofspn aspn typo,spn butspn isspn technicallyspn correctspn NASMspn syntaxspn (seespx section-3.1n sectionspn 3.1xesection-3.1n .)
indt
n Enabledspn byspn default.
bull
i label-redefc label-redefspn warnsspn ifspn aspn labelspn isspn definedspn morespn thanspn once,spn butspn thespn valuespn isspn identical.spn Itspn isspn anspn unconditionalspn errorspn tospn definespn thespn samespn labelspn morespn thanspn oncespn tospeodifferentspn values.
indt
n Disabledspn byspn default.
bull
i label-redef-latec label-redef-latespn thespn valuespn ofspn aspn labelspn changedspn duringspn thespn final,spn code-n generationspn pass.spn Thisspn mayspn bespn thespn resultspn ofspn strangespn usespn ofspn thespn preprocessor.spn Thisspn isspn veryspn likelyspn tospn producespn incorrectspn codespn andspn mayspn endspn upspn beingspn anspn unconditionalspn errorspn inspn aspn futurespn versionspn ofspn NASM.
indt
n Enabledspn andspn promotedspn tospn errorspn byspn default.
bull
i lockc lockspn warnsspn aboutspc LOCKspn prefixesspn onspn unlockablespn instructions.
indt
n Enabledspn byspn default.
bull
i macroc macrospn isspn aspn groupspn aliasspn forspn allspn warningspn classesspn prefixedspn byspc macro-n ;spn currentlyspc macro-def-case-singlen ,spc macro-def-greedy-singlen ,spc macro-def-param-singlen ,spc macro-defaultsn ,spc macro-params-legacyn ,spc macro-params-multin ,spn andspc macro-params-singlen .
bull
i macro-defc macro-defspn isspn aspn groupspn aliasspn forspn allspn warningspn classesspn prefixedspn byspc macro-def-n ;spn currentlyspc macro-def-case-singlen ,spc macro-def-greedy-singlen ,spn andspc macro-def-param-singlen .
bull
i macro-def-case-singlec macro-def-case-singlespn warnsspn whenspn aspn single-n linespn macrospn isspn definedspn bothspn casespn sensitivespn andspn casespn insensitive.spn Thespn newspn macrospn definitionspn willspn overridespn (shadow)spn thespn originalspn one,spn althoughspn thespn originalspn macrospn isspn notspn deleted,spn andspn willspn bespn re-n exposedspn ifspn thespn newspn macrospn isspn deletedspn withspc %undefn ,spn or,spn ifspn thespn originalspn macrospn isspn thespn casespn insensitivespn one,spn thespn macrospn callspn isspn donespn withspn aspn differentspn case.
indt
n Enabledspn byspn default.
bull
i macro-def-greedy-singlec macro-def-greedy-singlespn definitionspn shadowsspn greedyspn macrospn warnsspn whenspn aspn single-n linespn macrospn isspn definedspn whichspn wouldspn matchspn aspn previouslyspn existingspn greedyspn definition.spn Thespn newspn macrospn definitionspn willspn overridespn (shadow)spn thespn originalspn one,spn althoughspn thespn originalspn macrospn isspn notspn deleted,spn andspn willspn bespn re-n exposedspn ifspn thespn newspn macrospn isspn deletedspn withspc %undefn ,spn andspn willspn bespn invokedspn ifspn calledspn withspn aspn parameterspn countspn thatspn doesspn notspn matchspn thespn newspn definition.
indt
n Enabledspn byspn default.
bull
i macro-def-param-singlec macro-def-param-singlespn warnsspn ifspn thespn samespn single-n linespn macrospn isspn definedspn withspn andspn withoutspn parameters.spn Thespn newspn macrospn definitionspn willspn overridespn (shadow)spn thespn originalspn one,spn althoughspn thespn originalspn macrospn isspn notspn deleted,spn andspn willspn bespn re-n exposedspn ifspn thespn newspn macrospn isspn deletedspn withspc %undefn .
indt
n Enabledspn andspn promotedspn tospn errorspn byspn default.
bull
i macro-defaultsc macro-defaultsspn warnsspn whenspn aspn macrospn hasspn morespn defaultspn parametersspn thanspn optionalspn parameters.spn Seespx section-4.3.5n sectionspn 4.3.5xesection-4.3.5spn forspn whyspn mightspn wantspn tospn disablespn thisspn warning.
indt
n Enabledspn byspn default.
bull
i macro-paramsc macro-paramsspn isspn aspn groupspn aliasspn forspn allspn warningspn classesspn prefixedspn byspc macro-params-n ;spn currentlyspc macro-params-legacyn ,spc macro-params-multin ,spn andspc macro-params-singlen .
bull
i macro-params-legacyc macro-params-legacyspn warnsspn aboutspi multi-line macrosn multi-linespn macrosspn beingspn invokedspn withspn thespn wrongspn numberspn ofspn parameters,spn butspn forspn bug-n compatibilityspn withspn NASMspn versionsspn olderspn thanspn 2.15,spn NASMspn triedspn tospn fixspn upspn thespn parametersspn tospn matchspn thespn legacyspn behaviorspn andspn callspn thespn macrospn anyway.spn Thisspn canspn happenspn inspn certainspn casesspn wherespn therespn arespn emptyspn argumentsspn withoutspn braces,spn sometimesspn asspn aspn resultspn ofspn macrospn expansion.
indt
n Thespn legacyspn behaviorspn isspn quitespn strangespn andspn highlyspn context-n dependent,spn andspn canspn bespn disabledspn with:
code
     %pragma preproc sane_empty_expansion true
indt
n Itspn isspn highlyspn recommendedspn tospn usespn thisspn optionspn inspn newspn code.
indt
n Enabledspn byspn default.
bull
i macro-params-multic macro-params-multispn warnsspn aboutspi multi-line macrosn multi-linespn macrosspn beingspn invokedspn withspn thespn wrongspn numberspn ofspn parameters.spn Seespx section-4.3.1n sectionspn 4.3.1xesection-4.3.1spn forspn anspn examplespn ofspn whyspn youspn mightspn wantspn tospn disablespn thisspn warning.
indt
n Enabledspn byspn default.
bull
i macro-params-singlec macro-params-singlespn warnsspn aboutspi single-line macrosn single-linespn macrosspn beingspn invokedspn withspn thespn wrongspn numberspn ofspn parameters.
indt
n Enabledspn byspn default.
bull
i negative-repc negative-repspn warnsspn aboutspn negativespn countsspn givenspn tospn thespc %repspn preprocessorspn directive.
indt
n Enabledspn byspn default.
bull
i not-my-pragmac not-my-pragmaspn isspn aspn backwardsspn compatibilityspn aliasspn forspc pragma-nan .
bull
i number-overflowc number-overflowspn coversspn warningsspn aboutspn numericspn constantsspn whichspn don'tspn fitspn inspn 64spn bits.
indt
n Enabledspn byspn default.
bull
i obsoletec obsoletespn isspn aspn groupspn aliasspn forspn allspn warningspn classesspn prefixedspn byspc obsolete-n ;spn currentlyspc obsolete-nopn ,spc obsolete-removedn ,spn andspc obsolete-validn .
bull
i obsolete-nopc obsolete-nopspn warnsspn forspn anspn instructionspn whichspn hasspn beenspn removedspn fromspn thespn architecture,spn butspn hasspn beenspn architecturallyspn definedspn tospn bespn aspn noopspn forspn futurespn CPUs.
indt
n Enabledspn byspn default.
bull
i obsolete-removedc obsolete-removedspn warnsspn forspn anspn instructionspn whichspn hasspn beenspn removedspn fromspn thespn architecture,spn andspn isspn nospn longerspn includedspn inspn thespn CPUspn definitionspn givenspn inspn thespc [CPU]spn directive,spn forspn examplespc POP CSn ,spn thespn opcodespn forspn which,spc 0Fhn ,spn insteadspn isspn anspn opcodespn prefixspn onspn CPUsspn newerspn thanspn thespn firstspn generationspn 8086.
indt
n Enabledspn byspn default.
bull
i obsolete-validc obsolete-validspn warnsspn forspn anspn instructionspn whichspn hasspn beenspn removedspn fromspn thespn architecture,spn butspn isspn stillspn validspn onspn thespn specificspn CPUspn givenspn inspn thespc CPUspn directive.spn Codespn usingspn thesespn instructionsspn isspn mostspn likelyspn notspn forwardspn compatible.
indt
n Enabledspn byspn default.
bull
i orphan-labelsc orphan-labelsspn isspn aspn backwardsspn compatibilityspn aliasspn forspc label-orphann .
bull
i otherc otherspn specifiesspn anyspn warningspn notspn includedspn inspn anyspn specificspn warningspn class.
indt
n Enabledspn byspn default.
bull
i phasec phasespn warnsspn aboutspn symbolsspn havingspn changedspn valuesspn duringspn thespn second-n to-n lastspn assemblyspn pass.spn Thisspn isspn notspn inherentlyspn fatal,spn butspn mayspn bespn aspn sourcespn ofspn bugs.
indt
n Disabledspn byspn default.
bull
i pragmac pragmaspn isspn aspn groupspn aliasspn forspn allspn warningspn classesspn prefixedspn byspc pragma-n ;spn currentlyspc pragma-badn ,spc pragma-emptyn ,spc pragma-nan ,spn andspc pragma-unknownn .
bull
i pragma-badc pragma-badspn warnsspn aboutspn aspn malformedspn orspn otherwisespn unparsablespc %pragmaspn directive.
indt
n Disabledspn byspn default.
bull
i pragma-emptyc pragma-emptyspn warnsspn aboutspn aspc %pragmaspn directivespn containingspn nothing.spn Thisspn isspn treatedspn identicallyspn tospc %pragma ignorespn exceptspn forspn thisspn optionalspn warning.
indt
n Disabledspn byspn default.
bull
i pragma-nac pragma-naspn warnsspn aboutspn aspc %pragmaspn directivespn whichspn isspn notspn applicablespn tospn thisspn particularspn assemblyspn session.spn Thisspn isspn notspn yetspn implemented.
indt
n Disabledspn byspn default.
bull
i pragma-unknownc pragma-unknownspn warnsspn aboutspn anspn unknownspc %pragmaspn directive.spn Thisspn isspn notspn yetspn implementedspn forspn mostspn cases.
indt
n Disabledspn byspn default.
bull
i ptrc ptrspn warnsspn aboutspn keywordsspn usedspn inspn otherspn assemblersspn thatspn mightspn indicatespn aspn mistakespn inspn thespn sourcespn code.spn Currentlyspn onlyspn thespn MASMspc PTRspn keywordspn isspn recognized.spn Seespn alsospx section-6.5n sectionspn 6.5xesection-6.5n .
indt
n Enabledspn byspn default.
bull
i regsizec regsizespn warnsspn aboutspn aspn registerspn withspn implicitspn sizespn (suchspn asspc EAXn ,spn whichspn isspn alwaysspn 32spn bits)spn beenspn givenspn anspn explicitspn sizespn specificationspn whichspn isspn inconsistentspn withspn thespn sizespn ofspn thespn namedspn register,spn e.g.spc WORD EAXn .spc DWORD EAXspn orspc WORD AXspn arespn permitted,spn andspn dospn notspn triggerspn thisspn warning.spn Somespn registersspn whichspesdospeenotspn implyspn aspn specificspn size,spn suchspn asspc K0n ,spn mayspn needspn thisspn specificationspn unlessspn thespn instructionspn itselfspn impliesspn thespn instructionspn size:
code
     KMOVW K0,[foo]          ; Permitted, KMOVW implies 16 bits      KMOV  WORD K0,[foo]     ; Permitted, WORD K0 specifies instruction size      KMOV  K0,WORD [foo]     ; Permitted, WORD [foo] specifies instruction size      KMOV  K0,[foo]          ; Not permitted, instruction size ambiguous
indt
n Enabledspn byspn default.
bull
i unknown-pragmac unknown-pragmaspn isspn aspn backwardsspn compatibilityspn aliasspn forspc pragma-unknownn .
bull
i unknown-warningc unknown-warningspn warnsspn aboutspn aspc -wspn orspc -Wspn optionspn orspn aspc [WARNING]spn directivespn thatspn containsspn anspn unknownspn warningspn namespn orspn isspn otherwisespn notspn possiblespn tospn process.
indt
n Disabledspn byspn default.
bull
i userc userspn controlsspn outputspn ofspc %warningspn directivesspn (seespx section-4.9n sectionspn 4.9xesection-4.9n ).
indt
n Enabledspn byspn default.
bull
i warn-stack-emptyc warn-stack-emptyspn aspn [WARNINGspn POP]spn directivespn wasspn executedspn whenspn thespn warningspn stackspn isspn empty.spn Thisspn isspn treatedspn asspn aspn [WARNINGspn *all]spn directive.
indt
n Enabledspn byspn default.
bull
i zeroingc zeroingspn aspc RESxspn directivespn wasspn usedspn inspn aspn sectionspn whichspn containsspn initializedspn data,spn andspn thespn outputspn formatspn doesspn notspn supportspn this.spn Instead,spn thisspn willspn bespn replacedspn withspn explicitspn zerospn content,spn whichspn mayspn producespn aspn largespn outputspn file.
indt
n Enabledspn byspn default.
bull
i zext-relocc zext-relocspn warnsspn thatspn aspn relocationspn hasspn beenspn zero-n extendedspn duespn tospn limitationsspn inspn thespn outputspn format.
indt
n Enabledspn byspn default.
norm
n Sincespn versionspn 2.15,spn NASMspn hasspn groupspn aliasesspn forspn allspn prefixedspn warnings,spn sospn theyspn canspn bespn usedspn tospn enablespn orspn disablespn allspn warningsspn inspn thespn group.spn Forspn example,spdan w+floatspn enablesspn allspn warningsspn withspn namesspn startingspn withspn float-n *.
norm
n Sincespn versionspn 2.00,spn NASMspn hasspn alsospn supportedspn thespc gccdan likespn syntaxspc -Wwarning-classspn andspc -Wno-warning-classspn insteadspn ofspc -w+warning-classspn andspc -w-warning-classn ,spn respectively;spn bothspn syntaxesspn workspn identically.
norm
n Thespn optionspc -w+errorspn orspi -Werrorc -Werrorspn canspn bespn usedspn tospn treatspn warningsspn asspn errors.spn Thisspn canspn bespn controlledspn onspn aspn perspn warningspn classspn basisspn (c -w+error=eowarning-classspn orspc -Werror=eowarning-classn );spn ifspn nospeowarning-classspn isspn specifiedspn NASMspn treatsspn itspn asspc -w+error=alln ;spn thespn samespn appliesspn tospc -w-errorspn orspi -Wno-errorc -Wno-errorn ,spn ofspn course.
norm
n Inspn addition,spn youspn canspn controlspn warningsspn inspn thespn sourcespn codespn itself,spn usingspn thespi [WARNING]c [WARNING]spn directive.spn Seespx section-7.13n sectionspn 7.13xesection-7.13n .
subh 2.1.27 :section-2.1.27
n Thespi -vc -vspn Option:spn Displayspi versionn Versionspn Info
norm
n Typingspc NASM -vspn willspn displayspn thespn versionspn ofspn NASMspn whichspn youspn arespn using,spn andspn thespn datespn onspn whichspn itspn wasspn compiled.
norm
n Youspn willspn needspn thespn versionspn numberspn ifspn youspn reportspn aspn bug.
norm
n Forspn command-n linespn compatibilityspn withspn Yasm,spn thespn formspi --vc --vspn isspn alsospn acceptedspn forspn thisspn optionspn startingspn inspn NASMspn versionspn 2.11.05.
subh 2.1.28 :section-2.1.28
n Thespi --(g|l)prefixc --(g|l)prefixn ,spi --(g|l)postfixc --(g|l)postfixspn Options.
norm
n Thespc --(g)prefixspn optionsspn prependspn thespn givenspn argumentspn tospn allspc externn ,spc commonn ,spc staticn ,spn andspc globalspn symbols,spn andspn thespc --lprefixspn optionspn prependsspn tospn allspn otherspn symbols.spn Similarly,spc --(g)postfixspn andspc --lpostfixspn optionsspn appendspn thespn argumentspn inspn thespn exactlyspn samespn wayspn asspn thespc --xxprefixspn optionsspn does.
norm
n Runningspn this:
code
nasm -f macho --gprefix _
norm
n isspn equivalentspn tospn placespn thespn directivespn withspc %pragma macho gprefix _spn atspn thespn startspn ofspn thespn filespn (x section-7.10n sectionspn 7.10xesection-7.10n ).spn Itspn willspn prependspn thespn underscorespn tospn allspn globalspn andspn externalspn variables,spn asspn Cspn requiresspn itspn inspn some,spn butspn notspn all,spn systemspn callingspn conventions.
subh 2.1.29 :section-2.1.29
n Thespi --pragmac --pragmaspn Option
norm
n NASMspn acceptsspn anspn argumentspn asspc %pragmaspn option,spn whichspn isspn likespn placingspn aspc %pragmaspn preprocessspn statementspn atspn thespn beginningspn ofspn thespn source.spn Runningspn this:
code
nasm -f macho --pragma "macho gprefix _"
norm
n isspn equivalentspn tospn thespn examplespn inspx section-2.1.28n sectionspn 2.1.28xesection-2.1.28n .spn Seespx section-4.10n sectionspn 4.10xesection-4.10n .
subh 2.1.30 :section-2.1.30
n Thespi --beforec --beforespn Option
norm
n Aspn preprocessspn statementspn canspn bespn acceptedspn withspn thisspn option.spn Thespn examplespn shownspn inspx section-2.1.29n sectionspn 2.1.29xesection-2.1.29spn isspn thespn samespn asspn runningspn this:
code
nasm -f macho --before "%pragma macho gprefix _"
subh 2.1.31 :section-2.1.31
n Thespi --limit-Xc --limit-Xspn Option
norm
n Thisspn optionspn allowsspn userspn tospn setupspn variousspn maximumspn valuesspn afterspn whichspn NASMspn willspn terminatespn withspn aspn fatalspn errorspn ratherspn thanspn consumespn arbitraryspn amountspn ofspn computespn time.spn Eachspn limitspn canspn bespn setspn tospn aspn positivespn numberspn orspc unlimitedn .
bull
c --limit-passesn :spn Numberspn ofspn maximumspn allowedspn passes.spn Defaultspn isspc unlimitedn .
bull
c --limit-stalled-passesn :spn Maximumspn numberspn ofspn allowedspn unfinishedspn passes.spn Defaultspn isspn 1000.
bull
c --limit-macro-levelsn :spn Definespn maximumspn depthspn ofspn macrospn expansionspn (inspn preprocess).spn Defaultspn isspn 10000
bull
c --limit-macro-tokensn :spn Maximumspn numberspn ofspn tokensspn processedspn duringspn single-n linespn macrospn expansion.spn Defaultspn isspn 10000000.
bull
c --limit-mmacrosn :spn Maximumspn numberspn ofspn multi-n linespn macrosspn processedspn beforespn returningspn tospn thespn top-n levelspn input.spn Defaultspn isspn 100000.
bull
c --limit-repn :spn Maximumspn numberspn ofspn allowedspn preprocessorspn loop,spn definedspn underspc %repn .spn Defaultspn isspn 1000000.
bull
c --limit-evaln :spn Thisspn numberspn setsspn thespn boundaryspn conditionspn ofspn allowedspn expressionspn length.spn Defaultspn isspn 8192spn onspn mostspn systems.
bull
c --limit-linesn :spn Totalspn numberspn ofspn sourcespn linesspn allowedspn tospn bespn processed.spn Defaultspn isspn 2000000000.
norm
n Forspn example,spn setspn thespn maximumspn linespn countspn tospn 1000:
code
nasm --limit-lines 1000
norm
n Limitsspn canspn alsospn bespn setspn viaspn thespn directivespc %pragma limitn ,spn forspn example:
code
%pragma limit lines 1000
subh 2.1.32 :section-2.1.32
n Thespi --keep-allc --keep-allspn Option
norm
n Thisspn optionspn preventsspn NASMspn fromspn deletingspn anyspn outputspn filesspn evenspn ifspn anspn errorspn happens.
subh 2.1.33 :section-2.1.33
n Thespi --no-linec --no-linespn Option
norm
n Ifspn thisspn optionspn isspn given,spn allspi %linec %linespn directivesspn inspn thespn sourcespn codespn arespn ignored.spn Thisspn canspn bespn usefulspn forspn debuggingspn alreadyspn preprocessedspn code.spn Seespx section-4.11.1n sectionspn 4.11.1xesection-4.11.1n .
subh 2.1.34 :section-2.1.34
n Thespi --reproduciblec --reproduciblespn Option
norm
n Ifspn thisspn optionspn isspn given,spn NASMspn willspn notspn emitspn informationspn thatspn isspn inherentlyspn dependentspn onspn thespn NASMspn versionspn orspn differentspn fromspn runspn tospn runspn (suchspn asspn timestamps)spn intospn thespn outputspn file.
subh 2.1.35 :section-2.1.35
n Thespi NASMENVc NASMENVspi environmentn Environmentspn Variable
norm
n Ifspn youspn definespn anspn environmentspn variablespn calledspc NASMENVn ,spn thespn programspn willspn interpretspn itspn asspn aspn listspn ofspn extraspn command-n linespn options,spn whichspn arespn processedspn beforespn thespn realspn commandspn line.spn Youspn canspn usespn thisspn tospn definespn standardspn searchspn directoriesspn forspn includespn files,spn byspn puttingspc -ispn optionsspn inspn thespc NASMENVspn variable.
norm
n Thespn valuespn ofspn thespn variablespn isspn splitspn upspn atspn whitespn space,spn sospn thatspn thespn valuespc -s -ic:\nasmlib\spn willspn bespn treatedspn asspn twospn separatespn options.spn However,spn thatspn meansspn thatspn thespn valuespc -dNAME="my name"spn won'tspn dospn whatspn youspn mightspn want,spn becausespn itspn willspn bespn splitspn atspn thespn spacespn andspn thespn NASMspn command-n linespn processingspn willspn getspn confusedspn byspn thespn twospn nonsensicalspn wordsspc -dNAME="myspn andspc name"n .
norm
n Tospn getspn roundspn this,spn NASMspn providesspn aspn featurespn whereby,spn ifspn youspn beginspn thespc NASMENVspn environmentspn variablespn withspn somespn characterspn thatspn isn'tspn aspn minusspn sign,spn thenspn NASMspn willspn treatspn thisspn characterspn asspn thespi separator charactern separatorspn characterspn forspn options.spn Sospn settingspn thespc NASMENVspn variablespn tospn thespn valuespc !-s!-ic:\nasmlib\spn isspn equivalentspn tospn settingspn itspn tospc -s -ic:\nasmlib\n ,spn butspc !-dNAME="my name"spn willspn work.
norm
n Thisspn environmentspn variablespn wasspn previouslyspn calledspc NASMn .spn Thisspn wasspn changedspn withspn versionspn 0.98.31.
head 2.2 :section-2.2
i quick startn Quickspn Startspn forspi masmn MASMspn Users
norm
n Ifspn you'respn usedspn tospn writingspn programsspn withspn MASM,spn orspn withspi tasmn TASMspn inspn MASM-n compatiblespn (non-n Ideal)spn mode,spn orspn withspi a86c a86n ,spn thisspn sectionspn attemptsspn tospn outlinespn thespn majorspn differencesspn betweenspn MASM'sspn syntaxspn andspn NASM's.spn Ifspn you'respn notspn alreadyspn usedspn tospn MASM,spn it'sspn probablyspn worthspn skippingspn thisspn section.
subh 2.2.1 :section-2.2.1
n NASMspn Isspi case sensitiven Case-n Sensitive
norm
n Onespn simplespn differencespn isspn thatspn NASMspn isspn case-n sensitive.spn Itspn makesspn aspn differencespn whetherspn youspn callspn yourspn labelspc foon ,spc Foospn orspc FOOn .spn Ifspn you'respn assemblingspn tospc DOSspn orspc OS/2spc .OBJspn files,spn youspn canspn invokespn thespi UPPERCASEc UPPERCASEspn directivespn (documentedspn inspx section-8.4n sectionspn 8.4xesection-8.4n )spn tospn ensurespn thatspn allspn symbolsspn exportedspn tospn otherspn codespn modulesspn arespn forcedspn tospn bespn upperspn case;spn butspn evenspn then,speowithinspn aspn singlespn module,spn NASMspn willspn distinguishspn betweenspn labelsspn differingspn onlyspn inspn case.
subh 2.2.2 :section-2.2.2
n NASMspn Requiresspi square bracketsn Squarespn Bracketsspn Forspi memory referencesn Memoryspn References
norm
n NASMspn wasspn designedspn withspn simplicityspn ofspn syntaxspn inspn mind.spn Onespn ofspn thespi design goalsn designspn goalsspn ofspn NASMspn isspn thatspn itspn shouldspn bespn possible,spn asspn farspn asspn isspn practical,spn forspn thespn userspn tospn lookspn atspn aspn singlespn linespn ofspn NASMspn codespn andspn tellspn whatspn opcodespn isspn generatedspn byspn it.spn Youspn can'tspn dospn thisspn inspn MASM:spn ifspn youspn declare,spn forspn example,
code
foo     equ     1 bar     dw      2
norm
n thenspn thespn twospn linesspn ofspn code
code
        mov     ax,foo         mov     ax,bar
norm
n generatespn completelyspn differentspn opcodes,spn despitespn havingspn identical-n lookingspn syntaxes.
norm
n NASMspn avoidsspn thisspn undesirablespn situationspn byspn havingspn aspn muchspn simplerspn syntaxspn forspn memoryspn references.spn Thespn rulespn isspn simplyspn thatspn anyspn accessspn tospn thespeocontentsspn ofspn aspn memoryspn locationspn requiresspn squarespn bracketsspn aroundspn thespn address,spn andspn anyspn accessspn tospn thespeoaddressspn ofspn aspn variablespn doesn't.spn Sospn anspn instructionspn ofspn thespn formspc mov ax,foospn willspeoalwaysspn referspn tospn aspn compile-n timespn constant,spn whetherspn it'sspn anspc EQUspn orspn thespn addressspn ofspn aspn variable;spn andspn tospn accessspn thespeocontentsspn ofspn thespn variablespc barn ,spn youspn mustspn codespc mov ax,[bar]n .
norm
n Thisspn alsospn meansspn thatspn NASMspn hasspn nospn needspn forspn MASM'sspi OFFSETc OFFSETspn keyword,spn sincespn thespn MASMspn codespc mov ax,offset barspn meansspn exactlyspn thespn samespn thingspn asspn NASM'sspc mov ax,barn .spn Ifspn you'respn tryingspn tospn getspn largespn amountsspn ofspn MASMspn codespn tospn assemblespn sensiblyspn underspn NASM,spn youspn canspn alwaysspn codespc %idefine offsetspn tospn makespn thespn preprocessorspn treatspn thespc OFFSETspn keywordspn asspn aspn no-n op.
norm
n Thisspn issuespn isspn evenspn morespn confusingspn inspi a86c a86n ,spn wherespn declaringspn aspn labelspn withspn aspn trailingspn colonspn definesspn itspn tospn bespn aspn `label'spn asspn opposedspn tospn aspn `variable'spn andspn causesspc a86spn tospn adoptspn NASM-n stylespn semantics;spn sospn inspc a86n ,spc mov ax,varspn hasspn differentspn behaviourspn dependingspn onspn whetherspc varspn wasspn declaredspn asspc var: dw 0spn (aspn label)spn orspc var dw 0spn (aspn word-n sizespn variable).spn NASMspn isspn veryspn simplespn byspn comparison:speoeverythingspn isspn aspn label.
norm
n NASM,spn inspn thespn interestsspn ofspn simplicity,spn alsospn doesspn notspn supportspn thespi hybrid syntaxesn hybridspn syntaxesspn supportedspn byspn MASMspn andspn itsspn clones,spn suchspn asspc mov ax,table[bx]n ,spn wherespn aspn memoryspn referencespn isspn denotedspn byspn onespn portionspn outsidespn squarespn bracketsspn andspn anotherspn portionspn inside.spn Thespn correctspn syntaxspn forspn thespn abovespn isspc mov ax,[table+bx]n .spn Likewise,spc mov ax,es:[di]spn isspn wrongspn andspc mov ax,[es:di]spn isspn right.
subh 2.2.3 :section-2.2.3
n NASMspn Doesn'tspn Storespi variable typesn Variablespn Types
norm
n NASM,spn byspn design,spn choosesspn notspn tospn rememberspn thespn typesspn ofspn variablesspn youspn declare.spn Whereasspn MASMspn willspn remember,spn onspn seeingspc var dw 0n ,spn thatspn youspn declaredspc varspn asspn aspn word-n sizespn variable,spn andspn willspn thenspn bespn ablespn tospn fillspn inspn thespi ambiguityn ambiguityspn inspn thespn sizespn ofspn thespn instructionspc mov var,2n ,spn NASMspn willspn deliberatelyspn rememberspn nothingspn aboutspn thespn symbolspc varspn exceptspn wherespn itspn begins,spn andspn sospn youspn mustspn explicitlyspn codespc mov word [var],2n .
norm
n Forspn thisspn reason,spn NASMspn doesn'tspn supportspn thespc LODSn ,spc MOVSn ,spc STOSn ,spc SCASn ,spc CMPSn ,spc INSn ,spn orspc OUTSspn instructions,spn butspn onlyspn supportsspn thespn formsspn suchspn asspc LODSBn ,spc MOVSWn ,spn andspc SCASDn ,spn whichspn explicitlyspn specifyspn thespn sizespn ofspn thespn componentsspn ofspn thespn stringsspn beingspn manipulated.
subh 2.2.4 :section-2.2.4
n NASMspn Doesn'tspi ASSUMEc ASSUME
norm
n Asspn partspn ofspn NASM'sspn drivespn forspn simplicity,spn itspn alsospn doesspn notspn supportspn thespc ASSUMEspn directive.spn NASMspn willspn notspn keepspn trackspn ofspn whatspn valuesspn youspn choosespn tospn putspn inspn yourspn segmentspn registers,spn andspn willspn neverspeoautomaticallyspn generatespn aspi segment overriden segmentspn overridespn prefix.
subh 2.2.5 :section-2.2.5
n NASMspn Doesn'tspn Supportspi memory modelsn Memoryspn Models
norm
n NASMspn alsospn doesspn notspn havespn anyspn directivesspn tospn supportspn differentspn 16-n bitspn memoryspn models.spn Thespn programmerspn hasspn tospn keepspn trackspn ofspn whichspn functionsspn arespn supposedspn tospn bespn calledspn withspn aspi far calln farspn callspn andspn whichspn withspn aspi near calln nearspn calln ,spn andspn isspn responsiblespn forspn puttingspn thespn correctspn formspn ofspc RETspn instructionspn (c RETNspn orspc RETFn ;spn NASMspn acceptsspc RETspn itselfspn asspn anspn alternatespn formspn forspc RETNn );spn inspn addition,spn thespn programmerspn isspn responsiblespn forspn codingspn CALLspn FARspn instructionsspn wherespn necessaryspn whenspn callingspeoexternalspn functions,spn andspn mustspn alsospn keepspn trackspn ofspn whichspn externalspn variablespn definitionsspn arespn farspn andspn whichspn arespn near.
subh 2.2.6 :section-2.2.6
i floating-pointn Floating-Pointspn Differences
norm
n NASMspn usesspn differentspn namesspn tospn referspn tospn floating-n pointspn registersspn fromspn MASM:spn wherespn MASMspn wouldspn callspn themspc ST(0)n ,spc ST(1)spn andspn sospn on,spn andspi a86c a86spn wouldspn callspn themspn simplyspc 0n ,spc 1spn andspn sospn on,spn NASMspn choosesspn tospn callspn themspc st0n ,spc st1spn etc.
norm
n Asspn ofspn versionspn 0.96,spn NASMspn nowspn treatsspn thespn instructionsspn withspi `nowait'n `nowait'spn formsspn inspn thespn samespn wayspn asspn MASM-n compatiblespn assemblers.spn Thespn idiosyncraticspn treatmentspn employedspn byspn 0.95spn andspn earlierspn wasspn basedspn onspn aspn misunderstandingspn byspn thespn authors.
subh 2.2.7 :section-2.2.7
n Otherspn Differences
norm
n Forspn historicalspn reasons,spn NASMspn usesspn thespn keywordspi TWORDc TWORDspn wherespn MASMspn andspn compatiblespn assemblersspn usespi TBYTEc TBYTEn .
norm
n Historically,spn NASMspn doesspn notspn declarespi storage, uninitializedn uninitializedspn storagespn inspn thespn samespn wayspn asspn MASM:spn wherespn aspn MASMspn programmerspn mightspn usespc stack db 64 dup (?)n ,spn NASMspn requiresspc stack resb 64n ,spn intendedspn tospn bespn readspn asspn `reservespn 64spn bytes'.spn Forspn aspn limitedspn amountspn ofspn compatibility,spn sincespn NASMspn treatsspc ?spn asspn aspn validspn characterspn inspn symbolspn names,spn youspn canspn codespc ? equ 0spn andspn thenspn writingspc dw ?spn willspn atspn leastspn dospn somethingspn vaguelyspn useful.
norm
n Asspn ofspn NASMspn 2.15,spn thespn MASMspn syntaxspn isspn alsospn supported.
norm
n Inspn additionspn tospn allspn ofspn this,spn macrosspn andspn directivesspn workspn completelyspn differentlyspn tospn MASM.spn Seespx chapter-4n chapterspn 4xechapter-4spn andspx chapter-7n chapterspn 7xechapter-7spn forspn furtherspn details.
subh 2.2.8 :section-2.2.8
n MASMspn compatibilityspn package
norm
n Seespx section-6.5n sectionspn 6.5xesection-6.5n .
chap 3 :chapter-3
n Thespn NASMspn Language
head 3.1 :section-3.1
n Layoutspn ofspn aspn NASMspn Sourcespn Line
norm
n Likespn mostspn assemblers,spn eachspn NASMspn sourcespn linespn containsspn (unlessspn itspn isspn aspn macro,spn aspn preprocessorspn directivespn orspn anspn assemblerspn directive:spn seespx chapter-4n chapterspn 4xechapter-4spn andspx chapter-7n chapterspn 7xechapter-7n )spn somespn combinationspn ofspn thespn fourspn fields
code
label:    instruction operands        ; comment
norm
n Asspn usual,spn mostspn ofspn thesespn fieldsspn arespn optional;spn thespn presencespn orspn absencespn ofspn anyspn combinationspn ofspn aspn label,spn anspn instructionspn andspn aspn commentspn isspn allowed.spn Ofspn course,spn thespn operandspn fieldspn isspn eitherspn requiredspn orspn forbiddenspn byspn thespn presencespn andspn naturespn ofspn thespn instructionspn field.
norm
n NASMspn usesspn backslashspn (\)spn asspn thespn linespn continuationspn character;spn ifspn aspn linespn endsspn withspn backslash,spn thespn nextspn linespn isspn consideredspn tospn bespn aspn partspn ofspn thespn backslash-n endedspn line.
norm
n NASMspn placesspn nospn restrictionsspn onspn whitespn spacespn withinspn aspn line:spn labelsspn mayspn havespn whitespn spacespn beforespn them,spn orspn instructionsspn mayspn havespn nospn spacespn beforespn them,spn orspn anything.spn Thespi colonn colonspn afterspn aspn labelspn isspn alsospn optional.spn (Notespn thatspn thisspn meansspn thatspn ifspn youspn intendspn tospn codespc lodsbspn alonespn onspn aspn line,spn andspn typespc lodabspn byspn accident,spn thenspn that'sspn stillspn aspn validspn sourcespn linespn whichspn doesspn nothingspn butspn definespn aspn label.spn Runningspn NASMspn withspn thespn command-n linespn optionspi label-orphanc -w+orphan-labelsspn willspn causespn itspn tospn warnspn youspn ifspn youspn definespn aspn labelspn alonespn onspn aspn linespn withoutspn aspi trailing colonn trailingspn colonn .)
norm
i valid charactersn Validspn charactersspn inspn labelsspn arespn letters,spn numbers,spc _n ,spc $n ,spc #n ,spc @n ,spc ~n ,spc .n ,spn andspc ?n .spn Thespn onlyspn charactersspn whichspn mayspn bespn usedspn asspn thespeofirstspn characterspn ofspn anspn identifierspn arespn letters,spc .spn (withspn specialspn meaning:spn seespx section-3.9n sectionspn 3.9xesection-3.9n ),spc _spn andspc ?n .spn Anspn identifierspn mayspn alsospn bespn prefixedspn withspn aspi $, prefixc $spn tospn indicatespn thatspn itspn isspn intendedspn tospn bespn readspn asspn anspn identifierspn andspn notspn aspn reservedspn word;spn thus,spn ifspn somespn otherspn modulespn youspn arespn linkingspn withspn definesspn aspn symbolspn calledspc eaxn ,spn youspn canspn referspn tospc $eaxspn inspn NASMspn codespn tospn distinguishspn thespn symbolspn fromspn thespn register.spn Maximumspn lengthspn ofspn anspn identifierspn isspn 4095spn characters.
norm
n Thespn instructionspn fieldspn mayspn containspn anyspn machinespn instruction:spn Pentiumspn andspn P6spn instructions,spn FPUspn instructions,spn MMXspn instructionsspn andspn evenspn undocumentedspn instructionsspn arespn allspn supported.spn Thespn instructionspn mayspn bespn prefixedspn byspc LOCKn ,spc REPn ,spc REPEn /c REPZn ,spc REPNEn /c REPNZn ,spc XACQUIREn /c XRELEASEspn orspc BNDn /c NOBNDn ,spn inspn thespn usualspn way.spn Explicitspi address-size prefixesn address-n sizespn andspi operand-size prefixesn operand-sizespn prefixesspi a16c A16n ,spi a32c A32n ,spi a64c A64n ,spi o16c O16spn andspi o32c O32n ,spi o64c O64spn arespn providedspdaspn onespn examplespn ofspn theirspn usespn isspn givenspn inspx chapter-11n chapterspn 11xechapter-11n .spn Youspn canspn alsospn usespn thespn namespn ofspn aspi segment overriden segmentspn registerspn asspn anspn instructionspn prefix:spn codingspc es mov [bx],axspn isspn equivalentspn tospn codingspc mov [es:bx],axn .spn Wespn recommendspn thespn latterspn syntax,spn sincespn itspn isspn consistentspn withspn otherspn syntacticspn featuresspn ofspn thespn language,spn butspn forspn instructionsspn suchspn asspc LODSBn ,spn whichspn hasspn nospn operandsspn andspn yetspn canspn requirespn aspn segmentspn override,spn therespn isspn nospn cleanspn syntacticspn wayspn tospn proceedspn apartspn fromspc es lodsbn .
norm
n Anspn instructionspn isspn notspn requiredspn tospn usespn aspn prefix:spn prefixesspn suchspn asspc CSn ,spc A32n ,spc LOCKspn orspc REPEspn canspn appearspn onspn aspn linespn byspn themselves,spn andspn NASMspn willspn justspn generatespn thespn prefixspn bytes.
norm
n Inspn additionspn tospn actualspn machinespn instructions,spn NASMspn alsospn supportsspn aspn numberspn ofspn pseudo-n instructions,spn describedspn inspx section-3.2n sectionspn 3.2xesection-3.2n .
norm
n Instructionspi operandsn operandsspn mayspn takespn aspn numberspn ofspn forms:spn theyspn canspn bespn registers,spn describedspn simplyspn byspn thespn registerspn namespn (e.g.spc axn ,spc bpn ,spc ebxn ,spc cr0n :spn NASMspn doesspn notspn usespn thespc gasdan stylespn syntaxspn inspn whichspn registerspn namesspn mustspn bespn prefixedspn byspn aspc %spn sign),spn orspn theyspn canspn bespi effective addressesn effectivespn addressesspn (seespx section-3.3n sectionspn 3.3xesection-3.3n ),spn constantsspn (x section-3.4n sectionspn 3.4xesection-3.4n )spn orspn expressionsspn (x section-3.5n sectionspn 3.5xesection-3.5n ).
norm
n Forspn x87spi floating-pointn floating-pointspn instructions,spn NASMspn acceptsspn aspn widespn rangespn ofspn syntaxes:spn youspn canspn usespn two-n operandspn formsspn likespn MASMspn supports,spn orspn youspn canspn usespn NASM'sspn nativespn single-n operandspn formsspn inspn mostspn cases.spn Forspn example,spn youspn canspn code:
code
        fadd    st1             ; this sets st0 := st0 + st1         fadd    st0,st1         ; so does this         fadd    st1,st0         ; this sets st1 := st1 + st0         fadd    to st1          ; so does this
norm
n Almostspn anyspn x87spn floating-n pointspn instructionspn thatspn referencesspn memoryspn mustspn usespn onespn ofspn thespn prefixesspi DWORDc DWORDn ,spi QWORDc QWORDspn orspi TWORDc TWORDspn tospn indicatespn whatspn sizespn ofspi memory operandn memoryspn operandspn itspn refersspn to.
head 3.2 :section-3.2
i pseudo-instructionsn Pseudo-Instructions
norm
n Pseudo-n instructionsspn arespn thingsspn which,spn thoughspn notspn realspn x86spn machinespn instructions,spn arespn usedspn inspn thespn instructionspn fieldspn anywayspn becausespn that'sspn thespn mostspn convenientspn placespn tospn putspn them.spn Thespn currentspn pseudo-n instructionsspn arespi DBc DBn ,spi DWc DWn ,spi DDc DDn ,spi DQc DQn ,spi DTc DTn ,spi DOc DOn ,spi DYc DYspn andspi DZc DZn ;spn theirspi storage, uninitializedi uninitializedn uninitializedspn counterpartsspi RESBc RESBn ,spi RESWc RESWn ,spi RESDc RESDn ,spi RESQc RESQn ,spi RESTc RESTn ,spi RESOc RESOn ,spi RESYc RESYspn andspi RESZc RESZn ;spn thespi INCBINc INCBINspn command,spn thespi EQUc EQUspn command,spn andspn thespi TIMESc TIMESspn prefix.
norm
n Inspn thisspn documentation,spn thespn notationspn "c Dxn "spn andspn "c RESxn "spn isspn usedspn tospn indicatespn allspn thespc DBspn andspc RESBspn typespn directives,spn respectively.
subh 3.2.1 :section-3.2.1
c Dxn :spn Declaringspn Initializedspn Data
norm
i DBc DBn ,spi DWc DWn ,spi DDc DDn ,spi DQc DQn ,spi DTc DTn ,spi DOc DOn ,spi DYc DYspn andspi DZc DZspn (collectivelyspn "c Dxn "spn inspn thisspn documentation)spn arespn used,spn muchspn asspn inspn MASM,spn tospn declarespn initializedspn dataspn inspn thespn outputspn file.spn Theyspn canspn bespn invokedspn inspn aspn widespn rangespn ofspn ways:spi floating-pointi character constanti string constants
code
      db    0x55                ; just the byte 0x55       db    0x55,0x56,0x57      ; three bytes in succession       db    'a',0x55            ; character constants are OK       db    'hello',13,10,'$'   ; so are string constants       dw    0x1234              ; 0x34 0x12       dw    'a'                 ; 0x61 0x00 (it's just a number)       dw    'ab'                ; 0x61 0x62 (character constant)       dw    'abc'               ; 0x61 0x62 0x63 0x00 (string)       dd    0x12345678          ; 0x78 0x56 0x34 0x12       dd    1.234567e20         ; floating-point constant       dq    0x123456789abcdef0  ; eight byte constant       dq    1.234567e20         ; double-precision float       dt    1.234567e20         ; extended-precision float
norm
c DTn ,spc DOn ,spc DYspn andspc DZspn dospn notspn acceptspn integerspi numeric constantsn numericspn constantsspn asspn operands.
norm
i masmdbspn Startingspn inspn NASMspn 2.15,spn aspn thespn followingspi masmn MASMdan likespn featuresspn havespn beenspn implemented:
bull
n Aspi ?dbc ?spn argumentspn tospn declarespi storage, uninitializedn uninitializedspn storagen :
code
      db    ?                   ; uninitialized
bull
n Aspn supersetspn ofspn thespi DUPc DUPspn syntax.spn Thespn NASMspn versionspn ofspn thisspn hasspn thespn followingspn syntaxspn specification;spn capitalspn lettersspn indicatespn literalspn keywords:
code
     dx      := DB | DW | DD | DQ | DT | DO | DY | DZ      type    := BYTE | WORD | DWORD | QWORD | TWORD | OWORD | YWORD | ZWORD      atom    := expression | string | float | '?'      parlist := '(' value [, value ...] ')'      duplist := expression DUP [type] ['%'] parlist      list    := duplist | '%' parlist | type ['%'] parlist      value   := atom | type value | list      stmt    := dx value [, value...]
indt
n Notespn thatspn aspeolistspn needsspn tospn bespn prefixedspn withspn aspi %dbc %spn signspn unlessspn prefixedspn byspn eitherspc DUPspn orspn aspeotypespn inspn orderspn tospn avoidspn confusingspn itspn withspn aspn parentesisspn startingspn anspn expression.spn Thespn followingspn expressionsspn arespn allspn valid:
code
       db 33        db (44)               ; Integer expression      ; db (44,55)            ; Invalid - error        db %(44,55)        db %('XX','YY')        db ('AA')             ; Integer expression - outputs single byte        db %('BB')            ; List, containing a string        db ?        db 6 dup (33)        db 6 dup (33, 34)        db 6 dup (33, 34), 35        db 7 dup (99)        db 7 dup dword (?, word ?, ?)        dw byte (?,44)        dw 3 dup (0xcc, 4 dup byte ('PQR'), ?), 0xabcd        dd 16 dup (0xaaaa, ?, 0xbbbbbb)        dd 64 dup (?)
norm
i baddbspn Thespn usespn ofspc $spn (currentspn address)spn inspn aspc Dxspn statementspn isspn undefinedspn inspn thespn currentspn versionspn ofspn NASM,spesexceptspe inspe thespe followingspeecasesn :
bull
n Forspn thespn firstspn expressionspn inspn thespn statement,spn eitherspn aspc DUPspn orspn aspn dataspn item.
bull
n Anspn expressionspn ofspn thespn formspn "eovaluec  - $n ",spn whichspn isspn convertedspn tospn aspn self-n relativespn relocation.
norm
n Futurespn versionsspn ofspn NASMspn isspn likelyspn tospn producespn aspn differentspn resultspn orspn issuespn anspn errorspn thisspn case.
norm
n Therespn isspn nospn suchspn restrictionspn onspn usingspc $$spn orspn section-n relativespn symbols.
subh 3.2.2 :section-3.2.2
c RESBspn andspn Friends:spn Declaringspi uninitializedn Uninitializedspn Data
norm
i RESBc RESBn ,spi RESWc RESWn ,spi RESDc RESDn ,spi RESQc RESQn ,spi RESTc RESTn ,spi RESOc RESOn ,spi RESYc RESYspn andspi RESZc RESZspn arespn designedspn tospn bespn usedspn inspn thespn BSSspn sectionspn ofspn aspn module:spn theyspn declarespeouninitializedspn storagespn space.spn Eachspn takesspn aspn singlespn operand,spn whichspn isspn thespn numberspn ofspn bytes,spn words,spn doublewordsspn orspn whateverspn tospn reserve.spn Thespn operandspn tospn aspc RESBdan typespn pseudo-n instructionspn isspn aspi critical expressionescriticalspeeexpressionn :spn seespx section-3.8n sectionspn 3.8xesection-3.8n .
norm
n Forspn example:
code
buffer:         resb    64              ; reserve 64 bytes wordvar:        resw    1               ; reserve a word realarray       resq    10              ; array of ten reals ymmval:         resy    1               ; one YMM register zmmvals:        resz    32              ; 32 ZMM registers
norm
i masmdbspn Sincespn NASMspn 2.15,spn thespn MASMspn syntaxspn ofspn usingspi ?dbc ?spn andspi DUPc DUPspn inspn thespc Deoxspn directivesspn isspn alsospn supported.spn Thus,spn thespn abovespn examplespn couldspn alsospn bespn written:
code
buffer:         db      64 dup (?)      ; reserve 64 bytes wordvar:        dw      ?               ; reserve a word realarray       dq      10 dup (?)      ; array of ten reals ymmval:         dy      ?               ; one YMM register zmmvals:        dz      32 dup (?)      ; 32 ZMM registers
subh 3.2.3 :section-3.2.3
i INCBINc INCBINn :spn Includingspn Externalspi binary filesn Binaryspn Files
norm
c INCBINspn includesspn binaryspn filespn dataspn verbatimspn intospn thespn outputspn file.spn Thisspn canspn bespn handyspn forspn (forspn example)spn includingspi graphicsn graphicsspn andspi soundn soundspn dataspn directlyspn intospn aspn gamespn executablespn file.spn Itspn canspn bespn calledspn inspn onespn ofspn thesespn threespn ways:
code
    incbin  "file.dat"             ; include the whole file     incbin  "file.dat",1024        ; skip the first 1024 bytes     incbin  "file.dat",1024,512    ; skip the first 1024, and                                    ; actually include at most 512
norm
c INCBINspn isspn bothspn aspn directivespn andspn aspn standardspn macro;spn thespn standardspn macrospn versionspn searchesspn forspn thespn filespn inspn thespn includespn filespn searchspn pathspn andspn addsspn thespn filespn tospn thespn dependencyspn lists.spn Thisspn macrospn canspn bespn overriddenspn ifspn desired.
subh 3.2.4 :section-3.2.4
i EQUc EQUn :spn Definingspn Constants
norm
c EQUspn definesspn aspn symbolspn tospn aspn givenspn constantspn value:spn whenspc EQUspn isspn used,spn thespn sourcespn linespn mustspn containspn aspn label.spn Thespn actionspn ofspc EQUspn isspn tospn definespn thespn givenspn labelspn namespn tospn thespn valuespn ofspn itsspn (only)spn operand.spn Thisspn definitionspn isspn absolute,spn andspn cannotspn changespn later.spn So,spn forspn example,
code
message         db      'hello, world' msglen          equ     $-message
norm
n definesspc msglenspn tospn bespn thespn constantspn 12.spc msglenspn mayspn notspn thenspn bespn redefinedspn later.spn Thisspn isspn notspn aspi preprocessorn preprocessorspn definitionspn either:spn thespn valuespn ofspc msglenspn isspn evaluatedspeooncen ,spn usingspn thespn valuespn ofspc $spn (seespx section-3.5n sectionspn 3.5xesection-3.5spn forspn anspn explanationspn ofspc $n )spn atspn thespn pointspn ofspn definition,spn ratherspn thanspn beingspn evaluatedspn whereverspn itspn isspn referencedspn andspn usingspn thespn valuespn ofspc $spn atspn thespn pointspn ofspn reference.
subh 3.2.5 :section-3.2.5
i TIMESc TIMESn :spi repeating coden Repeatingspn Instructionsspn orspn Data
norm
n Thespc TIMESspn prefixspn causesspn thespn instructionspn tospn bespn assembledspn multiplespn times.spn Thisspn isspn partlyspn presentspn asspn NASM'sspn equivalentspn ofspn thespi DUPc DUPspn syntaxspn supportedspn byspi masmn MASMdan compatiblespn assemblers,spn inspn thatspn youspn canspn code
code
zerobuf:        times 64 db 0
norm
n orspn similarspn things;spn butspc TIMESspn isspn morespn versatilespn thanspn that.spn Thespn argumentspn tospc TIMESspn isspn notspn justspn aspn numericspn constant,spn butspn aspn numericspeoexpressionn ,spn sospn youspn canspn dospn thingsspn like
code
buffer: db      'hello, world'         times 64-$+buffer db ' '
norm
n whichspn willspn storespn exactlyspn enoughspn spacesspn tospn makespn thespn totalspn lengthspn ofspc bufferspn upspn tospn 64.spn Finally,spc TIMESspn canspn bespn appliedspn tospn ordinaryspn instructions,spn sospn youspn canspn codespn trivialspi unrolled loopsn unrolledspn loopsspn inspn it:
code
        times 100 movsb
norm
n Notespn thatspn therespn isspn nospn effectivespn differencespn betweenspc times 100 resb 1spn andspc resb 100n ,spn exceptspn thatspn thespn latterspn willspn bespn assembledspn aboutspn 100spn timesspn fasterspn duespn tospn thespn internalspn structurespn ofspn thespn assembler.
norm
n Thespn operandspn tospc TIMESspn isspn aspn criticalspn expressionspn (x section-3.8n sectionspn 3.8xesection-3.8n ).
norm
n Notespn alsospn thatspc TIMESspn can'tspn bespn appliedspn tospi macrosn macrosn :spn thespn reasonspn forspn thisspn isspn thatspc TIMESspn isspn processedspn afterspn thespn macrospn phase,spn whichspn allowsspn thespn argumentspn tospc TIMESspn tospn containspn expressionsspn suchspn asspc 64-$+bufferspn asspn above.spn Tospn repeatspn morespn thanspn onespn linespn ofspn code,spn orspn aspn complexspn macro,spn usespn thespn preprocessorspi %repc %repspn directive.
head 3.3 :section-3.3
n Effectivespn Addresses
norm
n Anspi effective addressesn effectivespn addressspn isspn anyspn operandspn tospn anspn instructionspn whichspi memory referencesn referencesspn memory.spn Effectivespn addresses,spn inspn NASM,spn havespn aspn veryspn simplespn syntax:spn theyspn consistspn ofspn anspn expressionspn evaluatingspn tospn thespn desiredspn address,spn enclosedspn inspi square bracketsn squarespn bracketsn .spn Forspn example:
code
wordvar dw      123         mov     ax,[wordvar]         mov     ax,[wordvar+1]         mov     ax,[es:wordvar+bx]
norm
n Anythingspn notspn conformingspn tospn thisspn simplespn systemspn isspn notspn aspn validspn memoryspn referencespn inspn NASM,spn forspn examplespc es:wordvar[bx]n .
norm
n Morespn complicatedspn effectivespn addresses,spn suchspn asspn thosespn involvingspn morespn thanspn onespn register,spn workspn inspn exactlyspn thespn samespn way:
code
        mov     eax,[ebx*2+ecx+offset]         mov     ax,[bp+di+8]
norm
n NASMspn isspn capablespn ofspn doingspi algebran algebraspn onspn thesespn effectivespn addresses,spn sospn thatspn thingsspn whichspn don'tspn necessarilyspeolookspn legalspn arespn perfectlyspn allspn right:
code
    mov     eax,[ebx*5]             ; assembles as [ebx*4+ebx]     mov     eax,[label1*2-label2]   ; ie [label1+(label1-label2)]
norm
n Somespn formsspn ofspn effectivespn addressspn havespn morespn thanspn onespn assembledspn form;spn inspn mostspn suchspn casesspn NASMspn willspn generatespn thespn smallestspn formspn itspn can.spn Forspn example,spn therespn arespn distinctspn assembledspn formsspn forspn thespn 32-n bitspn effectivespn addressesspc [eax*2+0]spn andspc [eax+eax]n ,spn andspn NASMspn willspn generallyspn generatespn thespn latterspn onspn thespn groundsspn thatspn thespn formerspn requiresspn fourspn bytesspn tospn storespn aspn zerospn offset.
norm
n NASMspn hasspn aspn hintingspn mechanismspn whichspn willspn causespc [eax+ebx]spn andspc [ebx+eax]spn tospn generatespn differentspn opcodes;spn thisspn isspn occasionallyspn usefulspn becausespc [esi+ebp]spn andspc [ebp+esi]spn havespn differentspn defaultspn segmentspn registers.
norm
n However,spn youspn canspn forcespn NASMspn tospn generatespn anspn effectivespn addressspn inspn aspn particularspn formspn byspn thespn usespn ofspn thespn keywordsspc BYTEn ,spc WORDn ,spc DWORDspn andspc NOSPLITn .spn Ifspn youspn needspc [eax+3]spn tospn bespn assembledspn usingspn aspn double-n wordspn offsetspn fieldspn insteadspn ofspn thespn onespn bytespn NASMspn willspn normallyspn generate,spn youspn canspn codespc [dword eax+3]n .spn Similarly,spn youspn canspn forcespn NASMspn tospn usespn aspn bytespn offsetspn forspn aspn smallspn valuespn whichspn itspn hasn'tspn seenspn onspn thespn firstspn passspn (seespx section-3.8n sectionspn 3.8xesection-3.8spn forspn anspn examplespn ofspn suchspn aspn codespn fragment)spn byspn usingspc [byte eax+offset]n .spn Asspn specialspn cases,spc [byte eax]spn willspn codespc [eax+0]spn withspn aspn bytespn offsetspn ofspn zero,spn andspc [dword eax]spn willspn codespn itspn withspn aspn double-n wordspn offsetspn ofspn zero.spn Thespn normalspn form,spc [eax]n ,spn willspn bespn codedspn withspn nospn offsetspn field.
norm
n Thespn formspn describedspn inspn thespn previousspn paragraphspn isspn alsospn usefulspn ifspn youspn arespn tryingspn tospn accessspn dataspn inspn aspn 32-n bitspn segmentspn fromspn withinspn 16spn bitspn code.spn Forspn morespn informationspn onspn thisspn seespn thespn sectionspn onspn mixed-n sizespn addressingspn (x section-11.2n sectionspn 11.2xesection-11.2n ).spn Inspn particular,spn ifspn youspn needspn tospn accessspn dataspn withspn aspn knownspn offsetspn thatspn isspn largerspn thanspn willspn fitspn inspn aspn 16-n bitspn value,spn ifspn youspn don'tspn specifyspn thatspn itspn isspn aspn dwordspn offset,spn nasmspn willspn causespn thespn highspn wordspn ofspn thespn offsetspn tospn bespn lost.
norm
n Similarly,spn NASMspn willspn splitspc [eax*2]spn intospc [eax+eax]spn becausespn thatspn allowsspn thespn offsetspn fieldspn tospn bespn absentspn andspn spacespn tospn bespn saved;spn inspn fact,spn itspn willspn alsospn splitspc [eax*2+offset]spn intospc [eax+eax+offset]n .spn Youspn canspn combatspn thisspn behaviourspn byspn thespn usespn ofspn thespc NOSPLITspn keyword:spc [nosplit eax*2]spn willspn forcespc [eax*2+0]spn tospn bespn generatedspn literally.spc [nosplit eax*1]spn alsospn hasspn thespn samespn effect.spn Inspn anotherspn way,spn aspn splitspn EAspn formspc [0, eax*2]spn canspn bespn used,spn too.spn However,spc NOSPLITspn inspc [nosplit eax+eax]spn willspn bespn ignoredspn becausespn user'sspn intentionspn herespn isspn consideredspn asspc [eax+eax]n .
norm
n Inspn 64-n bitspn mode,spn NASMspn willspn byspn defaultspn generatespn absolutespn addresses.spn Thespi RELc RELspn keywordspn makesspn itspn producespc RIPdan relativespn addresses.spn Sincespn thisspn isspn frequentlyspn thespn normallyspn desiredspn behaviour,spn seespn thespc DEFAULTspn directivespn (x section-7.2n sectionspn 7.2xesection-7.2n ).spn Thespn keywordspi ABSc ABSspn overridesspi RELc RELn .
norm
n Aspn newspn formspn ofspn splitspn effectivespn addresspn syntaxspn isspn alsospn supported.spn Thisspn isspn mainlyspn intendedspn forspn mibspn operandsspn asspn usedspn byspn MPXspn instructions,spn butspn canspn bespn usedspn forspn anyspn memoryspn reference.spn Thespn basicspn conceptspn ofspn thisspn formspn isspn splittingspn basespn andspn index.
code
     mov eax,[ebx+8,ecx*4]   ; ebx=base, ecx=index, 4=scale, 8=disp
norm
n Forspn mibspn operands,spn therespn arespn severalspn waysspn ofspn writingspn effectivespn addressspn dependingspn onspn thespn tools.spn NASMspn supportsspn allspn currentlyspn possiblespn waysspn ofspn mibspn syntax:
code
     ; bndstx      ; next 5 lines are parsed same      ; base=rax, index=rbx, scale=1, displacement=3      bndstx [rax+0x3,rbx], bnd0      ; NASM - split EA      bndstx [rbx*1+rax+0x3], bnd0    ; GAS - '*1' indecates an index reg      bndstx [rax+rbx+3], bnd0        ; GAS - without hints      bndstx [rax+0x3], bnd0, rbx     ; ICC-1      bndstx [rax+0x3], rbx, bnd0     ; ICC-2
norm
n Whenspn broadcastingspn decoratorspn isspn used,spn thespn opsizespn keywordspn shouldspn matchspn thespn sizespn ofspn eachspn element.
code
     VDIVPS zmm4, zmm5, dword [rbx]{1to16}   ; single-precision float      VDIVPS zmm4, zmm5, zword [rbx]          ; packed 512 bit memory
head 3.4 :section-3.4
i constantsn Constants
norm
n NASMspn understandsspn fourspn differentspn typesspn ofspn constant:spn numeric,spn character,spn stringspn andspn floating-n point.
subh 3.4.1 :section-3.4.1
i numeric constantsn Numericspn Constants
norm
n Aspn numericspn constantspn isspn simplyspn aspn number.spn NASMspn allowsspn youspn tospn specifyspn numbersspn inspn aspn varietyspn ofspn numberspn bases,spn inspn aspn varietyspn ofspn ways:spn youspn canspn suffixspc Hspn orspc Xn ,spc Dspn orspc Tn ,spc Qspn orspc On ,spn andspc Bspn orspc Yspn forspi hexadecimaln hexadecimaln ,spi decimaln decimaln ,spi octaln octalspn andspi binaryn binaryspn respectively,spn orspn youspn canspn prefixspc 0xn ,spn forspn hexadecimalspn inspn thespn stylespn ofspn C,spn orspn youspn canspn prefixspc $spn forspn hexadecimalspn inspn thespn stylespn ofspn Borlandspn Pascalspn orspn Motorolaspn Assemblers.spn Note,spn though,spn thatspn thespi $, prefixc $spn prefixspn doesspn doublespn dutyspn asspn aspn prefixspn onspn identifiersspn (seespx section-3.1n sectionspn 3.1xesection-3.1n ),spn sospn aspn hexspn numberspn prefixedspn withspn aspc $spn signspn mustspn havespn aspn digitspn afterspn thespc $spn ratherspn thanspn aspn letter.spn Inspn addition,spn currentspn versionsspn ofspn NASMspn acceptspn thespn prefixspc 0hspn forspn hexadecimal,spc 0dspn orspc 0tspn forspn decimal,spc 0ospn orspc 0qspn forspn octal,spn andspc 0bspn orspc 0yspn forspn binary.spn Pleasespn notespn thatspn unlikespn C,spn aspc 0spn prefixspn byspn itselfspn doesspeonotspn implyspn anspn octalspn constant!
norm
n Numericspn constantsspn canspn havespn underscoresspn (c _n )spn interspersedspn tospn breakspn upspn longspn strings.
norm
n Somespn examplesspn (allspn producingspn exactlyspn thespn samespn code):
code
        mov     ax,200          ; decimal         mov     ax,0200         ; still decimal         mov     ax,0200d        ; explicitly decimal         mov     ax,0d200        ; also decimal         mov     ax,0c8h         ; hex         mov     ax,$0c8         ; hex again: the 0 is required         mov     ax,0xc8         ; hex yet again         mov     ax,0hc8         ; still hex         mov     ax,310q         ; octal         mov     ax,310o         ; octal again         mov     ax,0o310        ; octal yet again         mov     ax,0q310        ; octal yet again         mov     ax,11001000b    ; binary         mov     ax,1100_1000b   ; same binary constant         mov     ax,1100_1000y   ; same binary constant once more         mov     ax,0b1100_1000  ; same binary constant yet again         mov     ax,0y1100_1000  ; same binary constant yet again
subh 3.4.2 :section-3.4.2
i stringi string constantsi character stringsn Characterspn Strings
norm
n Aspn characterspn stringspn consistsspn ofspn upspn tospn eightspn charactersspn enclosedspn inspn eitherspn singlespn quotesspn (c '...'n ),spn doublespn quotesspn (c "..."n )spn orspn backquotesspn (c `...`n ).spn Singlespn orspn doublespn quotesspn arespn equivalentspn tospn NASMspn (exceptspn ofspn coursespn thatspn surroundingspn thespn constantspn withspn singlespn quotesspn allowsspn doublespn quotesspn tospn appearspn withinspn itspn andspn vicespn versa);spn thespn contentsspn ofspn thosespn arespn representedspn verbatim.spn Stringsspn enclosedspn inspn backquotesspn supportspn C-n stylespc \dan escapesspn forspn specialspn characters.
norm
n Thespn followingspi escape sequencesn escapespn sequencesspn arespn recognizedspn byspn backquotedspn strings:
code
      \'          single quote (')       \"          double quote (")       \`          backquote (`)       \\          backslash (\)       \?          question mark (?)       \a          BEL (ASCII 7)       \b          BS  (ASCII 8)       \t          TAB (ASCII 9)       \n          LF  (ASCII 10)       \v          VT  (ASCII 11)       \f          FF  (ASCII 12)       \r          CR  (ASCII 13)       \e          ESC (ASCII 27)       \377        Up to 3 octal digits - literal byte       \xFF        Up to 2 hexadecimal digits - literal byte       \u1234      4 hexadecimal digits - Unicode character       \U12345678  8 hexadecimal digits - Unicode character
norm
n Allspn otherspn escapespn sequencesspn arespn reserved.spn Notespn thatspc \0n ,spn meaningspn aspc NULspn characterspn (ASCIIspn 0),spn isspn aspn specialspn casespn ofspn thespn octalspn escapespn sequence.
norm
i unicoden Unicodespn charactersspn specifiedspn withspc \uspn orspc \Uspn arespn convertedspn tospi utf-8n UTF-8n .spn Forspn example,spn thespn followingspn linesspn arespn allspn equivalent:
code
      db `\u263a`            ; UTF-8 smiley face       db `\xe2\x98\xba`      ; UTF-8 smiley face       db 0E2h, 098h, 0BAh    ; UTF-8 smiley face
subh 3.4.3 :section-3.4.3
i character constantn Characterspn Constants
norm
n Aspn characterspn constantspn consistsspn ofspn aspn stringspn upspn tospn eightspn bytesspn long,spn usedspn inspn anspn expressionspn context.spn Itspn isspn treatedspn asspn ifspn itspn wasspn anspn integer.
norm
n Aspn characterspn constantspn withspn morespn thanspn onespn bytespn willspn bespn arrangedspn withspi little-endiann little-endianspn orderspn inspn mind:spn ifspn youspn code
code
          mov eax,'abcd'
norm
n thenspn thespn constantspn generatedspn isspn notspc 0x61626364n ,spn butspc 0x64636261n ,spn sospn thatspn ifspn youspn werespn thenspn tospn storespn thespn valuespn intospn memory,spn itspn wouldspn readspc abcdspn ratherspn thanspc dcban .spn Thisspn isspn alsospn thespn sensespn ofspn characterspn constantsspn understoodspn byspn thespn Pentium'sspi CPUIDc CPUIDspn instruction.
subh 3.4.4 :section-3.4.4
i string constantsn Stringspn Constants
norm
n Stringspn constantsspn arespn characterspn stringsspn usedspn inspn thespn contextspn ofspn somespn pseudo-n instructions,spn namelyspn thespi DWi DDi DQi DTi DOi DYi DBc DBspn familyspn andspi INCBINc INCBINspn (wherespn itspn representsspn aspn filename.)spn Theyspn arespn alsospn usedspn inspn certainspn preprocessorspn directives.
norm
n Aspn stringspn constantspn looksspn likespn aspn characterspn constant,spn onlyspn longer.spn Itspn isspn treatedspn asspn aspn concatenationspn ofspn maximum-n sizespn characterspn constantsspn forspn thespn conditions.spn Sospn thespn followingspn arespn equivalent:
code
      db    'hello'               ; string constant       db    'h','e','l','l','o'   ; equivalent character constants
norm
n Andspn thespn followingspn arespn alsospn equivalent:
code
      dd    'ninechars'           ; doubleword string constant       dd    'nine','char','s'     ; becomes three doublewords       db    'ninechars',0,0,0     ; and really looks like this
norm
n Notespn thatspn whenspn usedspn inspn aspn string-n supportingspn context,spn quotedspn stringsspn arespn treatedspn asspn aspn stringspn constantsspn evenspn ifspn theyspn arespn shortspn enoughspn tospn bespn aspn characterspn constant,spn becausespn otherwisespc db 'ab'spn wouldspn havespn thespn samespn effectspn asspc db 'a'n ,spn whichspn wouldspn bespn silly.spn Similarly,spn three-n characterspn orspn four-n characterspn constantsspn arespn treatedspn asspn stringsspn whenspn theyspn arespn operandsspn tospc DWn ,spn andspn sospn forth.
subh 3.4.5 :section-3.4.5
i utf-16i utf-32i unicoden Unicodespn Strings
norm
n Thespn specialspn operatorsspi __?utf16?__c __?utf16?__n ,spi __?utf16le?__c __?utf16le?__n ,spi __?utf16be?__c __?utf16be?__n ,spi __?utf32?__c __?utf32?__n ,spi __?utf32le?__c __?utf32le?__spn andspi __?utf32be?__c __?utf32be?__spn allowsspn definitionspn ofspn Unicodespn strings.spn Theyspn takespn aspn stringspn inspn UTF-n 8spn formatspn andspn convertsspn itspn tospn UTF-n 16spn orspn UTF-n 32,spn respectively.spn Unlessspn thespc bespn formsspn arespn specified,spn thespn outputspn isspn littleendian.
norm
n Forspn example:
code
%define u(x) __?utf16?__(x) %define w(x) __?utf32?__(x)       dw u('C:\WINDOWS'), 0       ; Pathname in UTF-16       dd w(`A + B = \u206a`), 0   ; String in UTF-32
norm
n Thespn UTFspn operatorsspn canspn bespn appliedspn eitherspn tospn stringsspn passedspn tospn thespc DBspn familyspn instructions,spn orspn tospn characterspn constantsspn inspn anspn expressionspn context.
subh 3.4.6 :section-3.4.6
i floating-point, constantsn Floating-n Pointspn Constants
norm
i floating-pointn Floating-pointspn constantsspn arespn acceptablespn onlyspn asspn argumentsspn tospi DBc DBn ,spi DWc DWn ,spi DDc DDn ,spi DQc DQn ,spi DTc DTn ,spn andspi DOc DOn ,spn orspn asspn argumentsspn tospn thespn specialspn operatorsspi __?float8?__c __?float8?__n ,spi __?float16?__c __?float16?__n ,spi __?bfloat16?__c __?bfloat16?__n ,spi __?float32?__c __?float32?__n ,spi __?float64?__c __?float64?__n ,spi __?float80m?__c __?float80m?__n ,spi __?float80e?__c __?float80e?__n ,spi __?float128l?__c __?float128l?__n ,spn andspi __?float128h?__c __?float128h?__n .spn Seespn alsospx section-6.3n sectionspn 6.3xesection-6.3n .
norm
n Floating-n pointspn constantsspn arespn expressedspn inspn thespn traditionalspn form:spn digits,spn thenspn aspn period,spn thenspn optionallyspn morespn digits,spn thenspn optionallyspn anspc Espn followedspn byspn anspn exponent.spn Thespn periodspn isspn mandatory,spn sospn thatspn NASMspn canspn distinguishspn betweenspc dd 1n ,spn whichspn declaresspn anspn integerspn constant,spn andspc dd 1.0spn whichspn declaresspn aspn floating-n pointspn constant.
norm
n NASMspn alsospn supportspn C99-n stylespn hexadecimalspn floating-n point:spc 0xn ,spn hexadecimalspn digits,spn period,spn optionallyspn morespn hexadeximalspn digits,spn thenspn optionallyspn aspc Pspn followedspn byspn aspeobinaryspn (notspn hexadecimal)spn exponentspn inspn decimalspn notation.spn Asspn anspn extension,spn NASMspn additionallyspn supportsspn thespc 0hspn andspc $spn prefixesspn forspn hexadecimal,spn asspn wellspn binaryspn andspn octalspn floating-n point,spn usingspn thespc 0bspn orspc 0yspn andspc 0ospn orspc 0qspn prefixes,spn respectively.
norm
n Underscoresspn tospn breakspn upspn groupsspn ofspn digitsspn arespn permittedspn inspn floating-n pointspn constantsspn asspn well.
norm
n Somespn examples:
code
      db    -0.2                    ; "Quarter precision"       dw    -0.5                    ; IEEE 754r/SSE5 half precision       dd    1.2                     ; an easy one       dd    1.222_222_222           ; underscores are permitted       dd    0x1p+2                  ; 1.0x2^2 = 4.0       dq    0x1p+32                 ; 1.0x2^32 = 4 294 967 296.0       dq    1.e10                   ; 10 000 000 000.0       dq    1.e+10                  ; synonymous with 1.e10       dq    1.e-10                  ; 0.000 000 000 1       dt    3.141592653589793238462 ; pi       do    1.e+4000                ; IEEE 754r quad precision
norm
n Thespn 8-n bitspn "quarter-n precision"spn floating-n pointspn formatspn isspn sign:exponent:mantissaspn =spn 1:4:3spn withspn anspn exponentspn biasspn ofspn 7.spn Thisspn appearsspn tospn bespn thespn mostspn frequentlyspn usedspn 8-n bitspn floating-n pointspn format,spn althoughspn itspn isspn notspn coveredspn byspn anyspn formalspn standard.spn Thisspn isspn sometimesspn calledspn aspn "i minifloatn minifloatn ."
norm
n Thespi bfloat16c bfloat16spn formatspn isspn effectivelyspn aspn compressedspn versionspn ofspn thespn 32-n bitspn singlespn precisionspn format,spn withspn aspn reducedspn mantissa.spn Itspn isspn effectivelyspn thespn samespn asspn truncatingspn thespn 32-n bitspn formatspn tospn thespn upperspn 16spn bits,spn exceptspn forspn rounding.spn Therespn isspn nospc Deoxspn directivespn thatspn correspondsspn tospc bfloat16spn asspn itspn obviouslyspn hasspn thespn samespn sizespn asspn thespn IEEEspn standardspn 16-n bitspn halfspn precisionspn format,spn seespn howeverspx section-6.3n sectionspn 6.3xesection-6.3n .
norm
n Thespn specialspn operatorsspn arespn usedspn tospn producespn floating-n pointspn numbersspn inspn otherspn contexts.spn Theyspn producespn thespn binaryspn representationspn ofspn aspn specificspn floating-n pointspn numberspn asspn anspn integer,spn andspn canspn usespn anywherespn integerspn constantsspn arespn usedspn inspn anspn expression.spc __?float80m?__spn andspc __?float80e?__spn producespn thespn 64-n bitspn mantissaspn andspn 16-n bitspn exponentspn ofspn anspn 80-n bitspn floating-n pointspn number,spn andspc __?float128l?__spn andspc __?float128h?__spn producespn thespn lowerspn andspn upperspn 64-n bitspn halvesspn ofspn aspn 128-n bitspn floating-n pointspn number,spn respectively.
norm
n Forspn example:
code
      mov    rax,__?float64?__(3.141592653589793238462)
norm
n ...spn wouldspn assignspn thespn binaryspn representationspn ofspn pispn asspn aspn 64-n bitspn floatingspn pointspn numberspn intospc RAXn .spn Thisspn isspn exactlyspn equivalentspn to:
code
      mov    rax,0x400921fb54442d18
norm
n NASMspn cannotspn dospn compile-n timespn arithmeticspn onspn floating-n pointspn constants.spn Thisspn isspn becausespn NASMspn isspn designedspn tospn bespn portablespdaspn althoughspn itspn alwaysspn generatesspn codespn tospn runspn onspn x86spn processors,spn thespn assemblerspn itselfspn canspn runspn onspn anyspn systemspn withspn anspn ANSIspn Cspn compiler.spn Therefore,spn thespn assemblerspn cannotspn guaranteespn thespn presencespn ofspn aspn floating-n pointspn unitspn capablespn ofspn handlingspn thespi intel number formatsn Intelspn numberspn formatsn ,spn andspn sospn forspn NASMspn tospn bespn ablespn tospn dospn floatingspn arithmeticspn itspn wouldspn havespn tospn includespn itsspn ownspn completespn setspn ofspn floating-n pointspn routines,spn whichspn wouldspn significantlyspn increasespn thespn sizespn ofspn thespn assemblerspn forspn veryspn littlespn benefit.
norm
n Thespn specialspn tokensspi __?Infinity?__c __?Infinity?__n ,spi __?QNaN?__c __?QNaN?__spn (orspi __?NaN?__c __?NaN?__n )spn andspi __?SNaN?__c __?SNaN?__spn canspn bespn usedspn tospn generatespi infinityn infinities,spn quietspi nann NaNn s,spn andspn signallingspn NaNs,spn respectively.spn Thesespn arespn normallyspn usedspn asspn macros:
code
%define Inf __?Infinity?__ %define NaN __?QNaN?__       dq    +1.5, -Inf, NaN         ; Double-precision constants
norm
n Thespc %use fpspn standardspn macrospn packagespn containsspn aspn setspn ofspn conveniencespn macros.spn Seespx section-6.3n sectionspn 6.3xesection-6.3n .
subh 3.4.7 :section-3.4.7
i floating-point, packed bcd constantsn Packedspn BCDspn Constants
norm
n x87-n stylespn packedspn BCDspn constantsspn canspn bespn usedspn inspn thespn samespn contextsspn asspn 80-n bitspn floating-n pointspn numbers.spn Theyspn arespn suffixedspn withspc pspn orspn prefixedspn withspc 0pn ,spn andspn canspn includespn upspn tospn 18spn decimalspn digits.
norm
n Asspn withspn otherspn numericspn constants,spn underscoresspn canspn bespn usedspn tospn separatespn digits.
norm
n Forspn example:
code
      dt 12_345_678_901_245_678p       dt -12_345_678_901_245_678p       dt +0p33       dt 33p
head 3.5 :section-3.5
i expressionsn Expressions
norm
n Expressionsspn inspn NASMspn arespn similarspn inspn syntaxspn tospn thosespn inspn C.spn Expressionsspn arespn evaluatedspn asspn 64-n bitspn integersspn whichspn arespn thenspn adjustedspn tospn thespn appropriatespn size.
norm
n NASMspn supportsspn twospn specialspn tokensspn inspn expressions,spn allowingspn calculationsspn tospn involvespn thespn currentspn assemblyspn position:spn thespi $, herec $spn andspi $$c $$spn tokens.spc $spn evaluatesspn tospn thespn assemblyspn positionspn atspn thespn beginningspn ofspn thespn linespn containingspn thespn expression;spn sospn youspn canspn codespn anspi infinite loopn infinitespn loopspn usingspc JMP $n .spc $$spn evaluatesspn tospn thespn beginningspn ofspn thespn currentspn section;spn sospn youspn canspn tellspn howspn farspn intospn thespn sectionspn youspn arespn byspn usingspc ($-$$)n .
norm
n Thespn arithmeticspi operatorsn operatorsspn providedspn byspn NASMspn arespn listedspn here,spn inspn increasingspn orderspn ofspi precedencen precedencen .
norm
n Aspeobooleanspn valuespn isspn truespn ifspn nonzerospn andspn falsespn ifspn zero.spn Thespn operatorsspn whichspn returnspn aspn booleanspn valuespn alwaysspn returnspn 1spn forspn truespn andspn 0spn forspn false.
subh 3.5.1 :section-3.5.1
i ?opc ?spn ...spc :n :spn Conditionalspn Operator
norm
n Thespn syntaxspn ofspn thisspn operator,spn similarspn tospn thespn Cspn conditionalspn operator,spn is:
norm
eobooleanspc ?speotruevalspc :speofalseval
norm
n Thisspn operatorspn evaluatesspn tospeotruevalspn ifspeobooleanspn isspn true,spn otherwisespn tospeofalsevaln .
norm
n Notespn thatspn NASMspn allowsspc ?spn charactersspn inspn symbolspn names.spn Therefore,spn itspn isspn highlyspn advisablespn tospn alwaysspn putspn spacesspn aroundspn thespc ?spn andspc :spn characters.
subh 3.5.2 :section-3.5.2
n :spi ||c ||n :spi boolean orn Booleanspn ORspn Operator
norm
n Thespc ||spn operatorspn givesspn aspn booleanspn OR:spn itspn evaluatesspn tospn 1spn ifspn bothspn sidesspn ofspn thespn expressionspn arespn nonzero,spn otherwisespn 0.
subh 3.5.3 :section-3.5.3
n :spi ^^c ^^n :spi boolean xorn Booleanspn XORspn Operator
norm
n Thespc ^^spn operatorspn givesspn aspn booleanspn XOR:spn itspn evaluatesspn tospn 1spn ifspn anyspn onespn sidespn ofspn thespn expressionspn isspn nonzero,spn otherwisespn 0.
subh 3.5.4 :section-3.5.4
n :spi &&c &&n :spi boolean andn Booleanspn ANDspn Operator
norm
n Thespc &&spn operatorspn givesspn aspn booleanspn AND:spn itspn evaluatesspn tospn 1spn ifspn bothspn sidesspn ofspn thespn expressionspn isspn nonzero,spn otherwisespn 0.
subh 3.5.5 :section-3.5.5
n :spi comparison operatorsn Comparisonspn Operators
norm
n NASMspn supportsspn thespn followingspn comparisonspn operators:
bull
i =c =spn orspi ==c ==spn comparespn forspn equality.
bull
i !=c !=spn orspi <>c <>spn comparespn forspn inequality.
bull
i <c <spn comparesspn signedspn lessspn than.
bull
i <=c <=spn comparesspn signedspn lessspn thanspn orspn equal.
bull
i >c >spn comparesspn signedspn greaterspn than.
bull
i >=c >=spn comparesspn signedspn greatherspn thanspn orspn equal.
norm
n Thesespn operatorsspn evaluatespn tospn 0spn forspn falsespn orspn 1spn forspn true.
bull
i <=>n <=>spn doesspn aspn signedspn comparison,spn andspn evaluatesspn tospdan 1spn forspn lessspn than,spn 0spn forspn equal,spn andspn 1spn forspn greaterspn than.
norm
n Atspn thisspn time,spn NASMspn doesspn notspn providespn unsignedspn comparisonspn operators.
subh 3.5.6 :section-3.5.6
i |c |n :spi bitwise orn Bitwisespn ORspn Operator
norm
n Thespc |spn operatorspn givesspn aspn bitwisespn OR,spn exactlyspn asspn performedspn byspn thespc ORspn machinespn instruction.
subh 3.5.7 :section-3.5.7
i ^c ^n :spi bitwise xorn Bitwisespn XORspn Operator
norm
c ^spn providesspn thespn bitwisespn XORspn operation.
subh 3.5.8 :section-3.5.8
i &c &n :spi bitwise andn Bitwisespn ANDspn Operator
norm
c &spn providesspn thespn bitwisespn ANDspn operation.
subh 3.5.9 :section-3.5.9
i bit shiftn Bitspn Shiftspn Operators
norm
i <<c <<spn givesspn aspn bit-n shiftspn tospn thespn left,spn justspn asspn itspn doesspn inspn C.spn Sospc 5<<3spn evaluatesspn tospn 5spn timesspn 8,spn orspn 40.spi >>c >>spn givesspn anspi unsigned, bit shifteounsignedspn (logical)spn bit-n shiftspn tospn thespn right;spn thespn bitsspn shiftedspn inspn fromspn thespn leftspn arespn setspn tospn zero.
norm
i <<<c <<<spn givesspn aspn bit-n shiftspn tospn thespn left,spn exactlyspn equivalentspn tospn thespc <<spn operator;spn itspn isspn includedspn forspn completeness.spi >>>c >>>spn givesspn anspi signed, bit shifteosignedspn (arithmetic)spn bit-n shiftspn tospn thespn right;spn thespn bitsspn shiftedspn inspn fromspn thespn leftspn arespn filledspn withspn copiesspn ofspn thespn mostspn significantspn (sign)spn bit.
subh 3.5.10 :section-3.5.10
i + opadditionc +spn andspi - opsubtractionc -n :spi additionn Additionspn andspi subtractionn Subtractionspn Operators
norm
n Thespc +spn andspc -spn operatorsspn dospn perfectlyspn ordinaryspn additionspn andspn subtraction.
subh 3.5.11 :section-3.5.11
i multiplicationn Multiplicationn ,spi divisionn Divisionspn andspi modulon Modulo
norm
i *c *spn isspn thespn multiplicationspn operator.
norm
i /c /spn andspi //c //spn arespn bothspn divisionspn operators:spc /spn isspi division, unsignedi unsigned, divisionn unsignedspn divisionspn andspc //spn isspi division, signedi signed, divisionn signedspn division.
norm
n Similarly,spi %c %spn andspi %%c %%spn providespi modulo, unsignedi unsigned, modulon unsignedspn andspi modulo, signedi signed, modulon signedspn modulospn operatorsspn respectively.
norm
n Sincespn thespc %spn characterspn isspn usedspn extensivelyspn byspn thespn macrospi preprocessorn preprocessorn ,spn youspn shouldspn ensurespn thatspn bothspn thespn signedspn andspn unsignedspn modulospn operatorsspn arespn followedspn byspn whitespn spacespn whereverspn theyspn appear.
norm
n NASM,spn likespn ANSIspn C,spn providesspn nospn guaranteesspn aboutspn thespn sensiblespn operationspn ofspn thespn signedspn modulospn operator.spn Onspn mostspn systemsspn itspn willspn matchspn thespn signedspn divisionspn operator,spn suchspn that:
code
     b * (a // b) + (a %% b) = a       (b != 0)
subh 3.5.12 :section-3.5.12
i operators, unaryi unary operatorsn Unaryspn Operators
norm
n Thespn highest-n priorityspn operatorsspn inspn NASM'sspn expressionspn grammarspn arespn thosespn whichspn onlyspn applyspn tospn onespn argument.spn Thesespn are:
bull
i - opunaryc -spi arithmetic negationn negatesspn (i 2's complementn 2'sspn complementn )spn itsspn operand.
bull
i + opunaryc +spn doesspn nothing;spn it'sspn providedspn forspn symmetryspn withspc -n .
bull
i ~ opunaryc ~spn computesspn thespi negation, bitwisei bitwise negationn bitwisespn negationspn (i 1's complementn 1'sspn complementn )spn ofspn itsspn operand.
bull
i ! opunaryc !spn isspn thespi negation, booleani boolean negationn booleanspn negationspn operator.spn Itspn evaluatesspn tospn 1spn ifspn thespn argumentspn isspn 0,spn otherwisespn 0.
bull
c SEGspn providesspn thespi segment addressn segmentspn addressspn ofspn itsspn operandspn (explainedspn inspn morespn detailspn inspx section-3.6n sectionspn 3.6xesection-3.6n ).
bull
n Aspn setspn ofspn additionalspn operatorsspn withspn leadingspn andspn trailingspn doublespn underscoresspn arespn usedspn tospn implementspn thespc integer functionsspn ofspn thespc ifuncspn macrospn package,spn seespx section-6.4n sectionspn 6.4xesection-6.4n .
head 3.6 :section-3.6
i SEGc SEGspn andspi WRTc WRT
norm
n Whenspn writingspn largespn 16-n bitspn programs,spn whichspn mustspn bespn splitspn intospn multiplespi segmentsn segmentsn ,spn itspn isspn oftenspn necessaryspn tospn bespn ablespn tospn referspn tospn thespi segment addressn segmentspn partspn ofspn thespn addressspn ofspn aspn symbol.spn NASMspn supportsspn thespc SEGspn operatorspn tospn performspn thisspn function.
norm
n Thespc SEGspn operatorspn evaluatesspn tospn thespi preferredeopreferredspn segmentspn basespn ofspn aspn symbol,spn definedspn asspn thespn segmentspn basespn relativespn tospn whichspn thespn offsetspn ofspn thespn symbolspn makesspn sense.spn Sospn thespn code
code
        mov     ax,seg symbol         mov     es,ax         mov     bx,symbol
norm
n willspn loadspc ES:BXspn withspn aspn validspn pointerspn tospn thespn symbolspc symboln .
norm
n Thingsspn canspn bespn morespn complexspn thanspn this:spn sincespn 16-n bitspn segmentsspn andspi groupsn groupsspn mayspi overlapping segmentsn overlap,spn youspn mightspn occasionallyspn wantspn tospn referspn tospn somespn symbolspn usingspn aspn differentspn segmentspn basespn fromspn thespn preferredspn one.spn NASMspn letsspn youspn dospn this,spn byspn thespn usespn ofspn thespc WRTspn (Withspn Referencespn To)spn keyword.spn Sospn youspn canspn dospn thingsspn like
code
        mov     ax,weird_seg        ; weird_seg is a segment base         mov     es,ax         mov     bx,symbol wrt weird_seg
norm
n tospn loadspc ES:BXspn withspn aspn different,spn butspn functionallyspn equivalent,spn pointerspn tospn thespn symbolspc symboln .
norm
n NASMspn supportsspn farspn (inter-n segment)spn callsspn andspn jumpsspn byspn meansspn ofspn thespn syntaxspc call segment:offsetn ,spn wherespc segmentspn andspc offsetspn bothspn representspn immediatespn values.spn Sospn tospn callspn aspn farspn procedure,spn youspn couldspn codespn eitherspn of
code
        call    (seg procedure):procedure         call    weird_seg:(procedure wrt weird_seg)
norm
n (Thespn parenthesesspn arespn includedspn forspn clarity,spn tospn showspn thespn intendedspn parsingspn ofspn thespn abovespn instructions.spn Theyspn arespn notspn necessaryspn inspn practice.)
norm
n NASMspn supportsspn thespn syntaxspi CALL FARc call far procedurespn asspn aspn synonymspn forspn thespn firstspn ofspn thespn abovespn usages.spc JMPspn worksspn identicallyspn tospc CALLspn inspn thesespn examples.
norm
n Tospn declarespn aspi far pointern farspn pointerspn tospn aspn dataspn itemspn inspn aspn dataspn segment,spn youspn mustspn code
code
        dw      symbol, seg symbol
norm
n NASMspn supportsspn nospn convenientspn synonymspn forspn this,spn thoughspn youspn canspn alwaysspn inventspn onespn usingspn thespn macrospn processor.
head 3.7 :section-3.7
i STRICTc STRICTn :spn Inhibitingspn Optimization
norm
n Whenspn assemblingspn withspn thespn optimizerspn setspn tospn levelspn 2spn orspn higherspn (seespx section-2.1.24n sectionspn 2.1.24xesection-2.1.24n ),spn NASMspn willspn usespn sizespn specifiersspn (c BYTEn ,spc WORDn ,spc DWORDn ,spc QWORDn ,spc TWORDn ,spc OWORDn ,spc YWORDspn orspc ZWORDn ),spn butspn willspn givespn themspn thespn smallestspn possiblespn size.spn Thespn keywordspc STRICTspn canspn bespn usedspn tospn inhibitspn optimizationspn andspn forcespn aspn particularspn operandspn tospn bespn emittedspn inspn thespn specifiedspn size.spn Forspn example,spn withspn thespn optimizerspn on,spn andspn inspc BITS 16spn mode,
code
        push dword 33
norm
n isspn encodedspn inspn threespn bytesspc 66 6A 21n ,spn whereas
code
        push strict dword 33
norm
n isspn encodedspn inspn sixspn bytes,spn withspn aspn fullspn dwordspn immediatespn operandspc 66 68 21 00 00 00n .
norm
n Withspn thespn optimizerspn off,spn thespn samespn codespn (sixspn bytes)spn isspn generatedspn whetherspn thespc STRICTspn keywordspn wasspn usedspn orspn not.
head 3.8 :section-3.8
i critical expressionn Criticalspn Expressions
norm
n Althoughspn NASMspn hasspn anspn optionalspn multi-n passspn optimizer,spn therespn arespn somespn expressionsspn whichspn mustspn bespn resolvablespn onspn thespn firstspn pass.spn Thesespn arespn calledspesCriticalspeeExpressionsn .
norm
n Thespn firstspn passspn isspn usedspn tospn determinespn thespn sizespn ofspn allspn thespn assembledspn codespn andspn data,spn sospn thatspn thespn secondspn pass,spn whenspn generatingspn allspn thespn code,spn knowsspn allspn thespn symbolspn addressesspn thespn codespn refersspn to.spn Sospn onespn thingspn NASMspn can'tspn handlespn isspn codespn whosespn sizespn dependsspn onspn thespn valuespn ofspn aspn symbolspn declaredspn afterspn thespn codespn inspn question.spn Forspn example,
code
        times (label-$) db 0 label:  db      'Where am I?'
norm
n Thespn argumentspn tospi TIMESc TIMESspn inspn thisspn casespn couldspn equallyspn legallyspn evaluatespn tospn anythingspn atspn all;spn NASMspn willspn rejectspn thisspn examplespn becausespn itspn cannotspn tellspn thespn sizespn ofspn thespc TIMESspn linespn whenspn itspn firstspn seesspn it.spn Itspn willspn justspn asspn firmlyspn rejectspn thespn slightlyspi paradoxn paradoxicalspn code
code
        times (label-$+1) db 0 label:  db      'NOW where am I?'
norm
n inspn whichspeoanyspn valuespn forspn thespc TIMESspn argumentspn isspn byspn definitionspn wrong!
norm
n NASMspn rejectsspn thesespn examplesspn byspn meansspn ofspn aspn conceptspn calledspn aspescriticalspeeexpressionn ,spn whichspn isspn definedspn tospn bespn anspn expressionspn whosespn valuespn isspn requiredspn tospn bespn computablespn inspn thespn firstspn pass,spn andspn whichspn mustspn thereforespn dependspn onlyspn onspn symbolsspn definedspn beforespn it.spn Thespn argumentspn tospn thespc TIMESspn prefixspn isspn aspn criticalspn expression.
head 3.9 :section-3.9
i local labelsn Localspn Labels
norm
n NASMspn givesspn specialspn treatmentspn tospn symbolsspn beginningspn withspn aspi periodn periodn .spn Aspn labelspn beginningspn withspn aspn singlespn periodspn isspn treatedspn asspn aspeolocalspn label,spn whichspn meansspn thatspn itspn isspn associatedspn withspn thespn previousspn non-n localspn label.spn So,spn forspn example:
code
label1  ; some code .loop         ; some more code         jne     .loop         ret label2  ; some code .loop         ; some more code         jne     .loop         ret
norm
n Inspn thespn abovespn codespn fragment,spn eachspc JNEspn instructionspn jumpsspn tospn thespn linespn immediatelyspn beforespn it,spn becausespn thespn twospn definitionsspn ofspc .loopspn arespn keptspn separatespn byspn virtuespn ofspn eachspn beingspn associatedspn withspn thespn previousspn non-n localspn label.
norm
n Thisspn formspn ofspn localspn labelspn handlingspn isspn borrowedspn fromspn thespn oldspn Amigaspn assemblerspi devpacn DevPacn ;spn however,spn NASMspn goesspn onespn stepspn further,spn inspn allowingspn accessspn tospn localspn labelsspn fromspn otherspn partsspn ofspn thespn code.spn Thisspn isspn achievedspn byspn meansspn ofspeodefiningspn aspn localspn labelspn inspn termsspn ofspn thespn previousspn non-n localspn label:spn thespn firstspn definitionspn ofspc .loopspn abovespn isspn reallyspn definingspn aspn symbolspn calledspc label1.loopn ,spn andspn thespn secondspn definesspn aspn symbolspn calledspc label2.loopn .spn So,spn ifspn youspn reallyspn neededspn to,spn youspn couldspn write
code
label3  ; some more code         ; and some more         jmp label1.loop
norm
n Sometimesspn itspn isspn usefulspdaspn inspn aspn macro,spn forspn instancespdaspn tospn bespn ablespn tospn definespn aspn labelspn whichspn canspn bespn referencedspn fromspn anywherespn butspn whichspn doesn'tspn interferespn withspn thespn normalspn local-n labelspn mechanism.spn Suchspn aspn labelspn can'tspn bespn non-n localspn becausespn itspn wouldspn interferespn withspn subsequentspn definitionsspn of,spn andspn referencesspn to,spn localspn labels;spn andspn itspn can'tspn bespn localspn becausespn thespn macrospn thatspn definedspn itspn wouldn'tspn knowspn thespn label'sspn fullspn name.spn NASMspn thereforespn introducesspn aspn thirdspn typespn ofspn label,spn whichspn isspn probablyspn onlyspn usefulspn inspn macrospn definitions:spn ifspn aspn labelspn beginsspn withspn thespi label prefixn specialspn prefixspi ..@c ..@n ,spn thenspn itspn doesspn nothingspn tospn thespn localspn labelspn mechanism.spn Sospn youspn couldspn code
code
label1:                         ; a non-local label .local:                         ; this is really label1.local ..@foo:                         ; this is a special symbol label2:                         ; another non-local label .local:                         ; this is really label2.local         jmp     ..@foo          ; this will jump three lines up
norm
n NASMspn hasspn thespn capacityspn tospn definespn otherspn specialspn symbolsspn beginningspn withspn aspn doublespn period:spn forspn example,spc ..startspn isspn usedspn tospn specifyspn thespn entryspn pointspn inspn thespc objspn outputspn formatspn (seespx section-8.4.6n sectionspn 8.4.6xesection-8.4.6n ),spc ..imagebasespn isspn usedspn tospn findspn outspn thespn offsetspn fromspn aspn basespn addressspn ofspn thespn currentspn imagespn inspn thespc win64spn outputspn formatspn (seespx section-8.6.1n sectionspn 8.6.1xesection-8.6.1n ).spn Sospn justspn keepspn inspn mindspn thatspn symbolsspn beginningspn withspn aspn doublespn periodspn arespn special.
chap 4 :chapter-4
n Thespn NASMspi preprocessorn Preprocessor
norm
n NASMspn containsspn aspn powerfulspi macro processorn macrospn processorn ,spn whichspn supportsspn conditionalspn assembly,spn multi-n levelspn filespn inclusion,spn twospn formsspn ofspn macrospn (single-n linespn andspn multi-n line),spn andspn aspn `contextspn stack'spn mechanismspn forspn extraspn macrospn power.spn Preprocessorspn directivesspn allspn beginspn withspn aspc %spn sign.
norm
n Thespn preprocessorspn collapsesspn allspn linesspn whichspn endspn withspn aspn backslashspn (\)spn characterspn intospn aspn singlespn line.spn Thus:
code
%define THIS_VERY_LONG_MACRO_NAME_IS_DEFINED_TO \         THIS_VALUE
norm
n willspn workspn likespn aspn single-n linespn macrospn withoutspn thespn backslash-n newlinespn sequence.
head 4.1 :section-4.1
i single-line macrosn Single-Linespn Macros
subh 4.1.1 :section-4.1.1
n Thespn Normalspn Way:spi %idefinei %definec %define
norm
n Single-n linespn macrosspn arespn definedspn usingspn thespc %definespn preprocessorspn directive.spn Thespn definitionsspn workspn inspn aspn similarspn wayspn tospn C;spn sospn youspn canspn dospn thingsspn like
code
%define ctrl    0x1F & %define param(a,b) ((a)+(a)*(b))         mov     byte [param(2,ebx)], ctrl 'D'
norm
n whichspn willspn expandspn to
code
        mov     byte [(2)+(2)*(ebx)], 0x1F & 'D'
norm
n Whenspn thespn expansionspn ofspn aspn single-n linespn macrospn containsspn tokensspn whichspn invokespn anotherspn macro,spn thespn expansionspn isspn performedspn atspn invocationspn time,spn notspn atspn definitionspn time.spn Thusspn thespn code
code
%define a(x)    1+b(x) %define b(x)    2*x         mov     ax,a(8)
norm
n willspn evaluatespn inspn thespn expectedspn wayspn tospc mov ax,1+2*8n ,spn evenspn thoughspn thespn macrospc bspn wasn'tspn definedspn atspn thespn timespn ofspn definitionspn ofspc an .
norm
n Notespn thatspn single-n linespn macrospn argumentspn listspn cannotspn bespn precededspn byspn whitespace.spn Otherwisespn itspn willspn bespn treatedspn asspn anspn expansion.spn Forspn example:
code
   %define foo (a,b)               ; no arguments, (a,b) is the expansion    %define bar(a,b)                ; two arguments, empty expansion
norm
n Macrosspn definedspn withspc %definespn arespi case sensitiven casespn sensitiven :spn afterspc %define foo barn ,spn onlyspc foospn willspn expandspn tospc barn :spc Foospn orspc FOOspn willspn not.spn Byspn usingspc %idefinespn insteadspn ofspc %definespn (thespn `i'spn standsspn forspn `insensitive')spn youspn canspn definespn allspn thespn casespn variantsspn ofspn aspn macrospn atspn once,spn sospn thatspc %idefine foo barspn wouldspn causespc foon ,spc Foon ,spc FOOn ,spc fOOspn andspn sospn onspn allspn tospn expandspn tospc barn .
norm
n Therespn isspn aspn mechanismspn whichspn detectsspn whenspn aspn macrospn callspn hasspn occurredspn asspn aspn resultspn ofspn aspn previousspn expansionspn ofspn thespn samespn macro,spn tospn guardspn againstspi circular referencesn circularspn referencesspn andspn infinitespn loops.spn Ifspn thisspn happens,spn thespn preprocessorspn willspn onlyspn expandspn thespn firstspn occurrencespn ofspn thespn macro.spn Hence,spn ifspn youspn code
code
%define a(x)    1+a(x)         mov     ax,a(3)
norm
n thespn macrospc a(3)spn willspn expandspn once,spn becomingspc 1+a(3)n ,spn andspn willspn thenspn expandspn nospn further.spn Thisspn behaviourspn canspn bespn useful:spn seespx section-10.1n sectionspn 10.1xesection-10.1spn forspn anspn examplespn ofspn itsspn use.
norm
n Youspn canspi overloading, single-line macrosn overloadspn single-n linespn macros:spn ifspn youspn write
code
%define foo(x)   1+x %define foo(x,y) 1+x*y
norm
n thespn preprocessorspn willspn bespn ablespn tospn handlespn bothspn typesspn ofspn macrospn call,spn byspn countingspn thespn parametersspn youspn pass;spn sospc foo(3)spn willspn becomespc 1+3spn whereasspc foo(ebx,2)spn willspn becomespc 1+ebx*2n .spn However,spn ifspn youspn define
code
%define foo bar
norm
n thenspn nospn otherspn definitionspn ofspc foospn willspn bespn accepted:spn aspn macrospn withspn nospn parametersspn prohibitsspn thespn definitionspn ofspn thespn samespn namespn asspn aspn macrospeowithspn parameters,spn andspn vicespn versa.
norm
n Thisspn doesn'tspn preventspn single-n linespn macrosspn beingspeoredefinedn :spn youspn canspn perfectlyspn wellspn definespn aspn macrospn with
code
%define foo bar
norm
n andspn thenspn re-n definespn itspn laterspn inspn thespn samespn sourcespn filespn with
code
%define foo baz
norm
n Thenspn everywherespn thespn macrospc foospn isspn invoked,spn itspn willspn bespn expandedspn accordingspn tospn thespn mostspn recentspn definition.spn Thisspn isspn particularlyspn usefulspn whenspn definingspn single-n linespn macrosspn withspc %assignspn (seespx section-4.1.8n sectionspn 4.1.8xesection-4.1.8n ).
norm
n Thespn followingspn additionalspn featuresspn werespn addedspn inspn NASMspn 2.15:
norm
n Itspn isspn possiblespn tospn definespn anspn emptyspn stringspn insteadspn ofspn anspn argumentspn namespn ifspn thespn argumentspn isspn neverspn used.spn Forspn example:
code
   %define ereg(foo,) e %+ foo      mov eax,ereg(dx,cx)
norm
n Aspn singlespn pairspn ofspn parenthesesspn isspn aspn subcasespn ofspn aspn single,spn unusedspn argument:
code
   %define myreg() eax      mov edx,myreg()
norm
n Thisspn isspn similarspn tospn thespn behaviorspn ofspn thespn Cspn preprocessor.
bull
n Ifspn declaredspn withspn anspc =n ,spn NASMspn willspn evaluatespn thespn argumentspn asspn anspn expressionspn afterspn expansion.
bull
n Ifspn anspn argumentspn declaredspn withspn anspc &n ,spn aspn macrospn parameterspn willspn bespn turnedspn intospn aspn quotedspn stringspn afterspn expansion.
bull
n Ifspn declaredspn withspn aspc +n ,spn itspn isspn aspn greedyspn orspn variadicspn parameter;spn itspn includesspn anyspn subsequentspn commasspn andspn parameters.
bull
n Ifspn declaredspn withspn anspc !n ,spn NASMspn willspn notspn stripspn whitespacespn andspn bracesspn (usefulspn inspn conjunctionspn withspc &n ).
norm
n Forspn example:
code
    %define xyzzy(=expr,&val) expr, str     %define plugh(x) xyzzy(x,x)     db plugh(3+5), `\0` ; Expands to: db 8, "3+5", `\0`
norm
n Youspn canspi pre-definen pre-definespn single-n linespn macrosspn usingspn thespn `-n d'spn optionspn onspn thespn NASMspn commandspn line:spn seespx section-2.1.20n sectionspn 2.1.20xesection-2.1.20n .
subh 4.1.2 :section-4.1.2
n Resolvingspc %definen :spi %ixdefinei %xdefinec %xdefine
norm
n Tospn havespn aspn referencespn tospn anspn embeddedspn single-n linespn macrospn resolvedspn atspn thespn timespn thatspn thespn embeddingspn macrospn isspeodefinedn ,spn asspn opposedspn tospn whenspn thespn embeddingspn macrospn isspeoexpandedn ,spn youspn needspn aspn differentspn mechanismspn tospn thespn onespn offeredspn byspc %definen .spn Thespn solutionspn isspn tospn usespc %xdefinen ,spn orspn it'sspi case sensitiven case-n insensitivespn counterpartspc %ixdefinen .
norm
n Supposespn youspn havespn thespn followingspn code:
code
%define  isTrue  1 %define  isFalse isTrue %define  isTrue  0 val1:    db      isFalse %define  isTrue  1 val2:    db      isFalse
norm
n Inspn thisspn case,spc val1spn isspn equalspn tospn 0,spn andspc val2spn isspn equalspn tospn 1.spn Thisspn isspn because,spn whenspn aspn single-n linespn macrospn isspn definedspn usingspc %definen ,spn itspn isspn expandedspn onlyspn whenspn itspn isspn called.spn Asspc isFalsespn expandsspn tospc isTruen ,spn thespn expansionspn willspn bespn thespn currentspn valuespn ofspc isTruen .spn Thespn firstspn timespn itspn isspn calledspn thatspn isspn 0,spn andspn thespn secondspn timespn itspn isspn 1.
norm
n Ifspn youspn wantedspc isFalsespn tospn expandspn tospn thespn valuespn assignedspn tospn thespn embeddedspn macrospc isTruespn atspn thespn timespn thatspc isFalsespn wasspn defined,spn youspn needspn tospn changespn thespn abovespn codespn tospn usespc %xdefinen .
code
%xdefine isTrue  1 %xdefine isFalse isTrue %xdefine isTrue  0 val1:    db      isFalse %xdefine isTrue  1 val2:    db      isFalse
norm
n Now,spn eachspn timespn thatspc isFalsespn isspn called,spn itspn expandsspn tospn 1,spn asspn thatspn isspn whatspn thespn embeddedspn macrospc isTruespn expandedspn tospn atspn thespn timespn thatspc isFalsespn wasspn defined.
norm
c %xdefinespn andspc %ixdefinespn supportsspn argumentspn expansionspn exactlyspn thespn samespn wayspn thatspc %definespn andspc %idefinespn does.
subh 4.1.3 :section-4.1.3
i macro indirectionn Macrospn Indirectionn :spi %[c %[...]
norm
n Thespc %[...]spn constructspn canspn bespn usedspn tospn expandspn macrosspn inspn contextsspn wherespn macrospn expansionspn wouldspn otherwisespn notspn occur,spn includingspn inspn thespn namesspn otherspn macros.spn Forspn example,spn ifspn youspn havespn aspn setspn ofspn macrosspn namedspc Foo16n ,spc Foo32spn andspc Foo64n ,spn youspn couldspn write:
code
     mov ax,Foo%[__?BITS?__] ; The Foo value
norm
n tospn usespn thespn builtinspn macrospc __?BITS?__spn (seespx section-5.3n sectionspn 5.3xesection-5.3n )spn tospn automaticallyspn selectspn betweenspn them.spn Similarly,spn thespn twospn statements:
code
%xdefine Bar         Quux    ; Expands due to %xdefine %define  Bar         %[Quux] ; Expands due to %[...]
norm
n have,spn inspn fact,spn exactlyspn thespn samespn effect.
norm
c %[...]spn concatenatesspn tospn adjacentspn tokensspn inspn thespn samespn wayspn thatspn multi-n linespn macrospn parametersspn do,spn seespx section-4.3.9n sectionspn 4.3.9xesection-4.3.9spn forspn details.
subh 4.1.4 :section-4.1.4
n Concatenatingspn Singlespn Linespn Macrospn Tokens:spi %+c %+
norm
n Individualspn tokensspn inspn singlespn linespn macrosspn canspn bespn concatenated,spn tospn producespn longerspn tokensspn forspn laterspn processing.spn Thisspn canspn bespn usefulspn ifspn therespn arespn severalspn similarspn macrosspn thatspn performspn similarspn functions.
norm
n Pleasespn notespn thatspn aspn spacespn isspn requiredspn afterspc %+n ,spn inspn orderspn tospn disambiguatespn itspn fromspn thespn syntaxspc %+1spn usedspn inspn multilinespn macros.
norm
n Asspn anspn example,spn considerspn thespn following:
code
%define BDASTART 400h                ; Start of BIOS data area
code
struc   tBIOSDA                      ; its structure         .COM1addr       RESW    1         .COM2addr       RESW    1         ; ..and so on endstruc
norm
n Now,spn ifspn wespn needspn tospn accessspn thespn elementsspn ofspn tBIOSDAspn inspn differentspn places,spn wespn canspn endspn upspn with:
code
        mov     ax,BDASTART + tBIOSDA.COM1addr         mov     bx,BDASTART + tBIOSDA.COM2addr
norm
n Thisspn willspn becomespn prettyspn uglyspn (andspn tedious)spn ifspn usedspn inspn manyspn places,spn andspn canspn bespn reducedspn inspn sizespn significantlyspn byspn usingspn thespn followingspn macro:
code
; Macro to access BIOS variables by their names (from tBDA):
code
%define BDA(x)  BDASTART + tBIOSDA. %+ x
norm
n Nowspn thespn abovespn codespn canspn bespn writtenspn as:
code
        mov     ax,BDA(COM1addr)         mov     bx,BDA(COM2addr)
norm
n Usingspn thisspn feature,spn wespn canspn simplifyspn referencesspn tospn aspn lotspn ofspn macrosspn (and,spn inspn turn,spn reducespn typingspn errors).
subh 4.1.5 :section-4.1.5
n Thespn Macrospn Namespn Itself:spi %?c %?spn andspi %??c %??
norm
n Thespn specialspn symbolsspc %?spn andspc %??spn canspn bespn usedspn tospn referencespn thespn macrospn namespn itselfspn insidespn aspn macrospn expansion,spn thisspn isspn supportedspn forspn bothspn single-n andspn multi-n linespn macros.spc %?spn refersspn tospn thespn macrospn namespn asspeoinvokedn ,spn whereasspc %??spn refersspn tospn thespn macrospn namespn asspeodeclaredn .spn Thespn twospn arespn alwaysspn thespn samespn forspn case-n sensitivespn macros,spn butspn forspn case-n insensitivespn macros,spn theyspn canspn differ.
norm
n Forspn example:
code
%imacro Foo 0         mov %?,%?? %endmacro         foo         FOO
norm
n willspn expandspn to:
code
        mov foo,Foo         mov FOO,Foo
norm
n Thesespn tokensspn canspn bespn usedspn forspn single-n linespn macrosspesifspe definedspe outsidespe anyspe multi-linespeemacros.spn Seespn below.
subh 4.1.6 :section-4.1.6
n Thespn Single-n Linespn Macrospn Name:spi %*?c %*?spn andspi %*??c %*??
norm
n Ifspn thespn tokensspc %?spn andspc %??spn arespn usedspn insidespn aspn multi-n linespn macro,spn theyspn arespn expandedspn beforespn anyspn directivesspn arespn processed.spn Asspn aspn result,
code
%imacro Foo 0       %idefine Bar _%?       mov BAR,bAr %endmacro       foo       mov eax,bar
norm
n willspn expandspn to:
code
      mov _foo,_foo       mov eax,_foo
norm
n whichspn mayspn orspn mayspn notspn bespn whatspn youspn expected.spn Thespn tokensspc %*?spn andspc %*??spn behavespn likespc %?spn andspc %??spn butspn arespn onlyspn expandedspn insidespn single-n linespn macros.spn Thus:
code
%imacro Foo 0       %idefine Bar _%*?       mov BAR,bAr %endmacro       foo       mov eax,bar
norm
n willspn expandspn to:
code
      mov _BAR,_bAr       mov eax,_bar
norm
n Thespc %*?spn canspn bespn usedspn tospn makespn aspn keywordspn "disappear",spn forspn examplespn inspn casespn aspn newspn instructionspn hasspn beenspn usedspn asspn aspn labelspn inspn olderspn code.spn Forspn example:
code
%idefine pause $%*?                 ; Hide the PAUSE instruction
norm
c %*?spn andspc %*??spn werespn introducedspn inspn NASMspn 2.15.04.
subh 4.1.7 :section-4.1.7
n Undefiningspn Single-n Linespn Macros:spi %undefc %undef
norm
n Single-n linespn macrosspn canspn bespn removedspn withspn thespc %undefspn directive.spn Forspn example,spn thespn followingspn sequence:
code
%define foo bar %undef  foo         mov     eax, foo
norm
n willspn expandspn tospn thespn instructionspc mov eax, foon ,spn sincespn afterspc %undefspn thespn macrospc foospn isspn nospn longerspn defined.
norm
n Macrosspn thatspn wouldspn otherwisespn bespn pre-n definedspn canspn bespn undefinedspn onspn thespn command-n linespn usingspn thespn `-n u'spn optionspn onspn thespn NASMspn commandspn line:spn seespx section-2.1.21n sectionspn 2.1.21xesection-2.1.21n .
subh 4.1.8 :section-4.1.8
i preprocessor, variablesn Preprocessorspn Variablesn :spi %assignc %assign
norm
n Anspn alternativespn wayspn tospn definespn single-n linespn macrosspn isspn byspn meansspn ofspn thespc %assignspn commandspn (andspn itsspi case sensitiven case-n insensitivespn counterpartspi %iassignc %iassignn ,spn whichspn differsspn fromspc %assignspn inspn exactlyspn thespn samespn wayspn thatspc %idefinespn differsspn fromspc %definen ).
norm
c %assignspn isspn usedspn tospn definespn single-n linespn macrosspn whichspn takespn nospn parametersspn andspn havespn aspn numericspn value.spn Thisspn valuespn canspn bespn specifiedspn inspn thespn formspn ofspn anspn expression,spn andspn itspn willspn bespn evaluatedspn once,spn whenspn thespc %assignspn directivespn isspn processed.
norm
n Likespc %definen ,spn macrosspn definedspn usingspc %assignspn canspn bespn re-n definedspn later,spn sospn youspn canspn dospn thingsspn like
code
%assign i i+1
norm
n tospn incrementspn thespn numericspn valuespn ofspn aspn macro.
norm
c %assignspn isspn usefulspn forspn controllingspn thespn terminationspn ofspc %repspn preprocessorspn loops:spn seespx section-4.5n sectionspn 4.5xesection-4.5spn forspn anspn examplespn ofspn this.spn Anotherspn usespn forspc %assignspn isspn givenspn inspx section-9.4n sectionspn 9.4xesection-9.4spn andspx section-10.1n sectionspn 10.1xesection-10.1n .
norm
n Thespn expressionspn passedspn tospc %assignspn isspn aspi critical expressionn criticalspn expressionspn (seespx section-3.8n sectionspn 3.8xesection-3.8n ),spn andspn mustspn alsospn evaluatespn tospn aspn purespn numberspn (ratherspn thanspn aspn relocatablespn referencespn suchspn asspn aspn codespn orspn dataspn address,spn orspn anythingspn involvingspn aspn register).
subh 4.1.9 :section-4.1.9
n Definingspn Strings:spi %idefstri %defstrc %defstr
norm
c %defstrn ,spn andspn itsspn case-n insensitivespn counterpartspc %idefstrn ,spn definespn orspn redefinespn aspn single-n linespn macrospn withoutspn parametersspn butspn convertsspn thespn entirespn right-n handspn side,spn afterspn macrospn expansion,spn tospn aspn quotedspn stringspn beforespn definition.
norm
n Forspn example:
code
%defstr test TEST
norm
n isspn equivalentspn to
code
%define test 'TEST'
norm
n Thisspn canspn bespn used,spn forspn example,spn withspn thespc %!spn constructspn (seespx section-4.11.2n sectionspn 4.11.2xesection-4.11.2n ):
code
%defstr PATH %!PATH          ; The operating system PATH variable
subh 4.1.10 :section-4.1.10
n Definingspn Tokens:spi %ideftoki %deftokc %deftok
norm
c %deftokn ,spn andspn itsspn case-n insensitivespn counterpartspc %ideftokn ,spn definespn orspn redefinespn aspn single-n linespn macrospn withoutspn parametersspn butspn convertsspn thespn secondspn parameter,spn afterspn stringspn conversion,spn tospn aspn sequencespn ofspn tokens.
norm
n Forspn example:
code
%deftok test 'TEST'
norm
n isspn equivalentspn to
code
%define test TEST
subh 4.1.11 :section-4.1.11
n Definingspn Aliases:spi %idefaliasi %defaliasc %defalias
norm
c %defaliasn ,spn andspn itsspn case-n insensitivespn counterpartspc %idefaliasn ,spn definespn anspn aliasspn tospn aspn macro,spn i.e.spn equivalentspn ofspn aspn symbolicspn link.
norm
n Whenspn usedspn withspn variousspn macrospn definingspn andspn undefiningspn directives,spn itspn affectsspn thespn aliasedspn macro.spn Thisspn functionalityspn isspn intendedspn forspn beingspn ablespn tospn renamespn macrosspn whilespn retainingspn thespn legacyspn names.
norm
n Whenspn anspn aliasspn isspn defined,spn butspn thespn aliasedspn macrospn isspn thenspn undefined,spn thespn aliasesspn canspn legitimatelyspn pointspn tospn nonexistentspn macros.
norm
n Thespn aliasspn canspn bespn undefinedspn usingspn thespc %undefaliasspn directive.speoAllspn aliasesspn canspn bespn undefinedspn usingspn thespc %clear defaliasspn directive.spn Thisspn includesspn backwardsspn compatibilityspn aliasesspn definedspn byspn NASMspn itself.
norm
n Tospn disablespn aliasesspn withoutspn undefiningspn them,spn usespn thespc %aliases offspn directive.
norm
n Tospn checkspn whetherspn anspn aliasspn isspn defined,spn regardlessspn ofspn thespn existencespn ofspn thespn aliasedspn macro,spn usespc %ifdefaliasn .
norm
n Forspn example:
code
%defalias OLD NEW    ; OLD and NEW both undefined %define NEW 123    ; OLD and NEW both 123 %undef OLD    ; OLD and NEW both undefined %define OLD 456    ; OLD and NEW both 456 %undefalias OLD    ; OLD undefined, NEW defined to 456
subh 4.1.12 :section-4.1.12
i conditional comma operatorn Conditionalspn Commaspn Operatorn :spi %,c %,
norm
n Asspn ofspn versionspn 2.15,spn NASMspn hasspn aspn conditionalspn commaspn operatorspc %,spn thatspn expandsspn tospn aspn commaspeounlessspn followedspn byspn aspn nullspn expansion,spn whichspn allowsspn suppressingspn thespn commaspn beforespn anspn emptyspn argument.spn Thisspn isspn especiallyspn usefulspn withspn greedyspn single-n linespn macros.
norm
n Forspn example,spn allspn thespn expressionsspn belowspn arespn valid:
code
%define greedy(a,b,c+) a + 66 %, b * 3 %, c        db greedy(1,2)          ; db 1 + 66, 2 * 3        db greedy(1,2,3)        ; db 1 + 66, 2 * 3, 3        db greedy(1,2,3,4)      ; db 1 + 66, 2 * 3, 3, 4        db greedy(1,2,3,4,5)    ; db 1 + 66, 2 * 3, 3, 4, 5
head 4.2 :section-4.2
i string manipulation in macrosn Stringspn Manipulationspn inspn Macros
norm
n It'sspn oftenspn usefulspn tospn bespn ablespn tospn handlespn stringsspn inspn macros.spn NASMspn supportsspn aspn fewspn simplespn stringspn handlingspn macrospn operatorsspn fromspn whichspn morespn complexspn operationsspn canspn bespn constructed.
norm
n Allspn thespn stringspn operatorsspn definespn orspn redefinespn aspn valuespn (eitherspn aspn stringspn orspn aspn numericspn value)spn tospn aspn single-n linespn macro.spn Whenspn producingspn aspn stringspn value,spn itspn mayspn changespn thespn stylespn ofspn quotingspn ofspn thespn inputspn stringspn orspn strings,spn andspn possiblyspn usespc \dan escapesspn insidespc `dan quotedspn strings.
subh 4.2.1 :section-4.2.1
i concatenating stringsn Concatenatingspn Stringsn :spi %strcatc %strcat
norm
n Thespc %strcatspn operatorspn concatenatesspn quotedspn stringsspn andspn assignspn themspn tospn aspn single-n linespn macro.
norm
n Forspn example:
code
%strcat alpha "Alpha: ", '12" screen'
norm
n ...spn wouldspn assignspn thespn valuespc 'Alpha: 12" screen'spn tospc alphan .spn Similarly:
code
%strcat beta '"foo"\', "'bar'"
norm
n ...spn wouldspn assignspn thespn valuespc `"foo"\\'bar'`spn tospc betan .
norm
n Thespn usespn ofspn commasspn tospn separatespn stringsspn isspn permittedspn butspn optional.
subh 4.2.2 :section-4.2.2
i string lengthn Stringspn Lengthn :spi %strlenc %strlen
norm
n Thespc %strlenspn operatorspn assignsspn thespn lengthspn ofspn aspn stringspn tospn aspn macro.spn Forspn example:
code
%strlen charcnt 'my string'
norm
n Inspn thisspn example,spc charcntspn wouldspn receivespn thespn valuespn 9,spn justspn asspn ifspn anspc %assignspn hadspn beenspn used.spn Inspn thisspn example,spc 'my string'spn wasspn aspn literalspn stringspn butspn itspn couldspn alsospn havespn beenspn aspn single-n linespn macrospn thatspn expandsspn tospn aspn string,spn asspn inspn thespn followingspn example:
code
%define sometext 'my string' %strlen charcnt sometext
norm
n Asspn inspn thespn firstspn case,spn thisspn wouldspn resultspn inspc charcntspn beingspn assignedspn thespn valuespn ofspn 9.
subh 4.2.3 :section-4.2.3
i extracting substringsn Extractingspn Substringsn :spi %substrc %substr
norm
n Individualspn lettersspn orspn substringsspn inspn stringsspn canspn bespn extractedspn usingspn thespc %substrspn operator.spn Anspn examplespn ofspn itsspn usespn isspn probablyspn morespn usefulspn thanspn thespn description:
code
%substr mychar 'xyzw' 1       ; equivalent to %define mychar 'x' %substr mychar 'xyzw' 2       ; equivalent to %define mychar 'y' %substr mychar 'xyzw' 3       ; equivalent to %define mychar 'z' %substr mychar 'xyzw' 2,2     ; equivalent to %define mychar 'yz' %substr mychar 'xyzw' 2,-1    ; equivalent to %define mychar 'yzw' %substr mychar 'xyzw' 2,-2    ; equivalent to %define mychar 'yz'
norm
n Asspn withspc %strlenspn (seespx section-4.2.2n sectionspn 4.2.2xesection-4.2.2n ),spn thespn firstspn parameterspn isspn thespn single-n linespn macrospn tospn bespn createdspn andspn thespn secondspn isspn thespn string.spn Thespn thirdspn parameterspn specifiesspn thespn firstspn characterspn tospn bespn selected,spn andspn thespn optionalspn fourthspn parameterspn preceededspn byspn comma)spn isspn thespn length.spn Notespn thatspn thespn firstspn indexspn isspn 1,spn notspn 0spn andspn thespn lastspn indexspn isspn equalspn tospn thespn valuespn thatspc %strlenspn wouldspn assignspn givenspn thespn samespn string.spn Indexspn valuesspn outspn ofspn rangespn resultspn inspn anspn emptyspn string.spn Aspn negativespn lengthspn meansspn "untilspn N-n 1spn charactersspn beforespn thespn endspn ofspn string",spn i.e.spc -1spn meansspn untilspn endspn ofspn string,spc -2spn untilspn onespn characterspn before,spn etc.
head 4.3 :section-4.3
i multi-line macrosn Multi-Linespn Macrosn :spi %imacroi %macroc %macro
norm
n Multi-n linespn macrosspn arespn muchspn morespn likespn thespn typespn ofspn macrospn seenspn inspn MASMspn andspn TASM:spn aspn multi-n linespn macrospn definitionspn inspn NASMspn looksspn somethingspn likespn this.
code
%macro  prologue 1         push    ebp         mov     ebp,esp         sub     esp,%1 %endmacro
norm
n Thisspn definesspn aspn C-n likespn functionspn prologuespn asspn aspn macro:spn sospn youspn wouldspn invokespn thespn macrospn withspn aspn callspn suchspn as:
code
myfunc:   prologue 12
norm
n whichspn wouldspn expandspn tospn thespn threespn linesspn ofspn code
code
myfunc: push    ebp         mov     ebp,esp         sub     esp,12
norm
n Thespn numberspc 1spn afterspn thespn macrospn namespn inspn thespc %macrospn linespn definesspn thespn numberspn ofspn parametersspn thespn macrospc prologuespn expectsspn tospn receive.spn Thespn usespn ofspc %1spn insidespn thespn macrospn definitionspn refersspn tospn thespn firstspn parameterspn tospn thespn macrospn call.spn Withspn aspn macrospn takingspn morespn thanspn onespn parameter,spn subsequentspn parametersspn wouldspn bespn referredspn tospn asspc %2n ,spc %3spn andspn sospn on.
norm
n Multi-n linespn macros,spn likespn single-n linespn macros,spn arespi case sensitiven case-sensitiven ,spn unlessspn youspn definespn themspn usingspn thespn alternativespn directivespc %imacron .
norm
n Ifspn youspn needspn tospn passspn aspn commaspn asspeopartspn ofspn aspn parameterspn tospn aspn multi-n linespn macro,spn youspn canspn dospn thatspn byspn enclosingspn thespn entirespn parameterspn inspi braces, around macro parametersn braces.spn Sospn youspn couldspn codespn thingsspn like:
code
%macro  silly 2     %2: db      %1 %endmacro         silly 'a', letter_a             ; letter_a:  db 'a'         silly 'ab', string_ab           ; string_ab: db 'ab'         silly {13,10}, crlf             ; crlf:      db 13,10
norm
n Thespn behaviorspn withspn regardsspn tospn emptyspn argumentsspn atspn thespn endspn ofspn multi-n linespn macrosspn beforespn NASMspn 2.15spn wasspn oftenspn veryspn strange.spn Forspn backwardsspn compatibility,spn NASMspn attemptsspn tospn recognizespn casesspn wherespn thespn legacyspn behaviorspn wouldspn givespn unexpectedspn results,spn andspn issuesspn aspn warning,spn butspn largelyspn triesspn tospn matchspn thespn legacyspn behavior.spn Thisspn canspn bespn disabledspn withspn thespc %pragmaspn (seespx section-4.10.1n sectionspn 4.10.1xesection-4.10.1n ):
code
%pragma preproc sane_empty_expansion
subh 4.3.1 :section-4.3.1
n Overloadingspn Multi-n Linespn Macrosi overloading, multi-line macros
norm
n Asspn withspn single-n linespn macros,spn multi-n linespn macrosspn canspn bespn overloadedspn byspn definingspn thespn samespn macrospn namespn severalspn timesspn withspn differentspn numbersspn ofspn parameters.spn Thisspn time,spn nospn exceptionspn isspn madespn forspn macrosspn withspn nospn parametersspn atspn all.spn Sospn youspn couldspn define
code
%macro  prologue 0         push    ebp         mov     ebp,esp %endmacro
norm
n tospn definespn anspn alternativespn formspn ofspn thespn functionspn prologuespn whichspn allocatesspn nospn localspn stackspn space.
norm
n Sometimes,spn however,spn youspn mightspn wantspn tospn `overload'spn aspn machinespn instruction;spn forspn example,spn youspn mightspn wantspn tospn define
code
%macro  push 2         push    %1         push    %2 %endmacro
norm
n sospn thatspn youspn couldspn code
code
        push    ebx             ; this line is not a macro call         push    eax,ecx         ; but this one is
norm
n Ordinarily,spn NASMspn willspn givespn aspn warningspn forspn thespn firstspn ofspn thespn abovespn twospn lines,spn sincespc pushspn isspn nowspn definedspn tospn bespn aspn macro,spn andspn isspn beingspn invokedspn withspn aspn numberspn ofspn parametersspn forspn whichspn nospn definitionspn hasspn beenspn given.spn Thespn correctspn codespn willspn stillspn bespn generated,spn butspn thespn assemblerspn willspn givespn aspn warning.spn Thisspn warningspn canspn bespn disabledspn byspn thespn usespn ofspn thespc -w-macro-paramsspn command-n linespn optionspn (seespx section-2.1.26n sectionspn 2.1.26xesection-2.1.26n ).
subh 4.3.2 :section-4.3.2
i macro-local labelsn Macro-Localspn Labels
norm
n NASMspn allowsspn youspn tospn definespn labelsspn withinspn aspn multi-n linespn macrospn definitionspn inspn suchspn aspn wayspn asspn tospn makespn themspn localspn tospn thespn macrospn call:spn sospn callingspn thespn samespn macrospn multiplespn timesspn willspn usespn aspn differentspn labelspn eachspn time.spn Youspn dospn thisspn byspn prefixingspi %%c %%spn tospn thespn labelspn name.spn Sospn youspn canspn inventspn anspn instructionspn whichspn executesspn aspc RETspn ifspn thespc Zspn flagspn isspn setspn byspn doingspn this:
code
%macro  retz 0         jnz     %%skip         ret     %%skip: %endmacro
norm
n Youspn canspn callspn thisspn macrospn asspn manyspn timesspn asspn youspn want,spn andspn everyspn timespn youspn callspn itspn NASMspn willspn makespn upspn aspn differentspn `real'spn namespn tospn substitutespn forspn thespn labelspc %%skipn .spn Thespn namesspn NASMspn inventsspn arespn ofspn thespn formspc ..@2345.skipn ,spn wherespn thespn numberspn 2345spn changesspn withspn everyspn macrospn call.spn Thespi ..@c ..@spn prefixspn preventsspn macro-n localspn labelsspn fromspn interferingspn withspn thespn localspn labelspn mechanism,spn asspn describedspn inspx section-3.9n sectionspn 3.9xesection-3.9n .spn Youspn shouldspn avoidspn definingspn yourspn ownspn labelsspn inspn thisspn formspn (thespc ..@spn prefix,spn thenspn aspn number,spn thenspn anotherspn period)spn inspn casespn theyspn interferespn withspn macro-n localspn labels.
norm
n Thesespn labelsspn arespn reallyspn macro-n localspeotokensn ,spn andspn canspn bespn usedspn forspn otherspn purposesspn wherespn aspn tokenspn uniquespn tospn eachspn macrospn invocationspn isspn desired,spn e.g.spn tospn namespn single-n linespn macrosspn withoutspn usingspn thespn contextspn featurespn (x section-4.7.2n sectionspn 4.7.2xesection-4.7.2n ).
subh 4.3.3 :section-4.3.3
i greedy macro parametersn Greedyspn Macrospn Parameters
norm
n Occasionallyspn itspn isspn usefulspn tospn definespn aspn macrospn whichspn lumpsspn itsspn entirespn commandspn linespn intospn onespn parameterspn definition,spn possiblyspn afterspn extractingspn onespn orspn twospn smallerspn parametersspn fromspn thespn front.spn Anspn examplespn mightspn bespn aspn macrospn tospn writespn aspn textspn stringspn tospn aspn filespn inspn MS-n DOS,spn wherespn youspn mightspn wantspn tospn bespn ablespn tospn write
code
        writefile [filehandle],"hello, world",13,10
norm
n NASMspn allowsspn youspn tospn definespn thespn lastspn parameterspn ofspn aspn macrospn tospn bespeogreedyn ,spn meaningspn thatspn ifspn youspn invokespn thespn macrospn withspn morespn parametersspn thanspn itspn expects,spn allspn thespn sparespn parametersspn getspn lumpedspn intospn thespn lastspn definedspn onespn alongspn withspn thespn separatingspn commas.spn Sospn ifspn youspn code:
code
%macro  writefile 2+         jmp     %%endstr   %%str:        db      %2   %%endstr:         mov     dx,%%str         mov     cx,%%endstr-%%str         mov     bx,%1         mov     ah,0x40         int     0x21 %endmacro
norm
n thenspn thespn examplespn callspn tospc writefilespn abovespn willspn workspn asspn expected:spn thespn textspn beforespn thespn firstspn comma,spc [filehandle]n ,spn isspn usedspn asspn thespn firstspn macrospn parameterspn andspn expandedspn whenspc %1spn isspn referredspn to,spn andspn allspn thespn subsequentspn textspn isspn lumpedspn intospc %2spn andspn placedspn afterspn thespc dbn .
norm
n Thespn greedyspn naturespn ofspn thespn macrospn isspn indicatedspn tospn NASMspn byspn thespn usespn ofspn thespi + modifierc +spn signspn afterspn thespn parameterspn countspn onspn thespc %macrospn line.
norm
n Ifspn youspn definespn aspn greedyspn macro,spn youspn arespn effectivelyspn tellingspn NASMspn howspn itspn shouldspn expandspn thespn macrospn givenspeoanyspn numberspn ofspn parametersspn fromspn thespn actualspn numberspn specifiedspn upspn tospn infinity;spn inspn thisspn case,spn forspn example,spn NASMspn nowspn knowsspn whatspn tospn dospn whenspn itspn seesspn aspn callspn tospc writefilespn withspn 2,spn 3,spn 4spn orspn morespn parameters.spn NASMspn willspn takespn thisspn intospn accountspn whenspn overloadingspn macros,spn andspn willspn notspn allowspn youspn tospn definespn anotherspn formspn ofspc writefilespn takingspn 4spn parametersspn (forspn example).
norm
n Ofspn course,spn thespn abovespn macrospn couldspn havespn beenspn implementedspn asspn aspn non-n greedyspn macro,spn inspn whichspn casespn thespn callspn tospn itspn wouldspn havespn hadspn tospn lookspn like
code
          writefile [filehandle], {"hello, world",13,10}
norm
n NASMspn providesspn bothspn mechanismsspn forspn puttingspi commas in macro parametersn commasspn inspn macrospn parametersn ,spn andspn youspn choosespn whichspn onespn youspn preferspn forspn eachspn macrospn definition.
norm
n Seespx section-7.3.1n sectionspn 7.3.1xesection-7.3.1spn forspn aspn betterspn wayspn tospn writespn thespn abovespn macro.
subh 4.3.4 :section-4.3.4
i macro parameters rangen Macrospn Parametersspn Range
norm
n NASMspn allowsspn youspn tospn expandspn parametersspn viaspn specialspn constructionspc %{x:y}spn wherespc xspn isspn thespn firstspn parameterspn indexspn andspc yspn isspn thespn last.spn Anyspn indexspn canspn bespn eitherspn negativespn orspn positivespn butspn mustspn neverspn bespn zero.
norm
n Forspn example
code
%macro mpar 1-*      db %{3:5} %endmacro mpar 1,2,3,4,5,6
norm
n expandsspn tospc 3,4,5spn range.
norm
n Evenspn more,spn thespn parametersspn canspn bespn reversedspn sospn that
code
%macro mpar 1-*      db %{5:3} %endmacro mpar 1,2,3,4,5,6
norm
n expandsspn tospc 5,4,3spn range.
norm
n Butspn evenspn thisspn isspn notspn thespn last.spn Thespn parametersspn canspn bespn addressedspn viaspn negativespn indicesspn sospn NASMspn willspn countspn themspn reversed.spn Thespn onesspn whospn knowspn Pythonspn mayspn seespn thespn analoguespn here.
code
%macro mpar 1-*      db %{-1:-3} %endmacro mpar 1,2,3,4,5,6
norm
n expandsspn tospc 6,5,4spn range.
norm
n Notespn thatspn NASMspn usesspi comman commaspn tospn separatespn parametersspn beingspn expanded.
norm
n Byspn thespn way,spn herespn isspn aspn trickspdaspn youspn mightspn usespn thespn indexspc %{-1:-1n }spn whichspn givesspn youspn thespi lastn lastspn argumentspn passedspn tospn aspn macro.
subh 4.3.5 :section-4.3.5
i default macro parametersn Defaultspn Macrospn Parameters
norm
n NASMspn alsospn allowsspn youspn tospn definespn aspn multi-n linespn macrospn withspn aspeorangespn ofspn allowablespn parameterspn counts.spn Ifspn youspn dospn this,spn youspn canspn specifyspn defaultsspn forspi omitted parametersn omittedspn parametersn .spn So,spn forspn example:
code
%macro  die 0-1 "Painful program death has occurred."         writefile 2,%1         mov     ax,0x4c01         int     0x21 %endmacro
norm
n Thisspn macrospn (whichspn makesspn usespn ofspn thespc writefilespn macrospn definedspn inspx section-4.3.3n sectionspn 4.3.3xesection-4.3.3n )spn canspn bespn calledspn withspn anspn explicitspn errorspn message,spn whichspn itspn willspn displayspn onspn thespn errorspn outputspn streamspn beforespn exiting,spn orspn itspn canspn bespn calledspn withspn nospn parameters,spn inspn whichspn casespn itspn willspn usespn thespn defaultspn errorspn messagespn suppliedspn inspn thespn macrospn definition.
norm
n Inspn general,spn youspn supplyspn aspn minimumspn andspn maximumspn numberspn ofspn parametersspn forspn aspn macrospn ofspn thisspn type;spn thespn minimumspn numberspn ofspn parametersspn arespn thenspn requiredspn inspn thespn macrospn call,spn andspn thenspn youspn providespn defaultsspn forspn thespn optionalspn ones.spn Sospn ifspn aspn macrospn definitionspn beganspn withspn thespn line
code
%macro foobar 1-3 eax,[ebx+2]
norm
n thenspn itspn couldspn bespn calledspn withspn betweenspn onespn andspn threespn parameters,spn andspc %1spn wouldspn alwaysspn bespn takenspn fromspn thespn macrospn call.spc %2n ,spn ifspn notspn specifiedspn byspn thespn macrospn call,spn wouldspn defaultspn tospc eaxn ,spn andspc %3spn ifspn notspn specifiedspn wouldspn defaultspn tospc [ebx+2]n .
norm
n Youspn canspn providespn extraspn informationspn tospn aspn macrospn byspn providingspn toospn manyspn defaultspn parameters:
code
%macro quux 1 something
norm
n Thisspn willspn triggerspn aspn warningspn byspn default;spn seespx section-2.1.26n sectionspn 2.1.26xesection-2.1.26spn forspn morespn information.spn Whenspc quuxspn isspn invoked,spn itspn receivesspn notspn onespn butspn twospn parameters.spc somethingspn canspn bespn referredspn tospn asspc %2n .spn Thespn differencespn betweenspn passingspc somethingspn thisspn wayspn andspn writingspc somethingspn inspn thespn macrospn bodyspn isspn thatspn withspn thisspn wayspc somethingspn isspn evaluatedspn whenspn thespn macrospn isspn defined,spn notspn whenspn itspn isspn expanded.
norm
n Youspn mayspn omitspn parameterspn defaultsspn fromspn thespn macrospn definition,spn inspn whichspn casespn thespn parameterspn defaultspn isspn takenspn tospn bespn blank.spn Thisspn canspn bespn usefulspn forspn macrosspn whichspn canspn takespn aspn variablespn numberspn ofspn parameters,spn sincespn thespi %0c %0spn tokenspn (seespx section-4.3.6n sectionspn 4.3.6xesection-4.3.6n )spn allowsspn youspn tospn determinespn howspn manyspn parametersspn werespn reallyspn passedspn tospn thespn macrospn call.
norm
n Thisspn defaultingspn mechanismspn canspn bespn combinedspn withspn thespn greedy-n parameterspn mechanism;spn sospn thespc diespn macrospn abovespn couldspn bespn madespn morespn powerful,spn andspn morespn useful,spn byspn changingspn thespn firstspn linespn ofspn thespn definitionspn to
code
%macro die 0-1+ "Painful program death has occurred.",13,10
norm
n Thespn maximumspn parameterspn countspn canspn bespn infinite,spn denotedspn byspc *n .spn Inspn thisspn case,spn ofspn course,spn itspn isspn impossiblespn tospn providespn aspeofullspn setspn ofspn defaultspn parameters.spn Examplesspn ofspn thisspn usagespn arespn shownspn inspx section-4.3.8n sectionspn 4.3.8xesection-4.3.8n .
subh 4.3.6 :section-4.3.6
i %0c %0n :spi counting macro parametersn Macrospn Parameterspn Counter
norm
n Thespn parameterspn referencespc %0spn willspn returnspn aspn numericspn constantspn givingspn thespn numberspn ofspn parametersspn received,spn thatspn is,spn ifspc %0spn isspn nspn thenspc %n nspn isspn thespn lastspn parameter.spc %0spn isspn mostlyspn usefulspn forspn macrosspn thatspn canspn takespn aspn variablespn numberspn ofspn parameters.spn Itspn canspn bespn usedspn asspn anspn argumentspn tospc %repspn (seespx section-4.5n sectionspn 4.5xesection-4.5n )spn inspn orderspn tospn iteratespn throughspn allspn thespn parametersspn ofspn aspn macro.spn Examplesspn arespn givenspn inspx section-4.3.8n sectionspn 4.3.8xesection-4.3.8n .
subh 4.3.7 :section-4.3.7
i %00c %00n :spi label preceeding macron Labelspn Preceedingspn Macro
norm
c %00spn willspn returnspn thespn labelspn preceedingspn thespn macrospn invocation,spn ifspn any.spn Thespn labelspn mustspn bespn onspn thespn samespn linespn asspn thespn macrospn invocation,spn mayspn bespn aspn localspn labelspn (seespx section-3.9n sectionspn 3.9xesection-3.9n ),spn andspn needspn notspn endspn inspn aspn colon.
norm
n Ifspc %00spn isspn presentspn anywherespn inspn thespn macrospn body,spn thespn labelspn itselfspn willspn notspn bespn emittedspn byspn NASM.spn Youspn can,spn ofspn course,spn putspc %00:spn explicitlyspn atspn thespn beginningspn ofspn yourspn macro.
subh 4.3.8 :section-4.3.8
i %rotatec %rotaten :spi rotating macro parametersn Rotatingspn Macrospn Parameters
norm
n Unixspn shellspn programmersspn willspn bespn familiarspn withspn thespi shift commandc shiftspn shellspn command,spn whichspn allowsspn thespn argumentsspn passedspn tospn aspn shellspn scriptspn (referencedspn asspc $1n ,spc $2spn andspn sospn on)spn tospn bespn movedspn leftspn byspn onespn place,spn sospn thatspn thespn argumentspn previouslyspn referencedspn asspc $2spn becomesspn availablespn asspc $1n ,spn andspn thespn argumentspn previouslyspn referencedspn asspc $1spn isspn nospn longerspn availablespn atspn all.
norm
n NASMspn providesspn aspn similarspn mechanism,spn inspn thespn formspn ofspc %rotaten .spn Asspn itsspn namespn suggests,spn itspn differsspn fromspn thespn Unixspc shiftspn inspn thatspn nospn parametersspn arespn lost:spn parametersspn rotatedspn offspn thespn leftspn endspn ofspn thespn argumentspn listspn reappearspn onspn thespn right,spn andspn vicespn versa.
norm
c %rotatespn isspn invokedspn withspn aspn singlespn numericspn argumentspn (whichspn mayspn bespn anspn expression).spn Thespn macrospn parametersspn arespn rotatedspn tospn thespn leftspn byspn thatspn manyspn places.spn Ifspn thespn argumentspn tospc %rotatespn isspn negative,spn thespn macrospn parametersspn arespn rotatedspn tospn thespn right.
norm
i iterating over macro parametersn Sospn aspn pairspn ofspn macrosspn tospn savespn andspn restorespn aspn setspn ofspn registersspn mightspn workspn asspn follows:
code
%macro  multipush 1-*   %rep  %0         push    %1   %rotate 1   %endrep %endmacro
norm
n Thisspn macrospn invokesspn thespc PUSHspn instructionspn onspn eachspn ofspn itsspn argumentsspn inspn turn,spn fromspn leftspn tospn right.spn Itspn beginsspn byspn pushingspn itsspn firstspn argument,spc %1n ,spn thenspn invokesspc %rotatespn tospn movespn allspn thespn argumentsspn onespn placespn tospn thespn left,spn sospn thatspn thespn originalspn secondspn argumentspn isspn nowspn availablespn asspc %1n .spn Repeatingspn thisspn procedurespn asspn manyspn timesspn asspn therespn werespn argumentsspn (achievedspn byspn supplyingspc %0spn asspn thespn argumentspn tospc %repn )spn causesspn eachspn argumentspn inspn turnspn tospn bespn pushed.
norm
n Notespn alsospn thespn usespn ofspc *spn asspn thespn maximumspn parameterspn count,spn indicatingspn thatspn therespn isspn nospn upperspn limitspn onspn thespn numberspn ofspn parametersspn youspn mayspn supplyspn tospn thespi multipushc multipushspn macro.
norm
n Itspn wouldspn bespn convenient,spn whenspn usingspn thisspn macro,spn tospn havespn aspc POPspn equivalent,spn whichspeodidn'tspn requirespn thespn argumentsspn tospn bespn givenspn inspn reversespn order.spn Ideally,spn youspn wouldspn writespn thespc multipushspn macrospn call,spn thenspn cut-n and-n pastespn thespn linespn tospn wherespn thespn popspn neededspn tospn bespn done,spn andspn changespn thespn namespn ofspn thespn calledspn macrospn tospc multipopn ,spn andspn thespn macrospn wouldspn takespn carespn ofspn poppingspn thespn registersspn inspn thespn oppositespn orderspn fromspn thespn onespn inspn whichspn theyspn werespn pushed.
norm
n Thisspn canspn bespn donespn byspn thespn followingspn definition:
code
%macro  multipop 1-*   %rep %0   %rotate -1         pop     %1   %endrep %endmacro
norm
n Thisspn macrospn beginsspn byspn rotatingspn itsspn argumentsspn onespn placespn tospn thespeorightn ,spn sospn thatspn thespn originalspeolastspn argumentspn appearsspn asspc %1n .spn Thisspn isspn thenspn popped,spn andspn thespn argumentsspn arespn rotatedspn rightspn again,spn sospn thespn second-n to-n lastspn argumentspn becomesspc %1n .spn Thusspn thespn argumentsspn arespn iteratedspn throughspn inspn reversespn order.
subh 4.3.9 :section-4.3.9
i concatenating macro parametersn Concatenatingspn Macrospn Parameters
norm
n NASMspn canspn concatenatespn macrospn parametersspn andspn macrospn indirectionspn constructsspn onspn tospn otherspn textspn surroundingspn them.spn Thisspn allowsspn youspn tospn declarespn aspn familyspn ofspn symbols,spn forspn example,spn inspn aspn macrospn definition.spn If,spn forspn example,spn youspn wantedspn tospn generatespn aspn tablespn ofspn keyspn codesspn alongspn withspn offsetsspn intospn thespn table,spn youspn couldspn codespn somethingspn like
code
%macro keytab_entry 2     keypos%1    equ     $-keytab                 db      %2 %endmacro keytab:           keytab_entry F1,128+1           keytab_entry F2,128+2           keytab_entry Return,13
norm
n whichspn wouldspn expandspn to
code
keytab: keyposF1        equ     $-keytab                 db     128+1 keyposF2        equ     $-keytab                 db      128+2 keyposReturn    equ     $-keytab                 db      13
norm
n Youspn canspn justspn asspn easilyspn concatenatespn textspn onspn tospn thespn otherspn endspn ofspn aspn macrospn parameter,spn byspn writingspc %1foon .
norm
n Ifspn youspn needspn tospn appendspn aspeodigitspn tospn aspn macrospn parameter,spn forspn examplespn definingspn labelsspc foo1spn andspc foo2spn whenspn passedspn thespn parameterspc foon ,spn youspn can'tspn codespc %11spn becausespn thatspn wouldspn bespn takenspn asspn thespn eleventhspn macrospn parameter.spn Instead,spn youspn mustspn codespi braces, after % signc %{1}1n ,spn whichspn willspn separatespn thespn firstspc 1spn (givingspn thespn numberspn ofspn thespn macrospn parameter)spn fromspn thespn secondspn (literalspn textspn tospn bespn concatenatedspn tospn thespn parameter).
norm
n Thisspn concatenationspn canspn alsospn bespn appliedspn tospn otherspn preprocessorspn in-n linespn objects,spn suchspn asspn macro-n localspn labelsspn (x section-4.3.2n sectionspn 4.3.2xesection-4.3.2n )spn andspn context-n localspn labelsspn (x section-4.7.2n sectionspn 4.7.2xesection-4.7.2n ).spn Inspn allspn cases,spn ambiguitiesspn inspn syntaxspn canspn bespn resolvedspn byspn enclosingspn everythingspn afterspn thespc %spn signspn andspn beforespn thespn literalspn textspn inspn braces:spn sospc %{%foo}barspn concatenatesspn thespn textspc barspn tospn thespn endspn ofspn thespn realspn namespn ofspn thespn macro-n localspn labelspc %%foon .spn (Thisspn isspn unnecessary,spn sincespn thespn formspn NASMspn usesspn forspn thespn realspn namesspn ofspn macro-n localspn labelsspn meansspn thatspn thespn twospn usagesspc %{%foo}barspn andspc %%foobarspn wouldspn bothspn expandspn tospn thespn samespn thingspn anyway;spn nevertheless,spn thespn capabilityspn isspn there.)
norm
n Thespn single-n linespn macrospn indirectionspn construct,spc %[...]spn (x section-4.1.3n sectionspn 4.1.3xesection-4.1.3n ),spn behavesspn thespn samespn wayspn asspn macrospn parametersspn forspn thespn purposespn ofspn concatenation.
norm
n Seespn alsospn thespc %+spn operator,spx section-4.1.4n sectionspn 4.1.4xesection-4.1.4n .
subh 4.3.10 :section-4.3.10
i condition codes as macro parametersn Conditionspn Codesspn asspn Macrospn Parameters
norm
n NASMspn canspn givespn specialspn treatmentspn tospn aspn macrospn parameterspn whichspn containsspn aspn conditionspn code.spn Forspn aspn start,spn youspn canspn referspn tospn thespn macrospn parameterspc %1spn byspn meansspn ofspn thespn alternativespn syntaxspi %+1c %+1n ,spn whichspn informsspn NASMspn thatspn thisspn macrospn parameterspn isspn supposedspn tospn containspn aspn conditionspn code,spn andspn willspn causespn thespn preprocessorspn tospn reportspn anspn errorspn messagespn ifspn thespn macrospn isspn calledspn withspn aspn parameterspn whichspn isspeonotspn aspn validspn conditionspn code.
norm
n Farspn morespn usefully,spn though,spn youspn canspn referspn tospn thespn macrospn parameterspn byspn meansspn ofspi %+1c %-1n ,spn whichspn NASMspn willspn expandspn asspn thespeoinversespn conditionspn code.spn Sospn thespc retzspn macrospn definedspn inspx section-4.3.2n sectionspn 4.3.2xesection-4.3.2spn canspn bespn replacedspn byspn aspn generalspi conditional-return macron conditional-returnspn macrospn likespn this:
code
%macro  retc 1         j%-1    %%skip         ret   %%skip: %endmacro
norm
n Thisspn macrospn canspn nowspn bespn invokedspn usingspn callsspn likespc retc nen ,spn whichspn willspn causespn thespn conditional-n jumpspn instructionspn inspn thespn macrospn expansionspn tospn comespn outspn asspc JEn ,spn orspc retc pospn whichspn willspn makespn thespn jumpspn aspc JPEn .
norm
n Thespc %+1spn macro-n parameterspn referencespn isspn quitespn happyspn tospn interpretspn thespn argumentsspc CXZspn andspc ECXZspn asspn validspn conditionspn codes;spn however,spc %-1spn willspn reportspn anspn errorspn ifspn passedspn eitherspn ofspn these,spn becausespn nospn inversespn conditionspn codespn exists.
subh 4.3.11 :section-4.3.11
i disabling listing expansionn Disablingspn Listingspn Expansioni .nolist
norm
n Whenspn NASMspn isspn generatingspn aspn listingspn filespn fromspn yourspn program,spn itspn willspn generallyspn expandspn multi-n linespn macrosspn byspn meansspn ofspn writingspn thespn macrospn callspn andspn thenspn listingspn eachspn linespn ofspn thespn expansion.spn Thisspn allowsspn youspn tospn seespn whichspn instructionsspn inspn thespn macrospn expansionspn arespn generatingspn whatspn code;spn however,spn forspn somespn macrosspn thisspn cluttersspn thespn listingspn upspn unnecessarily.
norm
n NASMspn thereforespn providesspn thespc .nolistspn qualifier,spn whichspn youspn canspn includespn inspn aspn macrospn definitionspn tospn inhibitspn thespn expansionspn ofspn thespn macrospn inspn thespn listingspn file.spn Thespc .nolistspn qualifierspn comesspn directlyspn afterspn thespn numberspn ofspn parameters,spn likespn this:
code
%macro foo 1.nolist
norm
n Orspn likespn this:
code
%macro bar 1-5+.nolist a,b,c,d,e,f,g,h
subh 4.3.12 :section-4.3.12
n Undefiningspn Multi-n Linespn Macros:spi %unmacroc %unmacro
norm
n Multi-n linespn macrosspn canspn bespn removedspn withspn thespc %unmacrospn directive.spn Unlikespn thespc %undefspn directive,spn however,spc %unmacrospn takesspn anspn argumentspn specification,spn andspn willspn onlyspn removespi exact matchesn exactspn matchesspn withspn thatspn argumentspn specification.
norm
n Forspn example:
code
%macro foo 1-3         ; Do something %endmacro %unmacro foo 1-3
norm
n removesspn thespn previouslyspn definedspn macrospc foon ,spn but
code
%macro bar 1-3         ; Do something %endmacro %unmacro bar 1
norm
n doesspeonotspn removespn thespn macrospc barn ,spn sincespn thespn argumentspn specificationspn doesspn notspn matchspn exactly.
head 4.4 :section-4.4
i conditional assemblyn Conditionalspn Assemblyi %if
norm
n Similarlyspn tospn thespn Cspn preprocessor,spn NASMspn allowsspn sectionsspn ofspn aspn sourcespn filespn tospn bespn assembledspn onlyspn ifspn certainspn conditionsspn arespn met.spn Thespn generalspn syntaxspn ofspn thisspn featurespn looksspn likespn this:
code
%if<condition>     ; some code which only appears if <condition> is met %elif<condition2>     ; only appears if <condition> is not met but <condition2> is %else     ; this appears if neither <condition> nor <condition2> was met %endif
norm
n Thespn inversespn formsspi %ifnc %ifnspn andspi %elifnc %elifnspn arespn alsospn supported.
norm
n Thespi %elsec %elsespn clausespn isspn optional,spn asspn isspn thespi %elifc %elifspn clause.spn Youspn canspn havespn morespn thanspn onespc %elifspn clausespn asspn well.
norm
n Therespn arespn aspn numberspn ofspn variantsspn ofspn thespc %ifspn directive.spn Eachspn hasspn itsspn correspondingspc %elifn ,spc %ifnn ,spn andspc %elifnspn directives;spn forspn example,spn thespn equivalentsspn tospn thespc %ifdefspn directivespn arespc %elifdefn ,spc %ifndefn ,spn andspc %elifndefn .
subh 4.4.1 :section-4.4.1
i %ifdefc %ifdefn :spn Testingspn Single-n Linespn Macrospn Existencei testing, single-line macro existence
norm
n Beginningspn aspn conditional-n assemblyspn blockspn withspn thespn linespc %ifdef MACROspn willspn assemblespn thespn subsequentspn codespn if,spn andspn onlyspn if,spn aspn single-n linespn macrospn calledspc MACROspn isspn defined.spn Ifspn not,spn thenspn thespc %elifspn andspc %elsespn blocksspn (ifspn any)spn willspn bespn processedspn instead.
norm
n Forspn example,spn whenspn debuggingspn aspn program,spn youspn mightspn wantspn tospn writespn codespn suchspn as
code
          ; perform some function %ifdef DEBUG           writefile 2,"Function performed successfully",13,10 %endif           ; go and do something else
norm
n Thenspn youspn couldspn usespn thespn command-n linespn optionspc -dDEBUGspn tospn createspn aspn versionspn ofspn thespn programspn whichspn producedspn debuggingspn messages,spn andspn removespn thespn optionspn tospn generatespn thespn finalspn releasespn versionspn ofspn thespn program.
norm
n Youspn canspn testspn forspn aspn macrospeonotspn beingspn definedspn byspn usingspi %ifndefc %ifndefspn insteadspn ofspc %ifdefn .spn Youspn canspn alsospn testspn forspn macrospn definitionsspn inspc %elifspn blocksspn byspn usingspi %elifdefc %elifdefspn andspi %elifndefc %elifndefn .
subh 4.4.2 :section-4.4.2
i %ifmacroc %ifmacron :spn Testingspn Multi-n Linespn Macrospn Existencei testing, multi-line macro existence
norm
n Thespc %ifmacrospn directivespn operatesspn inspn thespn samespn wayspn asspn thespc %ifdefspn directive,spn exceptspn thatspn itspn checksspn forspn thespn existencespn ofspn aspn multi-n linespn macro.
norm
n Forspn example,spn youspn mayspn bespn workingspn withspn aspn largespn projectspn andspn notspn havespn controlspn overspn thespn macrosspn inspn aspn library.spn Youspn mayspn wantspn tospn createspn aspn macrospn withspn onespn namespn ifspn itspn doesn'tspn alreadyspn exist,spn andspn anotherspn namespn ifspn onespn withspn thatspn namespn doesspn exist.
norm
n Thespc %ifmacrospn isspn consideredspn truespn ifspn definingspn aspn macrospn withspn thespn givenspn namespn andspn numberspn ofspn argumentsspn wouldspn causespn aspn definitionsspn conflict.spn Forspn example:
code
%ifmacro MyMacro 1-3      %error "MyMacro 1-3" causes a conflict with an existing macro. %else      %macro MyMacro 1-3              ; insert code to define the macro      %endmacro %endif
norm
n Thisspn willspn createspn thespn macrospn "MyMacrospn 1-n 3"spn ifspn nospn macrospn alreadyspn existsspn whichspn wouldspn conflictspn withspn it,spn andspn emitsspn aspn warningspn ifspn therespn wouldspn bespn aspn definitionspn conflict.
norm
n Youspn canspn testspn forspn thespn macrospn notspn existingspn byspn usingspn thespi %ifnmacroc %ifnmacrospn insteadspn ofspc %ifmacron .spn Additionalspn testsspn canspn bespn performedspn inspc %elifspn blocksspn byspn usingspi %elifmacroc %elifmacrospn andspi %elifnmacroc %elifnmacron .
subh 4.4.3 :section-4.4.3
i %ifctxc %ifctxn :spn Testingspn thespn Contextspn Stacki testing, context stack
norm
n Thespn conditional-n assemblyspn constructspc %ifctxspn willspn causespn thespn subsequentspn codespn tospn bespn assembledspn ifspn andspn onlyspn ifspn thespn topspn contextspn onspn thespn preprocessor'sspn contextspn stackspn hasspn thespn samespn namespn asspn onespn ofspn thespn arguments.spn Asspn withspc %ifdefn ,spn thespn inversespn andspc %elifspn formsspi %ifnctxc %ifnctxn ,spi %elifctxc %elifctxspn andspi %elifnctxc %elifnctxspn arespn alsospn supported.
norm
n Forspn morespn detailsspn ofspn thespn contextspn stack,spn seespx section-4.7n sectionspn 4.7xesection-4.7n .spn Forspn aspn samplespn usespn ofspc %ifctxn ,spn seespx section-4.7.6n sectionspn 4.7.6xesection-4.7.6n .
subh 4.4.4 :section-4.4.4
i %ifc %ifn :spn Testingspn Arbitraryspn Numericspn Expressionsi testing, arbitrary numeric expressions
norm
n Thespn conditional-n assemblyspn constructspc %if exprspn willspn causespn thespn subsequentspn codespn tospn bespn assembledspn ifspn andspn onlyspn ifspn thespn valuespn ofspn thespn numericspn expressionspc exprspn isspn non-n zero.spn Anspn examplespn ofspn thespn usespn ofspn thisspn featurespn isspn inspn decidingspn whenspn tospn breakspn outspn ofspn aspc %repspn preprocessorspn loop:spn seespx section-4.5n sectionspn 4.5xesection-4.5spn forspn aspn detailedspn example.
norm
n Thespn expressionspn givenspn tospc %ifn ,spn andspn itsspn counterpartspi %elifc %elifn ,spn isspn aspn criticalspn expressionspn (seespx section-3.8n sectionspn 3.8xesection-3.8n ).
norm
n Likespn otherspc %ifspn constructs,spc %ifspn hasspn aspn counterpartspi %elifc %elifn ,spn andspn negativespn formsspi %ifnc %ifnspn andspi %elifnc %elifnn .
subh 4.4.5 :section-4.4.5
i %ifidnc %ifidnspn andspi %ifidnic %ifidnin :spn Testingspn Exactspn Textspn Identityi testing, exact text identity
norm
n Thespn constructspc %ifidn text1,text2spn willspn causespn thespn subsequentspn codespn tospn bespn assembledspn ifspn andspn onlyspn ifspc text1spn andspc text2n ,spn afterspn expandingspn single-n linespn macros,spn arespn identicalspn piecesspn ofspn text.spn Differencesspn inspn whitespn spacespn arespn notspn counted.
norm
c %ifidnispn isspn similarspn tospc %ifidnn ,spn butspn isspi case sensitiven case-insensitiven .
norm
n Forspn example,spn thespn followingspn macrospn pushesspn aspn registerspn orspn numberspn onspn thespn stack,spn andspn allowsspn youspn tospn treatspc IPspn asspn aspn realspn register:
code
%macro  pushparam 1   %ifidni %1,ip         call    %%label   %%label:   %else         push    %1   %endif %endmacro
norm
n Likespn otherspc %ifspn constructs,spc %ifidnspn hasspn aspn counterpartspi %elifidnc %elifidnn ,spn andspn negativespn formsspi %ifnidnc %ifnidnspn andspi %elifnidnc %elifnidnn .spn Similarly,spc %ifidnispn hasspn counterpartsspi %elifidnic %elifidnin ,spi %ifnidnic %ifnidnispn andspi %elifnidnic %elifnidnin .
subh 4.4.6 :section-4.4.6
i %ifidc %ifidn ,spi %ifnumc %ifnumn ,spi %ifstrc %ifstrn :spn Testingspn Tokenspn Typesi testing, token types
norm
n Somespn macrosspn willspn wantspn tospn performspn differentspn tasksspn dependingspn onspn whetherspn theyspn arespn passedspn aspn number,spn aspn string,spn orspn anspn identifier.spn Forspn example,spn aspn stringspn outputspn macrospn mightspn wantspn tospn bespn ablespn tospn copespn withspn beingspn passedspn eitherspn aspn stringspn constantspn orspn aspn pointerspn tospn anspn existingspn string.
norm
n Thespn conditionalspn assemblyspn constructspc %ifidn ,spn takingspn onespn parameterspn (whichspn mayspn bespn blank),spn assemblesspn thespn subsequentspn codespn ifspn andspn onlyspn ifspn thespn firstspn tokenspn inspn thespn parameterspn existsspn andspn isspn anspn identifier.spc %ifnumspn worksspn similarly,spn butspn testsspn forspn thespn tokenspn beingspn aspn numericspn constant;spc %ifstrspn testsspn forspn itspn beingspn aspn string.
norm
n Forspn example,spn thespc writefilespn macrospn definedspn inspx section-4.3.3n sectionspn 4.3.3xesection-4.3.3spn canspn bespn extendedspn tospn takespn advantagespn ofspc %ifstrspn inspn thespn followingspn fashion:
code
%macro writefile 2-3+   %ifstr %2         jmp     %%endstr     %if %0 = 3       %%str:    db      %2,%3     %else       %%str:    db      %2     %endif       %%endstr: mov     dx,%%str                 mov     cx,%%endstr-%%str   %else                 mov     dx,%2                 mov     cx,%3   %endif                 mov     bx,%1                 mov     ah,0x40                 int     0x21 %endmacro
norm
n Thenspn thespc writefilespn macrospn canspn copespn withspn beingspn calledspn inspn eitherspn ofspn thespn followingspn twospn ways:
code
        writefile [file], strpointer, length         writefile [file], "hello", 13, 10
norm
n Inspn thespn first,spc strpointerspn isspn usedspn asspn thespn addressspn ofspn anspn already-n declaredspn string,spn andspc lengthspn isspn usedspn asspn itsspn length;spn inspn thespn second,spn aspn stringspn isspn givenspn tospn thespn macro,spn whichspn thereforespn declaresspn itspn itselfspn andspn worksspn outspn thespn addressspn andspn lengthspn forspn itself.
norm
n Notespn thespn usespn ofspc %ifspn insidespn thespc %ifstrn :spn thisspn isspn tospn detectspn whetherspn thespn macrospn wasspn passedspn twospn argumentsspn (sospn thespn stringspn wouldspn bespn aspn singlespn stringspn constant,spn andspc db %2spn wouldspn bespn adequate)spn orspn morespn (inspn whichspn case,spn allspn butspn thespn firstspn twospn wouldspn bespn lumpedspn togetherspn intospc %3n ,spn andspc db %2,%3spn wouldspn bespn required).
norm
n Thespn usualspi %elifidi %elifnumi %elifstrc %elifn ...,spi %ifnidi %ifnnumi %ifnstrc %ifnn ...,spn andspi %elifnidi %elifnnumi %elifnstrc %elifnn ...spn versionsspn existspn forspn eachspn ofspc %ifidn ,spc %ifnumspn andspc %ifstrn .
subh 4.4.7 :section-4.4.7
i %iftokenc %iftokenn :spn Testspn forspn aspn Singlespn Token
norm
n Somespn macrosspn willspn wantspn tospn dospn differentspn thingsspn dependingspn onspn ifspn itspn isspn passedspn aspn singlespn tokenspn (e.g.spn pastespn itspn tospn somethingspn elsespn usingspc %+n )spn versusspn aspn multi-n tokenspn sequence.
norm
n Thespn conditionalspn assemblyspn constructspc %iftokenspn assemblesspn thespn subsequentspn codespn ifspn andspn onlyspn ifspn thespn expandedspn parametersspn consistspn ofspn exactlyspn onespn token,spn possiblyspn surroundedspn byspn whitespace.
norm
n Forspn example:
code
%iftoken 1
norm
n willspn assemblespn thespn subsequentspn code,spn but
code
%iftoken -1
norm
n willspn not,spn sincespc -1spn containsspn twospn tokens:spn thespn unaryspn minusspn operatorspc -n ,spn andspn thespn numberspc 1n .
norm
n Thespn usualspi %eliftokenc %eliftokenn ,spi %ifntokenc %ifntokenn ,spn andspi %elifntokenc %elifntokenspn variantsspn arespn alsospn provided.
subh 4.4.8 :section-4.4.8
i %ifemptyc %ifemptyn :spn Testspn forspn Emptyspn Expansion
norm
n Thespn conditionalspn assemblyspn constructspc %ifemptyspn assemblesspn thespn subsequentspn codespn ifspn andspn onlyspn ifspn thespn expandedspn parametersspn dospn notspn containspn anyspn tokensspn atspn all,spn whitespacespn excepted.
norm
n Thespn usualspi %elifemptyc %elifemptyn ,spi %ifnemptyc %ifnemptyn ,spn andspi %elifnemptyc %elifnemptyspn variantsspn arespn alsospn provided.
subh 4.4.9 :section-4.4.9
i %ifenvc %ifenvn :spn Testspn Ifspn Environmentspn Variablespn Exists
norm
n Thespn conditionalspn assemblyspn constructspc %ifenvspn assemblesspn thespn subsequentspn codespn ifspn andspn onlyspn ifspn thespn environmentspn variablespn referencedspn byspn thespc %!eovariablespn directivespn exists.
norm
n Thespn usualspi %elifenvc %elifenvn ,spi %ifnenvc %ifnenvn ,spn andspi %elifnenvc %elifnenvspn variantsspn arespn alsospn provided.
norm
n Justspn asspn forspc %!eovariablespn thespn argumentspn shouldspn bespn writtenspn asspn aspn stringspn ifspn itspn containsspn charactersspn thatspn wouldspn notspn bespn legalspn inspn anspn identifier.spn Seespx section-4.11.2n sectionspn 4.11.2xesection-4.11.2n .
head 4.5 :section-4.5
i preprocessor, loopsn Preprocessorspn Loopsi repeating coden :spi %repc %rep
norm
n NASM'sspc TIMESspn prefix,spn thoughspn useful,spn cannotspn bespn usedspn tospn invokespn aspn multi-n linespn macrospn multiplespn times,spn becausespn itspn isspn processedspn byspn NASMspn afterspn macrosspn havespn alreadyspn beenspn expanded.spn Thereforespn NASMspn providesspn anotherspn formspn ofspn loop,spn thisspn timespn atspn thespn preprocessorspn level:spc %repn .
norm
n Thespn directivesspc %repspn andspi %endrepc %endrepspn (c %repspn takesspn aspn numericspn argument,spn whichspn canspn bespn anspn expression;spc %endrepspn takesspn nospn arguments)spn canspn bespn usedspn tospn enclosespn aspn chunkspn ofspn code,spn whichspn isspn thenspn replicatedspn asspn manyspn timesspn asspn specifiedspn byspn thespn preprocessor:
code
%assign i 0 %rep    64         inc     word [table+2*i] %assign i i+1 %endrep
norm
n Thisspn willspn generatespn aspn sequencespn ofspn 64spc INCspn instructions,spn incrementingspn everyspn wordspn ofspn memoryspn fromspc [table]spn tospc [table+126]n .
norm
n Forspn morespn complexspn terminationspn conditions,spn orspn tospn breakspn outspn ofspn aspn repeatspn loopspn partspn wayspn along,spn youspn canspn usespn thespi %exitrepc %exitrepspn directivespn tospn terminatespn thespn loop,spn likespn this:
code
fibonacci: %assign i 0 %assign j 1 %rep 100 %if j > 65535     %exitrep %endif         dw j %assign k j+i %assign i j %assign j k %endrep fib_number equ ($-fibonacci)/2
norm
n Thisspn producesspn aspn listspn ofspn allspn thespn Fibonaccispn numbersspn thatspn willspn fitspn inspn 16spn bits.spn Notespn thatspn aspn maximumspn repeatspn countspn mustspn stillspn bespn givenspn tospc %repn .spn Thisspn isspn tospn preventspn thespn possibilityspn ofspn NASMspn gettingspn intospn anspn infinitespn loopspn inspn thespn preprocessor,spn whichspn (onspn multitaskingspn orspn multi-n userspn systems)spn wouldspn typicallyspn causespn allspn thespn systemspn memoryspn tospn bespn graduallyspn usedspn upspn andspn otherspn applicationsspn tospn startspn crashing.
norm
n Notespn thespn maximumspn repeatspn countspn isspn limitedspn tospn thespn valuespn specifiedspn byspn thespc --limit-repspn optionspn orspc %pragma limit repn ,spn seespx section-2.1.31n sectionspn 2.1.31xesection-2.1.31n .
head 4.6 :section-4.6
n Sourcespn Filesspn andspn Dependencies
norm
n Thesespn commandsspn allowspn youspn tospn splitspn yourspn sourcesspn intospn multiplespn files.
subh 4.6.1 :section-4.6.1
i %includec %includen :spi including other filesn Includingspn Otherspn Files
norm
n Using,spn oncespn again,spn aspn veryspn similarspn syntaxspn tospn thespn Cspn preprocessor,spn NASM'sspn preprocessorspn letsspn youspn includespn otherspn sourcespn filesspn intospn yourspn code.spn Thisspn isspn donespn byspn thespn usespn ofspn thespi %includec %includespn directive:
code
%include "macros.mac"
norm
n willspn includespn thespn contentsspn ofspn thespn filespc macros.macspn intospn thespn sourcespn filespn containingspn thespc %includespn directive.
norm
n Includespn filesspn arespi searching for include filesn searchedspn forspn inspn thespn currentspn directoryspn (thespn directoryspn you'respn inspn whenspn youspn runspn NASM,spn asspn opposedspn tospn thespn locationspn ofspn thespn NASMspn executablespn orspn thespn locationspn ofspn thespn sourcespn file),spn plusspn anyspn directoriesspn specifiedspn onspn thespn NASMspn commandspn linespn usingspn thespc -ispn option.
norm
n Thespn standardspn Cspn idiomspn forspn preventingspn aspn filespn beingspn includedspn morespn thanspn oncespn isspn justspn asspn applicablespn inspn NASM:spn ifspn thespn filespc macros.macspn hasspn thespn form
code
%ifndef MACROS_MAC     %define MACROS_MAC     ; now define some macros %endif
norm
n thenspn includingspn thespn filespn morespn thanspn oncespn willspn notspn causespn errors,spn becausespn thespn secondspn timespn thespn filespn isspn includedspn nothingspn willspn happenspn becausespn thespn macrospc MACROS_MACspn willspn alreadyspn bespn defined.
norm
n Youspn canspn forcespn aspn filespn tospn bespn includedspn evenspn ifspn therespn isspn nospc %includespn directivespn thatspn explicitlyspn includesspn it,spn byspn usingspn thespi -pc -pspn optionspn onspn thespn NASMspn commandspn linespn (seespx section-2.1.19n sectionspn 2.1.19xesection-2.1.19n ).
subh 4.6.2 :section-4.6.2
i %pathsearchc %pathsearchn :spn Searchspn thespn Includespn Path
norm
n Thespc %pathsearchspn directivespn takesspn aspn single-n linespn macrospn namespn andspn aspn filename,spn andspn declarespn orspn redefinesspn thespn specifiedspn single-n linespn macrospn tospn bespn thespn include-n path-n resolvedspn versionspn ofspn thespn filename,spn ifspn thespn filespn existsspn (otherwise,spn itspn isspn passedspn unchanged.)
norm
n Forspn example,
code
%pathsearch MyFoo "foo.bin"
norm
n ...spn withspc -Ibins/spn inspn thespn includespn pathspn mayspn endspn upspn definingspn thespn macrospc MyFoospn tospn bespc "bins/foo.bin"n .
subh 4.6.3 :section-4.6.3
i %dependc %dependn :spn Addspn Dependentspn Files
norm
n Thespc %dependspn directivespn takesspn aspn filenamespn andspn addsspn itspn tospn thespn listspn ofspn filesspn tospn bespn emittedspn asspn dependencyspn generationspn whenspn thespc -Mspn optionsspn andspn itsspn relativesspn (seespx section-2.1.5n sectionspn 2.1.5xesection-2.1.5n )spn arespn used.spn Itspn producesspn nospn output.
norm
n Thisspn isspn generallyspn usedspn inspn conjunctionspn withspc %pathsearchn .spn Forspn example,spn aspn simplifiedspn versionspn ofspn thespn standardspn macrospn wrapperspn forspn thespc INCBINspn directivespn looksspn like:
code
%imacro incbin 1-2+ 0 %pathsearch dep %1 %depend dep         incbin dep,%2 %endmacro
norm
n Thisspn firstspn resolvesspn thespn locationspn ofspn thespn filespn intospn thespn macrospc depn ,spn thenspn addsspn itspn tospn thespn dependencyspn lists,spn andspn finallyspn issuesspn thespn assembler-n levelspc INCBINspn directive.
subh 4.6.4 :section-4.6.4
i %usec %usen :spn Includespn Standardspn Macrospn Package
norm
n Thespc %usespn directivespn isspn similarspn tospc %includen ,spn butspn ratherspn thanspn includingspn thespn contentsspn ofspn aspn file,spn itspn includesspn aspn namedspn standardspn macrospn package.spn Thespn standardspn macrospn packagesspn arespn partspn ofspn NASM,spn andspn arespn describedspn inspx chapter-6n chapterspn 6xechapter-6n .
norm
n Unlikespn thespc %includespn directive,spn packagespn namesspn forspn thespc %usespn directivespn dospn notspn requirespn quotes,spn butspn quotesspn arespn permitted.spn Inspn NASMspn 2.04spn andspn 2.05spn thespn unquotedspn formspn wouldspn bespn macro-n expanded;spn thisspn isspn nospn longerspn true.spn Thus,spn thespn followingspn linesspn arespn equivalent:
code
%use altreg %use 'altreg'
norm
n Standardspn macrospn packagesspn arespn protectedspn fromspn multiplespn inclusion.spn Whenspn aspn standardspn macrospn packagespn isspn used,spn aspn testablespn single-n linespn macrospn ofspn thespn formspc __?USE_eopackagec ?__spn isspn alsospn defined,spn seespx section-5.7n sectionspn 5.7xesection-5.7n .
head 4.7 :section-4.7
n Thespi context stackn Contextspn Stack
norm
n Havingspn labelsspn thatspn arespn localspn tospn aspn macrospn definitionspn isspn sometimesspn notspn quitespn powerfulspn enough:spn sometimesspn youspn wantspn tospn bespn ablespn tospn sharespn labelsspn betweenspn severalspn macrospn calls.spn Anspn examplespn mightspn bespn aspc REPEATspn ...spc UNTILspn loop,spn inspn whichspn thespn expansionspn ofspn thespc REPEATspn macrospn wouldspn needspn tospn bespn ablespn tospn referspn tospn aspn labelspn whichspn thespc UNTILspn macrospn hadspn defined.spn However,spn forspn suchspn aspn macrospn youspn wouldspn alsospn wantspn tospn bespn ablespn tospn nestspn thesespn loops.
norm
n NASMspn providesspn thisspn levelspn ofspn powerspn byspn meansspn ofspn aspescontextspeestackn .spn Thespn preprocessorspn maintainsspn aspn stackspn ofspeocontextsn ,spn eachspn ofspn whichspn isspn characterizedspn byspn aspn name.spn Youspn addspn aspn newspn contextspn tospn thespn stackspn usingspn thespi %pushc %pushspn directive,spn andspn removespn onespn usingspi %popc %popn .spn Youspn canspn definespn labelsspn thatspn arespn localspn tospn aspn particularspn contextspn onspn thespn stack.
subh 4.7.1 :section-4.7.1
i %pushc %pushspn andspi %popc %popn :spi creating contextsi removing contextsn Creatingspn andspn Removingspn Contexts
norm
n Thespc %pushspn directivespn isspn usedspn tospn createspn aspn newspn contextspn andspn placespn itspn onspn thespn topspn ofspn thespn contextspn stack.spc %pushspn takesspn anspn optionalspn argument,spn whichspn isspn thespn namespn ofspn thespn context.spn Forspn example:
code
%push    foobar
norm
n Thisspn pushesspn aspn newspn contextspn calledspc foobarspn onspn thespn stack.spn Youspn canspn havespn severalspn contextsspn onspn thespn stackspn withspn thespn samespn name:spn theyspn canspn stillspn bespn distinguished.spn Ifspn nospn namespn isspn given,spn thespn contextspn isspn unnamedspn (thisspn isspn normallyspn usedspn whenspn bothspn thespc %pushspn andspn thespc %popspn arespn insidespn aspn singlespn macrospn definition.)
norm
n Thespn directivespc %popn ,spn takingspn onespn optionalspn argument,spn removesspn thespn topspn contextspn fromspn thespn contextspn stackspn andspn destroysspn it,spn alongspn withspn anyspn labelsspn associatedspn withspn it.spn Ifspn anspn argumentspn isspn given,spn itspn mustspn matchspn thespn namespn ofspn thespn currentspn context,spn otherwisespn itspn willspn issuespn anspn error.
subh 4.7.2 :section-4.7.2
i context-local labelsn Context-Localspn Labels
norm
n Justspn asspn thespn usagespc %%foospn definesspn aspn labelspn whichspn isspn localspn tospn thespn particularspn macrospn callspn inspn whichspn itspn isspn used,spn thespn usagespi %$c %$foospn isspn usedspn tospn definespn aspn labelspn whichspn isspn localspn tospn thespn contextspn onspn thespn topspn ofspn thespn contextspn stack.spn Sospn thespc REPEATspn andspc UNTILspn examplespn givenspn abovespn couldspn bespn implementedspn byspn meansspn of:
code
%macro repeat 0     %push   repeat     %$begin: %endmacro %macro until 1         j%-1    %$begin     %pop %endmacro
norm
n andspn invokedspn byspn meansspn of,spn forspn example,
code
        mov     cx,string         repeat         add     cx,3         scasb         until   e
norm
n whichspn wouldspn scanspn everyspn fourthspn bytespn ofspn aspn stringspn inspn searchspn ofspn thespn bytespn inspc ALn .
norm
n Ifspn youspn needspn tospn define,spn orspn access,spn labelsspn localspn tospn thespn contextspeobelowspn thespn topspn onespn onspn thespn stack,spn youspn canspn usespi %$c %$$foon ,spn orspc %$$$foospn forspn thespn contextspn belowspn that,spn andspn sospn on.
subh 4.7.3 :section-4.7.3
i context-local single-line macrosn Context-Localspn Single-Linespn Macros
norm
n NASMspn alsospn allowsspn youspn tospn definespn single-n linespn macrosspn whichspn arespn localspn tospn aspn particularspn context,spn inspn justspn thespn samespn way:
code
%define %$localmac 3
norm
n willspn definespn thespn single-n linespn macrospc %$localmacspn tospn bespn localspn tospn thespn topspn contextspn onspn thespn stack.spn Ofspn course,spn afterspn aspn subsequentspc %pushn ,spn itspn canspn thenspn stillspn bespn accessedspn byspn thespn namespc %$$localmacn .
subh 4.7.4 :section-4.7.4
i context fall-through lookupn Contextspn Fall-Throughspn Lookupspeo(deprecated)
norm
n Contextspn fall-n throughspn lookupspn (automaticspn searchingspn ofspn outerspn contexts)spn isspn aspn featurespn thatspn wasspn addedspn inspn NASMspn versionspn 0.98.03.spn Unfortunately,spn thisspn featurespn isspn unintuitivespn andspn canspn resultspn inspn buggyspn codespn thatspn wouldspn havespn otherwisespn beenspn preventedspn byspn NASM'sspn errorspn reporting.spn Asspn aspn result,spn thisspn featurespn hasspn beenspeodeprecatedn .spn NASMspn versionspn 2.09spn willspn issuespn aspn warningspn whenspn usagespn ofspn thisspeodeprecatedspn featurespn isspn detected.spn Startingspn withspn NASMspn versionspn 2.10,spn usagespn ofspn thisspeodeprecatedspn featurespn willspn simplyspn resultspn inspn anspesexpressionspe syntaxspeeerrorn .
norm
n Anspn examplespn usagespn ofspn thisspeodeprecatedspn featurespn follows:
code
%macro ctxthru 0 %push ctx1     %assign %$external 1         %push ctx2             %assign %$internal 1             mov eax, %$external             mov eax, %$internal         %pop %pop %endmacro
norm
n Asspn demonstrated,spc %$externalspn isspn beingspn definedspn inspn thespc ctx1spn contextspn andspn referencedspn withinspn thespc ctx2spn context.spn Withspn contextspn fall-n throughspn lookup,spn referencingspn anspn undefinedspn context-n localspn macrospn likespn thisspn implicitlyspn searchesspn throughspn allspn outerspn contextsspn untilspn aspn matchspn isspn madespn orspn isn'tspn foundspn inspn anyspn context.spn Asspn aspn result,spc %$externalspn referencedspn withinspn thespc ctx2spn contextspn wouldspn implicitlyspn usespc %$externalspn asspn definedspn inspc ctx1n .spn Mostspn peoplespn wouldspn expectspn NASMspn tospn issuespn anspn errorspn inspn thisspn situationspn becausespc %$externalspn wasspn neverspn definedspn withinspc ctx2spn andspn alsospn isn'tspn qualifiedspn withspn thespn properspn contextspn depth,spc %$$externaln .
norm
n Herespn isspn aspn revisionspn ofspn thespn abovespn examplespn withspn properspn contextspn depth:
code
%macro ctxthru 0 %push ctx1     %assign %$external 1         %push ctx2             %assign %$internal 1             mov eax, %$$external             mov eax, %$internal         %pop %pop %endmacro
norm
n Asspn demonstrated,spc %$externalspn isspn stillspn beingspn definedspn inspn thespc ctx1spn contextspn andspn referencedspn withinspn thespc ctx2spn context.spn However,spn thespn referencespn tospc %$externalspn withinspc ctx2spn hasspn beenspn fullyspn qualifiedspn withspn thespn properspn contextspn depth,spc %$$externaln ,spn andspn thusspn isspn nospn longerspn ambiguous,spn unintuitivespn orspn erroneous.
subh 4.7.5 :section-4.7.5
i %replc %repln :spi renaming contextsn Renamingspn aspn Context
norm
n Ifspn youspn needspn tospn changespn thespn namespn ofspn thespn topspn contextspn onspn thespn stackspn (inspn order,spn forspn example,spn tospn havespn itspn respondspn differentlyspn tospc %ifctxn ),spn youspn canspn executespn aspc %popspn followedspn byspn aspc %pushn ;spn butspn thisspn willspn havespn thespn sidespn effectspn ofspn destroyingspn allspn context-n localspn labelsspn andspn macrosspn associatedspn withspn thespn contextspn thatspn wasspn justspn popped.
norm
n NASMspn providesspn thespn directivespc %repln ,spn whichspeoreplacesspn aspn contextspn withspn aspn differentspn name,spn withoutspn touchingspn thespn associatedspn macrosspn andspn labels.spn Sospn youspn couldspn replacespn thespn destructivespn code
code
%pop %push   newname
norm
n withspn thespn non-n destructivespn versionspc %repl newnamen .
subh 4.7.6 :section-4.7.6
n Examplespn Usespn ofspn thespi context stackn Contextspn Stackn :spi block ifsn Blockspn IFs
norm
n Thisspn examplespn makesspn usespn ofspn almostspn allspn thespn context-n stackspn features,spn includingspn thespn conditional-n assemblyspn constructspi %ifctxc %ifctxn ,spn tospn implementspn aspn blockspn IFspn statementspn asspn aspn setspn ofspn macros.
code
%macro if 1     %push if     j%-1  %$ifnot %endmacro %macro else 0   %ifctx if         %repl   else         jmp     %$ifend         %$ifnot:   %else         %error  "expected `if' before `else'"   %endif %endmacro %macro endif 0   %ifctx if         %$ifnot:         %pop   %elifctx      else         %$ifend:         %pop   %else         %error  "expected `if' or `else' before `endif'"   %endif %endmacro
norm
n Thisspn codespn isspn morespn robustspn thanspn thespc REPEATspn andspc UNTILspn macrosspn givenspn inspx section-4.7.2n sectionspn 4.7.2xesection-4.7.2n ,spn becausespn itspn usesspn conditionalspn assemblyspn tospn checkspn thatspn thespn macrosspn arespn issuedspn inspn thespn rightspn orderspn (forspn example,spn notspn callingspc endifspn beforespc ifn )spn andspn issuesspn aspc %errorspn ifspn they'respn not.
norm
n Inspn addition,spn thespc endifspn macrospn hasspn tospn bespn ablespn tospn copespn withspn thespn twospn distinctspn casesspn ofspn eitherspn directlyspn followingspn anspc ifn ,spn orspn followingspn anspc elsen .spn Itspn achievesspn this,spn again,spn byspn usingspn conditionalspn assemblyspn tospn dospn differentspn thingsspn dependingspn onspn whetherspn thespn contextspn onspn topspn ofspn thespn stackspn isspc ifspn orspc elsen .
norm
n Thespc elsespn macrospn hasspn tospn preservespn thespn contextspn onspn thespn stack,spn inspn orderspn tospn havespn thespc %$ifnotspn referredspn tospn byspn thespc ifspn macrospn bespn thespn samespn asspn thespn onespn definedspn byspn thespc endifspn macro,spn butspn hasspn tospn changespn thespn context'sspn namespn sospn thatspc endifspn willspn knowspn therespn wasspn anspn interveningspc elsen .spn Itspn doesspn thisspn byspn thespn usespn ofspc %repln .
norm
n Aspn samplespn usagespn ofspn thesespn macrosspn mightspn lookspn like:
code
        cmp     ax,bx         if ae                cmp     bx,cx                if ae                        mov     ax,cx                else                        mov     ax,bx                endif         else                cmp     ax,cx                if ae                        mov     ax,cx                endif         endif
norm
n Thespn block-c IFspn macrosspn handlespn nestingspn quitespn happily,spn byspn meansspn ofspn pushingspn anotherspn context,spn describingspn thespn innerspc ifn ,spn onspn topspn ofspn thespn onespn describingspn thespn outerspc ifn ;spn thusspc elsespn andspc endifspn alwaysspn referspn tospn thespn lastspn unmatchedspc ifspn orspc elsen .
head 4.8 :section-4.8
i stack relative preprocessor directivesn Stackspn Relativespn Preprocessorspn Directives
norm
n Thespn followingspn preprocessorspn directivesspn providespn aspn wayspn tospn usespn labelsspn tospn referspn tospn localspn variablesspn allocatedspn onspn thespn stack.
bull
c %argspn (seespx section-4.8.1n sectionspn 4.8.1xesection-4.8.1n )
bull
c %stacksizespn (seespx section-4.8.2n sectionspn 4.8.2xesection-4.8.2n )
bull
c %localspn (seespx section-4.8.3n sectionspn 4.8.3xesection-4.8.3n )
subh 4.8.1 :section-4.8.1
i %argc %argspn Directive
norm
n Thespc %argspn directivespn isspn usedspn tospn simplifyspn thespn handlingspn ofspn parametersspn passedspn onspn thespn stack.spn Stackspn basedspn parameterspn passingspn isspn usedspn byspn manyspn highspn levelspn languages,spn includingspn C,spn C++spn andspn Pascal.
norm
n Whilespn NASMspn hasspn macrosspn whichspn attemptspn tospn duplicatespn thisspn functionalityspn (seespx section-9.4.5n sectionspn 9.4.5xesection-9.4.5n ),spn thespn syntaxspn isspn notspn particularlyspn convenientspn tospn usespn andspn isspn notspn TASMspn compatible.spn Herespn isspn anspn examplespn whichspn showsspn thespn usespn ofspc %argspn withoutspn anyspn externalspn macros:
code
some_function:     %push     mycontext        ; save the current context     %stacksize large           ; tell NASM to use bp     %arg      i:word, j_ptr:word         mov     ax,[i]         mov     bx,[j_ptr]         add     ax,[bx]         ret     %pop                       ; restore original context
norm
n Thisspn isspn similarspn tospn thespn procedurespn definedspn inspx section-9.4.5n sectionspn 9.4.5xesection-9.4.5spn andspn addsspn thespn valuespn inspn ispn tospn thespn valuespn pointedspn tospn byspn j_ptrspn andspn returnsspn thespn sumspn inspn thespn axspn register.spn Seespx section-4.7.1n sectionspn 4.7.1xesection-4.7.1spn forspn anspn explanationspn ofspc pushspn andspc popspn andspn thespn usespn ofspn contextspn stacks.
subh 4.8.2 :section-4.8.2
i %stacksizec %stacksizespn Directive
norm
n Thespc %stacksizespn directivespn isspn usedspn inspn conjunctionspn withspn thespc %argspn (seespx section-4.8.1n sectionspn 4.8.1xesection-4.8.1n )spn andspn thespc %localspn (seespx section-4.8.3n sectionspn 4.8.3xesection-4.8.3n )spn directives.spn Itspn tellsspn NASMspn thespn defaultspn sizespn tospn usespn forspn subsequentspc %argspn andspc %localspn directives.spn Thespc %stacksizespn directivespn takesspn onespn requiredspn argumentspn whichspn isspn onespn ofspc flatn ,spc flat64n ,spc largespn orspc smalln .
code
%stacksize flat
norm
n Thisspn formspn causesspn NASMspn tospn usespn stack-n basedspn parameterspn addressingspn relativespn tospc ebpspn andspn itspn assumesspn thatspn aspn nearspn formspn ofspn callspn wasspn usedspn tospn getspn tospn thisspn labelspn (i.e.spn thatspc eipspn isspn onspn thespn stack).
code
%stacksize flat64
norm
n Thisspn formspn causesspn NASMspn tospn usespn stack-n basedspn parameterspn addressingspn relativespn tospc rbpspn andspn itspn assumesspn thatspn aspn nearspn formspn ofspn callspn wasspn usedspn tospn getspn tospn thisspn labelspn (i.e.spn thatspc ripspn isspn onspn thespn stack).
code
%stacksize large
norm
n Thisspn formspn usesspc bpspn tospn dospn stack-n basedspn parameterspn addressingspn andspn assumesspn thatspn aspn farspn formspn ofspn callspn wasspn usedspn tospn getspn tospn thisspn addressspn (i.e.spn thatspc ipspn andspc csspn arespn onspn thespn stack).
code
%stacksize small
norm
n Thisspn formspn alsospn usesspc bpspn tospn addressspn stackspn parameters,spn butspn itspn isspn differentspn fromspc largespn becausespn itspn alsospn assumesspn thatspn thespn oldspn valuespn ofspn bpspn isspn pushedspn ontospn thespn stackspn (i.e.spn itspn expectsspn anspc ENTERspn instruction).spn Inspn otherspn words,spn itspn expectsspn thatspc bpn ,spc ipspn andspc csspn arespn onspn thespn topspn ofspn thespn stack,spn underneathspn anyspn localspn spacespn whichspn mayspn havespn beenspn allocatedspn byspc ENTERn .spn Thisspn formspn isspn probablyspn mostspn usefulspn whenspn usedspn inspn combinationspn withspn thespc %localspn directivespn (seespx section-4.8.3n sectionspn 4.8.3xesection-4.8.3n ).
subh 4.8.3 :section-4.8.3
i %localc %localspn Directive
norm
n Thespc %localspn directivespn isspn usedspn tospn simplifyspn thespn usespn ofspn localspn temporaryspn stackspn variablesspn allocatedspn inspn aspn stackspn frame.spn Automaticspn localspn variablesspn inspn Cspn arespn anspn examplespn ofspn thisspn kindspn ofspn variable.spn Thespc %localspn directivespn isspn mostspn usefulspn whenspn usedspn withspn thespc %stacksizespn (seespx section-4.8.2n sectionspn 4.8.2xesection-4.8.2spn andspn isspn alsospn compatiblespn withspn thespc %argspn directivespn (seespx section-4.8.1n sectionspn 4.8.1xesection-4.8.1n ).spn Itspn allowsspn simplifiedspn referencespn tospn variablesspn onspn thespn stackspn whichspn havespn beenspn allocatedspn typicallyspn byspn usingspn thespc ENTERspn instruction.spn Anspn examplespn ofspn itsspn usespn isspn thespn following:
code
silly_swap:     %push mycontext             ; save the current context     %stacksize small            ; tell NASM to use bp     %assign %$localsize 0       ; see text for explanation     %local old_ax:word, old_dx:word         enter   %$localsize,0   ; see text for explanation         mov     [old_ax],ax     ; swap ax & bx         mov     [old_dx],dx     ; and swap dx & cx         mov     ax,bx         mov     dx,cx         mov     bx,[old_ax]         mov     cx,[old_dx]         leave                   ; restore old bp         ret                     ;     %pop                        ; restore original context
norm
n Thespc %$localsizespn variablespn isspn usedspn internallyspn byspn thespc %localspn directivespn andspeomustspn bespn definedspn withinspn thespn currentspn contextspn beforespn thespc %localspn directivespn mayspn bespn used.spn Failurespn tospn dospn sospn willspn resultspn inspn onespn expressionspn syntaxspn errorspn forspn eachspc %localspn variablespn declared.spn Itspn thenspn mayspn bespn usedspn inspn thespn constructionspn ofspn anspn appropriatelyspn sizedspn ENTERspn instructionspn asspn shownspn inspn thespn example.
head 4.9 :section-4.9
n Reportingspi user-defined errorsn User-Definedspn Errorsn :spi %errorc %errorn ,spi %warningc %warningn ,spi %fatalc %fatal
norm
n Thespn preprocessorspn directivespc %errorspn willspn causespn NASMspn tospn reportspn anspn errorspn ifspn itspn occursspn inspn assembledspn code.spn Sospn ifspn otherspn usersspn arespn goingspn tospn tryspn tospn assemblespn yourspn sourcespn files,spn youspn canspn ensurespn thatspn theyspn definespn thespn rightspn macrosspn byspn meansspn ofspn codespn likespn this:
code
%ifdef F1     ; do some setup %elifdef F2     ; do some different setup %else     %error "Neither F1 nor F2 was defined." %endif
norm
n Thenspn anyspn userspn whospn failsspn tospn understandspn thespn wayspn yourspn codespn isspn supposedspn tospn bespn assembledspn willspn bespn quicklyspn warnedspn ofspn theirspn mistake,spn ratherspn thanspn havingspn tospn waitspn untilspn thespn programspn crashesspn onspn beingspn runspn andspn thenspn notspn knowingspn whatspn wentspn wrong.
norm
n Similarly,spc %warningspn issuesspn aspn warning,spn butspn allowsspn assemblyspn tospn continue:
code
%ifdef F1     ; do some setup %elifdef F2     ; do some different setup %else     %warning "Neither F1 nor F2 was defined, assuming F1."     %define F1 %endif
norm
c %errorspn andspc %warningspn arespn issuedspn onlyspn onspn thespn finalspn assemblyspn pass.spn Thisspn makesspn themspn safespn tospn usespn inspn conjunctionspn withspn testsspn thatspn dependspn onspn symbolspn values.
norm
c %fatalspn terminatesspn assemblyspn immediately,spn regardlessspn ofspn pass.spn Thisspn isspn usefulspn whenspn therespn isspn nospn pointspn inspn continuingspn thespn assemblyspn further,spn andspn doingspn sospn isspn likelyspn justspn goingspn tospn causespn aspn spewspn ofspn confusingspn errorspn messages.
norm
n Itspn isspn optionalspn forspn thespn messagespn stringspn afterspc %errorn ,spc %warningspn orspc %fatalspn tospn bespn quoted.spn Ifspn itspn isspeonotn ,spn thenspn single-n linespn macrosspn arespn expandedspn inspn it,spn whichspn canspn bespn usedspn tospn displayspn morespn informationspn tospn thespn user.spn Forspn example:
code
%if foo > 64     %assign foo_over foo-64     %error foo is foo_over bytes too large %endif
head 4.10 :section-4.10
i %pragmac %pragman :spn Settingspn Options
norm
n Thespc %pragmaspn directivespn controlsspn aspn numberspn ofspn optionsspn inspn NASM.spn Pragmasspn arespn intendedspn tospn remainspn backwardsspn compatible,spn andspn thereforespn anspn unknownspc %pragmaspn directivespn isspn notspn anspn error.
norm
n Thespn variousspn pragmasspn arespn documentedspn withspn thespn optionsspn theyspn affect.
norm
n Thespn generalspn structurespn ofspn aspn NASMspn pragmaspn is:
norm
c %pragmaspeonamespacespeodirectivespn [eoarguments...n ]
norm
n Currentlyspn definedspn namespacesspn are:
bull
c ignoren :spn thisspc %pragmaspn isspn unconditionallyspn ignored.
bull
c preprocn :spn preprocessor,spn seespx section-4.10.1n sectionspn 4.10.1xesection-4.10.1n .
bull
c limitn :spn resourcespn limits,spn seespx section-2.1.31n sectionspn 2.1.31xesection-2.1.31n .
bull
c asmn :spn thespn parserspn andspn assemblerspn proper.spn Currentlyspn nospn suchspn pragmasspn arespn defined.
bull
c listn :spn listingspn options,spn seespx section-2.1.4n sectionspn 2.1.4xesection-2.1.4n .
bull
c filen :spn generalspn filespn handlingspn options.spn Currentlyspn nospn suchspn pragmasspn arespn defined.
bull
c inputn :spn inputspn filespn handlingspn options.spn Currentlyspn nospn suchspn pragmasspn arespn defined.
bull
c outputn :spn outputspn formatspn options.
bull
c debugn :spn debugspn formatspn options.
norm
n Inspn addition,spn thespn namespn ofspn anyspn outputspn orspn debugspn format,spn andspn sometimesspn groupsspn thereof,spn alsospn constituespc %pragmaspn namespaces.spn Thespn namespacesspc outputspn andspc debugspn simplyspn referspn tospeoanyspn outputspn orspn debugspn format,spn respectively.
norm
n Forspn example,spn tospn prependspn anspn underscorespn tospn globalspn symbolsspn regardlessspn ofspn thespn outputspn formatspn (seespx section-7.10n sectionspn 7.10xesection-7.10n ):
code
%pragma output gprefix _
norm
n ...spn whereasspn tospn prependspn anspn underscorespn tospn globalspn symbolsspn onlyspn whenspn thespn outputspn isspn eitherspc win32spn orspc win64n :
code
%pragma win gprefix _
subh 4.10.1 :section-4.10.1
n Preprocessorspn Pragmas
norm
n Thespn onlyspn preprocessorspc %pragmaspn definedspn inspn NASMspn 2.15spn is:
bull
c %pragma preproc sane_empty_expansionn :spn disablesspn legacyspn compatibilityspn handlingspn ofspn bracelessspn emptyspn argumentsspn tospn multi-n linespn macros.spn Seespx section-4.3n sectionspn 4.3xesection-4.3spn andspx section-2.1.26n sectionspn 2.1.26xesection-2.1.26n .
head 4.11 :section-4.11
i other preprocessor directivesn Otherspn Preprocessorspn Directives
subh 4.11.1 :section-4.11.1
i %linec %linespn Directive
norm
n Thespc %linespn directivespn isspn usedspn tospn notifyspn NASMspn thatspn thespn inputspn linespn correspondsspn tospn aspn specificspn linespn numberspn inspn anotherspn file.spn Typicallyspn thisspn otherspn filespn wouldspn bespn anspn originalspn sourcespn file,spn withspn thespn currentspn NASMspn inputspn beingspn thespn outputspn ofspn aspn pre-n processor.spn Thespc %linespn directivespn allowsspn NASMspn tospn outputspn messagesspn whichspn indicatespn thespn linespn numberspn ofspn thespn originalspn sourcespn file,spn insteadspn ofspn thespn filespn thatspn isspn beingspn readspn byspn NASM.
norm
n Thisspn preprocessorspn directivespn isspn notspn generallyspn usedspn directlyspn byspn programmers,spn butspn mayspn bespn ofspn interestspn tospn preprocessorspn authors.spn Thespn usagespn ofspn thespc %linespn preprocessorspn directivespn isspn asspn follows:
code
%line nnn[+mmm] [filename]
norm
n Inspn thisspn directive,spc nnnspn identifiesspn thespn linespn ofspn thespn originalspn sourcespn filespn whichspn thisspn linespn correspondsspn to.spc mmmspn isspn anspn optionalspn parameterspn whichspn specifiesspn aspn linespn incrementspn value;spn eachspn linespn ofspn thespn inputspn filespn readspn inspn isspn consideredspn tospn correspondspn tospc mmmspn linesspn ofspn thespn originalspn sourcespn file.spn Finally,spc filenamespn isspn anspn optionalspn parameterspn whichspn specifiesspn thespn filespn namespn ofspn thespn originalspn sourcespn file.spn Itspn mayspn bespn aspn quotedspn string,spn inspn whichspn casespn anyspn additionalspn argumentspn afterspn thespn quotedspn stringspn willspn bespn ignored.
norm
n Afterspn readingspn aspc %linespn preprocessorspn directive,spn NASMspn willspn reportspn allspn filespn namespn andspn linespn numbersspn relativespn tospn thespn valuesspn specifiedspn therein.
norm
n Ifspn thespn commandspn linespn optionspi --no-linec --no-linespn isspn given,spn allspc %linespn directivesspn arespn ignored.spn Thisspn mayspn bespn usefulspn forspn debuggingspn preprocessedspn code.spn Seespx section-2.1.33n sectionspn 2.1.33xesection-2.1.33n .
norm
n Startingspn inspn NASMspn 2.15,spc %linespn directivesspn arespn processedspn beforespn anyspn otherspn processingspn takesspn place.
norm
n Forspn compatibilityspn withspn thespn outputspn fromspn somespn otherspn preprocessors,spn includingspn manyspn Cspn preprocessors,spn aspc #spn characterspn followedspn byspn whitespacespesatspe thespe veryspe beginningspe ofspe aspeelinespn isspn alsospn treatedspn asspn aspc %linespn directive,spn exceptspn thatspn doublespn quotesspn surroundingspn thespn filenamespn arespn treatedspn likespn NASMspn backquotes,spn withspc \dan escapedspn sequencesspn decoded.
subh 4.11.2 :section-4.11.2
i %!c %!eovariablen :spn Readspn anspn Environmentspn Variable.
norm
n Thespc %!eovariablespn directivespn makesspn itspn possiblespn tospn readspn thespn valuespn ofspn anspn environmentspn variablespn atspn assemblyspn time.spn Thisspn could,spn forspn example,spn bespn usedspn tospn storespn thespn contentsspn ofspn anspn environmentspn variablespn intospn aspn string,spn whichspn couldspn bespn usedspn atspn somespn otherspn pointspn inspn yourspn code.
norm
n Forspn example,spn supposespn thatspn youspn havespn anspn environmentspn variablespc FOOn ,spn andspn youspn wantspn thespn contentsspn ofspc FOOspn tospn bespn embeddedspn inspn yourspn programspn asspn aspn quotedspn string.spn Youspn couldspn dospn thatspn asspn follows:
code
%defstr FOO          %!FOO
norm
n Seespx section-4.1.9n sectionspn 4.1.9xesection-4.1.9spn forspn notesspn onspn thespc %defstrspn directive.
norm
n Ifspn thespn namespn ofspn thespn environmentspn variablespn containsspn non-n identifierspn characters,spn youspn canspn usespn stringspn quotesspn tospn surroundspn thespn namespn ofspn thespn variable,spn forspn example:
code
%defstr C_colon      %!'C:'
subh 4.11.3 :section-4.11.3
i %clearc %clearn :spn Clearspn Allspn Macrospn Definitions
norm
n Thespn directivespc %clearspn clearsspn allspn definitionsspn ofspn aspn certainspn type,spesincludingspe thespe onesspe definedspe byspe NASMspeeitself.spn Thisspn canspn bespn usefulspn whenspn preprocessingspn non-n NASMspn code,spn orspn tospn dropspn backwardsspn compatibilityspn aliases.
norm
n Thespn syntaxspn is:
code
   %clear [global|context] type...
norm
n ...spn wherespc contextspn indicatesspn thatspn thisspn appliesspn tospn context-n localspn macrosspn only;spn thespn defaultspn isspc globaln .
norm
c typespn canspn bespn onespn orspn morespn of:
bull
c definespn single-n linespn macros
bull
c defaliasspn single-n linespn macrospn aliasesspn (usefulspn tospn removespn backwardsspn compatibilityspn aliases)
bull
c alldefinespn samespn asspc define defalias
bull
c macrospn multi-n linespn macros
bull
c allspn samespn asspc alldefine macrospn (default)
norm
n Inspn NASMspn 2.14spn andspn earlier,spn onlyspn thespn singlespn syntaxspc %clearspn wasspn supported,spn whichspn isspn equivalentspn tospc %clear global alln .
chap 5 :chapter-5
i standard macrosn Standardspn Macros
norm
n NASMspn definesspn aspn setspn ofspn standardspn macros,spn whichspn arespn alreadyspn definedspn whenspn itspn startsspn tospn processspn anyspn sourcespn file.spn Ifspn youspn reallyspn needspn aspn programspn tospn bespn assembledspn withspn nospn pre-n definedspn macros,spn youspn canspn usespn thespi %clearc %clearspn directivespn tospn emptyspn thespn preprocessorspn ofspn everythingspn butspn context-n localspn preprocessorspn variablesspn andspn single-n linespn macros,spn seespx section-4.11.3n sectionspn 4.11.3xesection-4.11.3n .
norm
n Mostspi user-level directivesn user-levelspn directivesspn (seespx chapter-7n chapterspn 7xechapter-7n )spn arespn implementedspn asspn macrosspn whichspn invokespn primitivespn directives;spn thesespn arespn describedspn inspx chapter-7n chapterspn 7xechapter-7n .spn Thespn restspn ofspn thespn standardspn macrospn setspn isspn describedspn here.
norm
n Forspn compabilityspn withspn NASMspn versionsspn beforespn NASMspn 2.15,spn mostspn standardspn macrosspn ofspn thespn formspc __?foo?__spn havespn aliasesspn ofspn formspc __foo__spn (seespx section-4.1.11n sectionspn 4.1.11xesection-4.1.11n ).spn Thesespn canspn bespn removedspn withspn thespn directivespc %clear defaliasn .
head 5.1 :section-5.1
i nasm version macrosn NASMspn Versionspn Macros
norm
n Thespn single-n linespn macrosspi __?NASM_MAJOR?__c __?NASM_MAJOR?__n ,spi __?NASM_MINOR?__c __?NASM_MINOR?__n ,spi __?NASM_SUBMINOR?__c __?NASM_SUBMINOR?__spn andspi __?NASM_PATCHLEVEL?__c __?NASM_PATCHLEVEL?__spn expandspn tospn thespn major,spn minor,spn subminorspn andspn patchspn levelspn partsspn ofspn thespi nasm, versionn versionspn numberspn ofspn NASMspn beingspn used.spn So,spn underspn NASMspn 0.98.32p1spn forspn example,spc __?NASM_MAJOR?__spn wouldspn bespn definedspn tospn bespn 0,spc __?NASM_MINOR?__spn wouldspn bespn definedspn asspn 98,spc __?NASM_SUBMINOR?__spn wouldspn bespn definedspn tospn 32,spn andspc __?NASM_PATCHLEVEL?__spn wouldspn bespn definedspn asspn 1.
norm
n Additionally,spn thespn macrospi __?NASM_SNAPSHOT?__c __?NASM_SNAPSHOT?__spn isspn definedspn forspn automaticallyspn generatedspn snapshotspn releasesspeoonlyn .
subh 5.1.1 :section-5.1.1
i __?NASM_VERSION_ID?__c __?NASM_VERSION_ID?__n :spi nasm version idn NASMspn Versionspn ID
norm
n Thespn single-n linespn macrospc __?NASM_VERSION_ID?__spn expandsspn tospn aspn dwordspn integerspn representingspn thespn fullspn versionspn numberspn ofspn thespn versionspn ofspn nasmspn beingspn used.spn Thespn valuespn isspn thespn equivalentspn tospc __?NASM_MAJOR?__n ,spc __?NASM_MINOR?__n ,spc __?NASM_SUBMINOR?__spn andspc __?NASM_PATCHLEVEL?__spn concatenatedspn tospn producespn aspn singlespn doubleword.spn Hence,spn forspn 0.98.32p1,spn thespn returnedspn numberspn wouldspn bespn equivalentspn to:
code
        dd      0x00622001
norm
n or
code
        db      1,32,98,0
norm
n Notespn thatspn thespn abovespn linesspn arespn generatespn exactlyspn thespn samespn code,spn thespn secondspn linespn isspn usedspn justspn tospn givespn anspn indicationspn ofspn thespn orderspn thatspn thespn separatespn valuesspn willspn bespn presentspn inspn memory.
subh 5.1.2 :section-5.1.2
i __?NASM_VER?__c __?NASM_VER?__n :spi nasm version stringn NASMspn Versionspn String
norm
n Thespn single-n linespn macrospc __?NASM_VER?__spn expandsspn tospn aspn stringspn whichspn definesspn thespn versionspn numberspn ofspn nasmspn beingspn used.spn So,spn underspn NASMspn 0.98.32spn forspn example,
code
        db      __?NASM_VER?__
norm
n wouldspn expandspn to
code
        db      "0.98.32"
head 5.2 :section-5.2
i __?FILE?__c __?FILE?__spn andspi __?LINE?__c __?LINE?__n :spn Filespn Namespn andspn Linespn Number
norm
n Likespn thespn Cspn preprocessor,spn NASMspn allowsspn thespn userspn tospn findspn outspn thespn filespn namespn andspn linespn numberspn containingspn thespn currentspn instruction.spn Thespn macrospc __?FILE?__spn expandsspn tospn aspn stringspn constantspn givingspn thespn namespn ofspn thespn currentspn inputspn filespn (whichspn mayspn changespn throughspn thespn coursespn ofspn assemblyspn ifspc %includespn directivesspn arespn used),spn andspc __?LINE?__spn expandsspn tospn aspn numericspn constantspn givingspn thespn currentspn linespn numberspn inspn thespn inputspn file.
norm
n Thesespn macrosspn couldspn bespn used,spn forspn example,spn tospn communicatespn debuggingspn informationspn tospn aspn macro,spn sincespn invokingspc __?LINE?__spn insidespn aspn macrospn definitionspn (eitherspn single-n linespn orspn multi-n line)spn willspn returnspn thespn linespn numberspn ofspn thespn macrospeocalln ,spn ratherspn thanspeodefinitionn .spn Sospn tospn determinespn wherespn inspn aspn piecespn ofspn codespn aspn crashspn isspn occurring,spn forspn example,spn onespn couldspn writespn aspn routinespc stillheren ,spn whichspn isspn passedspn aspn linespn numberspn inspc EAXspn andspn outputsspn somethingspn likespc line 155: still heren .spn Youspn couldspn thenspn writespn aspn macro:
code
%macro  notdeadyet 0         push    eax         mov     eax,__?LINE?__         call    stillhere         pop     eax %endmacro
norm
n andspn thenspn pepperspn yourspn codespn withspn callsspn tospc notdeadyetspn untilspn youspn findspn thespn crashspn point.
head 5.3 :section-5.3
i __?BITS?__c __?BITS?__n :spn Currentspn Codespn Generationspn Mode
norm
n Thespc __?BITS?__spn standardspn macrospn isspn updatedspn everyspn timespn thatspn thespn BITSspn modespn isspn setspn usingspn thespc BITS XXspn orspc [BITS XX]spn directive,spn wherespn XXspn isspn aspn validspn modespn numberspn ofspn 16,spn 32spn orspn 64.spc __?BITS?__spn receivesspn thespn specifiedspn modespn numberspn andspn makesspn itspn globallyspn available.spn Thisspn canspn bespn veryspn usefulspn forspn thosespn whospn utilizespn mode-n dependentspn macros.
head 5.4 :section-5.4
i __?OUTPUT_FORMAT?__c __?OUTPUT_FORMAT?__n :spn Currentspn Outputspn Format
norm
n Thespc __?OUTPUT_FORMAT?__spn standardspn macrospn holdsspn thespn currentspn outputspn formatspn name,spn asspn givenspn byspn thespc -fspn optionspn orspn NASM'sspn default.spn Typespc nasm -hspn forspn aspn list.
code
%ifidn __?OUTPUT_FORMAT?__, win32  %define NEWLINE 13, 10 %elifidn __?OUTPUT_FORMAT?__, elf32  %define NEWLINE 10 %endif
head 5.5 :section-5.5
i __?DEBUG_FORMAT?__c __?DEBUG_FORMAT?__n :spn Currentspn Debugspn Format
norm
n Ifspn debuggingspn informationspn generationspn isspn enabled,spn Thespc __?DEBUG_FORMAT?__spn standardspn macrospn holdsspn thespn currentspn debugspn formatspn namespn asspn specifiedspn byspn thespc -Fspn orspc -gspn optionspn orspn thespn outputspn formatspn default.spn Typespc nasm -fspeooutputspc yspn forspn aspn list.
norm
c __?DEBUG_FORMAT?__spn isspn notspn definedspn ifspn debuggingspn isspn notspn enabled,spn orspn ifspn thespn debugspn formatspn specifiedspn isspc nulln .
head 5.6 :section-5.6
n Assemblyspn Datespn andspn Timespn Macros
norm
n NASMspn providesspn aspn varietyspn ofspn macrosspn thatspn representspn thespn timestampspn ofspn thespn assemblyspn session.
bull
n Thespi __?DATE?__c __?DATE?__spn andspi __?TIME?__c __?TIME?__spn macrosspn givespn thespn assemblyspn datespn andspn timespn asspn strings,spn inspn ISOspn 8601spn formatspn (c "YYYY-MM-DD"spn andspc "HH:MM:SS"n ,spn respectively.)
bull
n Thespi __?DATE_NUM?__c __?DATE_NUM?__spn andspi __?TIME_NUM?__c __?TIME_NUM?__spn macrosspn givespn thespn assemblyspn datespn andspn timespn inspn numericspn form;spn inspn thespn formatspc YYYYMMDDspn andspc HHMMSSspn respectively.
bull
n Thespi __?UTC_DATE?__c __?UTC_DATE?__spn andspi __?UTC_TIME?__c __?UTC_TIME?__spn macrosspn givespn thespn assemblyspn datespn andspn timespn inspn universalspn timespn (UTC)spn asspn strings,spn inspn ISOspn 8601spn formatspn (c "YYYY-MM-DD"spn andspc "HH:MM:SS"n ,spn respectively.)spn Ifspn thespn hostspn platformspn doesn'tspn providespn UTCspn time,spn thesespn macrosspn arespn undefined.
bull
n Thespi __?UTC_DATE_NUM?__c __?UTC_DATE_NUM?__spn andspi __?UTC_TIME_NUM?__c __?UTC_TIME_NUM?__spn macrosspn givespn thespn assemblyspn datespn andspn timespn universalspn timespn (UTC)spn inspn numericspn form;spn inspn thespn formatspc YYYYMMDDspn andspc HHMMSSspn respectively.spn Ifspn thespn hostspn platformspn doesn'tspn providespn UTCspn time,spn thesespn macrosspn arespn undefined.
bull
n Thespc __?POSIX_TIME?__spn macrospn isspn definedspn asspn aspn numberspn containingspn thespn numberspn ofspn secondsspn sincespn thespn POSIXspn epoch,spn 1spn Januaryspn 1970spn 00:00:00spn UTC;spn excludingspn anyspn leapspn seconds.spn Thisspn isspn computedspn usingspn UTCspn timespn ifspn availablespn onspn thespn hostspn platform,spn otherwisespn itspn isspn computedspn usingspn thespn localspn timespn asspn ifspn itspn wasspn UTC.
norm
n Allspn instancesspn ofspn timespn andspn datespn macrosspn inspn thespn samespn assemblyspn sessionspn producespn consistentspn output.spn Forspn example,spn inspn anspn assemblyspn sessionspn startedspn atspn 42spn secondsspn afterspn midnightspn onspn Januaryspn 1,spn 2010spn inspn Moscowspn (timezonespn UTC+3)spn thesespn macrosspn wouldspn havespn thespn followingspn values,spn assuming,spn ofspn course,spn aspn properlyspn configuredspn environmentspn withspn aspn correctspn clock:
code
      __?DATE?__             "2010-01-01"       __?TIME?__             "00:00:42"       __?DATE_NUM?__         20100101       __?TIME_NUM?__         000042       __?UTC_DATE?__         "2009-12-31"       __?UTC_TIME?__         "21:00:42"       __?UTC_DATE_NUM?__     20091231       __?UTC_TIME_NUM?__     210042       __?POSIX_TIME?__       1262293242
head 5.7 :section-5.7
i __?USE_*?__c __?USE_eopackagec ?__n :spn Packagespn Includespn Test
norm
n Whenspn aspn standardspn macrospn packagespn (seespx chapter-6n chapterspn 6xechapter-6n )spn isspn includedspn withspn thespc %usespn directivespn (seespx section-4.6.4n sectionspn 4.6.4xesection-4.6.4n ),spn aspn single-n linespn macrospn ofspn thespn formspc __USE_eopackagec __spn isspn automaticallyspn defined.spn Thisspn allowsspn testingspn ifspn aspn particularspn packagespn isspn invokedspn orspn not.
norm
n Forspn example,spn ifspn thespc altregspn packagespn isspn includedspn (seespx section-6.1n sectionspn 6.1xesection-6.1n ),spn thenspn thespn macrospc __?USE_ALTREG?__spn isspn defined.
head 5.8 :section-5.8
i __?PASS?__c __?PASS?__n :spn Assemblyspn Pass
norm
n Thespn macrospc __?PASS?__spn isspn definedspn tospn bespc 1spn onspn preparatoryspn passes,spn andspc 2spn onspn thespn finalspn pass.spn Inspn preprocess-n onlyspn mode,spn itspn isspn setspn tospc 3n ,spn andspn whenspn runningspn onlyspn tospn generatespn dependenciesspn (duespn tospn thespc -Mspn orspc -MGspn option,spn seespx section-2.1.5n sectionspn 2.1.5xesection-2.1.5n )spn itspn isspn setspn tospc 0n .
norm
esAvoidspe usingspe thisspe macrospe ifspe atspe allspe possible.spe Itspe isspe tremendouslyspe easyspe tospe generatespe veryspe strangespe errorsspe byspe misusingspe it,spe andspe thespe semanticsspe mayspe changespe inspe futurespe versionsspe ofspeeNASM.
head 5.9 :section-5.9
i structure data typesn Structurespn Dataspn Types
subh 5.9.1 :section-5.9.1
i STRUCc STRUCspn andspi ENDSTRUCc ENDSTRUCn :spi declaring structuren Declaringspn Structurespn Dataspn Types
norm
n Thespn corespn ofspn NASMspn containsspn nospn intrinsicspn meansspn ofspn definingspn dataspn structures;spn instead,spn thespn preprocessorspn isspn sufficientlyspn powerfulspn thatspn dataspn structuresspn canspn bespn implementedspn asspn aspn setspn ofspn macros.spn Thespn macrosspc STRUCspn andspc ENDSTRUCspn arespn usedspn tospn definespn aspn structurespn dataspn type.
norm
c STRUCspn takesspn onespn orspn twospn parameters.spn Thespn firstspn parameterspn isspn thespn namespn ofspn thespn dataspn type.spn Thespn second,spn optionalspn parameterspn isspn thespn basespn offsetspn ofspn thespn structure.spn Thespn namespn ofspn thespn dataspn typespn isspn definedspn asspn aspn symbolspn withspn thespn valuespn ofspn thespn basespn offset,spn andspn thespn namespn ofspn thespn dataspn typespn withspn thespn suffixspc _sizespn appendedspn tospn itspn isspn definedspn asspn anspc EQUspn givingspn thespn sizespn ofspn thespn structure.spn Oncespc STRUCspn hasspn beenspn issued,spn youspn arespn definingspn thespn structure,spn andspn shouldspn definespn fieldsspn usingspn thespc RESBspn familyspn ofspn pseudo-n instructions,spn andspn thenspn invokespc ENDSTRUCspn tospn finishspn thespn definition.
norm
n Forspn example,spn tospn definespn aspn structurespn calledspc mytypespn containingspn aspn longword,spn aspn word,spn aspn bytespn andspn aspn stringspn ofspn bytes,spn youspn mightspn code
code
struc   mytype   mt_long:      resd    1   mt_word:      resw    1   mt_byte:      resb    1   mt_str:       resb    32 endstruc
norm
n Thespn abovespn codespn definesspn sixspn symbols:spc mt_longspn asspn 0spn (thespn offsetspn fromspn thespn beginningspn ofspn aspc mytypespn structurespn tospn thespn longwordspn field),spc mt_wordspn asspn 4,spc mt_bytespn asspn 6,spc mt_strspn asspn 7,spc mytype_sizespn asspn 39,spn andspc mytypespn itselfspn asspn zero.
norm
n Thespn reasonspn whyspn thespn structurespn typespn namespn isspn definedspn atspn zerospn byspn defaultspn isspn aspn sidespn effectspn ofspn allowingspn structuresspn tospn workspn withspn thespn localspn labelspn mechanism:spn ifspn yourspn structurespn membersspn tendspn tospn havespn thespn samespn namesspn inspn morespn thanspn onespn structure,spn youspn canspn definespn thespn abovespn structurespn likespn this:
code
struc mytype   .long:        resd    1   .word:        resw    1   .byte:        resb    1   .str:         resb    32 endstruc
norm
n Thisspn definesspn thespn offsetsspn tospn thespn structurespn fieldsspn asspc mytype.longn ,spc mytype.wordn ,spc mytype.bytespn andspc mytype.strn .
norm
n NASM,spn sincespn itspn hasspn nospeointrinsicspn structurespn support,spn doesspn notspn supportspn anyspn formspn ofspn periodspn notationspn tospn referspn tospn thespn elementsspn ofspn aspn structurespn oncespn youspn havespn onespn (exceptspn thespn abovespn local-n labelspn notation),spn sospn codespn suchspn asspc mov ax,[mystruc.mt_word]spn isspn notspn valid.spc mt_wordspn isspn aspn constantspn justspn likespn anyspn otherspn constant,spn sospn thespn correctspn syntaxspn isspc mov ax,[mystruc+mt_word]spn orspc mov ax,[mystruc+mytype.word]n .
norm
n Sometimesspn youspn onlyspn havespn thespn addressspn ofspn thespn structurespn displacedspn byspn anspn offset.spn Forspn example,spn considerspn thisspn standardspn stackspn framespn setup:
code
push ebp mov ebp, esp sub esp, 40
norm
n Inspn thisspn case,spn youspn couldspn accessspn anspn elementspn byspn subtractingspn thespn offset:
code
mov [ebp - 40 + mytype.word], ax
norm
n However,spn ifspn youspn dospn notspn wantspn tospn repeatspn thisspn offset,spn youspn canspn usespdan 40spn asspn aspn basespn offset:
code
struc mytype, -40
norm
n Andspn accessspn anspn elementspn thisspn way:
code
mov [ebp + mytype.word], ax
subh 5.9.2 :section-5.9.2
i ISTRUCc ISTRUCn ,spi ATc ATspn andspi IENDc IENDn :spn Declaringspi instances of structuresn Instancesspn ofspn Structures
norm
n Havingspn definedspn aspn structurespn type,spn thespn nextspn thingspn youspn typicallyspn wantspn tospn dospn isspn tospn declarespn instancesspn ofspn thatspn structurespn inspn yourspn dataspn segment.spn NASMspn providesspn anspn easyspn wayspn tospn dospn thisspn inspn thespc ISTRUCspn mechanism.spn Tospn declarespn aspn structurespn ofspn typespc mytypespn inspn aspn program,spn youspn codespn somethingspn likespn this:
code
mystruc:     istruc mytype         at mt_long, dd      123456         at mt_word, dw      1024         at mt_byte, db      'x'         at mt_str,  db      'hello, world', 13, 10, 0     iend
norm
n Thespn functionspn ofspn thespc ATspn macrospn isspn tospn makespn usespn ofspn thespc TIMESspn prefixspn tospn advancespn thespn assemblyspn positionspn tospn thespn correctspn pointspn forspn thespn specifiedspn structurespn field,spn andspn thenspn tospn declarespn thespn specifiedspn data.spn Thereforespn thespn structurespn fieldsspn mustspn bespn declaredspn inspn thespn samespn orderspn asspn theyspn werespn specifiedspn inspn thespn structurespn definition.
norm
n Ifspn thespn dataspn tospn gospn inspn aspn structurespn fieldspn requiresspn morespn thanspn onespn sourcespn linespn tospn specify,spn thespn remainingspn sourcespn linesspn canspn easilyspn comespn afterspn thespc ATspn line.spn Forspn example:
code
        at mt_str,  db      123,134,145,156,167,178,189                     db      190,100,0
norm
n Dependingspn onspn personalspn taste,spn youspn canspn alsospn omitspn thespn codespn partspn ofspn thespc ATspn linespn completely,spn andspn startspn thespn structurespn fieldspn onspn thespn nextspn line:
code
        at mt_str                 db      'hello, world'                 db      13,10,0
head 5.10 :section-5.10
i alignmentn Alignmentspn Control
subh 5.10.1 :section-5.10.1
i ALIGNc ALIGNspn andspi ALIGNBc ALIGNBn :spn Codespn andspn Dataspn Alignment
norm
n Thespc ALIGNspn andspc ALIGNBspn macrosspn providesspn aspn convenientspn wayspn tospn alignspn codespn orspn dataspn onspn aspn word,spn longword,spn paragraphspn orspn otherspn boundary.spn (Somespn assemblersspn callspn thisspn directivespi EVENc EVENn .)spn Thespn syntaxspn ofspn thespc ALIGNspn andspc ALIGNBspn macrosspn is
code
        align   4               ; align on 4-byte boundary         align   16              ; align on 16-byte boundary         align   8,db 0          ; pad with 0s rather than NOPs         align   4,resb 1        ; align to 4 in the BSS         alignb  4               ; equivalent to previous line
norm
n Bothspn macrosspn requirespn theirspn firstspn argumentspn tospn bespn aspn powerspn ofspn two;spn theyspn bothspn computespn thespn numberspn ofspn additionalspn bytesspn requiredspn tospn bringspn thespn lengthspn ofspn thespn currentspn sectionspn upspn tospn aspn multiplespn ofspn thatspn powerspn ofspn two,spn andspn thenspn applyspn thespc TIMESspn prefixspn tospn theirspn secondspn argumentspn tospn performspn thespn alignment.
norm
n Ifspn thespn secondspn argumentspn isspn notspn specified,spn thespn defaultspn forspc ALIGNspn isspc NOPn ,spn andspn thespn defaultspn forspc ALIGNBspn isspc RESB 1n .spn Sospn ifspn thespn secondspn argumentspn isspn specified,spn thespn twospn macrosspn arespn equivalent.spn Normally,spn youspn canspn justspn usespc ALIGNspn inspn codespn andspn dataspn sectionsspn andspc ALIGNBspn inspn BSSspn sections,spn andspn neverspn needspn thespn secondspn argumentspn exceptspn forspn specialspn purposes.
norm
c ALIGNspn andspc ALIGNBn ,spn beingspn simplespn macros,spn performspn nospn errorspn checking:spn theyspn cannotspn warnspn youspn ifspn theirspn firstspn argumentspn failsspn tospn bespn aspn powerspn ofspn two,spn orspn ifspn theirspn secondspn argumentspn generatesspn morespn thanspn onespn bytespn ofspn code.spn Inspn eachspn ofspn thesespn casesspn theyspn willspn silentlyspn dospn thespn wrongspn thing.
norm
c ALIGNBspn (orspc ALIGNspn withspn aspn secondspn argumentspn ofspc RESB 1n )spn canspn bespn usedspn withinspn structurespn definitions:
code
struc mytype2   mt_byte:         resb 1         alignb 2   mt_word:         resw 1         alignb 4   mt_long:         resd 1   mt_str:         resb 32 endstruc
norm
n Thisspn willspn ensurespn thatspn thespn structurespn membersspn arespn sensiblyspn alignedspn relativespn tospn thespn basespn ofspn thespn structure.
norm
n Aspn finalspn caveat:spc ALIGNspn andspc ALIGNBspn workspn relativespn tospn thespn beginningspn ofspn thespeosectionn ,spn notspn thespn beginningspn ofspn thespn addressspn spacespn inspn thespn finalspn executable.spn Aligningspn tospn aspn 16-n bytespn boundaryspn whenspn thespn sectionspn you'respn inspn isspn onlyspn guaranteedspn tospn bespn alignedspn tospn aspn 4-n bytespn boundary,spn forspn example,spn isspn aspn wastespn ofspn effort.spn Again,spn NASMspn doesspn notspn checkspn thatspn thespn section'sspn alignmentspn characteristicsspn arespn sensiblespn forspn thespn usespn ofspc ALIGNspn orspc ALIGNBn .
norm
n Bothspc ALIGNspn andspc ALIGNBspn dospn callspc SECTALIGNspn macrospn implicitly.spn Seespx section-5.10.2n sectionspn 5.10.2xesection-5.10.2spn forspn details.
norm
n Seespn alsospn thespc smartalignspn standardspn macrospn package,spx section-6.2n sectionspn 6.2xesection-6.2n .
subh 5.10.2 :section-5.10.2
i SECTALIGNc SECTALIGNn :spn Sectionspn Alignment
norm
n Thespc SECTALIGNspn macrosspn providesspn aspn wayspn tospn modifyspn alignmentspn attributespn ofspn outputspn filespn section.spn Unlikespn thespc align=spn attributespn (whichspn isspn allowedspn atspn sectionspn definitionspn only)spn thespc SECTALIGNspn macrospn mayspn bespn usedspn atspn anyspn time.
norm
n Forspn examplespn thespn directive
code
SECTALIGN 16
norm
n setsspn thespn sectionspn alignmentspn requirementsspn tospn 16spn bytes.spn Oncespn increasedspn itspn canspn notspn bespn decreased,spn thespn magnitudespn mayspn growspn only.
norm
n Notespn thatspc ALIGNspn (seespx section-5.10.1n sectionspn 5.10.1xesection-5.10.1n )spn callsspn thespc SECTALIGNspn macrospn implicitlyspn sospn thespn activespn sectionspn alignmentspn requirementsspn mayspn bespn updated.spn Thisspn isspn byspn defaultspn behaviour,spn ifspn forspn somespn reasonspn youspn wantspn thespc ALIGNspn dospn notspn callspc SECTALIGNspn atspn allspn usespn thespn directive
code
SECTALIGN OFF
norm
n Itspn isspn stillspn possiblespn tospn turnspn inspn onspn againspn by
code
SECTALIGN ON
norm
n Notespn thatspc SECTALIGN <ON|OFF>spn affectsspn onlyspn thespc ALIGNn /c ALIGNBspn directives,spn notspn anspn explicitspc SECTALIGNspn directive.
chap 6 :chapter-6
i standard macro packagesn Standardspn Macrospn Packages
norm
n Thespi %usec %usespn directivespn (seespx section-4.6.4n sectionspn 4.6.4xesection-4.6.4n )spn includesspn onespn ofspn thespn standardspn macrospn packagesspn includedspn withspn thespn NASMspn distributionspn andspn compiledspn intospn thespn NASMspn binary.spn Itspn operatesspn likespn thespc %includespn directivespn (seespx section-4.6.1n sectionspn 4.6.1xesection-4.6.1n ),spn butspn thespn includedspn contentsspn isspn providedspn byspn NASMspn itself.
norm
n Thespn namesspn ofspn standardspn macrospn packagesspn arespn casespn insensitivespn andspn canspn bespn quotedspn orspn not.
norm
n Asspn ofspn versionspn 2.15,spn NASMspn hasspc %ifusablespn andspc %ifusingspn directivesspn tospn helpspn thespn userspn understandspn whetherspn anspn individualspn packagespn availablespn inspn thisspn versionspn ofspn NASMspn (c %ifusablen )spn orspn aspn particularspn packagespn alreadyspn loadedspn (c %ifusingn ).
head 6.1 :section-6.1
i altregc altregn :spi alternate register namesn Alternatespn Registerspn Names
norm
n Thespc altregspn standardspn macrospn packagespn providesspn alternatespn registerspn names.spn Itspn providesspn numericspn registerspn namesspn forspn allspn registersspn (notspn justspc R8dac R15n ),spn thespn Intel-n definedspn aliasesspc R8Ldac R15Lspn forspn thespn lowspn bytesspn ofspn registerspn (asspn opposedspn tospn thespn NASM/AMDspn standardspn namesspc R8Bdac R15Bn ),spn andspn thespn namesspc R0Hdac R3Hspn (byspn analogyspn withspc R0Ldac R3Ln )spn forspc AHn ,spc CHn ,spc DHn ,spn andspc BHn .
norm
n Examplespn use:
code
%use altreg proc:       mov r0l,r3h                    ; mov al,bh       ret
norm
n Seespn alsospx section-12.1n sectionspn 12.1xesection-12.1n .
head 6.2 :section-6.2
i smartalignc smartaligni align, smartn :spn Smartspc ALIGNspn Macro
norm
n Thespc smartalignspn standardspn macrospn packagespn providesspn forspn anspi ALIGNc ALIGNspn macrospn whichspn isspn morespn powerfulspn thanspn thespn defaultspn (andspn backwards-n compatible)spn onespn (seespx section-5.10.1n sectionspn 5.10.1xesection-5.10.1n ).spn Whenspn thespc smartalignspn packagespn isspn enabled,spn whenspc ALIGNspn isspn usedspn withoutspn aspn secondspn argument,spn NASMspn willspn generatespn aspn sequencespn ofspn instructionsspn morespn efficientspn thanspn aspn seriesspn ofspc NOPn .spn Furthermore,spn ifspn thespn paddingspn exceedsspn aspn specificspn threshold,spn thenspn NASMspn willspn generatespn aspn jumpspn overspn thespn entirespn paddingspn sequence.
norm
n Thespn specificspn instructionsspn generatedspn canspn bespn controlledspn withspn thespn newspi ALIGNMODEc ALIGNMODEspn macro.spn Thisspn macrospn takesspn twospn parameters:spn onespn mode,spn andspn anspn optionalspn jumpspn thresholdspn override.spn Ifspn (forspn anyspn reason)spn youspn needspn tospn turnspn offspn thespn jumpspn completelyspn justspn setspn jumpspn thresholdspn valuespn tospdan 1spn (orspn setspn itspn tospc nojmpn ).spn Thespn followingspn modesspn arespn possible:
bull
c genericn :spn Worksspn onspn allspn x86spn CPUsspn andspn shouldspn havespn reasonablespn performance.spn Thespn defaultspn jumpspn thresholdspn isspn 8.spn Thisspn isspn thespn default.
bull
c nopn :spn Padspn outspn withspc NOPspn instructions.spn Thespn onlyspn differencespn comparedspn tospn thespn standardspc ALIGNspn macrospn isspn thatspn NASMspn canspn stillspn jumpspn overspn aspn largespn paddingspn area.spn Thespn defaultspn jumpspn thresholdspn isspn 16.
bull
c k7n :spn Optimizespn forspn thespn AMDspn K7spn (Athlon/Althonspn XP).spn Thesespn instructionsspn shouldspn stillspn workspn onspn allspn x86spn CPUs.spn Thespn defaultspn jumpspn thresholdspn isspn 16.
bull
c k8n :spn Optimizespn forspn thespn AMDspn K8spn (Opteron/Althonspn 64).spn Thesespn instructionsspn shouldspn stillspn workspn onspn allspn x86spn CPUs.spn Thespn defaultspn jumpspn thresholdspn isspn 16.
bull
c p6n :spn Optimizespn forspn Intelspn CPUs.spn Thisspn usesspn thespn longspc NOPspn instructionsspn firstspn introducedspn inspn Pentiumspn Pro.spn Thisspn isspn incompatiblespn withspn allspn CPUsspn ofspn familyspn 5spn orspn lower,spn asspn wellspn asspn somespn VIAspn CPUsspn andspn severalspn virtualizationspn solutions.spn Thespn defaultspn jumpspn thresholdspn isspn 16.
norm
n Thespn macrospi __?ALIGNMODE?__c __?ALIGNMODE?__spn isspn definedspn tospn containspn thespn currentspn alignmentspn mode.spn Aspn numberspn ofspn otherspn macrosspn beginningspn withspc __?ALIGN_spn arespn usedspn internallyspn byspn thisspn macrospn package.
head 6.3 :section-6.3
i fpc fpn :spn Floating-n pointspn macros
norm
n Thisspn packagesspn containsspn thespn followingspn floating-n pointspn conveniencespn macros:
code
%define Inf             __?Infinity?__ %define NaN             __?QNaN?__ %define QNaN            __?QNaN?__ %define SNaN            __?SNaN?__ %define float8(x)       __?float8?__(x) %define float16(x)      __?float16?__(x) %define bfloat16(x)     __?bfloat16?__(x) %define float32(x)      __?float32?__(x) %define float64(x)      __?float64?__(x) %define float80m(x)     __?float80m?__(x) %define float80e(x)     __?float80e?__(x) %define float128l(x)    __?float128l?__(x) %define float128h(x)    __?float128h?__(x)
norm
n Itspn alsospn definesspn thespn aspn multi-n linespn macrospi bf16c bf16spn thatspn canspn bespn usedspn inspn aspn similarspn wayspn tospn thespc Deoxspn directivesspn forspn thespn otherspn floating-n pointspn numbers:
code
     bf16 -3.1415, NaN, 2000.0, +Inf
head 6.4 :section-6.4
i ifuncc ifuncn :spi integer functionsn Integerspn functions
norm
n Thisspn packagespn containsspn aspn setspn ofspn macrosspn whichspn implementspn integerspn functions.spn Thesespn arespn actuallyspn implementedspn asspn specialspn operators,spn butspn arespn mostspn convenientlyspn accessedspn viaspn thisspn macrospn package.
norm
n Thespn macrosspn providedspn are:
subh 6.4.1 :section-6.4.1
i integer logarithmsn Integerspn logarithms
norm
n Thesespn functionsspn calculatespn thespn integerspn logarithmspn basespn 2spn ofspn theirspn argument,spn consideredspn asspn anspn unsignedspn integer.spn Thespn onlyspn differencesspn betweenspn thespn functionsspn isspn theirspn respectivespn behaviorspn ifspn thespn argumentspn providedspn isspn notspn aspn powerspn ofspn two.
norm
n Thespn functionspi ilog2e()c ilog2e()spn (aliasspi ilog2()c ilog2()n )spn generatesspn anspn errorspn ifspn thespn argumentspn isspn notspn aspn powerspn ofspn two.
norm
n Thespn functionspi ilog2f()c ilog2f()spn roundsspn thespn argumentspn downspn tospn thespn nearestspn powerspn ofspn two;spn ifspn thespn argumentspn isspn zerospn itspn returnsspn zero.
norm
n Thespn functionspi ilog2c()c ilog2c()spn roundsspn thespn argumentspn upspn tospn thespn nearestspn powerspn ofspn two.
norm
n Thespn functionsspi ilog2fw()c ilog2fw()spn (aliasspi ilog2w()c ilog2w()n )spn andspi ilog2cw()c ilog2cw()spn generatespn aspn warningspn ifspn thespn argumentspn isspn notspn aspn powerspn ofspn two,spn butspn otherwisespn behavesspn likespc ilog2f()spn andspc ilog2c()n ,spn respectively.
head 6.5 :section-6.5
i masmc masmn :spi masm compatibilityn MASMspn compatibility
norm
n Sincespn versionspn 2.15,spn NASMspn hasspn aspn MASMspn compatibilityspn packagespn withspn minimalspn functionality,spn asspn intendedspn tospn bespn usedspn primarilyspn withspn machine-n generatedspn code.spn Itspn doesspn notspn includespn anyspn "programmer-n friendly"spn shortcuts,spn norspn doesspn itspn inspn anyspn wayspn supportspn ASSUME,spn symbolspn typing,spn orspn MASM-n stylespn structures.
norm
n Tospn enablespn thespn package,spn usespn thespn directive:
norm
c %use masm
norm
n Currently,spn thespn MASMspn compatibilityspn packagespn emulates:
bull
n Thespc FLATspn andspc OFFSETspn keywordsspn arespn recognizedspn andspn ignored.
bull
n Thespc PTRspn keywordspn signifiesspn aspn memoryspn reference,spn asspn ifspn thespn argumentspn hadspn beenspn putspn inspn squarespn brackets:
code
     mov eax,[foo]               ; memory reference      mov eax,dword ptr foo       ; memory reference      mov eax,dowrd ptr flat:foo  ; memory reference      mov eax,offset foo          ; address      mov eax,foo                 ; address (ambiguous syntax in MASM)
bull
n Thespc SEGMENTspn ...spc ENDSspn syntax:
code
   segname SEGMENT        ...    segname ENDS
bull
n Thespc PROCspn ...spc ENDPspn syntax:
code
   procname PROC [FAR]         ...    procname ENDP
indt
c PROCspn willspn alsospn definespc RETspn asspn aspn macrospn expandingspn tospn eitherspc RETFspn ifspc FARspn isspn specifiedspn andspc RETNspn otherwise.spn Anyspn keywordspn afterspc PROCspn otherspn thanspc FARspn isspn ignored.
bull
n Thespc TBYTEspn keywordspn asspn anspn aliasspn forspc TWORDspn (seespx section-2.2.7n sectionspn 2.2.7xesection-2.2.7n ).
bull
n Thespc ENDspn directivespn isspn ignored.
bull
n Inspn 64-n bitspn modespn relativespn addressingspn isspn thespn defaultspn (c DEFAULT RELn ,spn seespx section-7.2.1n sectionspn 7.2.1xesection-7.2.1n ).
norm
n Inspn addition,spn NASMspn nowspn nativelyspn supports,spn regardlessspn ofspn whetherspn thisspn packagespn isspn usedspn orspn not:
bull
c ?spn andspc DUPspn syntaxspn forspn thespc DBspn etcspn dataspn declarationspn directivesspn (seespx section-3.2.1n sectionspn 3.2.1xesection-3.2.1n ).
bull
c displacement[base+index]spn syntaxspn forspn memoryspn operations,spn insteadspn ofspc [base+index+displacement]n .
bull
c seg:[addr]spn insteadspn ofspc [seg:addr]spn syntax.
bull
n Aspn purespn offsetspn canspn bespn givenspn tospc LEAspn withoutspn squarespn brackets:
code
     lea rax,[foo]               ; standard syntax      lea rax,foo                 ; also accepted
chap 7 :chapter-7
i assembler directivesn Assemblerspn Directives
norm
n NASM,spn thoughspn itspn attemptsspn tospn avoidspn thespn bureaucracyspn ofspn assemblersspn likespn MASMspn andspn TASM,spn isspn neverthelessspn forcedspn tospn supportspn aspeofewspn directives.spn Thesespn arespn describedspn inspn thisspn chapter.
norm
n NASM'sspn directivesspn comespn inspn twospn types:spi user-level directiveseouser-levelspn directivesspn andspi primitive directiveseoprimitivespn directives.spn Typically,spn eachspn directivespn hasspn aspn user-n levelspn formspn andspn aspn primitivespn form.spn Inspn almostspn allspn cases,spn wespn recommendspn thatspn usersspn usespn thespn user-n levelspn formsspn ofspn thespn directives,spn whichspn arespn implementedspn asspn macrosspn whichspn callspn thespn primitivespn forms.
norm
n Primitivespn directivesspn arespn enclosedspn inspn squarespn brackets;spn user-n levelspn directivesspn arespn not.
norm
n Inspn additionspn tospn thespn universalspn directivesspn describedspn inspn thisspn chapter,spn eachspn objectspn filespn formatspn canspn optionallyspn supplyspn extraspn directivesspn inspn orderspn tospn controlspn particularspn featuresspn ofspn thatspn filespn format.spn Thesespi format-specific directiveseoformat-specificspn directivesspn arespn documentedspn alongspn withspn thespn formatsspn thatspn implementspn them,spn inspx chapter-8n chapterspn 8xechapter-8n .
head 7.1 :section-7.1
i BITSc BITSn :spn Specifyingspn Targetspi processor moden Processorspn Mode
norm
n Thespc BITSspn directivespn specifiesspn whetherspn NASMspn shouldspn generatespn codespi 16-bit mode, versus 32-bit moden designedspn tospn runspn onspn aspn processorspn operatingspn inspn 16-n bitspn mode,spn 32-n bitspn modespn orspn 64-n bitspn mode.spn Thespn syntaxspn isspc BITS XXn ,spn wherespn XXspn isspn 16,spn 32spn orspn 64.
norm
n Inspn mostspn cases,spn youspn shouldspn notspn needspn tospn usespc BITSspn explicitly.spn Thespc aoutn ,spc coffn ,spc elf*n ,spc machon ,spc win32spn andspc win64spn objectspn formats,spn whichspn arespn designedspn forspn usespn inspn 32-n bitspn orspn 64-n bitspn operatingspn systems,spn allspn causespn NASMspn tospn selectspn 32-n bitspn orspn 64-n bitspn mode,spn respectively,spn byspn default.spn Thespc objspn objectspn formatspn allowsspn youspn tospn specifyspn eachspn segmentspn youspn definespn asspn eitherspc USE16spn orspc USE32n ,spn andspn NASMspn willspn setspn itsspn operatingspn modespn accordingly,spn sospn thespn usespn ofspn thespc BITSspn directivespn isspn oncespn againspn unnecessary.
norm
n Thespn mostspn likelyspn reasonspn forspn usingspn thespc BITSspn directivespn isspn tospn writespn 32-n bitspn orspn 64-n bitspn codespn inspn aspn flatspn binaryspn file;spn thisspn isspn becausespn thespc binspn outputspn formatspn defaultsspn tospn 16-n bitspn modespn inspn anticipationspn ofspn itspn beingspn usedspn mostspn frequentlyspn tospn writespn DOSspc .COMspn programs,spn DOSspc .SYSspn devicespn driversspn andspn bootspn loaderspn software.
norm
n Thespc BITSspn directivespn canspn alsospn bespn usedspn tospn generatespn codespn forspn aspn differentspn modespn thanspn thespn standardspn onespn forspn thespn outputspn format.
norm
n Youspn dospeonotspn needspn tospn specifyspc BITS 32spn merelyspn inspn orderspn tospn usespn 32-n bitspn instructionsspn inspn aspn 16-n bitspn DOSspn program;spn ifspn youspn do,spn thespn assemblerspn willspn generatespn incorrectspn codespn becausespn itspn willspn bespn writingspn codespn targetedspn atspn aspn 32-n bitspn platform,spn tospn bespn runspn onspn aspn 16-n bitspn one.
norm
n Whenspn NASMspn isspn inspc BITS 16spn mode,spn instructionsspn whichspn usespn 32-n bitspn dataspn arespn prefixedspn withspn anspn 0x66spn byte,spn andspn thosespn referringspn tospn 32-n bitspn addressesspn havespn anspn 0x67spn prefix.spn Inspc BITS 32spn mode,spn thespn reversespn isspn true:spn 32-n bitspn instructionsspn requirespn nospn prefixes,spn whereasspn instructionsspn usingspn 16-n bitspn dataspn needspn anspn 0x66spn andspn thosespn workingspn onspn 16-n bitspn addressesspn needspn anspn 0x67.
norm
n Whenspn NASMspn isspn inspc BITS 64spn mode,spn mostspn instructionsspn operatespn thespn samespn asspn theyspn dospn forspc BITS 32spn mode.spn However,spn therespn arespn 8spn morespn generalspn andspn SSEspn registers,spn andspn 16-n bitspn addressingspn isspn nospn longerspn supported.
norm
n Thespn defaultspn addressspn sizespn isspn 64spn bits;spn 32-n bitspn addressingspn canspn bespn selectedspn withspn thespn 0x67spn prefix.spn Thespn defaultspn operandspn sizespn isspn stillspn 32spn bits,spn however,spn andspn thespn 0x66spn prefixspn selectsspn 16-n bitspn operandspn size.spn Thespc REXspn prefixspn isspn usedspn bothspn tospn selectspn 64-n bitspn operandspn size,spn andspn tospn accessspn thespn newspn registers.spn NASMspn automaticallyspn insertsspn REXspn prefixesspn whenspn necessary.
norm
n Whenspn thespc REXspn prefixspn isspn used,spn thespn processorspn doesspn notspn knowspn howspn tospn addressspn thespn AH,spn BH,spn CHspn orspn DHspn (highspn 8-n bitspn legacy)spn registers.spn Instead,spn itspn isspn possiblespn tospn accessspn thespn thespn lowspn 8-n bitsspn ofspn thespn SP,spn BPspn SIspn andspn DIspn registersspn asspn SPL,spn BPL,spn SILspn andspn DIL,spn respectively;spn butspn onlyspn whenspn thespn REXspn prefixspn isspn used.
norm
n Thespc BITSspn directivespn hasspn anspn exactlyspn equivalentspn primitivespn form,spc [BITS 16]n ,spc [BITS 32]spn andspc [BITS 64]n .spn Thespn user-n levelspn formspn isspn aspn macrospn whichspn hasspn nospn functionspn otherspn thanspn tospn callspn thespn primitivespn form.
norm
n Notespn thatspn thespn spacespn isspn neccessary,spn e.g.spc BITS32spn willspeonotspn work!
subh 7.1.1 :section-7.1.1
i USE16c USE16spn &spi USE32c USE32n :spn Aliasesspn forspn BITS
norm
n Thespn `c USE16n 'spn andspn `c USE32n 'spn directivesspn canspn bespn usedspn inspn placespn ofspn `c BITS 16n 'spn andspn `c BITS 32n ',spn forspn compatibilityspn withspn otherspn assemblers.
head 7.2 :section-7.2
i DEFAULTc DEFAULTn :spn Changespn thespn assemblerspn defaults
norm
n Thespc DEFAULTspn directivespn changesspn thespn assemblerspn defaults.spn Normally,spn NASMspn defaultsspn tospn aspn modespn wherespn thespn programmerspn isspn expectedspn tospn explicitlyspn specifyspn mostspn featuresspn directly.spn However,spn thisspn isspn occasionallyspn obnoxious,spn asspn thespn explicitspn formspn isspn prettyspn muchspn thespn onlyspn onespn onespn wishesspn tospn use.
norm
n Currently,spc DEFAULTspn canspn setspc RELspn &spc ABSspn andspc BNDspn &spc NOBNDn .
subh 7.2.1 :section-7.2.1
i RELc RELspn &spi ABSc ABSn :spn RIP-n relativespn addressing
norm
n Thisspn setsspn whetherspn registerlessspn instructionsspn inspn 64-n bitspn modespn arespc RIPdan relativespn orspn not.spn Byspn default,spn theyspn arespn absolutespn unlessspn overriddenspn withspn thespi RELc RELspn specifierspn (seespx section-3.3n sectionspn 3.3xesection-3.3n ).spn However,spn ifspc DEFAULT RELspn isspn specified,spc RELspn isspn default,spn unlessspn overriddenspn withspn thespc ABSspn specifier,spesexceptspe whenspe usedspe withspe anspe FSspe orspe GSspe segmentspeeoverriden .
norm
n Thespn specialspn handlingspn ofspc FSspn andspc GSspn overridesspn arespn duespn tospn thespn factspn thatspn thesespn registersspn arespn generallyspn usedspn asspn threadspn pointersspn orspn otherspn specialspn functionsspn inspn 64-n bitspn mode,spn andspn generatingspc RIPdan relativespn addressesspn wouldspn bespn extremelyspn confusing.
norm
c DEFAULT RELspn isspn disabledspn withspc DEFAULT ABSn .
subh 7.2.2 :section-7.2.2
i BNDc BNDspn &spi NOBNDc NOBNDn :spc BNDspn prefix
norm
n Ifspc DEFAULT BNDspn isspn set,spn allspn bnd-n prefixspn availablespn instructionsspn followingspn thisspn directivespn arespn prefixedspn withspn bnd.spn Tospn overridespn it,spc NOBNDspn prefixspn canspn bespn used.
code
 DEFAULT BND      call foo            ; BND will be prefixed      nobnd call foo      ; BND will NOT be prefixed
norm
c DEFAULT NOBNDspn canspn disablespc DEFAULT BNDspn andspn thenspc BNDspn prefixspn willspn bespn addedspn onlyspn whenspn explicitlyspn specifiedspn inspn code.
norm
c DEFAULT BNDspn isspn expectedspn tospn bespn thespn normalspn configurationspn forspn writingspn MPX-n enabledspn code.
head 7.3 :section-7.3
i SECTIONc SECTIONspn orspi SEGMENTc SEGMENTn :spn Changingspn andspi defining sectionsn Definingspn Sections
norm
i changing sectionsi switching between sectionsn Thespc SECTIONspn directivespn (c SEGMENTspn isspn anspn exactlyspn equivalentspn synonym)spn changesspn whichspn sectionspn ofspn thespn outputspn filespn thespn codespn youspn writespn willspn bespn assembledspn into.spn Inspn somespn objectspn filespn formats,spn thespn numberspn andspn namesspn ofspn sectionsspn arespn fixed;spn inspn others,spn thespn userspn mayspn makespn upspn asspn manyspn asspn theyspn wish.spn Hencespc SECTIONspn mayspn sometimesspn givespn anspn errorspn message,spn orspn mayspn definespn aspn newspn section,spn ifspn youspn tryspn tospn switchspn tospn aspn sectionspn thatspn doesspn notspn (yet)spn exist.
norm
n Thespn Unixspn objectspn formats,spn andspn thespc binspn objectspn formatspn (butspn seespx section-8.1.3n sectionspn 8.1.3xesection-8.1.3n ),spn allspn supportspn thespi standardized section namesn standardizedspn sectionspn namesspc .textn ,spc .dataspn andspc .bssspn forspn thespn code,spn dataspn andspn uninitialized-n dataspn sections.spn Thespc objspn format,spn byspn contrast,spn doesspn notspn recognizespn thesespn sectionspn namesspn asspn beingspn special,spn andspn indeedspn willspn stripspn offspn thespn leadingspn periodspn ofspn anyspn sectionspn namespn thatspn hasspn one.
subh 7.3.1 :section-7.3.1
n Thespi __?SECT?__c __?SECT?__spn Macro
norm
n Thespc SECTIONspn directivespn isspn unusualspn inspn thatspn itsspn user-n levelspn formspn functionsspn differentlyspn fromspn itsspn primitivespn form.spn Thespn primitivespn form,spc [SECTION xyz]n ,spn simplyspn switchesspn thespn currentspn targetspn sectionspn tospn thespn onespn given.spn Thespn user-n levelspn form,spc SECTION xyzn ,spn however,spn firstspn definesspn thespn single-n linespn macrospc __?SECT?__spn tospn bespn thespn primitivespc [SECTION]spn directivespn whichspn itspn isspn aboutspn tospn issue,spn andspn thenspn issuesspn it.spn Sospn thespn user-n levelspn directive
code
        SECTION .text
norm
n expandsspn tospn thespn twospn lines
code
%define __?SECT?__        [SECTION .text]         [SECTION .text]
norm
n Usersspn mayspn findspn itspn usefulspn tospn makespn usespn ofspn thisspn inspn theirspn ownspn macros.spn Forspn example,spn thespc writefilespn macrospn definedspn inspx section-4.3.3n sectionspn 4.3.3xesection-4.3.3spn canspn bespn usefullyspn rewrittenspn inspn thespn followingspn morespn sophisticatedspn form:
code
%macro  writefile 2+         [section .data]   %%str:        db      %2   %%endstr:         __?SECT?__         mov     dx,%%str         mov     cx,%%endstr-%%str         mov     bx,%1         mov     ah,0x40         int     0x21 %endmacro
norm
n Thisspn formspn ofspn thespn macro,spn oncespn passedspn aspn stringspn tospn output,spn firstspn switchesspn temporarilyspn tospn thespn dataspn sectionspn ofspn thespn file,spn usingspn thespn primitivespn formspn ofspn thespc SECTIONspn directivespn sospn asspn notspn tospn modifyspc __?SECT?__n .spn Itspn thenspn declaresspn itsspn stringspn inspn thespn dataspn section,spn andspn thenspn invokesspc __?SECT?__spn tospn switchspn backspn tospeowhicheverspn sectionspn thespn userspn wasspn previouslyspn workingspn in.spn Itspn thusspn avoidsspn thespn need,spn inspn thespn previousspn versionspn ofspn thespn macro,spn tospn includespn aspc JMPspn instructionspn tospn jumpspn overspn thespn data,spn andspn alsospn doesspn notspn failspn if,spn inspn aspn complicatedspc OBJspn formatspn module,spn thespn userspn couldspn potentiallyspn bespn assemblingspn thespn codespn inspn anyspn ofspn severalspn separatespn codespn sections.
head 7.4 :section-7.4
i ABSOLUTEc ABSOLUTEn :spn Definingspn Absolutespn Labels
norm
n Thespc ABSOLUTEspn directivespn canspn bespn thoughtspn ofspn asspn anspn alternativespn formspn ofspc SECTIONn :spn itspn causesspn thespn subsequentspn codespn tospn bespn directedspn atspn nospn physicalspn section,spn butspn atspn thespn hypotheticalspn sectionspn startingspn atspn thespn givenspn absolutespn address.spn Thespn onlyspn instructionsspn youspn canspn usespn inspn thisspn modespn arespn thespc RESBspn family.
norm
c ABSOLUTEspn isspn usedspn asspn follows:
code
absolute 0x1A     kbuf_chr    resw    1     kbuf_free   resw    1     kbuf        resw    16
norm
n Thisspn examplespn describesspn aspn sectionspn ofspn thespn PCspn BIOSspn dataspn area,spn atspn segmentspn addressspn 0x40:spn thespn abovespn codespn definesspc kbuf_chrspn tospn bespn 0x1A,spc kbuf_freespn tospn bespn 0x1C,spn andspc kbufspn tospn bespn 0x1E.
norm
n Thespn user-n levelspn formspn ofspc ABSOLUTEn ,spn likespn thatspn ofspc SECTIONn ,spn redefinesspn thespi __?SECT?__c __?SECT?__spn macrospn whenspn itspn isspn invoked.
norm
i STRUCc STRUCspn andspi ENDSTRUCc ENDSTRUCspn arespn definedspn asspn macrosspn whichspn usespc ABSOLUTEspn (andspn alsospc __?SECT?__n ).
norm
c ABSOLUTEspn doesn'tspn havespn tospn takespn anspn absolutespn constantspn asspn anspn argument:spn itspn canspn takespn anspn expressionspn (actually,spn aspi critical expressionn criticalspn expressionn :spn seespx section-3.8n sectionspn 3.8xesection-3.8n )spn andspn itspn canspn bespn aspn valuespn inspn aspn segment.spn Forspn example,spn aspn TSRspn canspn re-n usespn itsspn setupspn codespn asspn run-n timespn BSSspn likespn this:
code
        org     100h               ; it's a .COM program         jmp     setup              ; setup code comes last         ; the resident part of the TSR goes here setup:         ; now write the code that installs the TSR here absolute setup runtimevar1     resw    1 runtimevar2     resd    20 tsr_end:
norm
n Thisspn definesspn somespn variablesspn `onspn topspn of'spn thespn setupspn code,spn sospn thatspn afterspn thespn setupspn hasspn finishedspn running,spn thespn spacespn itspn tookspn upspn canspn bespn re-n usedspn asspn dataspn storagespn forspn thespn runningspn TSR.spn Thespn symbolspn `tsr_end'spn canspn bespn usedspn tospn calculatespn thespn totalspn sizespn ofspn thespn partspn ofspn thespn TSRspn thatspn needsspn tospn bespn madespn resident.
head 7.5 :section-7.5
i EXTERNc EXTERNn :spi importing symbolsn Importingspn Symbolsspn fromspn Otherspn Modules
norm
c EXTERNspn isspn similarspn tospn thespn MASMspn directivespc EXTRNspn andspn thespn Cspn keywordspc externn :spn itspn isspn usedspn tospn declarespn aspn symbolspn whichspn isspn notspn definedspn anywherespn inspn thespn modulespn beingspn assembled,spn butspn isspn assumedspn tospn bespn definedspn inspn somespn otherspn modulespn andspn needsspn tospn bespn referredspn tospn byspn thisspn one.spn Notspn everyspn object-n filespn formatspn canspn supportspn externalspn variables:spn thespc binspn formatspn cannot.
norm
n Thespc EXTERNspn directivespn takesspn asspn manyspn argumentsspn asspn youspn like.spn Eachspn argumentspn isspn thespn namespn ofspn aspn symbol:
code
extern  _printf extern  _sscanf,_fscanf
norm
n Somespn object-n filespn formatsspn providespn extraspn featuresspn tospn thespc EXTERNspn directive.spn Inspn allspn cases,spn thespn extraspn featuresspn arespn usedspn byspn suffixingspn aspn colonspn tospn thespn symbolspn namespn followedspn byspn object-n formatspn specificspn text.spn Forspn example,spn thespc objspn formatspn allowsspn youspn tospn declarespn thatspn thespn defaultspn segmentspn basespn ofspn anspn externalspn shouldspn bespn thespn groupspc dgroupspn byspn meansspn ofspn thespn directive
code
extern  _variable:wrt dgroup
norm
n Thespn primitivespn formspn ofspc EXTERNspn differsspn fromspn thespn user-n levelspn formspn onlyspn inspn thatspn itspn canspn takespn onlyspn onespn argumentspn atspn aspn time:spn thespn supportspn forspn multiplespn argumentsspn isspn implementedspn atspn thespn preprocessorspn level.
norm
n Youspn canspn declarespn thespn samespn variablespn asspc EXTERNspn morespn thanspn once:spn NASMspn willspn quietlyspn ignorespn thespn secondspn andspn laterspn redeclarations.
norm
n Ifspn aspn variablespn isspn declaredspn bothspc GLOBALspn andspc EXTERNn ,spn orspn ifspn itspn isspn declaredspn asspc EXTERNspn andspn thenspn defined,spn itspn willspn bespn treatedspn asspc GLOBALn .spn Ifspn aspn variablespn isspn declaredspn bothspn asspc COMMONspn andspc EXTERNn ,spn itspn willspn bespn treatedspn asspc COMMONn .
head 7.6 :section-7.6
i REQUIREDc REQUIREDn :spi unconditionally importing symbolsn Unconditionallyspn Importingspn Symbolsspn fromspn Otherspn Modules
norm
n Thespc REQUIREDspn keywordspn isspn similarspn tospc EXTERNspn one.spn Thespn differencespn isspn thatspn thespc EXTERNspn keywordspn asspn ofspn versionspn 2.15spn doesspn notspn generatespn unknownspn symbolsspn asspn thatspn preventsspn usingspn commonspn headerspn files,spn asspn itspn mightspn causespn thespn linkerspn tospn pullspn inspn aspn bunchspn ofspn unnecessaryspn modules.
norm
n Ifspn thespn oldspn behaviorspn isspn required,spn usespc REQUIREDspn keywordspn instead.
head 7.7 :section-7.7
i GLOBALc GLOBALn :spi exporting symbolsn Exportingspn Symbolsspn tospn Otherspn Modules
norm
c GLOBALspn isspn thespn otherspn endspn ofspc EXTERNn :spn ifspn onespn modulespn declaresspn aspn symbolspn asspc EXTERNspn andspn refersspn tospn it,spn thenspn inspn orderspn tospn preventspn linkerspn errors,spn somespn otherspn modulespn mustspn actuallyspeodefinespn thespn symbolspn andspn declarespn itspn asspc GLOBALn .spn Somespn assemblersspn usespn thespn namespi PUBLICc PUBLICspn forspn thisspn purpose.
norm
c GLOBALspn usesspn thespn samespn syntaxspn asspc EXTERNn ,spn exceptspn thatspn itspn mustspn referspn tospn symbolsspn whichspeoarespn definedspn inspn thespn samespn modulespn asspn thespc GLOBALspn directive.spn Forspn example:
code
global _main _main:         ; some code
norm
c GLOBALn ,spn likespc EXTERNn ,spn allowsspn objectspn formatsspn tospn definespn privatespn extensionsspn byspn meansspn ofspn aspn colon.spn Thespn ELFspn objectspn format,spn forspn example,spn letsspn youspn specifyspn whetherspn globalspn dataspn itemsspn arespn functionsspn orspn data:
code
global  hashlookup:function, hashtable:data
norm
n Likespc EXTERNn ,spn thespn primitivespn formspn ofspc GLOBALspn differsspn fromspn thespn user-n levelspn formspn onlyspn inspn thatspn itspn canspn takespn onlyspn onespn argumentspn atspn aspn time.
head 7.8 :section-7.8
i COMMONc COMMONn :spn Definingspn Commonspn Dataspn Areas
norm
n Thespc COMMONspn directivespn isspn usedspn tospn declarespi common variablesescommonspeevariablesn .spn Aspn commonspn variablespn isspn muchspn likespn aspn globalspn variablespn declaredspn inspn thespn uninitializedspn dataspn section,spn sospn that
code
common  intvar  4
norm
n isspn similarspn inspn functionspn to
code
global  intvar section .bss intvar  resd    1
norm
n Thespn differencespn isspn thatspn ifspn morespn thanspn onespn modulespn definesspn thespn samespn commonspn variable,spn thenspn atspn linkspn timespn thosespn variablesspn willspn bespeomergedn ,spn andspn referencesspn tospc intvarspn inspn allspn modulesspn willspn pointspn atspn thespn samespn piecespn ofspn memory.
norm
n Likespc GLOBALspn andspc EXTERNn ,spc COMMONspn supportsspn object-n formatspn specificspn extensions.spn Forspn example,spn thespc objspn formatspn allowsspn commonspn variablesspn tospn bespn NEARspn orspn FAR,spn andspn thespn ELFspn formatspn allowsspn youspn tospn specifyspn thespn alignmentspn requirementsspn ofspn aspn commonspn variable:
code
common  commvar  4:near  ; works in OBJ common  intarray 100:4   ; works in ELF: 4 byte aligned
norm
n Oncespn again,spn likespc EXTERNspn andspc GLOBALn ,spn thespn primitivespn formspn ofspc COMMONspn differsspn fromspn thespn user-n levelspn formspn onlyspn inspn thatspn itspn canspn takespn onlyspn onespn argumentspn atspn aspn time.
head 7.9 :section-7.9
i STATICc STATICn :spn Localspn Symbolsspn withinspn Modules
norm
n Oppositespn tospc EXTERNspn andspc GLOBALn ,spc STATICspn isspn localspn symbol,spn butspn shouldspn bespn namedspn accordingspn tospn thespn globalspn manglingspn rulesspn (namedspn byspn analogyspn withspn thespn Cspn keywordspc staticspn asspn appliedspn tospn functionsspn orspn globalspn variables).
code
static foo foo:          ; codes
norm
n Unlikespc GLOBALn ,spc STATICspn doesspn notspn allowspn objectspn formatsspn tospn acceptspn privatespn extensionsspn mentionedspn inspx section-7.7n sectionspn 7.7xesection-7.7n .
head 7.10 :section-7.10
i (G|L)PREFIXc (G|L)PREFIXn ,spi (G|L)POSTFIXc (G|L)POSTFIXn :spn Manglingspn Symbols
norm
c PREFIXn ,spc GPREFIXn ,spc LPREFIXn ,spc POSTFIXn ,spc GPOSTFIXn ,spn andspc LPOSTFIXspn directivesspn canspn prependspn orspn appendspn aspn stringspn tospn aspn certainspn typespn ofspn symbols,spn normallyspn tospn fitspn specificspn ABIspn conventions
bull
c PREFIXn |c GPREFIXn :spn Prependspn thespn argumentspn tospn allspc EXTERNspc COMMONn ,spc STATICn ,spn andspc GLOBALspn symbols.
bull
c LPREFIXn :spn Prependspn thespn argumentspn tospn allspn otherspn symbolsspn suchspn asspn localspn labelsspn andspn backendspn definedspn symbols.
bull
c POSTFIXn |c GPOSTFIXn :spn Appendspn thespn argumentspn tospn allspc EXTERNspc COMMONn ,spc STATICn ,spn andspc GLOBALspn symbols.
bull
c LPOSTFIXn :spn Appendspn thespn argumentspn tospn allspn otherspn symbolsspn suchspn asspn localspn labelsspn andspn backendspn definedspn symbols.
norm
n Thesespn aspn macrosspn implementedspn asspn pragmas,spn andspn usingspc %pragmaspn syntaxspn canspn bespn restrictedspn tospn specificspn backendsspn (seespx section-4.10n sectionspn 4.10xesection-4.10n ):
code
%pragma macho lprefix L_
norm
n Commandspn linespn optionsspn arespn alsospn available.spn Seespn alsospx section-2.1.28n sectionspn 2.1.28xesection-2.1.28n .
norm
n Onespn examplespn whichspn supportsspn manyspn ABIs:
code
; The most common conventions %pragma output gprefix _ %pragma output lprefix L_ ; ELF uses a different convention %pragma elf    gprefix                       ; empty %pragma elf    lprefix .L
norm
n Somespn toolchainsspn isspn awarespn ofspn aspn particularspn prefixspn forspn itsspn ownspn optimizationspn options,spn suchspn asspn codespn elimination.spn Forspn instance,spn Mach-n Ospn backendspn hasspn aspn linkerspn thatspn usesspn aspn simplisticspn namingspn schemespn tospn chunkspn upspn sectionsspn intospn aspn metaspn section.spn Whenspn thespc subsections_via_symbolsspn directivespn (x section-8.8.4n sectionspn 8.8.4xesection-8.8.4n )spn isspn declared,spn eachspn symbolspn isspn thespn startspn ofspn aspn separatespn block.spn Thespn metaspn sectionspn is,spn then,spn definedspn tospn includespn sectionsspn beforespn thespn onespn thatspn startsspn withspn aspn 'L'.spc LPREFIXspn isspn usefulspn herespn tospn markspn allspn localspn symbolsspn withspn thespn 'L'spn prefixspn tospn bespn excludedspn tospn thespn metaspn section.spn Itspn convertsspn localspn symbolsspn compatiblespn withspn thespn particularspn toolchain.spn Notespn thatspn localspn symbolsspn declaredspn withspc STATICspn (x section-7.9n sectionspn 7.9xesection-7.9n )spn arespn excludedspn fromspn thespn symbolspn manglingspn andspn alsospn notspn markedspn asspn global.
head 7.11 :section-7.11
i CPUc CPUn :spn Definingspn CPUspn Dependencies
norm
n Thespi CPUc CPUspn directivespn restrictsspn assemblyspn tospn thosespn instructionsspn whichspn arespn availablespn onspn thespn specifiedspn CPU.
norm
n Optionsspn are:
bull
c CPU 8086spn Assemblespn onlyspn 8086spn instructionspn set
bull
c CPU 186spn Assemblespn instructionsspn upspn tospn thespn 80186spn instructionspn set
bull
c CPU 286spn Assemblespn instructionsspn upspn tospn thespn 286spn instructionspn set
bull
c CPU 386spn Assemblespn instructionsspn upspn tospn thespn 386spn instructionspn set
bull
c CPU 486spn 486spn instructionspn set
bull
c CPU 586spn Pentiumspn instructionspn set
bull
c CPU PENTIUMspn Samespn asspn 586
bull
c CPU 686spn P6spn instructionspn set
bull
c CPU PPROspn Samespn asspn 686
bull
c CPU P2spn Samespn asspn 686
bull
c CPU P3spn Pentiumspn IIIspn (Katmai)spn instructionspn sets
bull
c CPU KATMAIspn Samespn asspn P3
bull
c CPU P4spn Pentiumspn 4spn (Willamette)spn instructionspn set
bull
c CPU WILLAMETTEspn Samespn asspn P4
bull
c CPU PRESCOTTspn Prescottspn instructionspn set
bull
c CPU X64spn x86-n 64spn (x64/AMD64/Intelspn 64)spn instructionspn set
bull
c CPU IA64spn IA64spn CPUspn (inspn x86spn mode)spn instructionspn set
norm
n Allspn optionsspn arespn casespn insensitive.spn Allspn instructionsspn willspn bespn selectedspn onlyspn ifspn theyspn applyspn tospn thespn selectedspn CPUspn orspn lower.spn Byspn default,spn allspn instructionsspn arespn available.
head 7.12 :section-7.12
i FLOATc FLOATn :spn Handlingspn ofspi floating-point, constantsn floating-n pointspn constants
norm
n Byspn default,spn floating-n pointspn constantsspn arespn roundedspn tospn nearest,spn andspn IEEEspn denormalsspn arespn supported.spn Thespn followingspn optionsspn canspn bespn setspn tospn alterspn thisspn behaviour:
bull
c FLOAT DAZspn Flushspn denormalsspn tospn zero
bull
c FLOAT NODAZspn Dospn notspn flushspn denormalsspn tospn zerospn (default)
bull
c FLOAT NEARspn Roundspn tospn nearestspn (default)
bull
c FLOAT UPspn Roundspn upspn (towardspn +Infinity)
bull
c FLOAT DOWNspn Roundspn downspn (towardspdan Infinity)
bull
c FLOAT ZEROspn Roundspn towardspn zero
bull
c FLOAT DEFAULTspn Restorespn defaultspn settings
norm
n Thespn standardspn macrosspi __?FLOAT_DAZ?__c __?FLOAT_DAZ?__n ,spi __?FLOAT_ROUND?__c __?FLOAT_ROUND?__n ,spn andspi __?FLOAT?__c __?FLOAT?__spn containspn thespn currentspn state,spn asspn longspn asspn thespn programmerspn hasspn avoidedspn thespn usespn ofspn thespn brackededspn primitivespn form,spn (c [FLOAT]n ).
norm
c __?FLOAT?__spn containsspn thespn fullspn setspn ofspn floating-n pointspn settings;spn thisspn valuespn canspn bespn savedspn awayspn andspn invokedspn laterspn tospn restorespn thespn setting.
head 7.13 :section-7.13
i [WARNING]c [WARNING]n :spn Enablespn orspn disablespn warnings
norm
n Thespc [WARNING]spn directivespn canspn bespn usedspn tospn enablespn orspn disablespn classesspn ofspn warningsspn inspn thespn samespn wayspn asspn thespc -wspn option,spn seespx section-2.1.26n sectionspn 2.1.26xesection-2.1.26spn forspn morespn detailsspn aboutspn warningspn classes.
bull
c [warning +eowarning-classc ]spn enablesspn warningsspn forspeowarning-classn .
bull
c [warning -eowarning-classc ]spn disablesspn warningsspn forspeowarning-classn .
bull
c [warning *eowarning-classc ]spn restoresspeowarning-classspn tospn thespn originalspn value,spn eitherspn thespn defaultspn valuespn orspn asspn specifiedspn onspn thespn commandspn line.
bull
c [warning push]spn savesspn thespn currentspn warningspn statespn onspn aspn stack.
bull
c [warning pop]spn restoresspn thespn currentspn warningspn statespn fromspn thespn stack.
norm
n Thespc [WARNING]spn directivespn alsospn acceptsspn thespc alln ,spc errorspn andspc error=eowarning-classspn specifiers.
norm
n Nospn "userspn form"spn (withoutspn thespn brackets)spn currentlyspn exists.
chap 8 :chapter-8
i output formatsn Outputspn Formats
norm
n NASMspn isspn aspn portablespn assembler,spn designedspn tospn bespn ablespn tospn compilespn onspn anyspn ANSIspn C-n supportingspn platformspn andspn producespn outputspn tospn runspn onspn aspn varietyspn ofspn Intelspn x86spn operatingspn systems.spn Forspn thisspn reason,spn itspn hasspn aspn largespn numberspn ofspn availablespn outputspn formats,spn selectedspn usingspn thespi -fc -fspn optionspn onspn thespn NASMspi command-linen commandspn linen .spn Eachspn ofspn thesespn formats,spn alongspn withspn itsspn extensionsspn tospn thespn basespn NASMspn syntax,spn isspn detailedspn inspn thisspn chapter.
norm
n Asspn statedspn inspx section-2.1.1n sectionspn 2.1.1xesection-2.1.1n ,spn NASMspn choosesspn aspi default namen defaultspn namespn forspn yourspn outputspn filespn basedspn onspn thespn inputspn filespn namespn andspn thespn chosenspn outputspn format.spn Thisspn willspn bespn generatedspn byspn removingspn thespi extensionn extensionspn (c .asmn ,spc .sn ,spn orspn whateverspn youspn likespn tospn use)spn fromspn thespn inputspn filespn name,spn andspn substitutingspn anspn extensionspn definedspn byspn thespn outputspn format.spn Thespn extensionsspn arespn givenspn withspn eachspn formatspn below.
head 8.1 :section-8.1
i binc binn :spi flat-form binaryn Flat-Formspn Binaryi pure binaryspn Output
norm
n Thespc binspn formatspn doesspn notspn producespn objectspn files:spn itspn generatesspn nothingspn inspn thespn outputspn filespn exceptspn thespn codespn youspn wrote.spn Suchspn `purespn binary'spn filesspn arespn usedspn byspi ms-dosn MS-DOSn :spi .COMc .COMspn executablesspn andspi .SYSc .SYSspn devicespn driversspn arespn purespn binaryspn files.spn Purespn binaryspn outputspn isspn alsospn usefulspn forspi operating systemn operatingspn systemspn andspi boot loadern bootspn loaderspn development.
norm
n Thespc binspn formatspn supportsspi multiple section namesn multiplespn sectionspn namesn .spn Forspn detailsspn ofspn howspn NASMspn handlesspn sectionsspn inspn thespc binspn format,spn seespx section-8.1.3n sectionspn 8.1.3xesection-8.1.3n .
norm
n Usingspn thespc binspn formatspn putsspn NASMspn byspn defaultspn intospn 16-n bitspn modespn (seespx section-7.1n sectionspn 7.1xesection-7.1n ).spn Inspn orderspn tospn usespc binspn tospn writespn 32-n bitspn orspn 64-n bitspn code,spn suchspn asspn anspn OSspn kernel,spn youspn needspn tospn explicitlyspn issuespn thespi BITSc BITS 32spn orspi BITSc BITS 64spn directive.
norm
c binspn hasspn nospn defaultspn outputspn filespn namespn extension:spn instead,spn itspn leavesspn yourspn filespn namespn asspn itspn isspn oncespn thespn originalspn extensionspn hasspn beenspn removed.spn Thus,spn thespn defaultspn isspn forspn NASMspn tospn assemblespc binprog.asmspn intospn aspn binaryspn filespn calledspc binprogn .
subh 8.1.1 :section-8.1.1
i ORGc ORGn :spn Binaryspn Filespi program originn Programspn Origin
norm
n Thespc binspn formatspn providesspn anspn additionalspn directivespn tospn thespn listspn givenspn inspx chapter-7n chapterspn 7xechapter-7n :spc ORGn .spn Thespn functionspn ofspn thespc ORGspn directivespn isspn tospn specifyspn thespn originspn addressspn whichspn NASMspn willspn assumespn thespn programspn beginsspn atspn whenspn itspn isspn loadedspn intospn memory.
norm
n Forspn example,spn thespn followingspn codespn willspn generatespn thespn longwordspc 0x00000104n :
code
        org     0x100         dd      label label:
norm
n Unlikespn thespc ORGspn directivespn providedspn byspn MASM-n compatiblespn assemblers,spn whichspn allowsspn youspn tospn jumpspn aroundspn inspn thespn objectspn filespn andspn overwritespn codespn youspn havespn alreadyspn generated,spn NASM'sspc ORGspn doesspn exactlyspn whatspn thespn directivespn says:speooriginn .spn Itsspn solespn functionspn isspn tospn specifyspn onespn offsetspn whichspn isspn addedspn tospn allspn internalspn addressspn referencesspn withinspn thespn section;spn itspn doesspn notspn permitspn anyspn ofspn thespn trickeryspn thatspn MASM'sspn versionspn does.spn Seespx section-13.1.3n sectionspn 13.1.3xesection-13.1.3spn forspn furtherspn comments.
subh 8.1.2 :section-8.1.2
c binspn Extensionsspn tospn thespc SECTIONspn Directivei \c{sectionn ,spc binspn extensionsspn to}
norm
n Thespc binspn outputspn formatspn extendsspn thespc SECTIONspn (orspc SEGMENTn )spn directivespn tospn allowspn youspn tospn specifyspn thespn alignmentspn requirementsspn ofspn segments.spn Thisspn isspn donespn byspn appendingspn thespi ALIGNc ALIGNspn qualifierspn tospn thespn endspn ofspn thespn section-n definitionspn line.spn Forspn example,
code
section .data   align=16
norm
n switchesspn tospn thespn sectionspc .dataspn andspn alsospn specifiesspn thatspn itspn mustspn bespn alignedspn onspn aspn 16-n bytespn boundary.
norm
n Thespn parameterspn tospc ALIGNspn specifiesspn howspn manyspn lowspn bitsspn ofspn thespn sectionspn startspn addressspn mustspn bespn forcedspn tospn zero.spn Thespn alignmentspn valuespn givenspn mayspn bespn anyspn powerspn ofspn two.i section alignment, in bini segment alignment, in bini alignment, in bin sections
subh 8.1.3 :section-8.1.3
i multisectionn Multisectioni bin, multisectionspn Supportspn forspn thespc binspn Format
norm
n Thespc binspn formatspn allowsspn thespn usespn ofspn multiplespn sections,spn ofspn arbitraryspn names,spn besidesspn thespn "known"spc .textn ,spc .datan ,spn andspc .bssspn names.
bull
n Sectionsspn mayspn bespn designatedspi progbitsc progbitsspn orspi nobitsc nobitsn .spn Defaultspn isspc progbitsspn (exceptspc .bssn ,spn whichspn defaultsspn tospc nobitsn ,spn ofspn course).
bull
n Sectionsspn canspn bespn alignedspn atspn aspn specifiedspn boundaryspn followingspn thespn previousspn sectionspn withspc align=n ,spn orspn atspn anspn arbitraryspn byte-n granularspn positionspn withspi start=c start=n .
bull
n Sectionsspn canspn bespn givenspn aspn virtualspn startspn address,spn whichspn willspn bespn usedspn forspn thespn calculationspn ofspn allspn memoryspn referencesspn withinspn thatspn sectionspn withspi vstart=c vstart=n .
bull
n Sectionsspn canspn bespn orderedspn usingspi follows=c follows=c <section>spn orspi vfollows=c vfollows=c <section>spn asspn anspn alternativespn tospn specifyingspn anspn explicitspn startspn address.
bull
n Argumentsspn tospc orgn ,spc startn ,spc vstartn ,spn andspc align=spn arespn criticalspn expressions.spn Seespx section-3.8n sectionspn 3.8xesection-3.8n .spn E.g.spc align=(1 << ALIGN_SHIFT)spdaspc ALIGN_SHIFTspn mustspn bespn definedspn beforespn itspn isspn usedspn here.
bull
n Anyspn codespn whichspn comesspn beforespn anspn explicitspc SECTIONspn directivespn isspn directedspn byspn defaultspn intospn thespc .textspn section.
bull
n Ifspn anspc ORGspn statementspn isspn notspn given,spc ORG 0spn isspn usedspn byspn default.
bull
n Thespc .bssspn sectionspn willspn bespn placedspn afterspn thespn lastspc progbitsspn section,spn unlessspc start=n ,spc vstart=n ,spc follows=n ,spn orspc vfollows=spn hasspn beenspn specified.
bull
n Allspn sectionsspn arespn alignedspn onspn dwordspn boundaries,spn unlessspn aspn differentspn alignmentspn hasspn beenspn specified.
bull
n Sectionsspn mayspn notspn overlap.
bull
n NASMspn createsspn thespc section.<secname>.startspn forspn eachspn section,spn whichspn mayspn bespn usedspn inspn yourspn code.
subh 8.1.4 :section-8.1.4
i map filesn Mapspn Files
norm
n Mapspn filesspn canspn bespn generatedspn inspc -f binspn formatspn byspn meansspn ofspn thespc [map]spn option.spn Mapspn typesspn ofspc allspn (default),spc briefn ,spc sectionsn ,spc segmentsn ,spn orspc symbolsspn mayspn bespn specified.spn Outputspn mayspn bespn directedspn tospc stdoutspn (default),spc stderrn ,spn orspn aspn specifiedspn file.spn E.g.spc [map symbols myfile.map]n .spn Nospn "userspn form"spn exists,spn thespn squarespn bracketsspn mustspn bespn used.
head 8.2 :section-8.2
i ithc ithn :spi intel hexn Intelspn Hexspn Output
norm
n Thespc ithspn filespn formatspn producesspn Intelspn hex-n formatspn files.spn Justspn asspn thespc binspn format,spn thisspn isspn aspn flatspn memoryspn imagespn formatspn withspn nospn supportspn forspn relocationspn orspn linking.spn Itspn isspn usuallyspn usedspn withspn ROMspn programmersspn andspn similarspn utilities.
norm
n Allspn extensionsspn supportedspn byspn thespc binspn filespn formatspn isspn alsospn supportedspn byspn thespc ithspn filespn format.
norm
c ithspn providesspn aspn defaultspn outputspn file-n namespn extensionspn ofspc .ithn .
head 8.3 :section-8.3
i srecc srecn :spi motorola s-recordsn Motorolaspn S-Recordsspn Output
norm
n Thespc srecspn filespn formatspn producesspn Motorolaspn S-n recordsspn files.spn Justspn asspn thespc binspn format,spn thisspn isspn aspn flatspn memoryspn imagespn formatspn withspn nospn supportspn forspn relocationspn orspn linking.spn Itspn isspn usuallyspn usedspn withspn ROMspn programmersspn andspn similarspn utilities.
norm
n Allspn extensionsspn supportedspn byspn thespc binspn filespn formatspn isspn alsospn supportedspn byspn thespc srecspn filespn format.
norm
c srecspn providesspn aspn defaultspn outputspn file-n namespn extensionspn ofspc .srecn .
head 8.4 :section-8.4
i objc objn :spi microsoft omfn Microsoftspn OMFi omfspn Objectspn Files
norm
n Thespc objspn filespn formatspn (NASMspn callsspn itspc objspn ratherspn thanspc omfspn forspn historicalspn reasons)spn isspn thespn onespn producedspn byspi masmn MASMspn andspi tasmn TASMn ,spn whichspn isspn typicallyspn fedspn tospn 16-n bitspn DOSspn linkersspn tospn producespi .EXEc .EXEspn files.spn Itspn isspn alsospn thespn formatspn usedspn byspi os/2n OS/2n .
norm
c objspn providesspn aspn defaultspn outputspn file-n namespn extensionspn ofspc .objn .
norm
c objspn isspn notspn exclusivelyspn aspn 16-n bitspn format,spn though:spn NASMspn hasspn fullspn supportspn forspn thespn 32-n bitspn extensionsspn tospn thespn format.spn Inspn particular,spn 32-n bitspc objspn formatspn filesspn arespn usedspn byspi borland's win32 compilersn Borland'sspn Win32spn compilersn ,spn insteadspn ofspn usingspn Microsoft'sspn newerspi win32c win32spn objectspn filespn format.
norm
n Thespc objspn formatspn doesspn notspn definespn anyspn specialspn segmentspn names:spn youspn canspn callspn yourspn segmentsspn anythingspn youspn like.spn Typicalspn namesspn forspn segmentsspn inspc objspn formatspn filesspn arespc CODEn ,spc DATAspn andspc BSSn .
norm
n Ifspn yourspn sourcespn filespn containsspn codespn beforespn specifyingspn anspn explicitspc SEGMENTspn directive,spn thenspn NASMspn willspn inventspn itsspn ownspn segmentspn calledspi __NASMDEFSEGc __NASMDEFSEGspn forspn you.
norm
n Whenspn youspn definespn aspn segmentspn inspn anspc objspn file,spn NASMspn definesspn thespn segmentspn namespn asspn aspn symbolspn asspn well,spn sospn thatspn youspn canspn accessspn thespn segmentspn addressspn ofspn thespn segment.spn So,spn forspn example:
code
segment data dvar:   dw      1234 segment code function:         mov     ax,data         ; get segment address of data         mov     ds,ax           ; and move it into DS         inc     word [dvar]     ; now this reference will work         ret
norm
n Thespc objspn formatspn alsospn enablesspn thespn usespn ofspn thespi SEGc SEGspn andspi WRTc WRTspn operators,spn sospn thatspn youspn canspn writespn codespn whichspn doesspn thingsspn like
code
extern  foo       mov   ax,seg foo            ; get preferred segment of foo       mov   ds,ax       mov   ax,data               ; a different segment       mov   es,ax       mov   ax,[ds:foo]           ; this accesses `foo'       mov   [es:foo wrt data],bx  ; so does this
subh 8.4.1 :section-8.4.1
c objspn Extensionsspn tospn thespc SEGMENTspn Directivei segment, obj extensions to
norm
n Thespc objspn outputspn formatspn extendsspn thespc SEGMENTspn (orspc SECTIONn )spn directivespn tospn allowspn youspn tospn specifyspn variousspn propertiesspn ofspn thespn segmentspn youspn arespn defining.spn Thisspn isspn donespn byspn appendingspn extraspn qualifiersspn tospn thespn endspn ofspn thespn segment-n definitionspn line.spn Forspn example,
code
segment code private align=16
norm
n definesspn thespn segmentspc coden ,spn butspn alsospn declaresspn itspn tospn bespn aspn privatespn segment,spn andspn requiresspn thatspn thespn portionspn ofspn itspn describedspn inspn thisspn codespn modulespn mustspn bespn alignedspn onspn aspn 16-n bytespn boundary.
norm
n Thespn availablespn qualifiersspn are:
bull
i PRIVATEc PRIVATEn ,spi PUBLICc PUBLICn ,spi COMMONc COMMONspn andspi STACKc STACKspn specifyspn thespn combinationspn characteristicsspn ofspn thespn segment.spc PRIVATEspn segmentsspn dospn notspn getspn combinedspn withspn anyspn othersspn byspn thespn linker;spc PUBLICspn andspc STACKspn segmentsspn getspn concatenatedspn togetherspn atspn linkspn time;spn andspc COMMONspn segmentsspn allspn getspn overlaidspn onspn topspn ofspn eachspn otherspn ratherspn thanspn stuckspn end-n to-n end.
bull
i ALIGNc ALIGNspn isspn used,spn asspn shownspn above,spn tospn specifyspn howspn manyspn lowspn bitsspn ofspn thespn segmentspn startspn addressspn mustspn bespn forcedspn tospn zero.spn Thespn alignmentspn valuespn givenspn mayspn bespn anyspn powerspn ofspn twospn fromspn 1spn tospn 4096;spn inspn reality,spn thespn onlyspn valuesspn supportedspn arespn 1,spn 2,spn 4,spn 16,spn 256spn andspn 4096,spn sospn ifspn 8spn isspn specifiedspn itspn willspn bespn roundedspn upspn tospn 16,spn andspn 32,spn 64spn andspn 128spn willspn allspn bespn roundedspn upspn tospn 256,spn andspn sospn on.spn Notespn thatspn alignmentspn tospn 4096-n bytespn boundariesspn isspn aspi pharlapn PharLapspn extensionspn tospn thespn formatspn andspn mayspn notspn bespn supportedspn byspn allspn linkers.i section alignment, in obji segment alignment, in obji alignment, in obj sections
bull
i CLASSc CLASSspn canspn bespn usedspn tospn specifyspn thespn segmentspn class;spn thisspn featurespn indicatesspn tospn thespn linkerspn thatspn segmentsspn ofspn thespn samespn classspn shouldspn bespn placedspn nearspn eachspn otherspn inspn thespn outputspn file.spn Thespn classspn namespn canspn bespn anyspn word,spn e.g.spc CLASS=CODEn .
bull
i OVERLAYc OVERLAYn ,spn likespc CLASSn ,spn isspn specifiedspn withspn anspn arbitraryspn wordspn asspn anspn argument,spn andspn providesspn overlayspn informationspn tospn anspn overlay-n capablespn linker.
bull
n Segmentsspn canspn bespn declaredspn asspi USE16c USE16spn orspi USE32c USE32n ,spn whichspn hasspn thespn effectspn ofspn recordingspn thespn choicespn inspn thespn objectspn filespn andspn alsospn ensuringspn thatspn NASM'sspn defaultspn assemblyspn modespn whenspn assemblingspn inspn thatspn segmentspn isspn 16-n bitspn orspn 32-n bitspn respectively.
bull
n Whenspn writingspi os/2n OS/2spn objectspn files,spn youspn shouldspn declarespn 32-n bitspn segmentsspn asspi FLATc FLATn ,spn whichspn causesspn thespn defaultspn segmentspn basespn forspn anythingspn inspn thespn segmentspn tospn bespn thespn specialspn groupspc FLATn ,spn andspn alsospn definesspn thespn groupspn ifspn itspn isspn notspn alreadyspn defined.
bull
n Thespc objspn filespn formatspn alsospn allowsspn segmentsspn tospn bespn declaredspn asspn havingspn aspn pre-n definedspn absolutespn segmentspn address,spn althoughspn nospn linkersspn arespn currentlyspn knownspn tospn makespn sensiblespn usespn ofspn thisspn feature;spn nevertheless,spn NASMspn allowsspn youspn tospn declarespn aspn segmentspn suchspn asspc SEGMENT SCREEN ABSOLUTE=0xB800spn ifspn youspn needspn to.spn Thespi ABSOLUTEc ABSOLUTEspn andspc ALIGNspn keywordsspn arespn mutuallyspn exclusive.
norm
n NASM'sspn defaultspn segmentspn attributesspn arespc PUBLICn ,spc ALIGN=1n ,spn nospn class,spn nospn overlay,spn andspc USE16n .
subh 8.4.2 :section-8.4.2
i GROUPc GROUPn :spn Definingspn Groupsspn ofspn Segmentsi segments, groups of
norm
n Thespc objspn formatspn alsospn allowsspn segmentsspn tospn bespn grouped,spn sospn thatspn aspn singlespn segmentspn registerspn canspn bespn usedspn tospn referspn tospn allspn thespn segmentsspn inspn aspn group.spn NASMspn thereforespn suppliesspn thespc GROUPspn directive,spn wherebyspn youspn canspn code
code
segment data         ; some data segment bss         ; some uninitialized data group dgroup data bss
norm
n whichspn willspn definespn aspn groupspn calledspc dgroupspn tospn containspn thespn segmentsspc dataspn andspc bssn .spn Likespc SEGMENTn ,spc GROUPspn causesspn thespn groupspn namespn tospn bespn definedspn asspn aspn symbol,spn sospn thatspn youspn canspn referspn tospn aspn variablespc varspn inspn thespc dataspn segmentspn asspc var wrt dataspn orspn asspc var wrt dgroupn ,spn dependingspn onspn whichspn segmentspn valuespn isspn currentlyspn inspn yourspn segmentspn register.
norm
n Ifspn youspn justspn referspn tospc varn ,spn however,spn andspc varspn isspn declaredspn inspn aspn segmentspn whichspn isspn partspn ofspn aspn group,spn thenspn NASMspn willspn defaultspn tospn givingspn youspn thespn offsetspn ofspc varspn fromspn thespn beginningspn ofspn thespeogroupn ,spn notspn thespeosegmentn .spn Thereforespc SEG varn ,spn also,spn willspn returnspn thespn groupspn basespn ratherspn thanspn thespn segmentspn base.
norm
n NASMspn willspn allowspn aspn segmentspn tospn bespn partspn ofspn morespn thanspn onespn group,spn butspn willspn generatespn aspn warningspn ifspn youspn dospn this.spn Variablesspn declaredspn inspn aspn segmentspn whichspn isspn partspn ofspn morespn thanspn onespn groupspn willspn defaultspn tospn beingspn relativespn tospn thespn firstspn groupspn thatspn wasspn definedspn tospn containspn thespn segment.
norm
n Aspn groupspn doesspn notspn havespn tospn containspn anyspn segments;spn youspn canspn stillspn makespc WRTspn referencesspn tospn aspn groupspn whichspn doesspn notspn containspn thespn variablespn youspn arespn referringspn to.spn OS/2,spn forspn example,spn definesspn thespn specialspn groupspc FLATspn withspn nospn segmentsspn inspn it.
subh 8.4.3 :section-8.4.3
i UPPERCASEc UPPERCASEn :spn Disablingspn Casespn Sensitivityspn inspn Output
norm
n Althoughspn NASMspn itselfspn isspi case sensitiven casespn sensitiven ,spn somespn OMFspn linkersspn arespn not;spn thereforespn itspn canspn bespn usefulspn forspn NASMspn tospn outputspn single-n casespn objectspn files.spn Thespc UPPERCASEspn format-n specificspn directivespn causesspn allspn segment,spn groupspn andspn symbolspn namesspn thatspn arespn writtenspn tospn thespn objectspn filespn tospn bespn forcedspn tospn upperspn casespn justspn beforespn beingspn written.spn Withinspn aspn sourcespn file,spn NASMspn isspn stillspn case-n sensitive;spn butspn thespn objectspn filespn canspn bespn writtenspn entirelyspn inspn upperspn casespn ifspn desired.
norm
c UPPERCASEspn isspn usedspn alonespn onspn aspn line;spn itspn requiresspn nospn parameters.
subh 8.4.4 :section-8.4.4
i IMPORTc IMPORTn :spn Importingspn DLLspn Symbolsi dll symbols, importingi symbols, importing from dlls
norm
n Thespc IMPORTspn format-n specificspn directivespn definesspn aspn symbolspn tospn bespn importedspn fromspn aspn DLL,spn forspn usespn ifspn youspn arespn writingspn aspn DLL'sspi import libraryn importspn libraryspn inspn NASM.spn Youspn stillspn needspn tospn declarespn thespn symbolspn asspc EXTERNspn asspn wellspn asspn usingspn thespc IMPORTspn directive.
norm
n Thespc IMPORTspn directivespn takesspn twospn requiredspn parameters,spn separatedspn byspn whitespn space,spn whichspn arespn (respectively)spn thespn namespn ofspn thespn symbolspn youspn wishspn tospn importspn andspn thespn namespn ofspn thespn libraryspn youspn wishspn tospn importspn itspn from.spn Forspn example:
code
    import  WSAStartup wsock32.dll
norm
n Aspn thirdspn optionalspn parameterspn givesspn thespn namespn byspn whichspn thespn symbolspn isspn knownspn inspn thespn libraryspn youspn arespn importingspn itspn from,spn inspn casespn thisspn isspn notspn thespn samespn asspn thespn namespn youspn wishspn thespn symbolspn tospn bespn knownspn byspn tospn yourspn codespn oncespn youspn havespn importedspn it.spn Forspn example:
code
    import  asyncsel wsock32.dll WSAAsyncSelect
subh 8.4.5 :section-8.4.5
i EXPORTc EXPORTn :spn Exportingspn DLLspn Symbolsi dll symbols, exportingi symbols, exporting from dlls
norm
n Thespc EXPORTspn format-n specificspn directivespn definesspn aspn globalspn symbolspn tospn bespn exportedspn asspn aspn DLLspn symbol,spn forspn usespn ifspn youspn arespn writingspn aspn DLLspn inspn NASM.spn Youspn stillspn needspn tospn declarespn thespn symbolspn asspc GLOBALspn asspn wellspn asspn usingspn thespc EXPORTspn directive.
norm
c EXPORTspn takesspn onespn requiredspn parameter,spn whichspn isspn thespn namespn ofspn thespn symbolspn youspn wishspn tospn export,spn asspn itspn wasspn definedspn inspn yourspn sourcespn file.spn Anspn optionalspn secondspn parameterspn (separatedspn byspn whitespn spacespn fromspn thespn first)spn givesspn thespeoexternalspn namespn ofspn thespn symbol:spn thespn namespn byspn whichspn youspn wishspn thespn symbolspn tospn bespn knownspn tospn programsspn usingspn thespn DLL.spn Ifspn thisspn namespn isspn thespn samespn asspn thespn internalspn name,spn youspn mayspn leavespn thespn secondspn parameterspn off.
norm
n Furtherspn parametersspn canspn bespn givenspn tospn definespn attributesspn ofspn thespn exportedspn symbol.spn Thesespn parameters,spn likespn thespn second,spn arespn separatedspn byspn whitespn space.spn Ifspn furtherspn parametersspn arespn given,spn thespn externalspn namespn mustspn alsospn bespn specified,spn evenspn ifspn itspn isspn thespn samespn asspn thespn internalspn name.spn Thespn availablespn attributesspn are:
bull
c residentspn indicatesspn thatspn thespn exportedspn namespn isspn tospn bespn keptspn residentspn byspn thespn systemspn loader.spn Thisspn isspn anspn optimizationspn forspn frequentlyspn usedspn symbolsspn importedspn byspn name.
bull
c nodataspn indicatesspn thatspn thespn exportedspn symbolspn isspn aspn functionspn whichspn doesspn notspn makespn usespn ofspn anyspn initializedspn data.
bull
c parm=NNNn ,spn wherespc NNNspn isspn anspn integer,spn setsspn thespn numberspn ofspn parameterspn wordsspn forspn thespn casespn inspn whichspn thespn symbolspn isspn aspn callspn gatespn betweenspn 32-n bitspn andspn 16-n bitspn segments.
bull
n Anspn attributespn whichspn isspn justspn aspn numberspn indicatesspn thatspn thespn symbolspn shouldspn bespn exportedspn withspn anspn identifyingspn numberspn (ordinal),spn andspn givesspn thespn desiredspn number.
norm
n Forspn example:
code
    export  myfunc     export  myfunc TheRealMoreFormalLookingFunctionName     export  myfunc myfunc 1234  ; export by ordinal     export  myfunc myfunc resident parm=23 nodata
subh 8.4.6 :section-8.4.6
i ..startc ..startn :spn Definingspn thespi program entry pointn Programspn Entryspn Point
norm
c OMFspn linkersspn requirespn exactlyspn onespn ofspn thespn objectspn filesspn beingspn linkedspn tospn definespn thespn programspn entryspn point,spn wherespn executionspn willspn beginspn whenspn thespn programspn isspn run.spn Ifspn thespn objectspn filespn thatspn definesspn thespn entryspn pointspn isspn assembledspn usingspn NASM,spn youspn specifyspn thespn entryspn pointspn byspn declaringspn thespn specialspn symbolspc ..startspn atspn thespn pointspn wherespn youspn wishspn executionspn tospn begin.
subh 8.4.7 :section-8.4.7
c objspn Extensionsspn tospn thespc EXTERNspn Directivei extern, obj extensions to
norm
n Ifspn youspn declarespn anspn externalspn symbolspn withspn thespn directive
code
    extern  foo
norm
n thenspn referencesspn suchspn asspc mov ax,foospn willspn givespn youspn thespn offsetspn ofspc foospn fromspn itsspn preferredspn segmentspn basespn (asspn specifiedspn inspn whicheverspn modulespc foospn isspn actuallyspn definedspn in).spn Sospn tospn accessspn thespn contentsspn ofspc foospn youspn willspn usuallyspn needspn tospn dospn somethingspn like
code
        mov     ax,seg foo      ; get preferred segment base         mov     es,ax           ; move it into ES         mov     ax,[es:foo]     ; and use offset `foo' from it
norm
n Thisspn isspn aspn littlespn unwieldy,spn particularlyspn ifspn youspn knowspn thatspn anspn externalspn isspn goingspn tospn bespn accessiblespn fromspn aspn givenspn segmentspn orspn group,spn sayspc dgroupn .spn Sospn ifspc DSspn alreadyspn containedspc dgroupn ,spn youspn couldspn simplyspn code
code
        mov     ax,[foo wrt dgroup]
norm
n However,spn havingspn tospn typespn thisspn everyspn timespn youspn wantspn tospn accessspc foospn canspn bespn aspn pain;spn sospn NASMspn allowsspn youspn tospn declarespc foospn inspn thespn alternativespn form
code
    extern  foo:wrt dgroup
norm
n Thisspn formspn causesspn NASMspn tospn pretendspn thatspn thespn preferredspn segmentspn basespn ofspc foospn isspn inspn factspc dgroupn ;spn sospn thespn expressionspc seg foospn willspn nowspn returnspc dgroupn ,spn andspn thespn expressionspc foospn isspn equivalentspn tospc foo wrt dgroupn .
norm
n Thisspi default-wrt mechanismn default-c WRTspn mechanismspn canspn bespn usedspn tospn makespn externalsspn appearspn tospn bespn relativespn tospn anyspn groupspn orspn segmentspn inspn yourspn program.spn Itspn canspn alsospn bespn appliedspn tospn commonspn variables:spn seespx section-8.4.8n sectionspn 8.4.8xesection-8.4.8n .
subh 8.4.8 :section-8.4.8
c objspn Extensionsspn tospn thespc COMMONspn Directivei common, obj extensions to
norm
n Thespc objspn formatspn allowsspn commonspn variablesspn tospn bespn eitherspn neari near common variablesspn orspn fari far common variablesn ;spn NASMspn allowsspn youspn tospn specifyspn whichspn yourspn variablesspn shouldspn bespn byspn thespn usespn ofspn thespn syntax
code
common  nearvar 2:near   ; `nearvar' is a near common common  farvar  10:far   ; and `farvar' is far
norm
n Farspn commonspn variablesspn mayspn bespn greaterspn inspn sizespn thanspn 64Kb,spn andspn sospn thespn OMFspn specificationspn saysspn thatspn theyspn arespn declaredspn asspn aspn numberspn ofspeoelementsspn ofspn aspn givenspn size.spn Sospn aspn 10-n bytespn farspn commonspn variablespn couldspn bespn declaredspn asspn tenspn one-n bytespn elements,spn fivespn two-n bytespn elements,spn twospn five-n bytespn elementsspn orspn onespn ten-n bytespn element.
norm
n Somespc OMFspn linkersspn requirespn thespi element size, in common variablesi common variables, element sizen elementspn size,spn asspn wellspn asspn thespn variablespn size,spn tospn matchspn whenspn resolvingspn commonspn variablesspn declaredspn inspn morespn thanspn onespn module.spn Thereforespn NASMspn mustspn allowspn youspn tospn specifyspn thespn elementspn sizespn onspn yourspn farspn commonspn variables.spn Thisspn isspn donespn byspn thespn followingspn syntax:
code
common  c_5by2  10:far 5        ; two five-byte elements common  c_2by5  10:far 2        ; five two-byte elements
norm
n Ifspn nospn elementspn sizespn isspn specified,spn thespn defaultspn isspn 1.spn Also,spn thespc FARspn keywordspn isspn notspn requiredspn whenspn anspn elementspn sizespn isspn specified,spn sincespn onlyspn farspn commonsspn mayspn havespn elementspn sizesspn atspn all.spn Sospn thespn abovespn declarationsspn couldspn equivalentlyspn be
code
common  c_5by2  10:5            ; two five-byte elements common  c_2by5  10:2            ; five two-byte elements
norm
n Inspn additionspn tospn thesespn extensions,spn thespc COMMONspn directivespn inspc objspn alsospn supportsspn default-c WRTspn specificationspn likespc EXTERNspn doesspn (explainedspn inspx section-8.4.7n sectionspn 8.4.7xesection-8.4.7n ).spn Sospn youspn canspn alsospn declarespn thingsspn like
code
common  foo     10:wrt dgroup common  bar     16:far 2:wrt data common  baz     24:wrt data:6
subh 8.4.9 :section-8.4.9
n Embeddedspn Filespn Dependencyspn Information
norm
n Sincespn NASMspn 2.13.02,spc objspn filesspn containspn embeddedspn dependencyspn filespn information.spn Tospn suppressspn thespn generationspn ofspn dependencies,spn use
code
%pragma obj nodepend
head 8.5 :section-8.5
i win32c win32n :spn Microsoftspn Win32spn Objectspn Files
norm
n Thespc win32spn outputspn formatspn generatesspn Microsoftspn Win32spn objectspn files,spn suitablespn forspn passingspn tospn Microsoftspn linkersspn suchspn asspi visual c++n Visualspn C++n .spn Notespn thatspn Borlandspn Win32spn compilersspn dospn notspn usespn thisspn format,spn butspn usespc objspn insteadspn (seespx section-8.4n sectionspn 8.4xesection-8.4n ).
norm
c win32spn providesspn aspn defaultspn outputspn file-n namespn extensionspn ofspc .objn .
norm
n Notespn thatspn althoughspn Microsoftspn sayspn thatspn Win32spn objectspn filesspn followspn thespc COFFspn (Commonspn Objectspn Filespn Format)spn standard,spn thespn objectspn filesspn producedspn byspn Microsoftspn Win32spn compilersspn arespn notspn compatiblespn withspn COFFspn linkersspn suchspn asspn DJGPP's,spn andspn vicespn versa.spn Thisspn isspn duespn tospn aspn differencespn ofspn opinionspn overspn thespn precisespn semanticsspn ofspn PC-n relativespn relocations.spn Tospn producespn COFFspn filesspn suitablespn forspn DJGPP,spn usespn NASM'sspc coffspn outputspn format;spn conversely,spn thespc coffspn formatspn doesspn notspn producespn objectspn filesspn thatspn Win32spn linkersspn canspn generatespn correctspn outputspn from.
subh 8.5.1 :section-8.5.1
c win32spn Extensionsspn tospn thespc SECTIONspn Directivei section, windows extensions to
norm
n Likespn thespc objspn format,spc win32spn allowsspn youspn tospn specifyspn additionalspn informationspn onspn thespc SECTIONspn directivespn line,spn tospn controlspn thespn typespn andspn propertiesspn ofspn sectionsspn youspn declare.spn Sectionspn typesspn andspn propertiesspn arespn generatedspn automaticallyspn byspn NASMspn forspn thespi standardized section namesn standardspn sectionspn namesspc .textn ,spc .dataspn andspc .bssn ,spn butspn mayspn stillspn bespn overriddenspn byspn thesespn qualifiers.
norm
n Thespn availablespn qualifiersspn are:
bull
c coden ,spn orspn equivalentlyspc textn ,spn definesspn thespn sectionspn tospn bespn aspn codespn section.spn Thisspn marksspn thespn sectionspn asspn readablespn andspn executable,spn butspn notspn writable,spn andspn alsospn indicatesspn tospn thespn linkerspn thatspn thespn typespn ofspn thespn sectionspn isspn code.
bull
c dataspn andspc bssspn definespn thespn sectionspn tospn bespn aspn dataspn section,spn analogouslyspn tospc coden .spn Dataspn sectionsspn arespn markedspn asspn readablespn andspn writable,spn butspn notspn executable.spc dataspn declaresspn anspn initializedspn dataspn section,spn whereasspc bssspn declaresspn anspn uninitializedspn dataspn section.
bull
c rdataspn declaresspn anspn initializedspn dataspn sectionspn thatspn isspn readablespn butspn notspn writable.spn Microsoftspn compilersspn usespn thisspn sectionspn tospn placespn constantsspn inspn it.
bull
c infospn definesspn thespn sectionspn tospn bespn anspi informational sectionn informationalspn sectionn ,spn whichspn isspn notspn includedspn inspn thespn executablespn filespn byspn thespn linker,spn butspn mayspn (forspn example)spn passspn informationspeotospn thespn linker.spn Forspn example,spn declaringspn anspc infodan typespn sectionspn calledspi .drectvec .drectvespn causesspn thespn linkerspn tospn interpretspn thespn contentsspn ofspn thespn sectionspn asspn command-n linespn options.
bull
c align=n ,spn usedspn withspn aspn trailingspn numberspn asspn inspc objn ,spn givesspn thespi section alignment, in win32i alignment, in win32 sectionsn alignmentspn requirementsspn ofspn thespn section.spn Thespn maximumspn youspn mayspn specifyspn isspn 64:spn thespn Win32spn objectspn filespn formatspn containsspn nospn meansspn tospn requestspn aspn greaterspn sectionspn alignmentspn thanspn this.spn Ifspn alignmentspn isspn notspn explicitlyspn specified,spn thespn defaultsspn arespn 16-n bytespn alignmentspn forspn codespn sections,spn 8-n bytespn alignmentspn forspn rdataspn sectionsspn andspn 4-n bytespn alignmentspn forspn dataspn (andspn BSS)spn sections.spn Informationalspn sectionsspn getspn aspn defaultspn alignmentspn ofspn 1spn bytespn (nospn alignment),spn thoughspn thespn valuespn doesspn notspn matter.
norm
n Thespn defaultsspn assumedspn byspn NASMspn ifspn youspn dospn notspn specifyspn thespn abovespn qualifiersspn are:
code
section .text    code  align=16 section .data    data  align=4 section .rdata   rdata align=8 section .bss     bss   align=4
norm
n Thespc win64spn formatspn alsospn adds:
code
section .pdata   rdata align=4 section .xdata   rdata align=8
norm
n Anyspn otherspn sectionspn namespn isspn treatedspn byspn defaultspn likespc .textn .
subh 8.5.2 :section-8.5.2
c win32n :spn Safespn Structuredspn Exceptionspn Handling
norm
n Amongspn otherspn improvementsspn inspn Windowsspn XPspn SP2spn andspn Windowsspn Serverspn 2003spn Microsoftspn hasspn introducedspn conceptspn ofspn "safespn structuredspn exceptionspn handling."spn Generalspn ideaspn isspn tospn collectspn handlers'spn entryspn pointsspn inspn designatedspn read-n onlyspn tablespn andspn havespn allegedspn entryspn pointspn verifiedspn againstspn thisspn tablespn priorspn exceptionspn controlspn isspn passedspn tospn thespn handler.spn Inspn orderspn forspn anspn executablespn modulespn tospn bespn equippedspn withspn suchspn "safespn exceptionspn handlerspn table,"spn allspn objectspn modulesspn onspn linkerspn commandspn linespn hasspn tospn complyspn withspn certainspn criteria.spn Ifspn onespn singlespn modulespn amongspn themspn doesspn not,spn thenspn thespn tablespn inspn questionspn isspn omittedspn andspn abovespn mentionedspn run-n timespn checksspn willspn notspn bespn performedspn forspn applicationspn inspn question.spn Tablespn omissionspn isspn byspn defaultspn silentspn andspn thereforespn canspn bespn easilyspn overlooked.spn Onespn canspn instructspn linkerspn tospn refusespn tospn producespn binaryspn withoutspn suchspn tablespn byspn passingspc /safesehspn commandspn linespn option.
norm
n Withoutspn regardspn tospn thisspn run-n timespn checkspn meritsspn it'sspn naturalspn tospn expectspn NASMspn tospn bespn capablespn ofspn generatingspn modulesspn suitablespn forspc /safesehspn linking.spn Fromspn developer'sspn viewpointspn thespn problemspn isspn two-n fold:
bull
n howspn tospn adaptspn modulesspn notspn deployingspn exceptionspn handlersspn ofspn theirspn own;
bull
n howspn tospn adapt/developspn modulesspn utilizingspn customspn exceptionspn handling;
norm
n Formerspn canspn bespn easilyspn achievedspn withspn anyspn NASMspn versionspn byspn addingspn followingspn linespn tospn sourcespn code:
code
$@feat.00 equ 1
norm
n Asspn ofspn versionspn 2.03spn NASMspn addsspn thisspn absolutespn symbolspn automatically.spn Ifspn it'sspn notspn alreadyspn presentspn tospn bespn precise.spn I.e.spn ifspn forspn whateverspn reasonspn developerspn wouldspn choosespn tospn assignspn anotherspn valuespn inspn sourcespn file,spn itspn wouldspn stillspn bespn perfectlyspn possible.
norm
n Registeringspn customspn exceptionspn handlerspn onspn thespn otherspn handspn requiresspn certainspn "magic."spn Asspn ofspn versionspn 2.03spn additionalspn directivespn isspn implemented,spc safesehn ,spn whichspn instructsspn thespn assemblerspn tospn producespn appropriatelyspn formattedspn inputspn dataspn forspn abovespn mentionedspn "safespn exceptionspn handlerspn table."spn Itsspn typicalspn usespn wouldspn be:
code
section .text extern  _MessageBoxA@16 %if     __?NASM_VERSION_ID?__ >= 0x02030000 safeseh handler         ; register handler as "safe handler" %endif handler:         push    DWORD 1 ; MB_OKCANCEL         push    DWORD caption         push    DWORD text         push    DWORD 0         call    _MessageBoxA@16         sub     eax,1   ; incidentally suits as return value                         ; for exception handler         ret global  _main _main:         push    DWORD handler         push    DWORD [fs:0]         mov     DWORD [fs:0],esp ; engage exception handler         xor     eax,eax         mov     eax,DWORD[eax]   ; cause exception         pop     DWORD [fs:0]     ; disengage exception handler         add     esp,4         ret text:   db      'OK to rethrow, CANCEL to generate core dump',0 caption:db      'SEGV',0 section .drectve info         db      '/defaultlib:user32.lib /defaultlib:msvcrt.lib '
norm
n Asspn youspn mightspn imagine,spn it'sspn perfectlyspn possiblespn tospn producespn .exespn binaryspn withspn "safespn exceptionspn handlerspn table"spn andspn yetspn engagespn unregisteredspn exceptionspn handler.spn Indeed,spn handlerspn isspn engagedspn byspn simplyspn manipulatingspc [fs:0]spn locationspn atspn run-n time,spn somethingspn linkerspn hasspn nospn powerspn over,spn run-n timespn thatspn is.spn Itspn shouldspn bespn explicitlyspn mentionedspn thatspn suchspn failurespn tospn registerspn handler'sspn entryspn pointspn withspc safesehspn directivespn hasspn undesiredspn sidespn effectspn atspn run-n time.spn Ifspn exceptionspn isspn raisedspn andspn unregisteredspn handlerspn isspn tospn bespn executed,spn thespn applicationspn isspn abruptlyspn terminatedspn withoutspn anyspn notificationspn whatsoever.spn Onespn canspn arguespn thatspn systemspn couldspn atspn leastspn havespn loggedspn somespn kindspn "non-n safespn exceptionspn handlerspn inspn x.exespn atspn addressspn n"spn messagespn inspn eventspn log,spn butspn no,spn literallyspn nospn notificationspn isspn providedspn andspn userspn isspn leftspn withspn nospn cluespn onspn whatspn causedspn applicationspn failure.
norm
n Finally,spn allspn mentionsspn ofspn linkerspn inspn thisspn paragraphspn referspn tospn Microsoftspn linkerspn versionspn 7.xspn andspn later.spn Presencespn ofspc @feat.00spn symbolspn andspn inputspn dataspn forspn "safespn exceptionspn handlerspn table"spn causesspn nospn backwardspn incompatibilitiesspn andspn "safeseh"spn modulesspn generatedspn byspn NASMspn 2.03spn andspn laterspn canspn stillspn bespn linkedspn byspn earlierspn versionsspn orspn non-n Microsoftspn linkers.
subh 8.5.3 :section-8.5.3
n Debuggingspn formatsspn forspn Windowsspi windows debugging formats
norm
n Thespc win32spn andspc win64spn formatsspn supportspn thespn Microsoftspi codeview debugging formatn CodeViewspn debuggingspn formatn .spn Currentlyspn CodeViewspn versionspn 8spn formatspn isspn supportedspn (i cv8c cv8n ),spn butspn newerspn versionsspn ofspn thespn CodeViewspn debuggerspn shouldspn bespn ablespn tospn handlespn thisspn formatspn asspn well.
head 8.6 :section-8.6
i win64c win64n :spn Microsoftspn Win64spn Objectspn Files
norm
n Thespc win64spn outputspn formatspn generatesspn Microsoftspn Win64spn objectspn files,spn whichspn isspn nearlyspn 100%spn identicalspn tospn thespc win32spn objectspn formatspn (x section-8.5n sectionspn 8.5xesection-8.5n )spn withspn thespn exceptionspn thatspn itspn isspn meantspn tospn targetspn 64-n bitspn codespn andspn thespn x86-n 64spn platformspn altogether.spn Thisspn objectspn filespn isspn usedspn exactlyspn thespn samespn asspn thespc win32spn objectspn formatspn (x section-8.5n sectionspn 8.5xesection-8.5n ),spn inspn NASM,spn withspn regardspn tospn thisspn exception.
subh 8.6.1 :section-8.6.1
c win64n :spn Writingspn Position-n Independentspn Code
norm
n Whilespc RELspn takesspn goodspn carespn ofspn RIP-n relativespn addressing,spn therespn isspn onespn aspectspn thatspn isspn easyspn tospn overlookspn forspn aspn Win64spn programmer:spn indirectspn references.spn Considerspn aspn switchspn dispatchspn table:
code
        jmp     qword [dsptch+rax*8]         ... dsptch: dq      case0         dq      case1         ...
norm
n Evenspn aspn novicespn Win64spn assemblerspn programmerspn willspn soonspn realizespn thatspn thespn codespn isspn notspn 64-n bitspn savvy.spn Mostspn notablyspn linkerspn willspn refusespn tospn linkspn itspn with
code
'ADDR32' relocation to '.text' invalid without /LARGEADDRESSAWARE:NO
norm
n Sospn [s]hespn willspn havespn tospn splitspn jmpspn instructionspn asspn following:
code
        lea     rbx,[rel dsptch]         jmp     qword [rbx+rax*8]
norm
n Whatspn happensspn behindspn thespn scenespn isspn thatspn effectivespn addressspn inspc leaspn isspn encodedspn relativespn tospn instructionspn pointer,spn orspn inspn perfectlyspn position-n independentspn manner.spn Butspn thisspn isspn onlyspn partspn ofspn thespn problem!spn Troublespn isspn thatspn inspn .dllspn contextspc caseNspn relocationsspn willspn makespn theirspn wayspn tospn thespn finalspn modulespn andspn mightspn havespn tospn bespn adjustedspn atspn .dllspn loadspn time.spn Tospn bespn specificspn whenspn itspn can'tspn bespn loadedspn atspn preferredspn address.spn Andspn whenspn thisspn occurs,spn pagesspn withspn suchspn relocationsspn willspn bespn renderedspn privatespn tospn currentspn process,spn whichspn kindspn ofspn underminesspn thespn ideaspn ofspn sharingspn .dll.spn Butspn nospn worry,spn it'sspn trivialspn tospn fix:
code
        lea     rbx,[rel dsptch]         add     rbx,[rbx+rax*8]         jmp     rbx         ... dsptch: dq      case0-dsptch         dq      case1-dsptch         ...
norm
n NASMspn versionspn 2.03spn andspn laterspn providesspn anotherspn alternative,spc wrt ..imagebasespn operator,spn whichspn returnsspn offsetspn fromspn basespn addressspn ofspn thespn currentspn image,spn bespn itspn .exespn orspn .dllspn module,spn thereforespn thespn name.spn Forspn thosespn acquaintedspn withspn PE-n COFFspn formatspn basespn addressspn denotesspn startspn ofspc IMAGE_DOS_HEADERspn structure.spn Herespn isspn howspn tospn implementspn switchspn withspn thesespn image-n relativespn references:
code
        lea     rbx,[rel dsptch]         mov     eax,[rbx+rax*4]         sub     rbx,dsptch wrt ..imagebase         add     rbx,rax         jmp     rbx         ... dsptch: dd      case0 wrt ..imagebase         dd      case1 wrt ..imagebase
norm
n Onespn canspn arguespn thatspn thespn operatorspn isspn redundant.spn Indeed,spn snippetspn beforespn lastspn worksspn justspn finespn withspn anyspn NASMspn versionspn andspn isspn notspn evenspn Windowsspn specific...spn Thespn realspn reasonspn forspn implementingspc wrt ..imagebasespn willspn becomespn apparentspn inspn nextspn paragraph.
norm
n Itspn shouldspn bespn notedspn thatspc wrt ..imagebasespn isspn definedspn asspn 32-n bitspn operandspn only:
code
        dd      label wrt ..imagebase           ; ok         dq      label wrt ..imagebase           ; bad         mov     eax,label wrt ..imagebase       ; ok         mov     rax,label wrt ..imagebase       ; bad
subh 8.6.2 :section-8.6.2
c win64n :spn Structuredspn Exceptionspn Handling
norm
n Structuredspn exceptionspn handingspn inspn Win64spn isspn completelyspn differentspn matterspn fromspn Win32.spn Uponspn exceptionspn programspn counterspn valuespn isspn noted,spn andspn linker-n generatedspn tablespn comprisingspn startspn andspn endspn addressesspn ofspn allspn thespn functionsspn [inspn givenspn executablespn module]spn isspn traversedspn andspn comparedspn tospn thespn savedspn programspn counter.spn Thusspn sospn calledspc UNWIND_INFOspn structurespn isspn identified.spn Ifspn it'sspn notspn found,spn thenspn offendingspn subroutinespn isspn assumedspn tospn bespn "leaf"spn andspn justspn mentionedspn lookupspn procedurespn isspn attemptedspn forspn itsspn caller.spn Inspn Win64spn leafspn functionspn isspn suchspn functionspn thatspn doesspn notspn callspn anyspn otherspn functionspeonorspn modifiesspn anyspn Win64spn non-n volatilespn registers,spn includingspn stackspn pointer.spn Thespn latterspn ensuresspn thatspn it'sspn possiblespn tospn identifyspn leafspn function'sspn callerspn byspn simplyspn pullingspn thespn valuespn fromspn thespn topspn ofspn thespn stack.
norm
n Whilespn majorityspn ofspn subroutinesspn writtenspn inspn assemblerspn arespn notspn callingspn anyspn otherspn function,spn requirementspn forspn non-n volatilespn registers'spn immutabilityspn leavesspn developerspn withspn notspn morespn thanspn 7spn registersspn andspn nospn stackspn frame,spn whichspn isspn notspn necessarilyspn whatspn [s]hespn countedspn with.spn Customarilyspn onespn wouldspn meetspn thespn requirementspn byspn savingspn non-n volatilespn registersspn onspn stackspn andspn restoringspn themspn uponspn return,spn sospn whatspn canspn gospn wrong?spn Ifspn [andspn onlyspn if]spn anspn exceptionspn isspn raisedspn atspn run-n timespn andspn nospc UNWIND_INFOspn structurespn isspn associatedspn withspn suchspn "leaf"spn function,spn thespn stackspn unwindspn procedurespn willspn expectspn tospn findspn caller'sspn returnspn addressspn onspn thespn topspn ofspn stackspn immediatelyspn followedspn byspn itsspn frame.spn Givenspn thatspn developerspn pushedspn caller'sspn non-n volatilespn registersspn onspn stack,spn wouldspn thespn valuespn onspn topspn pointspn atspn somespn codespn segmentspn orspn evenspn addressablespn space?spn Well,spn developerspn canspn attemptspn copyingspn caller'sspn returnspn addressspn tospn thespn topspn ofspn stackspn andspn thisspn wouldspn actuallyspn workspn inspn somespn veryspn specificspn circumstances.spn Butspn unlessspn developerspn canspn guaranteespn thatspn thesespn circumstancesspn arespn alwaysspn met,spn it'sspn morespn appropriatespn tospn assumespn worstspn casespn scenario,spn i.e.spn stackspn unwindspn procedurespn goingspn berserk.spn Relevantspn questionspn isspn whatspn happensspn then?spn Applicationspn isspn abruptlyspn terminatedspn withoutspn anyspn notificationspn whatsoever.spn Justspn likespn inspn Win32spn case,spn onespn canspn arguespn thatspn systemspn couldspn atspn leastspn havespn loggedspn "unwindspn procedurespn wentspn berserkspn inspn x.exespn atspn addressspn n"spn inspn eventspn log,spn butspn no,spn nospn tracespn ofspn failurespn isspn left.
norm
n Now,spn whenspn wespn understandspn significancespn ofspn thespc UNWIND_INFOspn structure,spn let'sspn discussspn what'sspn inspn itspn and/orspn howspn it'sspn processed.spn Firstspn ofspn allspn itspn isspn checkedspn forspn presencespn ofspn referencespn tospn customspn language-n specificspn exceptionspn handler.spn Ifspn therespn isspn one,spn thenspn it'sspn invoked.spn Dependingspn onspn thespn returnspn value,spn executionspn flowspn isspn resumedspn (exceptionspn isspn saidspn tospn bespn "handled"),speoorspn restspn ofspc UNWIND_INFOspn structurespn isspn processedspn asspn following.spn Besidespn optionalspn referencespn tospn customspn handler,spn itspn carriesspn informationspn aboutspn currentspn callee'sspn stackspn framespn andspn wherespn non-n volatilespn registersspn arespn saved.spn Informationspn isspn detailedspn enoughspn tospn bespn ablespn tospn reconstructspn contentsspn ofspn caller'sspn non-n volatilespn registersspn uponspn callspn tospn currentspn callee.spn Andspn sospn caller'sspn contextspn isspn reconstructed,spn andspn thenspn unwindspn procedurespn isspn repeated,spn i.e.spn anotherspc UNWIND_INFOspn structurespn isspn associated,spn thisspn time,spn withspn caller'sspn instructionspn pointer,spn whichspn isspn thenspn checkedspn forspn presencespn ofspn referencespn tospn language-n specificspn handler,spn etc.spn Thespn procedurespn isspn recursivelyspn repeatedspn tillspn exceptionspn isspn handled.spn Asspn lastspn resortspn systemspn "handles"spn itspn byspn generatingspn memoryspn corespn dumpspn andspn terminatingspn thespn application.
norm
n Asspn forspn thespn momentspn ofspn thisspn writingspn NASMspn unfortunatelyspn doesspn notspn facilitatespn generationspn ofspn abovespn mentionedspn detailedspn informationspn aboutspn stackspn framespn layout.spn Butspn asspn ofspn versionspn 2.03spn itspn implementsspn buildingspn blocksspn forspn generatingspn structuresspn involvedspn inspn stackspn unwinding.spn Asspn simplestspn example,spn herespn isspn howspn tospn deployspn customspn exceptionspn handlerspn forspn leafspn function:
code
default rel section .text extern  MessageBoxA handler:         sub     rsp,40         mov     rcx,0         lea     rdx,[text]         lea     r8,[caption]         mov     r9,1    ; MB_OKCANCEL         call    MessageBoxA         sub     eax,1   ; incidentally suits as return value                         ; for exception handler         add     rsp,40         ret global  main main:         xor     rax,rax         mov     rax,QWORD[rax]  ; cause exception         ret main_end: text:   db      'OK to rethrow, CANCEL to generate core dump',0 caption:db      'SEGV',0 section .pdata  rdata align=4         dd      main wrt ..imagebase         dd      main_end wrt ..imagebase         dd      xmain wrt ..imagebase section .xdata  rdata align=8 xmain:  db      9,0,0,0         dd      handler wrt ..imagebase section .drectve info         db      '/defaultlib:user32.lib /defaultlib:msvcrt.lib '
norm
n Whatspn youspn seespn inspc .pdataspn sectionspn isspn elementspn ofspn thespn "tablespn comprisingspn startspn andspn endspn addressesspn ofspn function"spn alongspn withspn referencespn tospn associatedspc UNWIND_INFOspn structure.spn Andspn whatspn youspn seespn inspc .xdataspn sectionspn isspc UNWIND_INFOspn structurespn describingspn functionspn withspn nospn frame,spn butspn withspn designatedspn exceptionspn handler.spn Referencesspn arespeorequiredspn tospn bespn image-n relativespn (whichspn isspn thespn realspn reasonspn forspn implementingspc wrt ..imagebasespn operator).spn Itspn shouldspn bespn notedspn thatspc rdata align=nn ,spn asspn wellspn asspc wrt ..imagebasen ,spn arespn optionalspn inspn thesespn twospn segments'spn contexts,spn i.e.spn canspn bespn omitted.spn Latterspn meansspn thatspeoallspn 32-n bitspn references,spn notspn onlyspn abovespn listedspn requiredspn ones,spn placedspn intospn thesespn twospn segmentsspn turnspn outspn image-n relative.spn Whyspn isspn itspn importantspn tospn understand?spn Developerspn isspn allowedspn tospn appendspn handler-n specificspn dataspn tospc UNWIND_INFOspn structure,spn andspn ifspn [s]hespn addsspn aspn 32-n bitspn reference,spn thenspn [s]hespn willspn havespn tospn rememberspn tospn adjustspn itsspn valuespn tospn obtainspn thespn realspn pointer.
norm
n Asspn alreadyspn mentioned,spn inspn Win64spn termsspn leafspn functionspn isspn onespn thatspn doesspn notspn callspn anyspn otherspn functionspeonorspn modifiesspn anyspn non-n volatilespn register,spn includingspn stackspn pointer.spn Butspn it'sspn notspn uncommonspn thatspn assemblerspn programmerspn plansspn tospn utilizespn everyspn singlespn registerspn andspn sometimesspn evenspn havespn variablespn stackspn frame.spn Isspn therespn anythingspn onespn canspn dospn withspn barespn buildingspn blocks?spn I.e.spn besidesspn manuallyspn composingspn fully-n fledgedspc UNWIND_INFOspn structure,spn whichspn wouldspn surelyspn bespn consideredspn error-n prone?spn Yes,spn therespn is.spn Recallspn thatspn exceptionspn handlerspn isspn calledspn first,spn beforespn stackspn layoutspn isspn analyzed.spn Asspn itspn turnedspn out,spn it'sspn perfectlyspn possiblespn tospn manipulatespn currentspn callee'sspn contextspn inspn customspn handlerspn inspn mannerspn thatspn permitsspn furtherspn stackspn unwinding.spn Generalspn ideaspn isspn thatspn handlerspn wouldspn notspn actuallyspn "handle"spn thespn exception,spn butspn insteadspn restorespn callee'sspn context,spn asspn itspn wasspn atspn itsspn entryspn pointspn andspn thusspn mimicspn leafspn function.spn Inspn otherspn words,spn handlerspn wouldspn simplyspn undertakespn partspn ofspn unwindingspn procedure.spn Considerspn followingspn example:
code
function:         mov     rax,rsp         ; copy rsp to volatile register         push    r15             ; save non-volatile registers         push    rbx         push    rbp         mov     r11,rsp         ; prepare variable stack frame         sub     r11,rcx         and     r11,-64         mov     QWORD[r11],rax  ; check for exceptions         mov     rsp,r11         ; allocate stack frame         mov     QWORD[rsp],rax  ; save original rsp value magic_point:         ...         mov     r11,QWORD[rsp]  ; pull original rsp value         mov     rbp,QWORD[r11-24]         mov     rbx,QWORD[r11-16]         mov     r15,QWORD[r11-8]         mov     rsp,r11         ; destroy frame         ret
norm
n Thespn keywordspn isspn thatspn upspn tospc magic_pointspn originalspc rspspn valuespn remainsspn inspn chosenspn volatilespn registerspn andspn nospn non-n volatilespn register,spn exceptspn forspc rspn ,spn isspn modified.spn Whilespn pastspc magic_pointspc rspspn remainsspn constantspn tillspn thespn veryspn endspn ofspn thespc functionn .spn Inspn thisspn casespn customspn language-n specificspn exceptionspn handlerspn wouldspn lookspn likespn this:
code
EXCEPTION_DISPOSITION handler (EXCEPTION_RECORD *rec,ULONG64 frame,         CONTEXT *context,DISPATCHER_CONTEXT *disp) {   ULONG64 *rsp;     if (context->Rip<(ULONG64)magic_point)         rsp = (ULONG64 *)context->Rax;     else     {   rsp = ((ULONG64 **)context->Rsp)[0];         context->Rbp = rsp[-3];         context->Rbx = rsp[-2];         context->R15 = rsp[-1];     }     context->Rsp = (ULONG64)rsp;     memcpy (disp->ContextRecord,context,sizeof(CONTEXT));     RtlVirtualUnwind(UNW_FLAG_NHANDLER,disp->ImageBase,         dips->ControlPc,disp->FunctionEntry,disp->ContextRecord,         &disp->HandlerData,&disp->EstablisherFrame,NULL);     return ExceptionContinueSearch; }
norm
n Asspn customspn handlerspn mimicsspn leafspn function,spn correspondingspc UNWIND_INFOspn structurespn doesspn notspn havespn tospn containspn anyspn informationspn aboutspn stackspn framespn andspn itsspn layout.
head 8.7 :section-8.7
i coffc coffn :spi common object file formatn Commonspn Objectspn Filespn Format
norm
n Thespc coffspn outputspn typespn producesspc COFFspn objectspn filesspn suitablespn forspn linkingspn withspn thespi djgppn DJGPPspn linker.
norm
c coffspn providesspn aspn defaultspn outputspn file-n namespn extensionspn ofspc .on .
norm
n Thespc coffspn formatspn supportsspn thespn samespn extensionsspn tospn thespc SECTIONspn directivespn asspc win32spn does,spn exceptspn thatspn thespc alignspn qualifierspn andspn thespc infospn sectionspn typespn arespn notspn supported.
head 8.8 :section-8.8
i machoi macho32c macho32spn andspi macho64c macho64n :spi mach object file formatn Machspn Objectspn Filespn Format
norm
n Thespc macho32spn andspc macho64spn outputspn formtsspn producesspn Mach-n Ospn objectspn filesspn suitablespn forspn linkingspn withspn thespi macos xn MacOSspn Xspn linker.spi machoc machospn isspn aspn synonymspn forspc macho32n .
norm
c machospn providesspn aspn defaultspn outputspn file-n namespn extensionspn ofspc .on .
subh 8.8.1 :section-8.8.1
c machospn extensionsspn tospn thespc SECTIONspn Directivespi section, macho extensions to
norm
n Thespc machospn outputspn formatspn specifiesspn sectionspn namesspn inspn thespn formatspn "eosegmentc ,eosectionn ".spn Nospn spacesspn arespn allowedspn aroundspn thespn comma.spn Thespn followingspn flagsspn canspn alsospn bespn specified:
bull
c dataspdaspn thisspn sectionspn containsspn initializedspn dataspn items
bull
c codespdaspn thisspn sectionspn containsspn codespn exclusively
bull
c mixedspdaspn thisspn sectionspn containsspn bothspn codespn andspn data
bull
c bssspdaspn thisspn sectionspn isspn uninitializedspn andspn filledspn withspn zero
bull
c zerofillspdaspn samespn asspc bss
bull
c no_dead_stripspdaspn inhibitspn deadspn codespn strippingspn forspn thisspn section
bull
c live_supportspdaspn setspn thespn livespn supportspn flagspn forspn thisspn section
bull
c strip_static_symsspdaspn stripspn staticspn symbolsspn forspn thisspn section
bull
c debugspdaspn thisspn sectionspn containsspn debuggingspn information
bull
c align=eoalignmentspdaspn specifyspn sectionspn alignment
norm
n Thespn defaultspn isspc datan ,spn unlessspn thespn sectionspn namespn isspc __textspn orspc __bssspn inspn whichspn casespn thespn defaultspn isspc textspn orspc bssn ,spn respectively.
norm
n Forspn compatibilityspn withspn otherspn Unixspn platforms,spn thespn followingspn standardspn namesspn arespn alsospn supported:
code
.text    = __TEXT,__text  text .rodata  = __DATA,__const data .data    = __DATA,__data  data .bss     = __DATA,__bss   bss
norm
n Ifspn thespc .rodataspn sectionspn containsspn nospn relocations,spn itspn isspn insteadspn putspn intospn thespc __TEXT,__constspn sectionspn unlessspn thisspn sectionspn hasspn alreadyspn beenspn specifiedspn explicitly.spn However,spn itspn isspn probablyspn betterspn tospn specifyspc __TEXT,__constspn andspc __DATA,__constspn explicitlyspn asspn appropriate.
subh 8.8.2 :section-8.8.2
i thread local storage in mach-on Threadspn Localspn Storagespn inspn Mach-Oi tlsn :spc machospn specialspn symbolsspn andspi WRTc WRT
norm
n Mach-n Ospn definesspn thespn followingspn specialspn symbolsspn thatspn canspn bespn usedspn onspn thespn right-n handspn sidespn ofspn thespc WRTspn operator:
bull
c ..tlvpspn isspn usedspn tospn specifyspn accessspn tospn thread-n localspn storage.
bull
c ..gotpcrelspn isspn usedspn tospn specifyspn referencesspn tospn thespn Globalspn Offsetspn Table.spn Thespn GOTspn isspn supportedspn inspn thespc macho64spn formatspn only.
subh 8.8.3 :section-8.8.3
c machospn specficspn directivespi subsections_via_symbolsc subsections_via_symbols
norm
n Thespn directivespc subsections_via_symbolsspn setsspn thespc MH_SUBSECTIONS_VIA_SYMBOLSspn flagspn inspn thespn Mach-n Ospn header,spn thatspn effectivelyspn separatesspn aspn blockspn (orspn aspn subsection)spn basedspn onspn aspn symbol.spn Itspn isspn oftenspn usedspn forspn eliminatingspn deadspn codesspn byspn aspn linker.
norm
n Thisspn directivespn takesspn nospn arguments.
norm
n Thisspn isspn aspn macrospn implementedspn asspn aspc %pragman .spn Itspn canspn alsospn bespn specifiedspn inspn itsspc %pragmaspn form,spn inspn whichspn casespn itspn willspn notspn affectspn non-n Mach-n Ospn buildsspn ofspn thespn samespn sourcespn code:
code
     %pragma macho subsections_via_symbols
subh 8.8.4 :section-8.8.4
c machospn specficspn directivespi no_dead_stripc no_dead_strip
norm
n Thespn directivespc no_dead_stripspn setsspn thespn Mach-n Ospc SH_NO_DEAD_STRIPspn sectionspn flagspn onspn thespn sectionspn containingspn aspn aspn specificspn symbol.spn Thisspn directivespn takesspn aspn listspn ofspn symbolsspn asspn itsspn arguments.
norm
n Thisspn isspn aspn macrospn implementedspn asspn aspc %pragman .spn Itspn canspn alsospn bespn specifiedspn inspn itsspc %pragmaspn form,spn inspn whichspn casespn itspn willspn notspn affectspn non-n Mach-n Ospn buildsspn ofspn thespn samespn sourcespn code:
code
     %pragma macho no_dead_strip symbol...
subh 8.8.5 :section-8.8.5
c machospn specificspn extensionsspn tospn thespc GLOBALspn Directive:spi private_externc private_extern
norm
n Thespn directivespn extensionspn tospc GLOBALspn marksspn thespn symbolspn withspn limitedspn globalspn scope.spn Forspn example,spn youspn canspn specifyspn thespn globalspn symbolspn withspn thisspn extension:
code
global foo:private_extern foo:          ; codes
norm
n Usingspn withspn staticspn linkerspn willspn clearspn thespn privatespn externspn attribute.spn Butspn linkerspn optionspn likespc -keep_private_externsspn canspn avoidspn it.
head 8.9 :section-8.9
i elf32c elf32n ,spi elf64c elf64n ,spi elfx32c elfx32n :spi elfi linux, elfi executable and linkable formatn Executablespn andspn Linkablespn Formatspn Objectspn Files
norm
n Thespc elf32n ,spc elf64spn andspc elfx32spn outputspn formatsspn generatespc ELF32 and ELF64spn (Executablespn andspn Linkablespn Format)spn objectspn files,spn asspn usedspn byspn Linuxspn asspn wellspn asspi unix, system vn Unixspn Systemspn Vn ,spn includingspi solaris x86n Solarisspn x86n ,spi unixwaren UnixWarespn andspi unix, scon SCOspn Unixn .spn ELFspn providesspn aspn defaultspn outputspn file-n namespn extensionspn ofspc .on .spc elfspn isspn aspn synonymspn forspc elf32n .
norm
n Thespc elfx32spn formatspn isspn usedspn forspn thespi x32n x32spn ABI,spn whichspn isspn aspn 32-n bitspn ABIspn withspn thespn CPUspn inspn 64-n bitspn mode.
subh 8.9.1 :section-8.9.1
n ELFspn specificspn directivespi osabic osabi
norm
n Thespn ELFspn headerspn specifiesspn thespn applicationspn binaryspn interfacespn forspn thespn targetspn operatingspn systemspn (OSABI).spn Thisspn fieldspn canspn bespn setspn byspn usingspn thespc osabispn directivespn withspn thespn numericspn valuespn (0-n 255)spn ofspn thespn targetspn system.spn Ifspn thisspn directivespn isspn notspn used,spn thespn defaultspn valuespn willspn bespn "UNIXspn Systemspn Vspn ABI"spn (0)spn whichspn willspn workspn onspn mostspn systemsspn whichspn supportspn ELF.
subh 8.9.2 :section-8.9.2
n ELFspn extensionsspn tospn thespc SECTIONspn Directivespi section, elf extensions to
norm
n Likespn thespc objspn format,spc elfspn allowsspn youspn tospn specifyspn additionalspn informationspn onspn thespc SECTIONspn directivespn line,spn tospn controlspn thespn typespn andspn propertiesspn ofspn sectionsspn youspn declare.spn Sectionspn typesspn andspn propertiesspn arespn generatedspn automaticallyspn byspn NASMspn forspn thespi standardized section namesn standardspn sectionspn namesn ,spn butspn mayspn stillspn bespn overriddenspn byspn thesespn qualifiers.
norm
n Thespn availablespn qualifiersspn are:
bull
i allocc allocspn definesspn thespn sectionspn tospn bespn onespn whichspn isspn loadedspn intospn memoryspn whenspn thespn programspn isspn run.spi noallocc noallocspn definesspn itspn tospn bespn onespn whichspn isspn not,spn suchspn asspn anspn informationalspn orspn commentspn section.
bull
i execc execspn definesspn thespn sectionspn tospn bespn onespn whichspn shouldspn havespn executespn permissionspn whenspn thespn programspn isspn run.spi noexecc noexecspn definesspn itspn asspn onespn whichspn shouldspn not.
bull
i writec writespn definesspn thespn sectionspn tospn bespn onespn whichspn shouldspn bespn writablespn whenspn thespn programspn isspn run.spi nowritec nowritespn definesspn itspn asspn onespn whichspn shouldspn not.
bull
i progbitsc progbitsspn definesspn thespn sectionspn tospn bespn onespn withspn explicitspn contentsspn storedspn inspn thespn objectspn file:spn anspn ordinaryspn codespn orspn dataspn section,spn forspn example.
bull
i nobitsc nobitsspn definesspn thespn sectionspn tospn bespn onespn withspn nospn explicitspn contentsspn given,spn suchspn asspn aspn BSSspn section.
bull
i notec notespn indicatesspn thatspn thisspn sectionspn containsspn ELFspn notes.spn Thespn contentspn ofspn ELFspn notesspn arespn specifiedspn usingspn normalspn assemblyspn instructions;spn itspn isspn upspn tospn thespn programmerspn tospn ensurespn thesespn arespn validspn ELFspn notes.
bull
i preinit_arrayc preinit_arrayspn indicatesspn thatspn thisspn sectionspn containsspn functionspn addressesspn tospn bespn calledspn beforespn anyspn otherspn initializationspn hasspn happened.
bull
i init_arrayc init_arrayspn indicatesspn thatspn thisspn sectionspn containsspn functionspn addressesspn tospn bespn calledspn duringspn initialization.
bull
i fini_arrayc fini_arrayspn indicatesspn thatspn thisspn sectionspn containsspn functionspn pointersspn tospn bespn calledspn duringspn termination.
bull
i align, elf attributec align=n ,spn usedspn withspn aspn trailingspn numberspn asspn inspc objn ,spn givesspn thespi section alignment, in elfi alignment, in elf sectionsn alignmentspn requirementsspn ofspn thespn section.
bull
c byten ,spc wordn ,spc dwordn ,spc qwordn ,spc twordn ,spc owordn ,spc ywordn ,spn orspc zwordspn withspn anspn optionalspc *i multipliern multiplierspn specifyspn thespn fundamentalspn dataspn itemspn sizespn forspn aspn sectionspn whichspn containsspn eitherspn fixed-n sizedspn dataspn structuresspn orspn strings;spn itspn alsospn setsspn aspn defaultspn alignment.spn Thisspn isspn generallyspn usedspn withspn thespc stringsspn andspc mergespn attributesspn (seespn below.)spn Forspn examplespc byte*4spn definesspn aspn unitspn sizespn ofspn 4spn bytes,spn withspn aspn defaultspn alignmentspn ofspn 1;spc dwordspn alsospn definesspn aspn unitspn sizespn ofspn 4spn bytes,spn butspn withspn aspn defaultspn alignmentspn ofspn 4.spn Thespc align=spn attribute,spn ifspn specified,spn overridesspn thisspn defaultspn alignment.
bull
i pointer, elf attributec pointerspn isspn equivalentspn tospc dwordspn forspc elf32spn orspc elfx32n ,spn andspc qwordspn forspc elf64n .
bull
i strings, elf attributec stringsspn indicatespn thatspn thisspn sectionspn containsspn exclusivelyspn null-n terminatedspn strings.spn Byspn defaultspn thesespn arespn assumedspn tospn bespn bytespn strings,spn butspn aspn sizespn specifierspn canspn bespn usedspn tospn overridespn that.
bull
i mergec mergespn indicatesspn thatspn duplicatespn dataspn elementsspn inspn thisspn sectionspn shouldspn bespn mergedspn withspn dataspn elementsspn fromspn otherspn objectspn files.spn Dataspn elementsspn canspn bespn eitherspn fixed-n sizedspn objectsspn orspn null-n terminatedstringsspn (withspn thespc stringsspn attribute.)spn Aspn sizespn specifierspn isspn requiredspn unlessspc stringsspn isspn specified,spn inspn whichspn casespn thespn sizespn defaultsspn tospc byten .
bull
i tlsc tlsspn definesspn thespn sectionspn tospn bespn onespn whichspn containsspn threadspn localspn variables.
norm
n Thespn defaultsspn assumedspn byspn NASMspn ifspn youspn dospn notspn specifyspn thespn abovespn qualifiersspn are:
norm
i .textspi .rodataspi .lrodataspi .dataspi .ldataspi .bssspi .lbssspi .tdataspi .tbssspi .comment
code
section .text          progbits      alloc   exec    nowrite  align=16 section .rodata        progbits      alloc   noexec  nowrite  align=4 section .lrodata       progbits      alloc   noexec  nowrite  align=4 section .data          progbits      alloc   noexec  write    align=4 section .ldata         progbits      alloc   noexec  write    align=4 section .bss           nobits        alloc   noexec  write    align=4 section .lbss          nobits        alloc   noexec  write    align=4 section .tdata         progbits      alloc   noexec  write    align=4   tls section .tbss          nobits        alloc   noexec  write    align=4   tls section .comment       progbits      noalloc noexec  nowrite  align=1 section .preinit_array preinit_array alloc   noexec  nowrite  pointer section .init_array    init_array    alloc   noexec  nowrite  pointer section .fini_array    fini_array    alloc   noexec  nowrite  pointer section .note          note          noalloc noexec  nowrite  align=4 section other          progbits      alloc   noexec  nowrite  align=1
norm
n (Anyspn sectionspn namespn otherspn thanspn thosespn inspn thespn abovespn tablespn isspn treatedspn byspn defaultspn likespc otherspn inspn thespn abovespn table.spn Pleasespn notespn thatspn sectionspn namesspn arespn casespn sensitive.)
subh 8.9.3 :section-8.9.3
i position-independent coden Position-Independentspn Codei picn :spn ELFspn Specialspn Symbolsspn andspi WRTc WRT
norm
n Sincespc ELFspn doesspn notspn supportspn segment-n basespn references,spn thespc WRTspn operatorspn isspn notspn usedspn forspn itsspn normalspn purpose;spn thereforespn NASM'sspc elfspn outputspn formatspn makesspn usespn ofspc WRTspn forspn aspn differentspn purpose,spn namelyspn thespn PIC-n specificspi relocations, pic-specificn relocationspn types.
norm
c elfspn definesspn fivespn specialspn symbolsspn whichspn youspn canspn usespn asspn thespn right-n handspn sidespn ofspn thespc WRTspn operatorspn tospn obtainspn PICspn relocationspn types.spn Theyspn arespi ..gotpcc ..gotpcn ,spi ..gotoffc ..gotoffn ,spi ..gotc ..gotn ,spi ..pltc ..pltspn andspi ..symc ..symn .spn Theirspn functionsspn arespn summarizedspn here:
bull
n Referringspn tospn thespn symbolspn markingspn thespn globalspn offsetspn tablespn basespn usingspc wrt ..gotpcspn willspn endspn upspn givingspn thespn distancespn fromspn thespn beginningspn ofspn thespn currentspn sectionspn tospn thespn globalspn offsetspn table.spn (i _GLOBAL_OFFSET_TABLE_c _GLOBAL_OFFSET_TABLE_spn isspn thespn standardspn symbolspn namespn usedspn tospn referspn tospn thespi gotn GOTn .)spn Sospn youspn wouldspn thenspn needspn tospn addspi $$c $$spn tospn thespn resultspn tospn getspn thespn realspn addressspn ofspn thespn GOT.
bull
n Referringspn tospn aspn locationspn inspn onespn ofspn yourspn ownspn sectionsspn usingspc wrt ..gotoffspn willspn givespn thespn distancespn fromspn thespn beginningspn ofspn thespn GOTspn tospn thespn specifiedspn location,spn sospn thatspn addingspn onspn thespn addressspn ofspn thespn GOTspn wouldspn givespn thespn realspn addressspn ofspn thespn locationspn youspn wanted.
bull
n Referringspn tospn anspn externalspn orspn globalspn symbolspn usingspc wrt ..gotspn causesspn thespn linkerspn tospn buildspn anspn entryspeoinspn thespn GOTspn containingspn thespn addressspn ofspn thespn symbol,spn andspn thespn referencespn givesspn thespn distancespn fromspn thespn beginningspn ofspn thespn GOTspn tospn thespn entry;spn sospn youspn canspn addspn onspn thespn addressspn ofspn thespn GOT,spn loadspn fromspn thespn resultingspn address,spn andspn endspn upspn withspn thespn addressspn ofspn thespn symbol.
bull
n Referringspn tospn aspn procedurespn namespn usingspc wrt ..pltspn causesspn thespn linkerspn tospn buildspn aspi procedure linkage tablen procedurespn linkagespn tablespn entryspn forspn thespn symbol,spn andspn thespn referencespn givesspn thespn addressspn ofspn thespi pltn PLTspn entry.spn Youspn canspn onlyspn usespn thisspn inspn contextsspn whichspn wouldspn generatespn aspn PC-n relativespn relocationspn normallyspn (i.e.spn asspn thespn destinationspn forspc CALLspn orspc JMPn ),spn sincespn ELFspn containsspn nospn relocationspn typespn tospn referspn tospn PLTspn entriesspn absolutely.
bull
n Referringspn tospn aspn symbolspn namespn usingspc wrt ..symspn causesspn NASMspn tospn writespn anspn ordinaryspn relocation,spn butspn insteadspn ofspn makingspn thespn relocationspn relativespn tospn thespn startspn ofspn thespn sectionspn andspn thenspn addingspn onspn thespn offsetspn tospn thespn symbol,spn itspn willspn writespn aspn relocationspn recordspn aimedspn directlyspn atspn thespn symbolspn inspn question.spn Thespn distinctionspn isspn aspn necessaryspn onespn duespn tospn aspn peculiarityspn ofspn thespn dynamicspn linker.
norm
n Aspn fullerspn explanationspn ofspn howspn tospn usespn thesespn relocationspn typesspn tospn writespn sharedspn librariesspn entirelyspn inspn NASMspn isspn givenspn inspx section-10.2n sectionspn 10.2xesection-10.2n .
subh 8.9.4 :section-8.9.4
i thread local storage in elfn Threadspn Localspn Storagespn inspn ELFi tlsn :spc elfspn Specialspn Symbolsspn andspi WRTc WRT
bull
n Inspn ELF32spn mode,spn referringspn tospn anspn externalspn orspn globalspn symbolspn usingspc wrt ..tlsiespi ..tlsiespn causesspn thespn linkerspn tospn buildspn anspn entryspeoinspn thespn GOTspn containingspn thespn offsetspn ofspn thespn symbolspn withinspn thespn TLSspn block,spn sospn youspn canspn accessspn thespn valuespn ofspn thespn symbolspn withspn codespn suchspn as:
code
       mov  eax,[tid wrt ..tlsie]        mov  [gs:eax],ebx
bull
n Inspn ELF64spn orspn ELFx32spn mode,spn referringspn tospn anspn externalspn orspn globalspn symbolspn usingspc wrt ..gottpoffspi ..gottpoffspn causesspn thespn linkerspn tospn buildspn anspn entryspeoinspn thespn GOTspn containingspn thespn offsetspn ofspn thespn symbolspn withinspn thespn TLSspn block,spn sospn youspn canspn accessspn thespn valuespn ofspn thespn symbolspn withspn codespn suchspn as:
code
       mov   rax,[rel tid wrt ..gottpoff]        mov   rcx,[fs:rax]
subh 8.9.5 :section-8.9.5
c elfspn Extensionsspn tospn thespc GLOBALspn Directivei global, elf extensions toi global, aoutb extensions to
norm
c ELFspn objectspn filesspn canspn containspn morespn informationspn aboutspn aspn globalspn symbolspn thanspn justspn itsspn address:spn theyspn canspn containspn thespi symbols, specifying sizesi size, of symbolsn sizespn ofspn thespn symbolspn andspn itsspi symbols, specifying typesi type, of symbolsn typespn asspn well.spn Thesespn arespn notspn merelyspn debuggerspn conveniences,spn butspn arespn actuallyspn necessaryspn whenspn thespn programspn beingspn writtenspn isspn aspi elf shared libraryn sharedspn library.spn NASMspn thereforespn supportsspn somespn extensionsspn tospn thespc GLOBALspn directive,spn allowingspn youspn tospn specifyspn thesespn features.
norm
n Youspn canspn specifyspn whetherspn aspn globalspn variablespn isspn aspn functionspn orspn aspn dataspn objectspn byspn suffixingspn thespn namespn withspn aspn colonspn andspn thespn wordspi functionc functionspn orspi datac datan .spn (i objectc objectspn isspn aspn synonymspn forspc datan .)spn Forspn example:
code
global   hashlookup:function, hashtable:data
norm
n exportsspn thespn globalspn symbolspc hashlookupspn asspn aspn functionspn andspc hashtablespn asspn aspn dataspn object.
norm
n Optionally,spn youspn canspn controlspn thespn ELFspn visibilityspn ofspn thespn symbol.spn Justspn addspn onespn ofspn thespn visibilityspn keywords:spi defaultc defaultn ,spi internalc internaln ,spi hiddenc hiddenn ,spn orspi protectedc protectedn .spn Thespn defaultspn isspi defaultc defaultspn ofspn course.spn Forspn example,spn tospn makespc hashlookupspn hidden:
code
global   hashlookup:function hidden
norm
n Sincespn versionspn 2.15,spn itspn isspn possiblespn tospn specifyspn symbolsspn binding.spn Thespn keywordsspn are:spi weakc weakspn tospn generatespn weakspn symbolspn orspi strongc strongn .spn Thespn defaultspn isspi strongc strongn .
norm
n Youspn canspn alsospn specifyspn thespn sizespn ofspn thespn dataspn associatedspn withspn thespn symbol,spn asspn aspn numericspn expressionspn (whichspn mayspn involvespn labels,spn andspn evenspn forwardspn references)spn afterspn thespn typespn specifier.spn Likespn this:
code
global  hashtable:data (hashtable.end - hashtable) hashtable:         db this,that,theother  ; some data here .end:
norm
n Thisspn makesspn NASMspn automaticallyspn calculatespn thespn lengthspn ofspn thespn tablespn andspn placespn thatspn informationspn intospn thespc ELFspn symbolspn table.
norm
n Declaringspn thespn typespn andspn sizespn ofspn globalspn symbolsspn isspn necessaryspn whenspn writingspn sharedspn libraryspn code.spn Forspn morespn information,spn seespx section-10.2.4n sectionspn 10.2.4xesection-10.2.4n .
subh 8.9.6 :section-8.9.6
c elfspn Extensionsspn tospn thespc EXTERNspn Directivei extern, elf extensions toi extern, elf extensions to
norm
n Sincespn versionspn 2.15spn itspn isspn possiblespn tospn specifyspn keywordspi weakc weakspn tospn generatespn weakspn externalspn reference.spn Example:
code
extern weak_ref:weak
subh 8.9.7 :section-8.9.7
c elfspn Extensionsspn tospn thespc COMMONspn Directivespi common, elf extensions to
norm
c ELFspn alsospn allowsspn youspn tospn specifyspn alignmentspn requirementsspi common variables, alignment in elfi alignment, of elf common variablesn onspn commonspn variables.spn Thisspn isspn donespn byspn puttingspn aspn numberspn (whichspn mustspn bespn aspn powerspn ofspn two)spn afterspn thespn namespn andspn sizespn ofspn thespn commonspn variable,spn separatedspn (asspn usual)spn byspn aspn colon.spn Forspn example,spn anspn arrayspn ofspn doublewordsspn wouldspn benefitspn fromspn 4-n bytespn alignment:
code
common  dwordarray 128:4
norm
n Thisspn declaresspn thespn totalspn sizespn ofspn thespn arrayspn tospn bespn 128spn bytes,spn andspn requiresspn thatspn itspn bespn alignedspn onspn aspn 4-n bytespn boundary.
subh 8.9.8 :section-8.9.8
n 16-n bitspn codespn andspn ELFspi elf, 16-bit code
norm
n Olderspn versionsspn ofspn thespc ELF32spn specificationspn didspn notspn providespn relocationsspn forspn 8-spn andspn 16-n bitspn values.spn Itspn isspn nowspn partspn ofspn thespn formalspn specification,spn andspn anyspn newspn enoughspn linkerspn shouldspn supportspn them.
norm
n ELFspn hasspn currentlyspn nospn supportspn forspn segmentedspn programming.
subh 8.9.9 :section-8.9.9
n Debugspn formatsspn andspn ELFspi elf, debug formats
norm
n ELFspn providesspn debugspn informationspn inspc STABSspn andspc DWARFspn formats.spn Linespn numberspn informationspn isspn generatedspn forspn allspn executablespn sections,spn butspn pleasespn notespn thatspn onlyspn thespn ".text"spn sectionspn isspn executablespn byspn default.
head 8.10 :section-8.10
i aoutc aoutn :spn Linuxspi a.out, linux versioni linux, a.outc a.outspn Objectspn Files
norm
n Thespc aoutspn formatspn generatesspc a.outspn objectspn files,spn inspn thespn formspn usedspn byspn earlyspn Linuxspn systemsspn (currentspn Linuxspn systemsspn usespn ELF,spn seespx section-8.9n sectionspn 8.9xesection-8.9n .)spn Thesespn differspn fromspn otherspc a.outspn objectspn filesspn inspn thatspn thespn magicspn numberspn inspn thespn firstspn fourspn bytesspn ofspn thespn filespn isspn different;spn also,spn somespn implementationsspn ofspc a.outn ,spn forspn examplespn NetBSD's,spn supportspn position-n independentspn code,spn whichspn Linux'sspn implementationspn doesspn not.
norm
c a.outspn providesspn aspn defaultspn outputspn file-n namespn extensionspn ofspc .on .
norm
c a.outspn isspn aspn veryspn simplespn objectspn format.spn Itspn supportsspn nospn specialspn directives,spn nospn specialspn symbols,spn nospn usespn ofspc SEGspn orspc WRTn ,spn andspn nospn extensionsspn tospn anyspn standardspn directives.spn Itspn supportsspn onlyspn thespn threespi standardized section namesn standardspn sectionspn namesspi .textc .textn ,spi .datac .dataspn andspi .bssc .bssn .
head 8.11 :section-8.11
i aoutbc aoutbn :spi netbsdn NetBSDn /i freebsdn FreeBSDn /i openbsdn OpenBSDspi a.out, bsd versionc a.outspn Objectspn Files
norm
n Thespc aoutbspn formatspn generatesspc a.outspn objectspn files,spn inspn thespn formspn usedspn byspn thespn variousspn freespc BSD Unixspn clones,spc NetBSDn ,spc FreeBSDspn andspc OpenBSDn .spn Forspn simplespn objectspn files,spn thisspn objectspn formatspn isspn exactlyspn thespn samespn asspc aoutspn exceptspn forspn thespn magicspn numberspn inspn thespn firstspn fourspn bytesspn ofspn thespn file.spn However,spn thespc aoutbspn formatspn supportsspi pici position-independent coden position-independentspn codespn inspn thespn samespn wayspn asspn thespc elfspn format,spn sospn youspn canspn usespn itspn tospn writespc BSDspi shared librariesn sharedspn librariesn .
norm
c aoutbspn providesspn aspn defaultspn outputspn file-n namespn extensionspn ofspc .on .
norm
c aoutbspn supportsspn nospn specialspn directives,spn nospn specialspn symbols,spn andspn onlyspn thespn threespi standardized section namesn standardspn sectionspn namesspi .textc .textn ,spi .datac .dataspn andspi .bssc .bssn .spn However,spn itspn alsospn supportsspn thespn samespn usespn ofspi WRTc WRTspn asspc elfspn does,spn tospn providespn position-n independentspn codespn relocationspn types.spn Seespx section-8.9.3n sectionspn 8.9.3xesection-8.9.3spn forspn fullspn documentationspn ofspn thisspn feature.
norm
c aoutbspn alsospn supportsspn thespn samespn extensionsspn tospn thespc GLOBALspn directivespn asspc elfspn does:spn seespx section-8.9.5n sectionspn 8.9.5xesection-8.9.5spn forspn documentationspn ofspn this.
head 8.12 :section-8.12
c as86n :spi minixn Minixn /Linuxi linux, as86spi as86c as86spn Objectspn Files
norm
n Thespn Minix/Linuxspn 16-n bitspn assemblerspc as86spn hasspn itsspn ownspn non-n standardspn objectspn filespn format.spn Althoughspn itsspn companionspn linkerspi ld86c ld86spn producesspn somethingspn closespn tospn ordinaryspc a.outspn binariesspn asspn output,spn thespn objectspn filespn formatspn usedspn tospn communicatespn betweenspc as86spn andspc ld86spn isspn notspn itselfspc a.outn .
norm
n NASMspn supportsspn thisspn format,spn justspn inspn casespn itspn isspn useful,spn asspc as86n .spc as86spn providesspn aspn defaultspn outputspn file-n namespn extensionspn ofspc .on .
norm
c as86spn isspn aspn veryspn simplespn objectspn formatspn (fromspn thespn NASMspn user'sspn pointspn ofspn view).spn Itspn supportsspn nospn specialspn directives,spn nospn usespn ofspc SEGspn orspc WRTn ,spn andspn nospn extensionsspn tospn anyspn standardspn directives.spn Itspn supportsspn onlyspn thespn threespi standardized section namesn standardspn sectionspn namesspi .textc .textn ,spi .datac .dataspn andspi .bssc .bssn .spn Thespn onlyspn specialspn symbolspn supportedspn isspc ..startn .
head 8.13 :section-8.13
i rdoffi rdfc rdfn :spi relocatable dynamic object file formatn Relocatablespn Dynamicspn Objectspn Filespn Formatspn (deprecated)
norm
esThespe RDOFFspe formatspe isspe stronglyspe deprecatedspe andspe hasspe beenspe disabledspe startingspe inspe NASMspe 2.15.04.spe Thespe RDOFFspe backendspe hasspe beenspe brokenspe sincespe atspe leastspe NASMspe 2.14.spe Thespe RDOFFspe utilitiesspe arespe scheduledspe tospe bespe removedspe fromspe thespe NASMspe distributionspe inspe NASMspee2.16.spn Ifspn youspn havespn aspn strongspn usespn casespn forspn thespn RDOFFspn format,spn filespn aspn bugspn reportspn atspwc<https://bugs.nasm.us/>https://bugs.nasm.us/spn asspn soonspn asspn possible.
norm
n Thespc rdfspn outputspn formatspn producesspc RDOFFspn objectspn files.spc RDOFFspn (Relocatablespn Dynamicspn Objectspn Filespn Format)spn isspn aspn home-n grownspn object-n filespn format,spn designedspn alongsidespn NASMspn itselfspn andspn reflectingspn inspn itsspn filespn formatspn thespn internalspn structurespn ofspn thespn assembler.
norm
c RDOFFspn isspn notspn usedspn byspn anyspn well-n knownspn operatingspn systems.spn Thosespn writingspn theirspn ownspn systems,spn however,spn mayspn wellspn wishspn tospn usespc RDOFFspn asspn theirspn objectspn format,spn onspn thespn groundsspn thatspn itspn isspn designedspn primarilyspn forspn simplicityspn andspn containsspn veryspn littlespn file-n headerspn bureaucracy.
norm
n Thespn Unixspn NASMspn archive,spn andspn thespn DOSspn archivespn whichspn includesspn sources,spn bothspn containspn anspi rdoffc rdoffspn subdirectoryspn holdingspn aspn setspn ofspn RDOFFspn utilities:spn anspn RDFspn linker,spn anspc RDFspn static-n libraryspn manager,spn anspn RDFspn filespn dumpspn utility,spn andspn aspn programspn whichspn willspn loadspn andspn executespn anspn RDFspn executablespn underspn Linux.
subh 8.13.1 :section-8.13.1
n Requiringspn aspn Library:spn Thespi LIBRARYc LIBRARYspn Directive
norm
c RDOFFspn containsspn aspn mechanismspn forspn anspn objectspn filespn tospn demandspn aspn givenspn libraryspn tospn bespn linkedspn tospn thespn module,spn eitherspn atspn loadspn timespn orspn runspn time.spn Thisspn isspn donespn byspn thespc LIBRARYspn directive,spn whichspn takesspn onespn argumentspn whichspn isspn thespn namespn ofspn thespn module:
code
    library  mylib.rdl
subh 8.13.2 :section-8.13.2
n Specifyingspn aspn Modulespn Name:spn Thespi MODULEc MODULEspn Directive
norm
n Specialspc RDOFFspn headerspn recordspn isspn usedspn tospn storespn thespn namespn ofspn thespn module.spn Itspn canspn bespn used,spn forspn example,spn byspn run-n timespn loaderspn tospn performspn dynamicspn linking.spc MODULEspn directivespn takesspn onespn argumentspn whichspn isspn thespn namespn ofspn currentspn module:
code
    module  mymodname
norm
n Notespn thatspn whenspn youspn staticallyspn linkspn modulesspn andspn tellspn linkerspn tospn stripspn thespn symbolsspn fromspn outputspn file,spn allspn modulespn namesspn willspn bespn strippedspn too.spn Tospn avoidspn it,spn youspn shouldspn startspn modulespn namesspn withspi $, prefixc $n ,spn like:
code
    module  $kernel.core
subh 8.13.3 :section-8.13.3
c rdfspn Extensionsspn tospn thespc GLOBALspn Directivei global, rdf extensions to
norm
c RDOFFspn globalspn symbolsspn canspn containspn additionalspn informationspn neededspn byspn thespn staticspn linker.spn Youspn canspn markspn aspn globalspn symbolspn asspn exported,spn thusspn tellingspn thespn linkerspn dospn notspn stripspn itspn fromspn targetspn executablespn orspn libraryspn file.spn Likespn inspc ELFn ,spn youspn canspn alsospn specifyspn whetherspn anspn exportedspn symbolspn isspn aspn procedurespn (function)spn orspn dataspn object.
norm
n Suffixingspn thespn namespn withspn aspn colonspn andspn thespn wordspi exportc exportspn youspn makespn thespn symbolspn exported:
code
    global  sys_open:export
norm
n Tospn specifyspn thatspn exportedspn symbolspn isspn aspn procedurespn (function),spn youspn addspn thespn wordspi procc procspn orspi functionc functionspn afterspn declaration:
code
    global  sys_open:export proc
norm
n Similarly,spn tospn specifyspn exportedspn dataspn object,spn addspn thespn wordspi datac dataspn orspi objectc objectspn tospn thespn directive:
code
    global  kernel_ticks:export data
subh 8.13.4 :section-8.13.4
c rdfspn Extensionsspn tospn thespc EXTERNspn Directivei extern, rdf extensions to
norm
n Byspn defaultspn thespc EXTERNspn directivespn inspc RDOFFspn declaresspn aspn "purespn external"spn symbolspn (i.e.spn thespn staticspn linkerspn willspn complainspn ifspn suchspn aspn symbolspn isspn notspn resolved).spn Tospn declarespn anspn "imported"spn symbol,spn whichspn mustspn bespn resolvedspn laterspn duringspn aspn dynamicspn linkingspn phase,spc RDOFFspn offersspn anspn additionalspc importspn modifier.spn Asspn inspc GLOBALn ,spn youspn canspn alsospn specifyspn whetherspn anspn importedspn symbolspn isspn aspn procedurespn (function)spn orspn dataspn object.spn Forspn example:
code
    library $libc     extern  _open:import     extern  _printf:import proc     extern  _errno:import data
norm
n Herespn thespn directivespc LIBRARYspn isspn alsospn included,spn whichspn givesspn thespn dynamicspn linkerspn aspn hintspn asspn tospn wherespn tospn findspn requestedspn symbols.
head 8.14 :section-8.14
i dbgc dbgn :spn Debuggingspn Format
norm
n Thespc dbgspn formatspn doesspn notspn outputspn anspn objectspn filespn asspn such;spn instead,spn itspn outputsspn aspn textspn filespn whichspn containsspn aspn completespn listspn ofspn allspn thespn transactionsspn betweenspn thespn mainspn bodyspn ofspn NASMspn andspn thespn output-n formatspn backspn endspn module.spn Itspn isspn primarilyspn intendedspn tospn aidspn peoplespn whospn wantspn tospn writespn theirspn ownspn outputspn drivers,spn sospn thatspn theyspn canspn getspn aspn clearerspn ideaspn ofspn thespn variousspn requestsspn thespn mainspn programspn makesspn ofspn thespn outputspn driver,spn andspn inspn whatspn orderspn theyspn happen.
norm
n Forspn simplespn files,spn onespn canspn easilyspn usespn thespc dbgspn formatspn likespn this:
code
nasm -f dbg filename.asm
norm
n whichspn willspn generatespn aspn diagnosticspn filespn calledspc filename.dbgn .spn However,spn thisspn willspn notspn workspn wellspn onspn filesspn whichspn werespn designedspn forspn aspn differentspn objectspn format,spn becausespn eachspn objectspn formatspn definesspn itsspn ownspn macrosspn (usuallyspn user-n levelspn formsspn ofspn directives),spn andspn thosespn macrosspn willspn notspn bespn definedspn inspn thespc dbgspn format.spn Thereforespn itspn canspn bespn usefulspn tospn runspn NASMspn twice,spn inspn orderspn tospn dospn thespn preprocessingspn withspn thespn nativespn objectspn formatspn selected:
code
nasm -e -f rdf -o rdfprog.i rdfprog.asm nasm -a -f dbg rdfprog.i
norm
n Thisspn preprocessesspc rdfprog.asmspn intospc rdfprog.in ,spn keepingspn thespc rdfspn objectspn formatspn selectedspn inspn orderspn tospn makespn surespn RDFspn specialspn directivesspn arespn convertedspn intospn primitivespn formspn correctly.spn Thenspn thespn preprocessedspn sourcespn isspn fedspn throughspn thespc dbgspn formatspn tospn generatespn thespn finalspn diagnosticspn output.
norm
n Thisspn workaroundspn willspn stillspn typicallyspn notspn workspn forspn programsspn intendedspn forspc objspn format,spn becausespn thespc objspc SEGMENTspn andspc GROUPspn directivesspn havespn sidespn effectsspn ofspn definingspn thespn segmentspn andspn groupspn namesspn asspn symbols;spc dbgspn willspn notspn dospn this,spn sospn thespn programspn willspn notspn assemble.spn Youspn willspn havespn tospn workspn aroundspn thatspn byspn definingspn thespn symbolsspn yourselfspn (usingspc EXTERNn ,spn forspn example)spn ifspn youspn reallyspn needspn tospn getspn aspc dbgspn tracespn ofspn anspc objdan specificspn sourcespn file.
norm
c dbgspn acceptsspn anyspn sectionspn namespn andspn anyspn directivesspn atspn all,spn andspn logsspn themspn allspn tospn itsspn outputspn file.
norm
c dbgspn acceptsspn andspn logsspn anyspc %pragman ,spn butspn thespn specificspc %pragman :
code
     %pragma dbg maxdump <size>
norm
n wherespc <size>spn isspn eitherspn aspn numberspn orspc unlimitedn ,spn canspn bespn usedspn tospn controlspn thespn maximumspn sizespn forspn dumpingspn thespn fullspn contentsspn ofspn aspc rawdataspn outputspn object.
chap 9 :chapter-9
n Writingspn 16-n bitspn Codespn (DOS,spn Windowsspn 3/3.1)
norm
n Thisspn chapterspn attemptsspn tospn coverspn somespn ofspn thespn commonspn issuesspn encounteredspn whenspn writingspn 16-n bitspn codespn tospn runspn underspc MS-DOSspn orspc Windows 3.xn .spn Itspn coversspn howspn tospn linkspn programsspn tospn producespc .EXEspn orspc .COMspn files,spn howspn tospn writespc .SYSspn devicespn drivers,spn andspn howspn tospn interfacespn assemblyspn languagespn codespn withspn 16-n bitspn Cspn compilersspn andspn withspn Borlandspn Pascal.
head 9.1 :section-9.1
n Producingspi .EXEc .EXEspn Files
norm
n Anyspn largespn programspn writtenspn underspn DOSspn needsspn tospn bespn builtspn asspn aspc .EXEspn file:spn onlyspc .EXEspn filesspn havespn thespn necessaryspn internalspn structurespn requiredspn tospn spanspn morespn thanspn onespn 64Kspn segment.spi windowsn Windowsspn programs,spn also,spn havespn tospn bespn builtspn asspc .EXEspn files,spn sincespn Windowsspn doesspn notspn supportspn thespc .COMspn format.
norm
n Inspn general,spn youspn generatespc .EXEspn filesspn byspn usingspn thespc objspn outputspn formatspn tospn producespn onespn orspn morespi .objc .objspn files,spn andspn thenspn linkingspn themspn togetherspn usingspn aspn linker.spn However,spn NASMspn alsospn supportsspn thespn directspn generationspn ofspn simplespn DOSspc .EXEspn filesspn usingspn thespc binspn outputspn formatspn (byspn usingspc DBspn andspc DWspn tospn constructspn thespc .EXEspn filespn header),spn andspn aspn macrospn packagespn isspn suppliedspn tospn dospn this.spn Thanksspn tospn Yannspn Guidonspn forspn contributingspn thespn codespn forspn this.
norm
n NASMspn mayspn alsospn supportspc .EXEspn nativelyspn asspn anotherspn outputspn formatspn inspn futurespn releases.
subh 9.1.1 :section-9.1.1
n Usingspn thespc objspn Formatspn Tospn Generatespc .EXEspn Files
norm
n Thisspn sectionspn describesspn thespn usualspn methodspn ofspn generatingspc .EXEspn filesspn byspn linkingspc .OBJspn filesspn together.
norm
n Mostspn 16-n bitspn programmingspn languagespn packagesspn comespn withspn aspn suitablespn linker;spn ifspn youspn havespn nonespn ofspn these,spn therespn isspn aspn freespn linkerspn calledspi valn VALi linker, freen ,spn availablespn inspc LZHspn archivespn formatspn fromspi x2ftp.oulu.fiwc<ftp://x2ftp.oulu.fi/pub/msdos/programming/lang/>x2ftp.oulu.fin .spn Anspn LZHspn archiverspn canspn bespn foundspn atspi ftp.simtel.netwc<ftp://ftp.simtel.net/pub/simtelnet/msdos/arcers>ftp.simtel.netn .spn Therespn isspn anotherspn `free'spn linkerspn (thoughspn thisspn onespn doesn'tspn comespn withspn sources)spn calledspi freelinkn FREELINKn ,spn availablespn fromspi www.pcorner.comwc<http://www.pcorner.com/tpc/old/3-101.html>www.pcorner.comn .spn Aspn third,spi djlinkc djlinkn ,spn writtenspn byspn DJspn Delorie,spn isspn availablespn atspi www.delorie.comwc<http://www.delorie.com/djgpp/16bit/djlink/>www.delorie.comn .spn Aspn fourthspn linker,spi ALINKc ALINKn ,spn writtenspn byspn Anthonyspn A.J.spn Williams,spn isspn availablespn atspi alink.sourceforge.netwc<http://alink.sourceforge.net>alink.sourceforge.netn .
norm
n Whenspn linkingspn severalspc .OBJspn filesspn intospn aspc .EXEspn file,spn youspn shouldspn ensurespn thatspn exactlyspn onespn ofspn themspn hasspn aspn startspn pointspn definedspn (usingspn thespi program entry pointi ..startc ..startspn specialspn symbolspn definedspn byspn thespc objspn format:spn seespx section-8.4.6n sectionspn 8.4.6xesection-8.4.6n ).spn Ifspn nospn modulespn definesspn aspn startspn point,spn thespn linkerspn willspn notspn knowspn whatspn valuespn tospn givespn thespn entry-n pointspn fieldspn inspn thespn outputspn filespn header;spn ifspn morespn thanspn onespn definesspn aspn startspn point,spn thespn linkerspn willspn notspn knowspeowhichspn valuespn tospn use.
norm
n Anspn examplespn ofspn aspn NASMspn sourcespn filespn whichspn canspn bespn assembledspn tospn aspc .OBJspn filespn andspn linkedspn onspn itsspn ownspn tospn aspc .EXEspn isspn givenspn here.spn Itspn demonstratesspn thespn basicspn principlesspn ofspn definingspn aspn stack,spn initialisingspn thespn segmentspn registers,spn andspn declaringspn aspn startspn point.spn Thisspn filespn isspn alsospn providedspn inspn thespi test subdirectoryc testspn subdirectoryspn ofspn thespn NASMspn archives,spn underspn thespn namespc objexe.asmn .
code
segment code ..start:         mov     ax,data         mov     ds,ax         mov     ax,stack         mov     ss,ax         mov     sp,stacktop
norm
n Thisspn initialspn piecespn ofspn codespn setsspn upspc DSspn tospn pointspn tospn thespn dataspn segment,spn andspn initializesspc SSspn andspc SPspn tospn pointspn tospn thespn topspn ofspn thespn providedspn stack.spn Noticespn thatspn interruptsspn arespn implicitlyspn disabledspn forspn onespn instructionspn afterspn aspn movespn intospc SSn ,spn preciselyspn forspn thisspn situation,spn sospn thatspn there'sspn nospn chancespn ofspn anspn interruptspn occurringspn betweenspn thespn loadsspn ofspc SSspn andspc SPspn andspn notspn havingspn aspn stackspn tospn executespn on.
norm
n Notespn alsospn thatspn thespn specialspn symbolspc ..startspn isspn definedspn atspn thespn beginningspn ofspn thisspn code,spn whichspn meansspn thatspn willspn bespn thespn entryspn pointspn intospn thespn resultingspn executablespn file.
code
        mov     dx,hello         mov     ah,9         int     0x21
norm
n Thespn abovespn isspn thespn mainspn program:spn loadspc DS:DXspn withspn aspn pointerspn tospn thespn greetingspn messagespn (c hellospn isspn implicitlyspn relativespn tospn thespn segmentspc datan ,spn whichspn wasspn loadedspn intospc DSspn inspn thespn setupspn code,spn sospn thespn fullspn pointerspn isspn valid),spn andspn callspn thespn DOSspn print-n stringspn function.
code
        mov     ax,0x4c00         int     0x21
norm
n Thisspn terminatesspn thespn programspn usingspn anotherspn DOSspn systemspn call.
code
segment data hello:  db      'hello, world', 13, 10, '$'
norm
n Thespn dataspn segmentspn containsspn thespn stringspn wespn wantspn tospn display.
code
segment stack stack         resb 64 stacktop:
norm
n Thespn abovespn codespn declaresspn aspn stackspn segmentspn containingspn 64spn bytesspn ofspn uninitializedspn stackspn space,spn andspn pointsspc stacktopspn atspn thespn topspn ofspn it.spn Thespn directivespc segment stack stackspn definesspn aspn segmentspeocalledspc stackn ,spn andspn alsospn ofspeotypespc STACKn .spn Thespn latterspn isspn notspn necessaryspn tospn thespn correctspn runningspn ofspn thespn program,spn butspn linkersspn arespn likelyspn tospn issuespn warningsspn orspn errorsspn ifspn yourspn programspn hasspn nospn segmentspn ofspn typespc STACKn .
norm
n Thespn abovespn file,spn whenspn assembledspn intospn aspc .OBJspn file,spn willspn linkspn onspn itsspn ownspn tospn aspn validspc .EXEspn file,spn whichspn whenspn runspn willspn printspn `hello,spn world'spn andspn thenspn exit.
subh 9.1.2 :section-9.1.2
n Usingspn thespc binspn Formatspn Tospn Generatespc .EXEspn Files
norm
n Thespc .EXEspn filespn formatspn isspn simplespn enoughspn thatspn it'sspn possiblespn tospn buildspn aspc .EXEspn filespn byspn writingspn aspn pure-n binaryspn programspn andspn stickingspn aspn 32-n bytespn headerspn onspn thespn front.spn Thisspn headerspn isspn simplespn enoughspn thatspn itspn canspn bespn generatedspn usingspc DBspn andspc DWspn commandsspn byspn NASMspn itself,spn sospn thatspn youspn canspn usespn thespc binspn outputspn formatspn tospn directlyspn generatespc .EXEspn files.
norm
n Includedspn inspn thespn NASMspn archives,spn inspn thespi misc subdirectoryc miscspn subdirectory,spn isspn aspn filespi exebin.macc exebin.macspn ofspn macros.spn Itspn definesspn threespn macros:spi EXE_beginc EXE_beginn ,spi EXE_stackc EXE_stackspn andspi EXE_endc EXE_endn .
norm
n Tospn producespn aspc .EXEspn filespn usingspn thisspn method,spn youspn shouldspn startspn byspn usingspc %includespn tospn loadspn thespc exebin.macspn macrospn packagespn intospn yourspn sourcespn file.spn Youspn shouldspn thenspn issuespn thespc EXE_beginspn macrospn callspn (whichspn takesspn nospn arguments)spn tospn generatespn thespn filespn headerspn data.spn Thenspn writespn codespn asspn normalspn forspn thespc binspn formatspdaspn youspn canspn usespn allspn threespn standardspn sectionsspc .textn ,spc .dataspn andspc .bssn .spn Atspn thespn endspn ofspn thespn filespn youspn shouldspn callspn thespc EXE_endspn macrospn (again,spn nospn arguments),spn whichspn definesspn somespn symbolsspn tospn markspn sectionspn sizes,spn andspn thesespn symbolsspn arespn referredspn tospn inspn thespn headerspn codespn generatedspn byspc EXE_beginn .
norm
n Inspn thisspn model,spn thespn codespn youspn endspn upspn writingspn startsspn atspc 0x100n ,spn justspn likespn aspc .COMspn filespdaspn inspn fact,spn ifspn youspn stripspn offspn thespn 32-n bytespn headerspn fromspn thespn resultingspc .EXEspn file,spn youspn willspn havespn aspn validspc .COMspn program.spn Allspn thespn segmentspn basesspn arespn thespn same,spn sospn youspn arespn limitedspn tospn aspn 64Kspn program,spn againspn justspn likespn aspc .COMspn file.spn Notespn thatspn anspc ORGspn directivespn isspn issuedspn byspn thespc EXE_beginspn macro,spn sospn youspn shouldspn notspn explicitlyspn issuespn onespn ofspn yourspn own.
norm
n Youspn can'tspn directlyspn referspn tospn yourspn segmentspn basespn value,spn unfortunately,spn sincespn thisspn wouldspn requirespn aspn relocationspn inspn thespn header,spn andspn thingsspn wouldspn getspn aspn lotspn morespn complicated.spn Sospn youspn shouldspn getspn yourspn segmentspn basespn byspn copyingspn itspn outspn ofspc CSspn instead.
norm
n Onspn entryspn tospn yourspc .EXEspn file,spc SS:SPspn arespn alreadyspn setspn upspn tospn pointspn tospn thespn topspn ofspn aspn 2Kbspn stack.spn Youspn canspn adjustspn thespn defaultspn stackspn sizespn ofspn 2Kbspn byspn callingspn thespc EXE_stackspn macro.spn Forspn example,spn tospn changespn thespn stackspn sizespn ofspn yourspn programspn tospn 64spn bytes,spn youspn wouldspn callspc EXE_stack 64n .
norm
n Aspn samplespn programspn whichspn generatesspn aspc .EXEspn filespn inspn thisspn wayspn isspn givenspn inspn thespc testspn subdirectoryspn ofspn thespn NASMspn archive,spn asspc binexe.asmn .
head 9.2 :section-9.2
n Producingspi .COMc .COMspn Files
norm
n Whilespn largespn DOSspn programsspn mustspn bespn writtenspn asspc .EXEspn files,spn smallspn onesspn arespn oftenspn betterspn writtenspn asspc .COMspn files.spc .COMspn filesspn arespn purespn binary,spn andspn thereforespn mostspn easilyspn producedspn usingspn thespc binspn outputspn format.
subh 9.2.1 :section-9.2.1
n Usingspn thespc binspn Formatspn Tospn Generatespc .COMspn Files
norm
c .COMspn filesspn expectspn tospn bespn loadedspn atspn offsetspc 100hspn intospn theirspn segmentspn (thoughspn thespn segmentspn mayspn change).spn Executionspn thenspn beginsspn atspi ORGc 100hn ,spn i.e.spn rightspn atspn thespn startspn ofspn thespn program.spn Sospn tospn writespn aspc .COMspn program,spn youspn wouldspn createspn aspn sourcespn filespn lookingspn like
code
        org 100h section .text start:         ; put your code here section .data         ; put data items here section .bss         ; put uninitialized data here
norm
n Thespc binspn formatspn putsspn thespc .textspn sectionspn firstspn inspn thespn file,spn sospn youspn canspn declarespn dataspn orspn BSSspn itemsspn beforespn beginningspn tospn writespn codespn ifspn youspn wantspn tospn andspn thespn codespn willspn stillspn endspn upspn atspn thespn frontspn ofspn thespn filespn wherespn itspn belongs.
norm
n Thespn BSSspn (uninitializedspn data)spn sectionspn doesspn notspn takespn upspn spacespn inspn thespc .COMspn filespn itself:spn instead,spn addressesspn ofspn BSSspn itemsspn arespn resolvedspn tospn pointspn atspn spacespn beyondspn thespn endspn ofspn thespn file,spn onspn thespn groundsspn thatspn thisspn willspn bespn freespn memoryspn whenspn thespn programspn isspn run.spn Thereforespn youspn shouldspn notspn relyspn onspn yourspn BSSspn beingspn initializedspn tospn allspn zerosspn whenspn youspn run.
norm
n Tospn assemblespn thespn abovespn program,spn youspn shouldspn usespn aspn commandspn linespn like
code
nasm myprog.asm -fbin -o myprog.com
norm
n Thespc binspn formatspn wouldspn producespn aspn filespn calledspc myprogspn ifspn nospn explicitspn outputspn filespn namespn werespn specified,spn sospn youspn havespn tospn overridespn itspn andspn givespn thespn desiredspn filespn name.
subh 9.2.2 :section-9.2.2
n Usingspn thespc objspn Formatspn Tospn Generatespc .COMspn Files
norm
n Ifspn youspn arespn writingspn aspc .COMspn programspn asspn morespn thanspn onespn module,spn youspn mayspn wishspn tospn assemblespn severalspc .OBJspn filesspn andspn linkspn themspn togetherspn intospn aspc .COMspn program.spn Youspn canspn dospn this,spn providedspn youspn havespn aspn linkerspn capablespn ofspn outputtingspc .COMspn filesspn directlyspn (i tlinkn TLINKspn doesspn this),spn orspn alternativelyspn aspn converterspn programspn suchspn asspi EXE2BINc EXE2BINspn tospn transformspn thespc .EXEspn filespn outputspn fromspn thespn linkerspn intospn aspc .COMspn file.
norm
n Ifspn youspn dospn this,spn youspn needspn tospn takespn carespn ofspn severalspn things:
bull
n Thespn firstspn objectspn filespn containingspn codespn shouldspn startspn itsspn codespn segmentspn withspn aspn linespn likespc RESB 100hn .spn Thisspn isspn tospn ensurespn thatspn thespn codespn beginsspn atspn offsetspc 100hspn relativespn tospn thespn beginningspn ofspn thespn codespn segment,spn sospn thatspn thespn linkerspn orspn converterspn programspn doesspn notspn havespn tospn adjustspn addressspn referencesspn withinspn thespn filespn whenspn generatingspn thespc .COMspn file.spn Otherspn assemblersspn usespn anspi ORGc ORGspn directivespn forspn thisspn purpose,spn butspc ORGspn inspn NASMspn isspn aspn format-n specificspn directivespn tospn thespc binspn outputspn format,spn andspn doesspn notspn meanspn thespn samespn thingspn asspn itspn doesspn inspn MASM-n compatiblespn assemblers.
bull
n Youspn don'tspn needspn tospn definespn aspn stackspn segment.
bull
n Allspn yourspn segmentsspn shouldspn bespn inspn thespn samespn group,spn sospn thatspn everyspn timespn yourspn codespn orspn dataspn referencesspn aspn symbolspn offset,spn allspn offsetsspn arespn relativespn tospn thespn samespn segmentspn base.spn Thisspn isspn because,spn whenspn aspc .COMspn filespn isspn loaded,spn allspn thespn segmentspn registersspn containspn thespn samespn value.
head 9.3 :section-9.3
n Producingspi .SYSc .SYSspn Files
norm
i ms-dos device driversn MS-DOSspn devicespn driversspdaspc .SYSspn filesspdaspn arespn purespn binaryspn files,spn similarspn tospc .COMspn files,spn exceptspn thatspn theyspn startspn atspn originspn zerospn ratherspn thanspc 100hn .spn Therefore,spn ifspn youspn arespn writingspn aspn devicespn driverspn usingspn thespc binspn format,spn youspn dospn notspn needspn thespc ORGspn directive,spn sincespn thespn defaultspn originspn forspc binspn isspn zero.spn Similarly,spn ifspn youspn arespn usingspc objn ,spn youspn dospn notspn needspn thespc RESB 100hspn atspn thespn startspn ofspn yourspn codespn segment.
norm
c .SYSspn filesspn startspn withspn aspn headerspn structure,spn containingspn pointersspn tospn thespn variousspn routinesspn insidespn thespn driverspn whichspn dospn thespn work.spn Thisspn structurespn shouldspn bespn definedspn atspn thespn startspn ofspn thespn codespn segment,spn evenspn thoughspn itspn isspn notspn actuallyspn code.
norm
n Forspn morespn informationspn onspn thespn formatspn ofspc .SYSspn files,spn andspn thespn dataspn whichspn hasspn tospn gospn inspn thespn headerspn structure,spn aspn listspn ofspn booksspn isspn givenspn inspn thespn Frequentlyspn Askedspn Questionsspn listspn forspn thespn newsgroupspi comp.os.msdos.programmerwc<news:comp.os.msdos.programmer>comp.os.msdos.programmern .
head 9.4 :section-9.4
n Interfacingspn tospn 16-n bitspn Cspn Programs
norm
n Thisspn sectionspn coversspn thespn basicsspn ofspn writingspn assemblyspn routinesspn thatspn call,spn orspn arespn calledspn from,spn Cspn programs.spn Tospn dospn this,spn youspn wouldspn typicallyspn writespn anspn assemblyspn modulespn asspn aspc .OBJspn file,spn andspn linkspn itspn withspn yourspn Cspn modulesspn tospn producespn aspi mixed-language programn mixed-languagespn programn .
subh 9.4.1 :section-9.4.1
n Externalspn Symbolspn Names
norm
i c symbol namesi underscore, in c symbolsn Cspn compilersspn havespn thespn conventionspn thatspn thespn namesspn ofspn allspn globalspn symbolsspn (functionsspn orspn data)spn theyspn definespn arespn formedspn byspn prefixingspn anspn underscorespn tospn thespn namespn asspn itspn appearsspn inspn thespn Cspn program.spn So,spn forspn example,spn thespn functionspn aspn Cspn programmerspn thinksspn ofspn asspc printfspn appearsspn tospn anspn assemblyspn languagespn programmerspn asspc _printfn .spn Thisspn meansspn thatspn inspn yourspn assemblyspn programs,spn youspn canspn definespn symbolsspn withoutspn aspn leadingspn underscore,spn andspn notspn havespn tospn worryspn aboutspn namespn clashesspn withspn Cspn symbols.
norm
n Ifspn youspn findspn thespn underscoresspn inconvenient,spn youspn canspn definespn macrosspn tospn replacespn thespc GLOBALspn andspc EXTERNspn directivesspn asspn follows:
code
%macro  cglobal 1   global  _%1   %define %1 _%1 %endmacro %macro  cextern 1   extern  _%1   %define %1 _%1 %endmacro
norm
n (Thesespn formsspn ofspn thespn macrosspn onlyspn takespn onespn argumentspn atspn aspn time;spn aspc %repspn constructspn couldspn solvespn this.)
norm
n Ifspn youspn thenspn declarespn anspn externalspn likespn this:
code
cextern printf
norm
n thenspn thespn macrospn willspn expandspn itspn as
code
extern  _printf %define printf _printf
norm
n Thereafter,spn youspn canspn referencespc printfspn asspn ifspn itspn wasspn aspn symbol,spn andspn thespn preprocessorspn willspn putspn thespn leadingspn underscorespn onspn wherespn necessary.
norm
n Thespc cglobalspn macrospn worksspn similarly.spn Youspn mustspn usespc cglobalspn beforespn definingspn thespn symbolspn inspn question,spn butspn youspn wouldspn havespn hadspn tospn dospn thatspn anywayspn ifspn youspn usedspc GLOBALn .
norm
n Alsospn seespx section-2.1.28n sectionspn 2.1.28xesection-2.1.28n .
subh 9.4.2 :section-9.4.2
i memory modelsn Memoryspn Models
norm
n NASMspn containsspn nospn mechanismspn tospn supportspn thespn variousspn Cspn memoryspn modelsspn directly;spn youspn havespn tospn keepspn trackspn yourselfspn ofspn whichspn onespn youspn arespn writingspn for.spn Thisspn meansspn youspn havespn tospn keepspn trackspn ofspn thespn followingspn things:
bull
n Inspn modelsspn usingspn aspn singlespn codespn segmentspn (tiny,spn smallspn andspn compact),spn functionsspn arespn near.spn Thisspn meansspn thatspn functionspn pointers,spn whenspn storedspn inspn dataspn segmentsspn orspn pushedspn onspn thespn stackspn asspn functionspn arguments,spn arespn 16spn bitsspn longspn andspn containspn onlyspn anspn offsetspn fieldspn (thespc CSspn registerspn neverspn changesspn itsspn value,spn andspn alwaysspn givesspn thespn segmentspn partspn ofspn thespn fullspn functionspn address),spn andspn thatspn functionsspn arespn calledspn usingspn ordinaryspn nearspc CALLspn instructionsspn andspn returnspn usingspc RETNspn (which,spn inspn NASM,spn isspn synonymousspn withspc RETspn anyway).spn Thisspn meansspn bothspn thatspn youspn shouldspn writespn yourspn ownspn routinesspn tospn returnspn withspc RETNn ,spn andspn thatspn youspn shouldspn callspn externalspn Cspn routinesspn withspn nearspc CALLspn instructions.
bull
n Inspn modelsspn usingspn morespn thanspn onespn codespn segmentspn (medium,spn largespn andspn huge),spn functionsspn arespn far.spn Thisspn meansspn thatspn functionspn pointersspn arespn 32spn bitsspn longspn (consistingspn ofspn aspn 16-n bitspn offsetspn followedspn byspn aspn 16-n bitspn segment),spn andspn thatspn functionsspn arespn calledspn usingspc CALL FARspn (orspc CALL seg:offsetn )spn andspn returnspn usingspc RETFn .spn Again,spn youspn shouldspn thereforespn writespn yourspn ownspn routinesspn tospn returnspn withspc RETFspn andspn usespc CALL FARspn tospn callspn externalspn routines.
bull
n Inspn modelsspn usingspn aspn singlespn dataspn segmentspn (tiny,spn smallspn andspn medium),spn dataspn pointersspn arespn 16spn bitsspn long,spn containingspn onlyspn anspn offsetspn fieldspn (thespc DSspn registerspn doesn'tspn changespn itsspn value,spn andspn alwaysspn givesspn thespn segmentspn partspn ofspn thespn fullspn dataspn itemspn address).
bull
n Inspn modelsspn usingspn morespn thanspn onespn dataspn segmentspn (compact,spn largespn andspn huge),spn dataspn pointersspn arespn 32spn bitsspn long,spn consistingspn ofspn aspn 16-n bitspn offsetspn followedspn byspn aspn 16-n bitspn segment.spn Youspn shouldspn stillspn bespn carefulspn notspn tospn modifyspc DSspn inspn yourspn routinesspn withoutspn restoringspn itspn afterwards,spn butspc ESspn isspn freespn forspn youspn tospn usespn tospn accessspn thespn contentsspn ofspn 32-n bitspn dataspn pointersspn youspn arespn passed.
bull
n Thespn hugespn memoryspn modelspn allowsspn singlespn dataspn itemsspn tospn exceedspn 64Kspn inspn size.spn Inspn allspn otherspn memoryspn models,spn youspn canspn accessspn thespn wholespn ofspn aspn dataspn itemspn justspn byspn doingspn arithmeticspn onspn thespn offsetspn fieldspn ofspn thespn pointerspn youspn arespn given,spn whetherspn aspn segmentspn fieldspn isspn presentspn orspn not;spn inspn hugespn model,spn youspn havespn tospn bespn morespn carefulspn ofspn yourspn pointerspn arithmetic.
bull
n Inspn mostspn memoryspn models,spn therespn isspn aspeodefaultspn dataspn segment,spn whosespn segmentspn addressspn isspn keptspn inspc DSspn throughoutspn thespn program.spn Thisspn dataspn segmentspn isspn typicallyspn thespn samespn segmentspn asspn thespn stack,spn keptspn inspc SSn ,spn sospn thatspn functions'spn localspn variablesspn (whichspn arespn storedspn onspn thespn stack)spn andspn globalspn dataspn itemsspn canspn bothspn bespn accessedspn easilyspn withoutspn changingspc DSn .spn Particularlyspn largespn dataspn itemsspn arespn typicallyspn storedspn inspn otherspn segments.spn However,spn somespn memoryspn modelsspn (thoughspn notspn thespn standardspn ones,spn usually)spn allowspn thespn assumptionspn thatspc SSspn andspc DSspn holdspn thespn samespn valuespn tospn bespn removed.spn Bespn carefulspn aboutspn functions'spn localspn variablesspn inspn thisspn latterspn case.
norm
n Inspn modelsspn withspn aspn singlespn codespn segment,spn thespn segmentspn isspn calledspi _TEXTc _TEXTn ,spn sospn yourspn codespn segmentspn mustspn alsospn gospn byspn thisspn namespn inspn orderspn tospn bespn linkedspn intospn thespn samespn placespn asspn thespn mainspn codespn segment.spn Inspn modelsspn withspn aspn singlespn dataspn segment,spn orspn withspn aspn defaultspn dataspn segment,spn itspn isspn calledspi _DATAc _DATAn .
subh 9.4.3 :section-9.4.3
n Functionspn Definitionsspn andspn Functionspn Calls
norm
i functions, c calling conventionn Thespi c calling conventionn Cspn callingspn conventionspn inspn 16-n bitspn programsspn isspn asspn follows.spn Inspn thespn followingspn description,spn thespn wordsspeocallerspn andspeocalleespn arespn usedspn tospn denotespn thespn functionspn doingspn thespn callingspn andspn thespn functionspn whichspn getsspn called.
bull
n Thespn callerspn pushesspn thespn function'sspn parametersspn onspn thespn stack,spn onespn afterspn another,spn inspn reversespn orderspn (rightspn tospn left,spn sospn thatspn thespn firstspn argumentspn specifiedspn tospn thespn functionspn isspn pushedspn last).
bull
n Thespn callerspn thenspn executesspn aspc CALLspn instructionspn tospn passspn controlspn tospn thespn callee.spn Thisspc CALLspn isspn eitherspn nearspn orspn farspn dependingspn onspn thespn memoryspn model.
bull
n Thespn calleespn receivesspn control,spn andspn typicallyspn (althoughspn thisspn isspn notspn actuallyspn necessary,spn inspn functionsspn whichspn dospn notspn needspn tospn accessspn theirspn parameters)spn startsspn byspn savingspn thespn valuespn ofspc SPspn inspc BPspn sospn asspn tospn bespn ablespn tospn usespc BPspn asspn aspn basespn pointerspn tospn findspn itsspn parametersspn onspn thespn stack.spn However,spn thespn callerspn wasspn probablyspn doingspn thisspn too,spn sospn partspn ofspn thespn callingspn conventionspn statesspn thatspc BPspn mustspn bespn preservedspn byspn anyspn Cspn function.spn Hencespn thespn callee,spn ifspn itspn isspn goingspn tospn setspn upspc BPspn asspn aspi frame pointeresframespeepointern ,spn mustspn pushspn thespn previousspn valuespn first.
bull
n Thespn calleespn mayspn thenspn accessspn itsspn parametersspn relativespn tospc BPn .spn Thespn wordspn atspc [BP]spn holdsspn thespn previousspn valuespn ofspc BPspn asspn itspn wasspn pushed;spn thespn nextspn word,spn atspc [BP+2]n ,spn holdsspn thespn offsetspn partspn ofspn thespn returnspn address,spn pushedspn implicitlyspn byspc CALLn .spn Inspn aspn small-n modelspn (near)spn function,spn thespn parametersspn startspn afterspn that,spn atspc [BP+4]n ;spn inspn aspn large-n modelspn (far)spn function,spn thespn segmentspn partspn ofspn thespn returnspn addressspn livesspn atspc [BP+4]n ,spn andspn thespn parametersspn beginspn atspc [BP+6]n .spn Thespn leftmostspn parameterspn ofspn thespn function,spn sincespn itspn wasspn pushedspn last,spn isspn accessiblespn atspn thisspn offsetspn fromspc BPn ;spn thespn othersspn follow,spn atspn successivelyspn greaterspn offsets.spn Thus,spn inspn aspn functionspn suchspn asspc printfspn whichspn takesspn aspn variablespn numberspn ofspn parameters,spn thespn pushingspn ofspn thespn parametersspn inspn reversespn orderspn meansspn thatspn thespn functionspn knowsspn wherespn tospn findspn itsspn firstspn parameter,spn whichspn tellsspn itspn thespn numberspn andspn typespn ofspn thespn remainingspn ones.
bull
n Thespn calleespn mayspn alsospn wishspn tospn decreasespc SPspn further,spn sospn asspn tospn allocatespn spacespn onspn thespn stackspn forspn localspn variables,spn whichspn willspn thenspn bespn accessiblespn atspn negativespn offsetsspn fromspc BPn .
bull
n Thespn callee,spn ifspn itspn wishesspn tospn returnspn aspn valuespn tospn thespn caller,spn shouldspn leavespn thespn valuespn inspc ALn ,spc AXspn orspc DX:AXspn dependingspn onspn thespn sizespn ofspn thespn value.spn Floating-n pointspn resultsspn arespn sometimesspn (dependingspn onspn thespn compiler)spn returnedspn inspc ST0n .
bull
n Oncespn thespn calleespn hasspn finishedspn processing,spn itspn restoresspc SPspn fromspc BPspn ifspn itspn hadspn allocatedspn localspn stackspn space,spn thenspn popsspn thespn previousspn valuespn ofspc BPn ,spn andspn returnsspn viaspc RETNspn orspc RETFspn dependingspn onspn memoryspn model.
bull
n Whenspn thespn callerspn regainsspn controlspn fromspn thespn callee,spn thespn functionspn parametersspn arespn stillspn onspn thespn stack,spn sospn itspn typicallyspn addsspn anspn immediatespn constantspn tospc SPspn tospn removespn themspn (insteadspn ofspn executingspn aspn numberspn ofspn slowspc POPspn instructions).spn Thus,spn ifspn aspn functionspn isspn accidentallyspn calledspn withspn thespn wrongspn numberspn ofspn parametersspn duespn tospn aspn prototypespn mismatch,spn thespn stackspn willspn stillspn bespn returnedspn tospn aspn sensiblespn statespn sincespn thespn caller,spn whichspeoknowsspn howspn manyspn parametersspn itspn pushed,spn doesspn thespn removing.
norm
n Itspn isspn instructivespn tospn comparespn thisspn callingspn conventionspn withspn thatspn forspn Pascalspn programsspn (describedspn inspx section-9.5.1n sectionspn 9.5.1xesection-9.5.1n ).spn Pascalspn hasspn aspn simplerspn convention,spn sincespn nospn functionsspn havespn variablespn numbersspn ofspn parameters.spn Thereforespn thespn calleespn knowsspn howspn manyspn parametersspn itspn shouldspn havespn beenspn passed,spn andspn isspn ablespn tospn deallocatespn themspn fromspn thespn stackspn itselfspn byspn passingspn anspn immediatespn argumentspn tospn thespc RETspn orspc RETFspn instruction,spn sospn thespn callerspn doesspn notspn havespn tospn dospn it.spn Also,spn thespn parametersspn arespn pushedspn inspn left-n to-n rightspn order,spn notspn right-n to-n left,spn whichspn meansspn thatspn aspn compilerspn canspn givespn betterspn guaranteesspn aboutspn sequencespn pointsspn withoutspn performancespn suffering.
norm
n Thus,spn youspn wouldspn definespn aspn functionspn inspn Cspn stylespn inspn thespn followingspn way.spn Thespn followingspn examplespn isspn forspn smallspn model:
code
global  _myfunc _myfunc:         push    bp         mov     bp,sp         sub     sp,0x40         ; 64 bytes of local stack space         mov     bx,[bp+4]       ; first parameter to function         ; some more code         mov     sp,bp           ; undo "sub sp,0x40" above         pop     bp         ret
norm
n Forspn aspn large-n modelspn function,spn youspn wouldspn replacespc RETspn byspc RETFn ,spn andspn lookspn forspn thespn firstspn parameterspn atspc [BP+6]spn insteadspn ofspc [BP+4]n .spn Ofspn course,spn ifspn onespn ofspn thespn parametersspn isspn aspn pointer,spn thenspn thespn offsetsspn ofspeosubsequentspn parametersspn willspn changespn dependingspn onspn thespn memoryspn modelspn asspn well:spn farspn pointersspn takespn upspn fourspn bytesspn onspn thespn stackspn whenspn passedspn asspn aspn parameter,spn whereasspn nearspn pointersspn takespn upspn two.
norm
n Atspn thespn otherspn endspn ofspn thespn process,spn tospn callspn aspn Cspn functionspn fromspn yourspn assemblyspn code,spn youspn wouldspn dospn somethingspn likespn this:
code
extern  _printf       ; and then, further down...       push    word [myint]        ; one of my integer variables       push    word mystring       ; pointer into my data segment       call    _printf       add     sp,byte 4           ; `byte' saves space       ; then those data items... segment _DATA myint         dw    1234 mystring      db    'This number -> %d <- should be 1234',10,0
norm
n Thisspn piecespn ofspn codespn isspn thespn small-n modelspn assemblyspn equivalentspn ofspn thespn Cspn code
code
    int myint = 1234;     printf("This number -> %d <- should be 1234\n", myint);
norm
n Inspn largespn model,spn thespn function-n callspn codespn mightspn lookspn morespn likespn this.spn Inspn thisspn example,spn itspn isspn assumedspn thatspc DSspn alreadyspn holdsspn thespn segmentspn basespn ofspn thespn segmentspc _DATAn .spn Ifspn not,spn youspn wouldspn havespn tospn initializespn itspn first.
code
      push    word [myint]       push    word seg mystring   ; Now push the segment, and...       push    word mystring       ; ... offset of "mystring"       call    far _printf       add    sp,byte 6
norm
n Thespn integerspn valuespn stillspn takesspn upspn onespn wordspn onspn thespn stack,spn sincespn largespn modelspn doesspn notspn affectspn thespn sizespn ofspn thespc intspn dataspn type.spn Thespn firstspn argumentspn (pushedspn last)spn tospc printfn ,spn however,spn isspn aspn dataspn pointer,spn andspn thereforespn hasspn tospn containspn aspn segmentspn andspn offsetspn part.spn Thespn segmentspn shouldspn bespn storedspn secondspn inspn memory,spn andspn thereforespn mustspn bespn pushedspn first.spn (Ofspn course,spc PUSH DSspn wouldspn havespn beenspn aspn shorterspn instructionspn thanspc PUSH WORD SEG mystringn ,spn ifspc DSspn wasspn setspn upspn asspn thespn abovespn examplespn assumed.)spn Thenspn thespn actualspn callspn becomesspn aspn farspn call,spn sincespn functionsspn expectspn farspn callsspn inspn largespn model;spn andspc SPspn hasspn tospn bespn increasedspn byspn 6spn ratherspn thanspn 4spn afterwardsspn tospn makespn upspn forspn thespn extraspn wordspn ofspn parameters.
subh 9.4.4 :section-9.4.4
n Accessingspn Dataspn Items
norm
n Tospn getspn atspn thespn contentsspn ofspn Cspn variables,spn orspn tospn declarespn variablesspn whichspn Cspn canspn access,spn youspn needspn onlyspn declarespn thespn namesspn asspc GLOBALspn orspc EXTERNn .spn (Again,spn thespn namesspn requirespn leadingspn underscores,spn asspn statedspn inspx section-9.4.1n sectionspn 9.4.1xesection-9.4.1n .)spn Thus,spn aspn Cspn variablespn declaredspn asspc int ispn canspn bespn accessedspn fromspn assemblerspn as
code
extern _i         mov ax,[_i]
norm
n Andspn tospn declarespn yourspn ownspn integerspn variablespn whichspn Cspn programsspn canspn accessspn asspc extern int jn ,spn youspn dospn thisspn (makingspn surespn youspn arespn assemblingspn inspn thespc _DATAspn segment,spn ifspn necessary):
code
global  _j _j      dw      0
norm
n Tospn accessspn aspn Cspn array,spn youspn needspn tospn knowspn thespn sizespn ofspn thespn componentsspn ofspn thespn array.spn Forspn example,spc intspn variablesspn arespn twospn bytesspn long,spn sospn ifspn aspn Cspn programspn declaresspn anspn arrayspn asspc int a[10]n ,spn youspn canspn accessspc a[3]spn byspn codingspc mov ax,[_a+6]n .spn (Thespn bytespn offsetspn 6spn isspn obtainedspn byspn multiplyingspn thespn desiredspn arrayspn index,spn 3,spn byspn thespn sizespn ofspn thespn arrayspn element,spn 2.)spn Thespn sizesspn ofspn thespn Cspn basespn typesspn inspn 16-n bitspn compilersspn are:spn 1spn forspc charn ,spn 2spn forspc shortspn andspc intn ,spn 4spn forspc longspn andspc floatn ,spn andspn 8spn forspc doublen .
norm
n Tospn accessspn aspn Cspi data structuren dataspn structuren ,spn youspn needspn tospn knowspn thespn offsetspn fromspn thespn basespn ofspn thespn structurespn tospn thespn fieldspn youspn arespn interestedspn in.spn Youspn canspn eitherspn dospn thisspn byspn convertingspn thespn Cspn structurespn definitionspn intospn aspn NASMspn structurespn definitionspn (usingspi STRUCc STRUCn ),spn orspn byspn calculatingspn thespn onespn offsetspn andspn usingspn justspn that.
norm
n Tospn dospn eitherspn ofspn these,spn youspn shouldspn readspn yourspn Cspn compiler'sspn manualspn tospn findspn outspn howspn itspn organizesspn dataspn structures.spn NASMspn givesspn nospn specialspn alignmentspn tospn structurespn membersspn inspn itsspn ownspc STRUCspn macro,spn sospn youspn havespn tospn specifyspn alignmentspn yourselfspn ifspn thespn Cspn compilerspn generatesspn it.spn Typically,spn youspn mightspn findspn thatspn aspn structurespn like
code
struct {     char c;     int i; } foo;
norm
n mightspn bespn fourspn bytesspn longspn ratherspn thanspn three,spn sincespn thespc intspn fieldspn wouldspn bespn alignedspn tospn aspn two-n bytespn boundary.spn However,spn thisspn sortspn ofspn featurespn tendsspn tospn bespn aspn configurablespn optionspn inspn thespn Cspn compiler,spn eitherspn usingspn command-n linespn optionsspn orspc #pragmaspn lines,spn sospn youspn havespn tospn findspn outspn howspn yourspn ownspn compilerspn doesspn it.
subh 9.4.5 :section-9.4.5
i c16.macc c16.macn :spn Helperspn Macrosspn forspn thespn 16-n bitspn Cspn Interface
norm
n Includedspn inspn thespn NASMspn archives,spn inspn thespi misc subdirectoryc miscspn directory,spn isspn aspn filespc c16.macspn ofspn macros.spn Itspn definesspn threespn macros:spi procc procn ,spi argc argspn andspi endprocc endprocn .spn Thesespn arespn intendedspn tospn bespn usedspn forspn C-n stylespn procedurespn definitions,spn andspn theyspn automatespn aspn lotspn ofspn thespn workspn involvedspn inspn keepingspn trackspn ofspn thespn callingspn convention.
norm
n (Anspn alternative,spn TASMspn compatiblespn formspn ofspc argspn isspn alsospn nowspn builtspn intospn NASM'sspn preprocessor.spn Seespx section-4.8n sectionspn 4.8xesection-4.8spn forspn details.)
norm
n Anspn examplespn ofspn anspn assemblyspn functionspn usingspn thespn macrospn setspn isspn givenspn here:
code
proc    _nearproc %$i     arg %$j     arg         mov     ax,[bp + %$i]         mov     bx,[bp + %$j]         add     ax,[bx] endproc
norm
n Thisspn definesspc _nearprocspn tospn bespn aspn procedurespn takingspn twospn arguments,spn thespn firstspn (c in )spn anspn integerspn andspn thespn secondspn (c jn )spn aspn pointerspn tospn anspn integer.spn Itspn returnsspc i + *jn .
norm
n Notespn thatspn thespc argspn macrospn hasspn anspc EQUspn asspn thespn firstspn linespn ofspn itsspn expansion,spn andspn sincespn thespn labelspn beforespn thespn macrospn callspn getsspn prependedspn tospn thespn firstspn linespn ofspn thespn expandedspn macro,spn thespc EQUspn works,spn definingspc %$ispn tospn bespn anspn offsetspn fromspc BPn .spn Aspn context-n localspn variablespn isspn used,spn localspn tospn thespn contextspn pushedspn byspn thespc procspn macrospn andspn poppedspn byspn thespc endprocspn macro,spn sospn thatspn thespn samespn argumentspn namespn canspn bespn usedspn inspn laterspn procedures.spn Ofspn course,spn youspn don'tspeohavespn tospn dospn that.
norm
n Thespn macrospn setspn producesspn codespn forspn nearspn functionsspn (tiny,spn smallspn andspn compact-n modelspn code)spn byspn default.spn Youspn canspn havespn itspn generatespn farspn functionsspn (medium,spn largespn andspn huge-n modelspn code)spn byspn meansspn ofspn codingspi FARCODEc %define FARCODEn .spn Thisspn changesspn thespn kindspn ofspn returnspn instructionspn generatedspn byspc endprocn ,spn andspn alsospn changesspn thespn startingspn pointspn forspn thespn argumentspn offsets.spn Thespn macrospn setspn containsspn nospn intrinsicspn dependencyspn onspn whetherspn dataspn pointersspn arespn farspn orspn not.
norm
c argspn canspn takespn anspn optionalspn parameter,spn givingspn thespn sizespn ofspn thespn argument.spn Ifspn nospn sizespn isspn given,spn 2spn isspn assumed,spn sincespn itspn isspn likelyspn thatspn manyspn functionspn parametersspn willspn bespn ofspn typespc intn .
norm
n Thespn large-n modelspn equivalentspn ofspn thespn abovespn functionspn wouldspn lookspn likespn this:
code
%define FARCODE proc    _farproc %$i     arg %$j     arg     4         mov     ax,[bp + %$i]         mov     bx,[bp + %$j]         mov     es,[bp + %$j + 2]         add     ax,[bx] endproc
norm
n Thisspn makesspn usespn ofspn thespn argumentspn tospn thespc argspn macrospn tospn definespn aspn parameterspn ofspn sizespn 4,spn becausespc jspn isspn nowspn aspn farspn pointer.spn Whenspn wespn loadspn fromspc jn ,spn wespn mustspn loadspn aspn segmentspn andspn anspn offset.
head 9.5 :section-9.5
n Interfacingspn tospi borland pascaln Borlandspn Pascalspn Programs
norm
n Interfacingspn tospn Borlandspn Pascalspn programsspn isspn similarspn inspn conceptspn tospn interfacingspn tospn 16-n bitspn Cspn programs.spn Thespn differencesspn are:
bull
n Thespn leadingspn underscorespn requiredspn forspn interfacingspn tospn Cspn programsspn isspn notspn requiredspn forspn Pascal.
bull
n Thespn memoryspn modelspn isspn alwaysspn large:spn functionsspn arespn far,spn dataspn pointersspn arespn far,spn andspn nospn dataspn itemspn canspn bespn morespn thanspn 64Kspn long.spn (Actually,spn somespn functionsspn arespn near,spn butspn onlyspn thosespn functionsspn thatspn arespn localspn tospn aspn Pascalspn unitspn andspn neverspn calledspn fromspn outsidespn it.spn Allspn assemblyspn functionsspn thatspn Pascalspn calls,spn andspn allspn Pascalspn functionsspn thatspn assemblyspn routinesspn arespn ablespn tospn call,spn arespn far.)spn However,spn allspn staticspn dataspn declaredspn inspn aspn Pascalspn programspn goesspn intospn thespn defaultspn dataspn segment,spn whichspn isspn thespn onespn whosespn segmentspn addressspn willspn bespn inspc DSspn whenspn controlspn isspn passedspn tospn yourspn assemblyspn code.spn Thespn onlyspn thingsspn thatspn dospn notspn livespn inspn thespn defaultspn dataspn segmentspn arespn localspn variablesspn (theyspn livespn inspn thespn stackspn segment)spn andspn dynamicallyspn allocatedspn variables.spn Allspn dataspeopointersn ,spn however,spn arespn far.
bull
n Thespn functionspn callingspn conventionspn isspn differentspdaspn describedspn below.
bull
n Somespn dataspn types,spn suchspn asspn strings,spn arespn storedspn differently.
bull
n Therespn arespn restrictionsspn onspn thespn segmentspn namesspn youspn arespn allowedspn tospn usespdaspn Borlandspn Pascalspn willspn ignorespn codespn orspn dataspn declaredspn inspn aspn segmentspn itspn doesn'tspn likespn thespn namespn of.spn Thespn restrictionsspn arespn describedspn below.
subh 9.5.1 :section-9.5.1
n Thespn Pascalspn Callingspn Convention
norm
i functions, pascal calling conventioni pascal calling conventionn Thespn 16-n bitspn Pascalspn callingspn conventionspn isspn asspn follows.spn Inspn thespn followingspn description,spn thespn wordsspeocallerspn andspeocalleespn arespn usedspn tospn denotespn thespn functionspn doingspn thespn callingspn andspn thespn functionspn whichspn getsspn called.
bull
n Thespn callerspn pushesspn thespn function'sspn parametersspn onspn thespn stack,spn onespn afterspn another,spn inspn normalspn orderspn (leftspn tospn right,spn sospn thatspn thespn firstspn argumentspn specifiedspn tospn thespn functionspn isspn pushedspn first).
bull
n Thespn callerspn thenspn executesspn aspn farspc CALLspn instructionspn tospn passspn controlspn tospn thespn callee.
bull
n Thespn calleespn receivesspn control,spn andspn typicallyspn (althoughspn thisspn isspn notspn actuallyspn necessary,spn inspn functionsspn whichspn dospn notspn needspn tospn accessspn theirspn parameters)spn startsspn byspn savingspn thespn valuespn ofspc SPspn inspc BPspn sospn asspn tospn bespn ablespn tospn usespc BPspn asspn aspn basespn pointerspn tospn findspn itsspn parametersspn onspn thespn stack.spn However,spn thespn callerspn wasspn probablyspn doingspn thisspn too,spn sospn partspn ofspn thespn callingspn conventionspn statesspn thatspc BPspn mustspn bespn preservedspn byspn anyspn function.spn Hencespn thespn callee,spn ifspn itspn isspn goingspn tospn setspn upspc BPspn asspn aspi frame pointern framespn pointern ,spn mustspn pushspn thespn previousspn valuespn first.
bull
n Thespn calleespn mayspn thenspn accessspn itsspn parametersspn relativespn tospc BPn .spn Thespn wordspn atspc [BP]spn holdsspn thespn previousspn valuespn ofspc BPspn asspn itspn wasspn pushed.spn Thespn nextspn word,spn atspc [BP+2]n ,spn holdsspn thespn offsetspn partspn ofspn thespn returnspn address,spn andspn thespn nextspn onespn atspc [BP+4]spn thespn segmentspn part.spn Thespn parametersspn beginspn atspc [BP+6]n .spn Thespn rightmostspn parameterspn ofspn thespn function,spn sincespn itspn wasspn pushedspn last,spn isspn accessiblespn atspn thisspn offsetspn fromspc BPn ;spn thespn othersspn follow,spn atspn successivelyspn greaterspn offsets.
bull
n Thespn calleespn mayspn alsospn wishspn tospn decreasespc SPspn further,spn sospn asspn tospn allocatespn spacespn onspn thespn stackspn forspn localspn variables,spn whichspn willspn thenspn bespn accessiblespn atspn negativespn offsetsspn fromspc BPn .
bull
n Thespn callee,spn ifspn itspn wishesspn tospn returnspn aspn valuespn tospn thespn caller,spn shouldspn leavespn thespn valuespn inspc ALn ,spc AXspn orspc DX:AXspn dependingspn onspn thespn sizespn ofspn thespn value.spn Floating-n pointspn resultsspn arespn returnedspn inspc ST0n .spn Resultsspn ofspn typespc Realspn (Borland'sspn ownspn customspn floating-n pointspn dataspn type,spn notspn handledspn directlyspn byspn thespn FPU)spn arespn returnedspn inspc DX:BX:AXn .spn Tospn returnspn aspn resultspn ofspn typespc Stringn ,spn thespn callerspn pushesspn aspn pointerspn tospn aspn temporaryspn stringspn beforespn pushingspn thespn parameters,spn andspn thespn calleespn placesspn thespn returnedspn stringspn valuespn atspn thatspn location.spn Thespn pointerspn isspn notspn aspn parameter,spn andspn shouldspn notspn bespn removedspn fromspn thespn stackspn byspn thespc RETFspn instruction.
bull
n Oncespn thespn calleespn hasspn finishedspn processing,spn itspn restoresspc SPspn fromspc BPspn ifspn itspn hadspn allocatedspn localspn stackspn space,spn thenspn popsspn thespn previousspn valuespn ofspc BPn ,spn andspn returnsspn viaspc RETFn .spn Itspn usesspn thespn formspn ofspc RETFspn withspn anspn immediatespn parameter,spn givingspn thespn numberspn ofspn bytesspn takenspn upspn byspn thespn parametersspn onspn thespn stack.spn Thisspn causesspn thespn parametersspn tospn bespn removedspn fromspn thespn stackspn asspn aspn sidespn effectspn ofspn thespn returnspn instruction.
bull
n Whenspn thespn callerspn regainsspn controlspn fromspn thespn callee,spn thespn functionspn parametersspn havespn alreadyspn beenspn removedspn fromspn thespn stack,spn sospn itspn needsspn tospn dospn nothingspn further.
norm
n Thus,spn youspn wouldspn definespn aspn functionspn inspn Pascalspn style,spn takingspn twospc Integerdan typespn parameters,spn inspn thespn followingspn way:
code
global  myfunc myfunc: push    bp         mov     bp,sp         sub     sp,0x40         ; 64 bytes of local stack space         mov     bx,[bp+8]       ; first parameter to function         mov     bx,[bp+6]       ; second parameter to function         ; some more code         mov     sp,bp           ; undo "sub sp,0x40" above         pop     bp         retf    4               ; total size of params is 4
norm
n Atspn thespn otherspn endspn ofspn thespn process,spn tospn callspn aspn Pascalspn functionspn fromspn yourspn assemblyspn code,spn youspn wouldspn dospn somethingspn likespn this:
code
extern  SomeFunc        ; and then, further down...        push   word seg mystring   ; Now push the segment, and...        push   word mystring       ; ... offset of "mystring"        push   word [myint]        ; one of my variables        call   far SomeFunc
norm
n Thisspn isspn equivalentspn tospn thespn Pascalspn code
code
procedure SomeFunc(String: PChar; Int: Integer);     SomeFunc(@mystring, myint);
subh 9.5.2 :section-9.5.2
n Borlandspn Pascalspi segment names, borland pascaln Segmentspn Namespn Restrictions
norm
n Sincespn Borlandspn Pascal'sspn internalspn unitspn filespn formatspn isspn completelyspn differentspn fromspc OBJn ,spn itspn onlyspn makesspn aspn veryspn sketchyspn jobspn ofspn actuallyspn readingspn andspn understandingspn thespn variousspn informationspn containedspn inspn aspn realspc OBJspn filespn whenspn itspn linksspn thatspn in.spn Thereforespn anspn objectspn filespn intendedspn tospn bespn linkedspn tospn aspn Pascalspn programspn mustspn obeyspn aspn numberspn ofspn restrictions:
bull
n Proceduresspn andspn functionsspn mustspn bespn inspn aspn segmentspn whosespn namespn isspn eitherspc CODEn ,spc CSEGn ,spn orspn somethingspn endingspn inspc _TEXTn .
bull
n initializedspn dataspn mustspn bespn inspn aspn segmentspn whosespn namespn isspn eitherspc CONSTspn orspn somethingspn endingspn inspc _DATAn .
bull
n Uninitializedspn dataspn mustspn bespn inspn aspn segmentspn whosespn namespn isspn eitherspc DATAn ,spc DSEGn ,spn orspn somethingspn endingspn inspc _BSSn .
bull
n Anyspn otherspn segmentsspn inspn thespn objectspn filespn arespn completelyspn ignored.spc GROUPspn directivesspn andspn segmentspn attributesspn arespn alsospn ignored.
subh 9.5.3 :section-9.5.3
n Usingspi c16.macc c16.macspn Withspn Pascalspn Programs
norm
n Thespc c16.macspn macrospn package,spn describedspn inspx section-9.4.5n sectionspn 9.4.5xesection-9.4.5n ,spn canspn alsospn bespn usedspn tospn simplifyspn writingspn functionsspn tospn bespn calledspn fromspn Pascalspn programs,spn ifspn youspn codespi PASCALc %define PASCALn .spn Thisspn definitionspn ensuresspn thatspn functionsspn arespn farspn (itspn impliesspi FARCODEc FARCODEn ),spn andspn alsospn causesspn procedurespn returnspn instructionsspn tospn bespn generatedspn withspn anspn operand.
norm
n Definingspc PASCALspn doesspn notspn changespn thespn codespn whichspn calculatesspn thespn argumentspn offsets;spn youspn mustspn declarespn yourspn function'sspn argumentsspn inspn reversespn order.spn Forspn example:
code
%define PASCAL proc    _pascalproc %$j     arg 4 %$i     arg         mov     ax,[bp + %$i]         mov     bx,[bp + %$j]         mov     es,[bp + %$j + 2]         add     ax,[bx] endproc
norm
n Thisspn definesspn thespn samespn routine,spn conceptually,spn asspn thespn examplespn inspx section-9.4.5n sectionspn 9.4.5xesection-9.4.5n :spn itspn definesspn aspn functionspn takingspn twospn arguments,spn anspn integerspn andspn aspn pointerspn tospn anspn integer,spn whichspn returnsspn thespn sumspn ofspn thespn integerspn andspn thespn contentsspn ofspn thespn pointer.spn Thespn onlyspn differencespn betweenspn thisspn codespn andspn thespn large-n modelspn Cspn versionspn isspn thatspc PASCALspn isspn definedspn insteadspn ofspc FARCODEn ,spn andspn thatspn thespn argumentsspn arespn declaredspn inspn reversespn order.
chap 10 :chapter-10
n Writingspn 32-n bitspn Codespn (Unix,spn Win32,spn DJGPP)
norm
n Thisspn chapterspn attemptsspn tospn coverspn somespn ofspn thespn commonspn issuesspn involvedspn whenspn writingspn 32-n bitspn code,spn tospn runspn underspi win32n Win32spn orspn Unix,spn orspn tospn bespn linkedspn withspn Cspn codespn generatedspn byspn aspn Unix-n stylespn Cspn compilerspn suchspn asspi djgppn DJGPPn .spn Itspn coversspn howspn tospn writespn assemblyspn codespn tospn interfacespn withspn 32-n bitspn Cspn routines,spn andspn howspn tospn writespn position-n independentspn codespn forspn sharedspn libraries.
norm
n Almostspn allspn 32-n bitspn code,spn andspn inspn particularspn allspn codespn runningspn underspc Win32n ,spc DJGPPspn orspn anyspn ofspn thespn PCspn Unixspn variants,spn runsspn inspi flat memory modeleoflatspn memoryspn model.spn Thisspn meansspn thatspn thespn segmentspn registersspn andspn pagingspn havespn alreadyspn beenspn setspn upspn tospn givespn youspn thespn samespn 32-n bitspn 4Gbspn addressspn spacespn nospn matterspn whatspn segmentspn youspn workspn relativespn to,spn andspn thatspn youspn shouldspn ignorespn allspn segmentspn registersspn completely.spn Whenspn writingspn flat-n modelspn applicationspn code,spn youspn neverspn needspn tospn usespn aspn segmentspn overridespn orspn modifyspn anyspn segmentspn register,spn andspn thespn code-n sectionspn addressesspn youspn passspn tospc CALLspn andspc JMPspn livespn inspn thespn samespn addressspn spacespn asspn thespn data-n sectionspn addressesspn youspn accessspn yourspn variablesspn byspn andspn thespn stack-n sectionspn addressesspn youspn accessspn localspn variablesspn andspn procedurespn parametersspn by.spn Everyspn addressspn isspn 32spn bitsspn longspn andspn containsspn onlyspn anspn offsetspn part.
head 10.1 :section-10.1
n Interfacingspn tospn 32-n bitspn Cspn Programs
norm
n Aspn lotspn ofspn thespn discussionspn inspx section-9.4n sectionspn 9.4xesection-9.4n ,spn aboutspn interfacingspn tospn 16-n bitspn Cspn programs,spn stillspn appliesspn whenspn workingspn inspn 32spn bits.spn Thespn absencespn ofspn memoryspn modelsspn orspn segmentationspn worriesspn simplifiesspn thingsspn aspn lot.
subh 10.1.1 :section-10.1.1
n Externalspn Symbolspn Names
norm
n Mostspn 32-n bitspn Cspn compilersspn sharespn thespn conventionspn usedspn byspn 16-n bitspn compilers,spn thatspn thespn namesspn ofspn allspn globalspn symbolsspn (functionsspn orspn data)spn theyspn definespn arespn formedspn byspn prefixingspn anspn underscorespn tospn thespn namespn asspn itspn appearsspn inspn thespn Cspn program.spn However,spn notspn allspn ofspn themspn do:spn thespc ELFspn specificationspn statesspn thatspn Cspn symbolsspn dospeonotspn havespn aspn leadingspn underscorespn onspn theirspn assembly-n languagespn names.
norm
n Thespn olderspn Linuxspc a.outspn Cspn compiler,spn allspc Win32spn compilers,spc DJGPPn ,spn andspc NetBSDspn andspc FreeBSDn ,spn allspn usespn thespn leadingspn underscore;spn forspn thesespn compilers,spn thespn macrosspc cexternspn andspc cglobaln ,spn asspn givenspn inspx section-9.4.1n sectionspn 9.4.1xesection-9.4.1n ,spn willspn stillspn work.spn Forspc ELFn ,spn though,spn thespn leadingspn underscorespn shouldspn notspn bespn used.
norm
n Seespn alsospx section-2.1.28n sectionspn 2.1.28xesection-2.1.28n .
subh 10.1.2 :section-10.1.2
n Functionspn Definitionsspn andspn Functionspn Calls
norm
i functions, c calling conventionn Thespi c calling conventionn Cspn callingspn conventionspn inspn 32-n bitspn programsspn isspn asspn follows.spn Inspn thespn followingspn description,spn thespn wordsspeocallerspn andspeocalleespn arespn usedspn tospn denotespn thespn functionspn doingspn thespn callingspn andspn thespn functionspn whichspn getsspn called.
bull
n Thespn callerspn pushesspn thespn function'sspn parametersspn onspn thespn stack,spn onespn afterspn another,spn inspn reversespn orderspn (rightspn tospn left,spn sospn thatspn thespn firstspn argumentspn specifiedspn tospn thespn functionspn isspn pushedspn last).
bull
n Thespn callerspn thenspn executesspn aspn nearspc CALLspn instructionspn tospn passspn controlspn tospn thespn callee.
bull
n Thespn calleespn receivesspn control,spn andspn typicallyspn (althoughspn thisspn isspn notspn actuallyspn necessary,spn inspn functionsspn whichspn dospn notspn needspn tospn accessspn theirspn parameters)spn startsspn byspn savingspn thespn valuespn ofspc ESPspn inspc EBPspn sospn asspn tospn bespn ablespn tospn usespc EBPspn asspn aspn basespn pointerspn tospn findspn itsspn parametersspn onspn thespn stack.spn However,spn thespn callerspn wasspn probablyspn doingspn thisspn too,spn sospn partspn ofspn thespn callingspn conventionspn statesspn thatspc EBPspn mustspn bespn preservedspn byspn anyspn Cspn function.spn Hencespn thespn callee,spn ifspn itspn isspn goingspn tospn setspn upspc EBPspn asspn aspi frame pointern framespn pointern ,spn mustspn pushspn thespn previousspn valuespn first.
bull
n Thespn calleespn mayspn thenspn accessspn itsspn parametersspn relativespn tospc EBPn .spn Thespn doublewordspn atspc [EBP]spn holdsspn thespn previousspn valuespn ofspc EBPspn asspn itspn wasspn pushed;spn thespn nextspn doubleword,spn atspc [EBP+4]n ,spn holdsspn thespn returnspn address,spn pushedspn implicitlyspn byspc CALLn .spn Thespn parametersspn startspn afterspn that,spn atspc [EBP+8]n .spn Thespn leftmostspn parameterspn ofspn thespn function,spn sincespn itspn wasspn pushedspn last,spn isspn accessiblespn atspn thisspn offsetspn fromspc EBPn ;spn thespn othersspn follow,spn atspn successivelyspn greaterspn offsets.spn Thus,spn inspn aspn functionspn suchspn asspc printfspn whichspn takesspn aspn variablespn numberspn ofspn parameters,spn thespn pushingspn ofspn thespn parametersspn inspn reversespn orderspn meansspn thatspn thespn functionspn knowsspn wherespn tospn findspn itsspn firstspn parameter,spn whichspn tellsspn itspn thespn numberspn andspn typespn ofspn thespn remainingspn ones.
bull
n Thespn calleespn mayspn alsospn wishspn tospn decreasespc ESPspn further,spn sospn asspn tospn allocatespn spacespn onspn thespn stackspn forspn localspn variables,spn whichspn willspn thenspn bespn accessiblespn atspn negativespn offsetsspn fromspc EBPn .
bull
n Thespn callee,spn ifspn itspn wishesspn tospn returnspn aspn valuespn tospn thespn caller,spn shouldspn leavespn thespn valuespn inspc ALn ,spc AXspn orspc EAXspn dependingspn onspn thespn sizespn ofspn thespn value.spn Floating-n pointspn resultsspn arespn typicallyspn returnedspn inspc ST0n .
bull
n Oncespn thespn calleespn hasspn finishedspn processing,spn itspn restoresspc ESPspn fromspc EBPspn ifspn itspn hadspn allocatedspn localspn stackspn space,spn thenspn popsspn thespn previousspn valuespn ofspc EBPn ,spn andspn returnsspn viaspc RETspn (equivalently,spc RETNn ).
bull
n Whenspn thespn callerspn regainsspn controlspn fromspn thespn callee,spn thespn functionspn parametersspn arespn stillspn onspn thespn stack,spn sospn itspn typicallyspn addsspn anspn immediatespn constantspn tospc ESPspn tospn removespn themspn (insteadspn ofspn executingspn aspn numberspn ofspn slowspc POPspn instructions).spn Thus,spn ifspn aspn functionspn isspn accidentallyspn calledspn withspn thespn wrongspn numberspn ofspn parametersspn duespn tospn aspn prototypespn mismatch,spn thespn stackspn willspn stillspn bespn returnedspn tospn aspn sensiblespn statespn sincespn thespn caller,spn whichspeoknowsspn howspn manyspn parametersspn itspn pushed,spn doesspn thespn removing.
norm
n Therespn isspn anspn alternativespn callingspn conventionspn usedspn byspn Win32spn programsspn forspn Windowsspn APIspn calls,spn andspn alsospn forspn functionsspn calledspeobyspn thespn Windowsspn APIspn suchspn asspn windowspn procedures:spn theyspn followspn whatspn Microsoftspn callsspn thespc __stdcallspn convention.spn Thisspn isspn slightlyspn closerspn tospn thespn Pascalspn convention,spn inspn thatspn thespn calleespn clearsspn thespn stackspn byspn passingspn aspn parameterspn tospn thespc RETspn instruction.spn However,spn thespn parametersspn arespn stillspn pushedspn inspn right-n to-n leftspn order.
norm
n Thus,spn youspn wouldspn definespn aspn functionspn inspn Cspn stylespn inspn thespn followingspn way:
code
global  _myfunc _myfunc:         push    ebp         mov     ebp,esp         sub     esp,0x40        ; 64 bytes of local stack space         mov     ebx,[ebp+8]     ; first parameter to function         ; some more code         leave                   ; mov esp,ebp / pop ebp         ret
norm
n Atspn thespn otherspn endspn ofspn thespn process,spn tospn callspn aspn Cspn functionspn fromspn yourspn assemblyspn code,spn youspn wouldspn dospn somethingspn likespn this:
code
extern  _printf         ; and then, further down...         push    dword [myint]   ; one of my integer variables         push    dword mystring  ; pointer into my data segment         call    _printf         add     esp,byte 8      ; `byte' saves space         ; then those data items... segment _DATA myint       dd   1234 mystring    db   'This number -> %d <- should be 1234',10,0
norm
n Thisspn piecespn ofspn codespn isspn thespn assemblyspn equivalentspn ofspn thespn Cspn code
code
    int myint = 1234;     printf("This number -> %d <- should be 1234\n", myint);
subh 10.1.3 :section-10.1.3
n Accessingspn Dataspn Items
norm
n Tospn getspn atspn thespn contentsspn ofspn Cspn variables,spn orspn tospn declarespn variablesspn whichspn Cspn canspn access,spn youspn needspn onlyspn declarespn thespn namesspn asspc GLOBALspn orspc EXTERNn .spn (Again,spn thespn namesspn requirespn leadingspn underscores,spn asspn statedspn inspx section-10.1.1n sectionspn 10.1.1xesection-10.1.1n .)spn Thus,spn aspn Cspn variablespn declaredspn asspc int ispn canspn bespn accessedspn fromspn assemblerspn as
code
          extern _i           mov eax,[_i]
norm
n Andspn tospn declarespn yourspn ownspn integerspn variablespn whichspn Cspn programsspn canspn accessspn asspc extern int jn ,spn youspn dospn thisspn (makingspn surespn youspn arespn assemblingspn inspn thespc _DATAspn segment,spn ifspn necessary):
code
          global _j _j        dd 0
norm
n Tospn accessspn aspn Cspn array,spn youspn needspn tospn knowspn thespn sizespn ofspn thespn componentsspn ofspn thespn array.spn Forspn example,spc intspn variablesspn arespn fourspn bytesspn long,spn sospn ifspn aspn Cspn programspn declaresspn anspn arrayspn asspc int a[10]n ,spn youspn canspn accessspc a[3]spn byspn codingspc mov ax,[_a+12]n .spn (Thespn bytespn offsetspn 12spn isspn obtainedspn byspn multiplyingspn thespn desiredspn arrayspn index,spn 3,spn byspn thespn sizespn ofspn thespn arrayspn element,spn 4.)spn Thespn sizesspn ofspn thespn Cspn basespn typesspn inspn 32-n bitspn compilersspn are:spn 1spn forspc charn ,spn 2spn forspc shortn ,spn 4spn forspc intn ,spc longspn andspc floatn ,spn andspn 8spn forspc doublen .spn Pointers,spn beingspn 32-n bitspn addresses,spn arespn alsospn 4spn bytesspn long.
norm
n Tospn accessspn aspn Cspi data structuren dataspn structuren ,spn youspn needspn tospn knowspn thespn offsetspn fromspn thespn basespn ofspn thespn structurespn tospn thespn fieldspn youspn arespn interestedspn in.spn Youspn canspn eitherspn dospn thisspn byspn convertingspn thespn Cspn structurespn definitionspn intospn aspn NASMspn structurespn definitionspn (usingspc STRUCn ),spn orspn byspn calculatingspn thespn onespn offsetspn andspn usingspn justspn that.
norm
n Tospn dospn eitherspn ofspn these,spn youspn shouldspn readspn yourspn Cspn compiler'sspn manualspn tospn findspn outspn howspn itspn organizesspn dataspn structures.spn NASMspn givesspn nospn specialspn alignmentspn tospn structurespn membersspn inspn itsspn ownspi STRUCc STRUCspn macro,spn sospn youspn havespn tospn specifyspn alignmentspn yourselfspn ifspn thespn Cspn compilerspn generatesspn it.spn Typically,spn youspn mightspn findspn thatspn aspn structurespn like
code
struct {     char c;     int i; } foo;
norm
n mightspn bespn eightspn bytesspn longspn ratherspn thanspn five,spn sincespn thespc intspn fieldspn wouldspn bespn alignedspn tospn aspn four-n bytespn boundary.spn However,spn thisspn sortspn ofspn featurespn isspn sometimesspn aspn configurablespn optionspn inspn thespn Cspn compiler,spn eitherspn usingspn command-n linespn optionsspn orspc #pragmaspn lines,spn sospn youspn havespn tospn findspn outspn howspn yourspn ownspn compilerspn doesspn it.
subh 10.1.4 :section-10.1.4
i c32.macc c32.macn :spn Helperspn Macrosspn forspn thespn 32-n bitspn Cspn Interface
norm
n Includedspn inspn thespn NASMspn archives,spn inspn thespi misc subdirectoryc miscspn directory,spn isspn aspn filespc c32.macspn ofspn macros.spn Itspn definesspn threespn macros:spi procc procn ,spi argc argspn andspi endprocc endprocn .spn Thesespn arespn intendedspn tospn bespn usedspn forspn C-n stylespn procedurespn definitions,spn andspn theyspn automatespn aspn lotspn ofspn thespn workspn involvedspn inspn keepingspn trackspn ofspn thespn callingspn convention.
norm
n Anspn examplespn ofspn anspn assemblyspn functionspn usingspn thespn macrospn setspn isspn givenspn here:
code
proc    _proc32 %$i     arg %$j     arg         mov     eax,[ebp + %$i]         mov     ebx,[ebp + %$j]         add     eax,[ebx] endproc
norm
n Thisspn definesspc _proc32spn tospn bespn aspn procedurespn takingspn twospn arguments,spn thespn firstspn (c in )spn anspn integerspn andspn thespn secondspn (c jn )spn aspn pointerspn tospn anspn integer.spn Itspn returnsspc i + *jn .
norm
n Notespn thatspn thespc argspn macrospn hasspn anspc EQUspn asspn thespn firstspn linespn ofspn itsspn expansion,spn andspn sincespn thespn labelspn beforespn thespn macrospn callspn getsspn prependedspn tospn thespn firstspn linespn ofspn thespn expandedspn macro,spn thespc EQUspn works,spn definingspc %$ispn tospn bespn anspn offsetspn fromspc BPn .spn Aspn context-n localspn variablespn isspn used,spn localspn tospn thespn contextspn pushedspn byspn thespc procspn macrospn andspn poppedspn byspn thespc endprocspn macro,spn sospn thatspn thespn samespn argumentspn namespn canspn bespn usedspn inspn laterspn procedures.spn Ofspn course,spn youspn don'tspeohavespn tospn dospn that.
norm
c argspn canspn takespn anspn optionalspn parameter,spn givingspn thespn sizespn ofspn thespn argument.spn Ifspn nospn sizespn isspn given,spn 4spn isspn assumed,spn sincespn itspn isspn likelyspn thatspn manyspn functionspn parametersspn willspn bespn ofspn typespc intspn orspn pointers.
head 10.2 :section-10.2
n Writingspn NetBSD/FreeBSD/OpenBSDspn andspn Linux/ELFspi shared librariesn Sharedspn Libraries
norm
c ELFspn replacedspn thespn olderspc a.outspn objectspn filespn formatspn underspn Linuxspn becausespn itspn containsspn supportspn forspi position-independent coden position-independentspn codespn (i picn PICn ),spn whichspn makesspn writingspn sharedspn librariesspn muchspn easier.spn NASMspn supportsspn thespc ELFspn position-n independentspn codespn features,spn sospn youspn canspn writespn Linuxspc ELFspn sharedspn librariesspn inspn NASM.
norm
i netbsdn NetBSDn ,spn andspn itsspn closespn cousinsspi freebsdn FreeBSDspn andspi openbsdn OpenBSDn ,spn takespn aspn differentspn approachspn byspn hackingspn PICspn supportspn intospn thespc a.outspn format.spn NASMspn supportsspn thisspn asspn thespi aoutbc aoutbspn outputspn format,spn sospn youspn canspn writespi bsdn BSDspn sharedspn librariesspn inspn NASMspn too.
norm
n Thespn operatingspn systemspn loadsspn aspn PICspn sharedspn libraryspn byspn memory-n mappingspn thespn libraryspn filespn atspn anspn arbitrarilyspn chosenspn pointspn inspn thespn addressspn spacespn ofspn thespn runningspn process.spn Thespn contentsspn ofspn thespn library'sspn codespn sectionspn mustspn thereforespn notspn dependspn onspn wherespn itspn isspn loadedspn inspn memory.
norm
n Therefore,spn youspn cannotspn getspn atspn yourspn variablesspn byspn writingspn codespn likespn this:
code
        mov     eax,[myvar]             ; WRONG
norm
n Instead,spn thespn linkerspn providesspn anspn areaspn ofspn memoryspn calledspn thespi global offset tableesglobalspe offsetspeetablen ,spn orspi gotn GOTn ;spn thespn GOTspn isspn situatedspn atspn aspn constantspn distancespn fromspn yourspn library'sspn code,spn sospn ifspn youspn canspn findspn outspn wherespn yourspn libraryspn isspn loadedspn (whichspn isspn typicallyspn donespn usingspn aspc CALLspn andspc POPspn combination),spn youspn canspn obtainspn thespn addressspn ofspn thespn GOT,spn andspn youspn canspn thenspn loadspn thespn addressesspn ofspn yourspn variablesspn outspn ofspn linker-n generatedspn entriesspn inspn thespn GOT.
norm
n Thespeodataspn sectionspn ofspn aspn PICspn sharedspn libraryspn doesspn notspn havespn thesespn restrictions:spn sincespn thespn dataspn sectionspn isspn writable,spn itspn hasspn tospn bespn copiedspn intospn memoryspn anywayspn ratherspn thanspn justspn pagedspn inspn fromspn thespn libraryspn file,spn sospn asspn longspn asspn it'sspn beingspn copiedspn itspn canspn bespn relocatedspn too.spn Sospn youspn canspn putspn ordinaryspn typesspn ofspn relocationspn inspn thespn dataspn sectionspn withoutspn toospn muchspn worryspn (butspn seespx section-10.2.4n sectionspn 10.2.4xesection-10.2.4spn forspn aspn caveat).
subh 10.2.1 :section-10.2.1
n Obtainingspn thespn Addressspn ofspn thespn GOT
norm
n Eachspn codespn modulespn inspn yourspn sharedspn libraryspn shouldspn definespn thespn GOTspn asspn anspn externalspn symbol:
code
extern  _GLOBAL_OFFSET_TABLE_   ; in ELF extern  __GLOBAL_OFFSET_TABLE_  ; in BSD a.out
norm
n Atspn thespn beginningspn ofspn anyspn functionspn inspn yourspn sharedspn libraryspn whichspn plansspn tospn accessspn yourspn dataspn orspn BSSspn sections,spn youspn mustspn firstspn calculatespn thespn addressspn ofspn thespn GOT.spn Thisspn isspn typicallyspn donespn byspn writingspn thespn functionspn inspn thisspn form:
code
func:   push    ebp         mov     ebp,esp         push    ebx         call    .get_GOT .get_GOT:         pop     ebx         add     ebx,_GLOBAL_OFFSET_TABLE_+$$-.get_GOT wrt ..gotpc         ; the function body comes here         mov     ebx,[ebp-4]         mov     esp,ebp         pop     ebp         ret
norm
n (Forspn BSD,spn again,spn thespn symbolspc _GLOBAL_OFFSET_TABLEspn requiresspn aspn secondspn leadingspn underscore.)
norm
n Thespn firstspn twospn linesspn ofspn thisspn functionspn arespn simplyspn thespn standardspn Cspn prologuespn tospn setspn upspn aspn stackspn frame,spn andspn thespn lastspn threespn linesspn arespn standardspn Cspn functionspn epilogue.spn Thespn thirdspn line,spn andspn thespn fourthspn tospn lastspn line,spn savespn andspn restorespn thespc EBXspn register,spn becausespn PICspn sharedspn librariesspn usespn thisspn registerspn tospn storespn thespn addressspn ofspn thespn GOT.
norm
n Thespn interestingspn bitspn isspn thespc CALLspn instructionspn andspn thespn followingspn twospn lines.spn Thespc CALLspn andspc POPspn combinationspn obtainsspn thespn addressspn ofspn thespn labelspc .get_GOTn ,spn withoutspn havingspn tospn knowspn inspn advancespn wherespn thespn programspn wasspn loadedspn (sincespn thespc CALLspn instructionspn isspn encodedspn relativespn tospn thespn currentspn position).spn Thespc ADDspn instructionspn makesspn usespn ofspn onespn ofspn thespn specialspn PICspn relocationspn types:spi gotpc relocationn GOTPCspn relocationn .spn Withspn thespi WRT ..gotpcc WRT ..gotpcspn qualifierspn specified,spn thespn symbolspn referencedspn (herespc _GLOBAL_OFFSET_TABLE_n ,spn thespn specialspn symbolspn assignedspn tospn thespn GOT)spn isspn givenspn asspn anspn offsetspn fromspn thespn beginningspn ofspn thespn section.spn (Actually,spc ELFspn encodesspn itspn asspn thespn offsetspn fromspn thespn operandspn fieldspn ofspn thespc ADDspn instruction,spn butspn NASMspn simplifiesspn thisspn deliberately,spn sospn youspn dospn thingsspn thespn samespn wayspn forspn bothspc ELFspn andspc BSDn .)spn Sospn thespn instructionspn thenspeoaddsspn thespn beginningspn ofspn thespn section,spn tospn getspn thespn realspn addressspn ofspn thespn GOT,spn andspn subtractsspn thespn valuespn ofspc .get_GOTspn whichspn itspn knowsspn isspn inspc EBXn .spn Therefore,spn byspn thespn timespn thatspn instructionspn hasspn finished,spc EBXspn containsspn thespn addressspn ofspn thespn GOT.
norm
n Ifspn youspn didn'tspn followspn that,spn don'tspn worry:spn it'sspn neverspn necessaryspn tospn obtainspn thespn addressspn ofspn thespn GOTspn byspn anyspn otherspn means,spn sospn youspn canspn putspn thosespn threespn instructionsspn intospn aspn macrospn andspn safelyspn ignorespn them:
code
%macro  get_GOT 0         call    %%getgot   %%getgot:         pop     ebx         add     ebx,_GLOBAL_OFFSET_TABLE_+$$-%%getgot wrt ..gotpc %endmacro
subh 10.2.2 :section-10.2.2
n Findingspn Yourspn Localspn Dataspn Items
norm
n Havingspn gotspn thespn GOT,spn youspn canspn thenspn usespn itspn tospn obtainspn thespn addressesspn ofspn yourspn dataspn items.spn Mostspn variablesspn willspn residespn inspn thespn sectionsspn youspn havespn declared;spn theyspn canspn bespn accessedspn usingspn thespi gotoff relocationc ..gotoffspn specialspi WRT ..gotoffc WRTspn type.spn Thespn wayspn thisspn worksspn isspn likespn this:
code
        lea     eax,[ebx+myvar wrt ..gotoff]
norm
n Thespn expressionspc myvar wrt ..gotoffspn isspn calculated,spn whenspn thespn sharedspn libraryspn isspn linked,spn tospn bespn thespn offsetspn tospn thespn localspn variablespc myvarspn fromspn thespn beginningspn ofspn thespn GOT.spn Therefore,spn addingspn itspn tospc EBXspn asspn abovespn willspn placespn thespn realspn addressspn ofspc myvarspn inspc EAXn .
norm
n Ifspn youspn declarespn variablesspn asspc GLOBALspn withoutspn specifyingspn aspn sizespn forspn them,spn theyspn arespn sharedspn betweenspn codespn modulesspn inspn thespn library,spn butspn dospn notspn getspn exportedspn fromspn thespn libraryspn tospn thespn programspn thatspn loadedspn it.spn Theyspn willspn stillspn bespn inspn yourspn ordinaryspn dataspn andspn BSSspn sections,spn sospn youspn canspn accessspn themspn inspn thespn samespn wayspn asspn localspn variables,spn usingspn thespn abovespc ..gotoffspn mechanism.
norm
n Notespn thatspn duespn tospn aspn peculiarityspn ofspn thespn wayspn BSDspc a.outspn formatspn handlesspn thisspn relocationspn type,spn therespn mustspn bespn atspn leastspn onespn non-n localspn symbolspn inspn thespn samespn sectionspn asspn thespn addressspn you'respn tryingspn tospn access.
subh 10.2.3 :section-10.2.3
n Findingspn Externalspn andspn Commonspn Dataspn Items
norm
n Ifspn yourspn libraryspn needsspn tospn getspn atspn anspn externalspn variablespn (externalspn tospn thespeolibraryn ,spn notspn justspn tospn onespn ofspn thespn modulesspn withinspn it),spn youspn mustspn usespn thespi got relocationsi WRT ..gotc ..gotspn typespn tospn getspn atspn it.spn Thespc ..gotspn type,spn insteadspn ofspn givingspn youspn thespn offsetspn fromspn thespn GOTspn basespn tospn thespn variable,spn givesspn youspn thespn offsetspn fromspn thespn GOTspn basespn tospn aspn GOTspeoentryspn containingspn thespn addressspn ofspn thespn variable.spn Thespn linkerspn willspn setspn upspn thisspn GOTspn entryspn whenspn itspn buildsspn thespn library,spn andspn thespn dynamicspn linkerspn willspn placespn thespn correctspn addressspn inspn itspn atspn loadspn time.spn Sospn tospn obtainspn thespn addressspn ofspn anspn externalspn variablespc extvarspn inspc EAXn ,spn youspn wouldspn code
code
        mov     eax,[ebx+extvar wrt ..got]
norm
n Thisspn loadsspn thespn addressspn ofspc extvarspn outspn ofspn anspn entryspn inspn thespn GOT.spn Thespn linker,spn whenspn itspn buildsspn thespn sharedspn library,spn collectsspn togetherspn everyspn relocationspn ofspn typespc ..gotn ,spn andspn buildsspn thespn GOTspn sospn asspn tospn ensurespn itspn hasspn everyspn necessaryspn entryspn present.
norm
n Commonspn variablesspn mustspn alsospn bespn accessedspn inspn thisspn way.
subh 10.2.4 :section-10.2.4
n Exportingspn Symbolsspn tospn thespn Libraryspn User
norm
n Ifspn youspn wantspn tospn exportspn symbolsspn tospn thespn userspn ofspn thespn library,spn youspn havespn tospn declarespn whetherspn theyspn arespn functionsspn orspn data,spn andspn ifspn theyspn arespn data,spn youspn havespn tospn givespn thespn sizespn ofspn thespn dataspn item.spn Thisspn isspn becausespn thespn dynamicspn linkerspn hasspn tospn buildspi plti procedure linkage tablen procedurespn linkagespn tablespn entriesspn forspn anyspn exportedspn functions,spn andspn alsospn movesspn exportedspn dataspn itemsspn awayspn fromspn thespn library'sspn dataspn sectionspn inspn whichspn theyspn werespn declared.
norm
n Sospn tospn exportspn aspn functionspn tospn usersspn ofspn thespn library,spn youspn mustspn use
code
global  func:function           ; declare it as a function func:   push    ebp         ; etc.
norm
n Andspn tospn exportspn aspn dataspn itemspn suchspn asspn anspn array,spn youspn wouldspn havespn tospn code
code
global  array:data array.end-array      ; give the size too array:  resd    128 .end:
norm
n Bespn careful:spn Ifspn youspn exportspn aspn variablespn tospn thespn libraryspn user,spn byspn declaringspn itspn asspc GLOBALspn andspn supplyingspn aspn size,spn thespn variablespn willspn endspn upspn livingspn inspn thespn dataspn sectionspn ofspn thespn mainspn program,spn ratherspn thanspn inspn yourspn library'sspn dataspn section,spn wherespn youspn declaredspn it.spn Sospn youspn willspn havespn tospn accessspn yourspn ownspn globalspn variablespn withspn thespc ..gotspn mechanismspn ratherspn thanspc ..gotoffn ,spn asspn ifspn itspn werespn externalspn (which,spn effectively,spn itspn hasspn become).
norm
n Equally,spn ifspn youspn needspn tospn storespn thespn addressspn ofspn anspn exportedspn globalspn inspn onespn ofspn yourspn dataspn sections,spn youspn can'tspn dospn itspn byspn meansspn ofspn thespn standardspn sortspn ofspn code:
code
dataptr:        dd      global_data_item        ; WRONG
norm
n NASMspn willspn interpretspn thisspn codespn asspn anspn ordinaryspn relocation,spn inspn whichspc global_data_itemspn isspn merelyspn anspn offsetspn fromspn thespn beginningspn ofspn thespc .dataspn sectionspn (orspn whatever);spn sospn thisspn referencespn willspn endspn upspn pointingspn atspn yourspn dataspn sectionspn insteadspn ofspn atspn thespn exportedspn globalspn whichspn residesspn elsewhere.
norm
n Insteadspn ofspn thespn abovespn code,spn then,spn youspn mustspn write
code
dataptr:        dd      global_data_item wrt ..sym
norm
n whichspn makesspn usespn ofspn thespn specialspc WRTspn typespi WRT ..symc ..symspn tospn instructspn NASMspn tospn searchspn thespn symbolspn tablespn forspn aspn particularspn symbolspn atspn thatspn address,spn ratherspn thanspn justspn relocatingspn byspn sectionspn base.
norm
n Eitherspn methodspn willspn workspn forspn functions:spn referringspn tospn onespn ofspn yourspn functionsspn byspn meansspn of
code
funcptr:        dd      my_function
norm
n willspn givespn thespn userspn thespn addressspn ofspn thespn codespn youspn wrote,spn whereas
code
funcptr:        dd      my_function wrt ..sym
norm
n willspn givespn thespn addressspn ofspn thespn procedurespn linkagespn tablespn forspn thespn function,spn whichspn isspn wherespn thespn callingspn programspn willspeobelievespn thespn functionspn lives.spn Eitherspn addressspn isspn aspn validspn wayspn tospn callspn thespn function.
subh 10.2.5 :section-10.2.5
n Callingspn Proceduresspn Outsidespn thespn Library
norm
n Callingspn proceduresspn outsidespn yourspn sharedspn libraryspn hasspn tospn bespn donespn byspn meansspn ofspn aspi procedure linkage tableesprocedurespe linkagespeetablen ,spn orspi pltn PLTn .spn Thespn PLTspn isspn placedspn atspn aspn knownspn offsetspn fromspn wherespn thespn libraryspn isspn loaded,spn sospn thespn libraryspn codespn canspn makespn callsspn tospn thespn PLTspn inspn aspn position-n independentspn way.spn Withinspn thespn PLTspn therespn isspn codespn tospn jumpspn tospn offsetsspn containedspn inspn thespn GOT,spn sospn functionspn callsspn tospn otherspn sharedspn librariesspn orspn tospn routinesspn inspn thespn mainspn programspn canspn bespn transparentlyspn passedspn offspn tospn theirspn realspn destinations.
norm
n Tospn callspn anspn externalspn routine,spn youspn mustspn usespn anotherspn specialspn PICspn relocationspn type,spi plt relocationsi WRT ..pltc WRT ..pltn .spn Thisspn isspn muchspn easierspn thanspn thespn GOT-n basedspn ones:spn youspn simplyspn replacespn callsspn suchspn asspc CALL printfspn withspn thespn PLT-n relativespn versionspc CALL printf WRT ..pltn .
subh 10.2.6 :section-10.2.6
n Generatingspn thespn Libraryspn File
norm
n Havingspn writtenspn somespn codespn modulesspn andspn assembledspn themspn tospc .ospn files,spn youspn thenspn generatespn yourspn sharedspn libraryspn withspn aspn commandspn suchspn as
code
ld -shared -o library.so module1.o module2.o       # for ELF ld -Bshareable -o library.so module1.o module2.o   # for BSD
norm
n Forspn ELF,spn ifspn yourspn sharedspn libraryspn isspn goingspn tospn residespn inspn systemspn directoriesspn suchspn asspc /usr/libspn orspc /libn ,spn itspn isspn usuallyspn worthspn usingspn thespi -sonamec -sonamespn flagspn tospn thespn linker,spn tospn storespn thespn finalspn libraryspn filespn name,spn withspn aspn versionspn number,spn intospn thespn library:
code
ld -shared -soname library.so.1 -o library.so.1.2 *.o
norm
n Youspn wouldspn thenspn copyspc library.so.1.2spn intospn thespn libraryspn directory,spn andspn createspc library.so.1spn asspn aspn symbolicspn linkspn tospn it.
chap 11 :chapter-11
n Mixingspn 16-spn andspn 32-n bitspn Code
norm
n Thisspn chapterspn triesspn tospn coverspn somespn ofspn thespn issues,spn largelyspn relatedspn tospn unusualspn formsspn ofspn addressingspn andspn jumpspn instructions,spn encounteredspn whenspn writingspn operatingspn systemspn codespn suchspn asspn protected-n modespn initializationspn routines,spn whichspn requirespn codespn thatspn operatesspn inspn mixedspn segmentspn sizes,spn suchspn asspn codespn inspn aspn 16-n bitspn segmentspn tryingspn tospn modifyspn dataspn inspn aspn 32-n bitspn one,spn orspn jumpsspn betweenspn different-n sizespn segments.
head 11.1 :section-11.1
n Mixed-n Sizespn Jumpsi jumps, mixed-size
norm
i operating system, writingi writing operating systemsn Thespn mostspn commonspn formspn ofspi mixed-size instructionn mixed-sizespn instructionspn isspn thespn onespn usedspn whenspn writingspn aspn 32-n bitspn OS:spn havingspn donespn yourspn setupspn inspn 16-n bitspn mode,spn suchspn asspn loadingspn thespn kernel,spn youspn thenspn havespn tospn bootspn itspn byspn switchingspn intospn protectedspn modespn andspn jumpingspn tospn thespn 32-n bitspn kernelspn startspn address.spn Inspn aspn fullyspn 32-n bitspn OS,spn thisspn tendsspn tospn bespn thespeoonlyspn mixed-n sizespn instructionspn youspn need,spn sincespn everythingspn beforespn itspn canspn bespn donespn inspn purespn 16-n bitspn code,spn andspn everythingspn afterspn itspn canspn bespn purespn 32-n bit.
norm
n Thisspn jumpspn mustspn specifyspn aspn 48-n bitspn farspn address,spn sincespn thespn targetspn segmentspn isspn aspn 32-n bitspn one.spn However,spn itspn mustspn bespn assembledspn inspn aspn 16-n bitspn segment,spn sospn justspn coding,spn forspn example,
code
        jmp     0x1234:0x56789ABC       ; wrong!
norm
n willspn notspn work,spn sincespn thespn offsetspn partspn ofspn thespn addressspn willspn bespn truncatedspn tospc 0x9ABCspn andspn thespn jumpspn willspn bespn anspn ordinaryspn 16-n bitspn farspn one.
norm
n Thespn Linuxspn kernelspn setupspn codespn getsspn roundspn thespn inabilityspn ofspc as86spn tospn generatespn thespn requiredspn instructionspn byspn codingspn itspn manually,spn usingspc DBspn instructions.spn NASMspn canspn gospn onespn betterspn thanspn that,spn byspn actuallyspn generatingspn thespn rightspn instructionspn itself.spn Here'sspn howspn tospn dospn itspn right:
code
        jmp     dword 0x1234:0x56789ABC         ; right
norm
i JMP DWORDn Thespc DWORDspn prefixspn (strictlyspn speaking,spn itspn shouldspn comespeoafterspn thespn colon,spn sincespn itspn isspn declaringspn thespeooffsetspn fieldspn tospn bespn aspn doubleword;spn butspn NASMspn willspn acceptspn eitherspn form,spn sincespn bothspn arespn unambiguous)spn forcesspn thespn offsetspn partspn tospn bespn treatedspn asspn far,spn inspn thespn assumptionspn thatspn youspn arespn deliberatelyspn writingspn aspn jumpspn fromspn aspn 16-n bitspn segmentspn tospn aspn 32-n bitspn one.
norm
n Youspn canspn dospn thespn reversespn operation,spn jumpingspn fromspn aspn 32-n bitspn segmentspn tospn aspn 16-n bitspn one,spn byspn meansspn ofspn thespc WORDspn prefix:
code
        jmp     word 0x8765:0x4321      ; 32 to 16 bit
norm
n Ifspn thespc WORDspn prefixspn isspn specifiedspn inspn 16-n bitspn mode,spn orspn thespc DWORDspn prefixspn inspn 32-n bitspn mode,spn theyspn willspn bespn ignored,spn sincespn eachspn isspn explicitlyspn forcingspn NASMspn intospn aspn modespn itspn wasspn inspn anyway.
head 11.2 :section-11.2
n Addressingspn Betweenspn Different-n Sizespn Segmentsi addressing, mixed-sizei mixed-size addressing
norm
n Ifspn yourspn OSspn isspn mixedspn 16spn andspn 32-n bit,spn orspn ifspn youspn arespn writingspn aspn DOSspn extender,spn youspn arespn likelyspn tospn havespn tospn dealspn withspn somespn 16-n bitspn segmentsspn andspn somespn 32-n bitspn ones.spn Atspn somespn point,spn youspn willspn probablyspn endspn upspn writingspn codespn inspn aspn 16-n bitspn segmentspn whichspn hasspn tospn accessspn dataspn inspn aspn 32-n bitspn segment,spn orspn vicespn versa.
norm
n Ifspn thespn dataspn youspn arespn tryingspn tospn accessspn inspn aspn 32-n bitspn segmentspn liesspn withinspn thespn firstspn 64Kspn ofspn thespn segment,spn youspn mayspn bespn ablespn tospn getspn awayspn withspn usingspn anspn ordinaryspn 16-n bitspn addressingspn operationspn forspn thespn purpose;spn butspn soonerspn orspn later,spn youspn willspn wantspn tospn dospn 32-n bitspn addressingspn fromspn 16-n bitspn mode.
norm
n Thespn easiestspn wayspn tospn dospn thisspn isspn tospn makespn surespn youspn usespn aspn registerspn forspn thespn address,spn sincespn anyspn effectivespn addressspn containingspn aspn 32-n bitspn registerspn isspn forcedspn tospn bespn aspn 32-n bitspn address.spn Sospn youspn canspn do
code
        mov     eax,offset_into_32_bit_segment_specified_by_fs         mov     dword [fs:eax],0x11223344
norm
n Thisspn isspn fine,spn butspn slightlyspn cumbersomespn (sincespn itspn wastesspn anspn instructionspn andspn aspn register)spn ifspn youspn alreadyspn knowspn thespn precisespn offsetspn youspn arespn aimingspn at.spn Thespn x86spn architecturespn doesspn allowspn 32-n bitspn effectivespn addressesspn tospn specifyspn nothingspn butspn aspn 4-n bytespn offset,spn sospn whyspn shouldn'tspn NASMspn bespn ablespn tospn generatespn thespn bestspn instructionspn forspn thespn purpose?
norm
n Itspn can.spn Asspn inspx section-11.1n sectionspn 11.1xesection-11.1n ,spn youspn needspn onlyspn prefixspn thespn addressspn withspn thespc DWORDspn keyword,spn andspn itspn willspn bespn forcedspn tospn bespn aspn 32-n bitspn address:
code
        mov     dword [fs:dword my_offset],0x11223344
norm
n Alsospn asspn inspx section-11.1n sectionspn 11.1xesection-11.1n ,spn NASMspn isspn notspn fussyspn aboutspn whetherspn thespc DWORDspn prefixspn comesspn beforespn orspn afterspn thespn segmentspn override,spn sospn arguablyspn aspn nicer-n lookingspn wayspn tospn codespn thespn abovespn instructionspn is
code
        mov     dword [dword fs:my_offset],0x11223344
norm
n Don'tspn confusespn thespc DWORDspn prefixspeooutsidespn thespn squarespn brackets,spn whichspn controlsspn thespn sizespn ofspn thespn dataspn storedspn atspn thespn address,spn withspn thespn onespc insidespn thespn squarespn bracketsspn whichspn controlsspn thespn lengthspn ofspn thespn addressspn itself.spn Thespn twospn canspn quitespn easilyspn bespn different:
code
        mov     word [dword 0x12345678],0x9ABC
norm
n Thisspn movesspn 16spn bitsspn ofspn dataspn tospn anspn addressspn specifiedspn byspn aspn 32-n bitspn offset.
norm
n Youspn canspn alsospn specifyspc WORDspn orspc DWORDspn prefixesspn alongspn withspn thespc FARspn prefixspn tospn indirectspn farspn jumpsspn orspn calls.spn Forspn example:
code
        call    dword far [fs:word 0x4321]
norm
n Thisspn instructionspn containsspn anspn addressspn specifiedspn byspn aspn 16-n bitspn offset;spn itspn loadsspn aspn 48-n bitspn farspn pointerspn fromspn thatspn (16-n bitspn segmentspn andspn 32-n bitspn offset),spn andspn callsspn thatspn address.
head 11.3 :section-11.3
n Otherspn Mixed-n Sizespn Instructions
norm
n Thespn otherspn wayspn youspn mightspn wantspn tospn accessspn dataspn mightspn bespn usingspn thespn stringspn instructionsspn (c LODSxn ,spc STOSxspn andspn sospn on)spn orspn thespc XLATBspn instruction.spn Thesespn instructions,spn sincespn theyspn takespn nospn parameters,spn mightspn seemspn tospn havespn nospn easyspn wayspn tospn makespn themspn performspn 32-n bitspn addressingspn whenspn assembledspn inspn aspn 16-n bitspn segment.
norm
n Thisspn isspn thespn purposespn ofspn NASM'sspi a16c a16n ,spi a32c a32spn andspi a64c a64spn prefixes.spn Ifspn youspn arespn codingspc LODSBspn inspn aspn 16-n bitspn segmentspn butspn itspn isspn supposedspn tospn bespn accessingspn aspn stringspn inspn aspn 32-n bitspn segment,spn youspn shouldspn loadspn thespn desiredspn addressspn intospc ESIspn andspn thenspn code
code
        a32     lodsb
norm
n Thespn prefixspn forcesspn thespn addressingspn sizespn tospn 32spn bits,spn meaningspn thatspc LODSBspn loadsspn fromspc [DS:ESI]spn insteadspn ofspc [DS:SI]n .spn Tospn accessspn aspn stringspn inspn aspn 16-n bitspn segmentspn whenspn codingspn inspn aspn 32-n bitspn one,spn thespn correspondingspc a16spn prefixspn canspn bespn used.
norm
n Thespc a16n ,spc a32spn andspc a64spn prefixesspn canspn bespn appliedspn tospn anyspn instructionspn inspn NASM'sspn instructionspn table,spn butspn mostspn ofspn themspn canspn generatespn allspn thespn usefulspn formsspn withoutspn them.spn Thespn prefixesspn arespn necessaryspn onlyspn forspn instructionsspn withspn implicitspn addressing:spc CMPSxn ,spc SCASxn ,spc LODSxn ,spc STOSxn ,spc MOVSxn ,spc INSxn ,spc OUTSxn ,spn andspc XLATBn .spn Also,spn thespn variousspn pushspn andspn popspn instructionsspn (c PUSHAspn andspc POPFspn asspn wellspn asspn thespn morespn usualspc PUSHspn andspc POPn )spn canspn acceptspc a16n ,spc a32spn orspc a64spn prefixesspn tospn forcespn aspn particularspn onespn ofspc SPn ,spc ESPspn orspc RSPspn tospn bespn usedspn asspn aspn stackspn pointer,spn inspn casespn thespn stackspn segmentspn inspn usespn isspn aspn differentspn sizespn fromspn thespn codespn segment.
norm
c PUSHspn andspc POPn ,spn whenspn appliedspn tospn segmentspn registersspn inspn 32-n bitspn mode,spn alsospn havespn thespn slightlyspn oddspn behaviourspn thatspn theyspn pushspn andspn popspn 4spn bytesspn atspn aspn time,spn ofspn whichspn thespn topspn twospn arespn ignoredspn andspn thespn bottomspn twospn givespn thespn valuespn ofspn thespn segmentspn registerspn beingspn manipulated.spn Tospn forcespn thespn 16-n bitspn behaviourspn ofspn segment-n registerspn pushspn andspn popspn instructions,spn youspn canspn usespn thespn operand-n sizespn prefixspi o16c o16n :
code
        o16 push    ss         o16 push    ds
norm
n Thisspn codespn savesspn aspn doublewordspn ofspn stackspn spacespn byspn fittingspn twospn segmentspn registersspn intospn thespn spacespn whichspn wouldspn normallyspn bespn consumedspn byspn pushingspn one.
norm
n (Youspn canspn alsospn usespn thespi o32c o32spn prefixspn tospn forcespn thespn 32-n bitspn behaviourspn whenspn inspn 16-n bitspn mode,spn butspn thisspn seemsspn lessspn useful.)
chap 12 :chapter-12
n Writingspn 64-n bitspn Codespn (Unix,spn Win64)
norm
n Thisspn chapterspn attemptsspn tospn coverspn somespn ofspn thespn commonspn issuesspn involvedspn whenspn writingspn 64-n bitspn code,spn tospn runspn underspi win64n Win64spn orspn Unix.spn Itspn coversspn howspn tospn writespn assemblyspn codespn tospn interfacespn withspn 64-n bitspn Cspn routines,spn andspn howspn tospn writespn position-n independentspn codespn forspn sharedspn libraries.
norm
n Allspn 64-n bitspn codespn usesspn aspn flatspn memoryspn model,spn sincespn segmentationspn isspn notspn availablespn inspn 64-n bitspn mode.spn Thespn onespn exceptionspn isspn thespc FSspn andspc GSspn registers,spn whichspn stillspn addspn theirspn bases.
norm
n Positionspn independencespn inspn 64-n bitspn modespn isspn significantlyspn simpler,spn sincespn thespn processorspn supportsspc RIPdan relativespn addressingspn directly;spn seespn thespc RELspn keywordspn (x section-3.3n sectionspn 3.3xesection-3.3n ).spn Onspn mostspn 64-n bitspn platforms,spn itspn isspn probablyspn desirablespn tospn makespn thatspn thespn default,spn usingspn thespn directivespc DEFAULT RELspn (x section-7.2n sectionspn 7.2xesection-7.2n ).
norm
n 64-n bitspn programmingspn isspn relativelyspn similarspn tospn 32-n bitspn programming,spn butspn ofspn coursespn pointersspn arespn 64spn bitsspn long;spn additionally,spn allspn existingspn platformsspn passspn argumentsspn inspn registersspn ratherspn thanspn onspn thespn stack.spn Furthermore,spn 64-n bitspn platformsspn usespn SSE2spn byspn defaultspn forspn floatingspn point.spn Pleasespn seespn thespn ABIspn documentationspn forspn yourspn platform.
norm
n 64-n bitspn platformsspn differspn inspn thespn sizesspn ofspn thespn C/C++spn fundamentalspn datatypes,spn notspn justspn fromspn 32-n bitspn platformsspn butspn fromspn eachspn other.spn Ifspn aspn specificspn sizespn dataspn typespn isspn desired,spn itspn isspn probablyspn bestspn tospn usespn thespn typesspn definedspn inspn thespn standardspn Cspn headerspc <inttypes.h>n .
norm
n Allspn knownspn 64-n bitspn platformsspn exceptspn somespn embeddedspn platformsspn requirespn thatspn thespn stackspn isspn 16-n bytespn alignedspn atspn thespn entryspn tospn aspn function.spn Inspn orderspn tospn enforcespn that,spn thespn stackspn pointerspn (c RSPn )spn needsspn tospn bespn alignedspn onspn anspc oddspn multiplespn ofspn 8spn bytesspn beforespn thespc CALLspn instruction.
norm
n Inspn 64-n bitspn mode,spn thespn defaultspn instructionspn sizespn isspn stillspn 32spn bits.spn Whenspn loadingspn aspn valuespn intospn aspn 32-n bitspn registerspn (butspn notspn anspn 8-spn orspn 16-n bitspn register),spn thespn upperspn 32spn bitsspn ofspn thespn correspondingspn 64-n bitspn registerspn arespn setspn tospn zero.
head 12.1 :section-12.1
n Registerspn Namesspn inspn 64-n bitspn Mode
norm
n NASMspn usesspn thespn followingspn namesspn forspn general-n purposespn registersspn inspn 64-n bitspn mode,spn forspn 8-n ,spn 16-n ,spn 32-spn andspn 64-n bitspn references,spn respectively:
code
     AL/AH, CL/CH, DL/DH, BL/BH, SPL, BPL, SIL, DIL, R8B-R15B      AX, CX, DX, BX, SP, BP, SI, DI, R8W-R15W      EAX, ECX, EDX, EBX, ESP, EBP, ESI, EDI, R8D-R15D      RAX, RCX, RDX, RBX, RSP, RBP, RSI, RDI, R8-R15
norm
n Thisspn isspn consistentspn withspn thespn AMDspn documentationspn andspn mostspn otherspn assemblers.spn Thespn Intelspn documentation,spn however,spn usesspn thespn namesspc R8L-R15Lspn forspn 8-n bitspn referencesspn tospn thespn higherspn registers.spn Itspn isspn possiblespn tospn usespn thosespn namesspn byspn definitingspn themspn asspn macros;spn similarly,spn ifspn onespn wantsspn tospn usespn numericspn namesspn forspn thespn lowspn 8spn registers,spn definespn themspn asspn macros.spn Thespn standardspn macrospn packagespc altregspn (seespx section-6.1n sectionspn 6.1xesection-6.1n )spn canspn bespn usedspn forspn thisspn purpose.
head 12.2 :section-12.2
n Immediatesspn andspn Displacementsspn inspn 64-n bitspn Mode
norm
n Inspn 64-n bitspn mode,spn immediatesspn andspn displacementsspn arespn generallyspn onlyspn 32spn bitsspn wide.spn NASMspn willspn thereforespn truncatespn mostspn displacementsspn andspn immediatesspn tospn 32spn bits.
norm
n Thespn onlyspn instructionspn whichspn takesspn aspn fullspi 64-bit immediaten 64-bitspn immediatespn is:
code
     MOV reg64,imm64
norm
n NASMspn willspn producespn thisspn instructionspn wheneverspn thespn programmerspn usesspc MOVspn withspn anspn immediatespn intospn aspn 64-n bitspn register.spn Ifspn thisspn isspn notspn desirable,spn simplyspn specifyspn thespn equivalentspn 32-n bitspn register,spn whichspn willspn bespn automaticallyspn zero-n extendedspn byspn thespn processor,spn orspn specifyspn thespn immediatespn asspc DWORDn :
code
     mov rax,foo             ; 64-bit immediate      mov rax,qword foo       ; (identical)      mov eax,foo             ; 32-bit immediate, zero-extended      mov rax,dword foo       ; 32-bit immediate, sign-extended
norm
n Thespn lengthspn ofspn thesespn instructionsspn arespn 10,spn 5spn andspn 7spn bytes,spn respectively.
norm
n Ifspn optimizationspn isspn enabledspn andspn NASMspn canspn determinespn atspn assemblyspn timespn thatspn aspn shorterspn instructionspn willspn suffice,spn thespn shorterspn instructionspn willspn bespn emittedspn unlessspn ofspn coursespc STRICT QWORDspn orspc STRICT DWORDspn isspn specifiedspn (seespx section-3.7n sectionspn 3.7xesection-3.7n ):
code
     mov rax,1               ; Assembles as "mov eax,1" (5 bytes)      mov rax,strict qword 1  ; Full 10-byte instruction      mov rax,strict dword 1  ; 7-byte instruction      mov rax,symbol          ; 10 bytes, not known at assembly time      lea rax,[rel symbol]    ; 7 bytes, usually preferred by the ABI
norm
n Notespn thatspc lea rax,[rel symbol]spn isspn position-n independent,spn whereasspc mov rax,symbolspn isspn not.spn Mostspn ABIsspn preferspn orspn evenspn requirespn position-n independentspn codespn inspn 64-n bitspn mode.spn However,spn thespc MOVspn instructionspn isspn ablespn tospn referencespn aspn symbolspn anywherespn inspn thespn 64-n bitspn addressspn space,spn whereasspc LEAspn isspn onlyspn ablespn tospn accessspn aspn symbolspn withinspn withinspn 2spn GBspn ofspn thespn instructionspn itselfspn (seespn below.)
norm
n Thespn onlyspn instructionsspn whichspn takespn aspn fullspi 64-bit displacementn 64-n bitspeodisplacementspn isspn loadingspn orspn storing,spn usingspc MOVn ,spc ALn ,spc AXn ,spc EAXspn orspc RAXspn (butspn nospn otherspn registers)spn tospn anspn absolutespn 64-n bitspn address.spn Sincespn thisspn isspn aspn relativelyspn rarelyspn usedspn instructionspn (64-n bitspn codespn generallyspn usesspn relativespn addressing),spn thespn programmerspn hasspn tospn explicitlyspn declarespn thespn displacementspn sizespn asspc ABS QWORDn :
code
     default abs      mov eax,[foo]           ; 32-bit absolute disp, sign-extended      mov eax,[a32 foo]       ; 32-bit absolute disp, zero-extended      mov eax,[qword foo]     ; 64-bit absolute disp      default rel      mov eax,[foo]           ; 32-bit relative disp      mov eax,[a32 foo]       ; d:o, address truncated to 32 bits(!)      mov eax,[qword foo]     ; error      mov eax,[abs qword foo] ; 64-bit absolute disp
norm
n Aspn sign-n extendedspn absolutespn displacementspn canspn accessspn fromspdan 2spn GBspn tospn +2spn GB;spn aspn zero-n extendedspn absolutespn displacementspn canspn accessspn fromspn 0spn tospn 4spn GB.
head 12.3 :section-12.3
n Interfacingspn tospn 64-n bitspn Cspn Programsspn (Unix)
norm
n Onspn Unix,spn thespn 64-n bitspn ABIspn asspn wellspn asspn thespn x32spn ABIspn (32-n bitspn ABIspn withspn thespn CPUspn inspn 64-n bitspn mode)spn isspn definedspn byspn thespn documentsspn at:
norm
wc<http://www.nasm.us/abi/unix64>http://www.nasm.us/abi/unix64
norm
n Althoughspn writtenspn forspn AT&T-n syntaxspn assembly,spn thespn conceptsspn applyspn equallyspn wellspn forspn NASM-n stylespn assembly.spn Whatspn followsspn isspn aspn simplifiedspn summary.
norm
n Thespn firstspn sixspn integerspn argumentsspn (fromspn thespn left)spn arespn passedspn inspc RDIn ,spc RSIn ,spc RDXn ,spc RCXn ,spc R8n ,spn andspc R9n ,spn inspn thatspn order.spn Additionalspn integerspn argumentsspn arespn passedspn onspn thespn stack.spn Thesespn registers,spn plusspc RAXn ,spc R10spn andspc R11spn arespn destroyedspn byspn functionspn calls,spn andspn thusspn arespn availablespn forspn usespn byspn thespn functionspn withoutspn saving.
norm
n Integerspn returnspn valuesspn arespn passedspn inspc RAXspn andspc RDXn ,spn inspn thatspn order.
norm
n Floatingspn pointspn isspn donespn usingspn SSEspn registers,spn exceptspn forspc long doublen ,spn whichspn isspn 80spn bitsspn (c TWORDn )spn onspn mostspn platformsspn (Androidspn isspn onespn exception;spn therespc long doublespn isspn 64spn bitsspn andspn treatedspn thespn samespn asspc doublen .)spn Floating-n pointspn argumentsspn arespn passedspn inspc XMM0spn tospc XMM7n ;spn returnspn isspc XMM0spn andspc XMM1n .spc long doublespn arespn passedspn onspn thespn stack,spn andspn returnedspn inspc ST0spn andspc ST1n .
norm
n Allspn SSEspn andspn x87spn registersspn arespn destroyedspn byspn functionspn calls.
norm
n Onspn 64-n bitspn Unix,spc longspn isspn 64spn bits.
norm
n Integerspn andspn SSEspn registerspn argumentsspn arespn countedspn separately,spn sospn forspn thespn casespn of
code
     void foo(long a, double b, int c)
norm
c aspn isspn passedspn inspc RDIn ,spc bspn inspc XMM0n ,spn andspc cspn inspc ESIn .
head 12.4 :section-12.4
n Interfacingspn tospn 64-n bitspn Cspn Programsspn (Win64)
norm
n Thespn Win64spn ABIspn isspn describedspn byspn thespn documentspn at:
norm
wc<http://www.nasm.us/abi/win64>http://www.nasm.us/abi/win64
norm
n Whatspn followsspn isspn aspn simplifiedspn summary.
norm
n Thespn firstspn fourspn integerspn argumentsspn arespn passedspn inspc RCXn ,spc RDXn ,spc R8spn andspc R9n ,spn inspn thatspn order.spn Additionalspn integerspn argumentsspn arespn passedspn onspn thespn stack.spn Thesespn registers,spn plusspc RAXn ,spc R10spn andspc R11spn arespn destroyedspn byspn functionspn calls,spn andspn thusspn arespn availablespn forspn usespn byspn thespn functionspn withoutspn saving.
norm
n Integerspn returnspn valuesspn arespn passedspn inspc RAXspn only.
norm
n Floatingspn pointspn isspn donespn usingspn SSEspn registers,spn exceptspn forspc long doublen .spn Floating-n pointspn argumentsspn arespn passedspn inspc XMM0spn tospc XMM3n ;spn returnspn isspc XMM0spn only.
norm
n Onspn Win64,spc longspn isspn 32spn bits;spc long longspn orspc _int64spn isspn 64spn bits.
norm
n Integerspn andspn SSEspn registerspn argumentsspn arespn countedspn together,spn sospn forspn thespn casespn of
code
     void foo(long long a, double b, int c)
norm
c aspn isspn passedspn inspc RCXn ,spc bspn inspc XMM1n ,spn andspc cspn inspc R8Dn .
chap 13 :chapter-13
n Troubleshooting
norm
n Thisspn chapterspn describesspn somespn ofspn thespn commonspn problemsspn thatspn usersspn havespn beenspn knownspn tospn encounterspn withspn NASM,spn andspn answersspn them.spn Ifspn youspn thinkspn youspn havespn foundspn aspn bugspn inspn NASM,spn pleasespn seespx section-E.2n sectionspn E.2xesection-E.2n .
head 13.1 :section-13.1
n Commonspn Problems
subh 13.1.1 :section-13.1.1
n NASMspn Generatesspi inefficient coden Inefficientspn Code
norm
n Wespn sometimesspn getspn `bug'spn reportsspn aboutspn NASMspn generatingspn inefficient,spn orspn evenspn `wrong',spn codespn onspn instructionsspn suchspn asspc ADD ESP,8n .spn Thisspn isspn aspn deliberatespn designspn feature,spn connectedspn tospn predictabilityspn ofspn output:spn NASM,spn onspn seeingspc ADD ESP,8n ,spn willspn generatespn thespn formspn ofspn thespn instructionspn whichspn leavesspn roomspn forspn aspn 32-n bitspn offset.spn Youspn needspn tospn codespi BYTEc ADD ESP,BYTE 8spn ifspn youspn wantspn thespn space-n efficientspn formspn ofspn thespn instruction.spn Thisspn isn'tspn aspn bug,spn it'sspn userspn error:spn ifspn youspn preferspn tospn havespn NASMspn producespn thespn morespn efficientspn codespn automaticallyspn enablespn optimizationspn withspn thespc -Ospn optionspn (seespx section-2.1.24n sectionspn 2.1.24xesection-2.1.24n ).
subh 13.1.2 :section-13.1.2
n Myspn Jumpsspn arespn Outspn ofspn Rangei out of range, jumps
norm
n Similarly,spn peoplespn complainspn thatspn whenspn theyspn issuespi conditional jumpsn conditionalspn jumpsspn (whichspn arespc SHORTspn byspn default)spn thatspn tryspn tospn jumpspn toospn far,spn NASMspn reportsspn `shortspn jumpspn outspn ofspn range'spn insteadspn ofspn makingspn thespn jumpsspn longer.
norm
n This,spn again,spn isspn partlyspn aspn predictabilityspn issue,spn butspn inspn factspn hasspn aspn morespn practicalspn reasonspn asspn well.spn NASMspn hasspn nospn meansspn ofspn beingspn toldspn whatspn typespn ofspn processorspn thespn codespn itspn isspn generatingspn willspn bespn runspn on;spn sospn itspn cannotspn decidespn forspn itselfspn thatspn itspn shouldspn generatespi Jcc NEARc Jcc NEARspn typespn instructions,spn becausespn itspn doesn'tspn knowspn thatspn it'sspn workingspn forspn aspn 386spn orspn above.spn Alternatively,spn itspn couldspn replacespn thespn out-n of-n rangespn shortspc JNEspn instructionspn withspn aspn veryspn shortspc JEspn instructionspn thatspn jumpsspn overspn aspc JMP NEARn ;spn thisspn isspn aspn sensiblespn solutionspn forspn processorsspn belowspn aspn 386,spn butspn hardlyspn efficientspn onspn processorsspn whichspn havespn goodspn branchspn predictionspeoandspn couldspn havespn usedspc JNE NEARspn instead.spn So,spn oncespn again,spn it'sspn upspn tospn thespn user,spn notspn thespn assembler,spn tospn decidespn whatspn instructionsspn shouldspn bespn generated.spn Seespx section-2.1.24n sectionspn 2.1.24xesection-2.1.24n .
subh 13.1.3 :section-13.1.3
i ORGc ORGspn Doesn'tspn Work
norm
n Peoplespn writingspi boot sectorn bootspn sectorspn programsspn inspn thespc binspn formatspn oftenspn complainspn thatspc ORGspn doesn'tspn workspn thespn wayspn they'dspn like:spn inspn orderspn tospn placespn thespc 0xAA55spn signaturespn wordspn atspn thespn endspn ofspn aspn 512-n bytespn bootspn sector,spn peoplespn whospn arespn usedspn tospn MASMspn tendspn tospn code
code
        ORG 0         ; some boot sector code         ORG 510         DW 0xAA55
norm
n Thisspn isspn notspn thespn intendedspn usespn ofspn thespc ORGspn directivespn inspn NASM,spn andspn willspn notspn work.spn Thespn correctspn wayspn tospn solvespn thisspn problemspn inspn NASMspn isspn tospn usespn thespi TIMESc TIMESspn directive,spn likespn this:
code
        ORG 0         ; some boot sector code         TIMES 510-($-$$) DB 0         DW 0xAA55
norm
n Thespc TIMESspn directivespn willspn insertspn exactlyspn enoughspn zerospn bytesspn intospn thespn outputspn tospn movespn thespn assemblyspn pointspn upspn tospn 510.spn Thisspn methodspn alsospn hasspn thespn advantagespn thatspn ifspn youspn accidentallyspn fillspn yourspn bootspn sectorspn toospn full,spn NASMspn willspn catchspn thespn problemspn atspn assemblyspn timespn andspn reportspn it,spn sospn youspn won'tspn endspn upspn withspn aspn bootspn sectorspn thatspn youspn havespn tospn disassemblespn tospn findspn outspn what'sspn wrongspn withspn it.
subh 13.1.4 :section-13.1.4
i TIMESc TIMESspn Doesn'tspn Work
norm
n Thespn otherspn commonspn problemspn withspn thespn abovespn codespn isspn peoplespn whospn writespn thespc TIMESspn linespn as
code
        TIMES 510-$ DB 0
norm
n byspn reasoningspn thatspc $spn shouldspn bespn aspn purespn number,spn justspn likespn 510,spn sospn thespn differencespn betweenspn themspn isspn alsospn aspn purespn numberspn andspn canspn happilyspn bespn fedspn tospc TIMESn .
norm
n NASMspn isspn aspeomodularspn assembler:spn thespn variousspn componentspn partsspn arespn designedspn tospn bespn easilyspn separablespn forspn re-n use,spn sospn theyspn don'tspn exchangespn informationspn unnecessarily.spn Inspn consequence,spn thespc binspn outputspn format,spn evenspn thoughspn itspn hasspn beenspn toldspn byspn thespc ORGspn directivespn thatspn thespc .textspn sectionspn shouldspn startspn atspn 0,spn doesspn notspn passspn thatspn informationspn backspn tospn thespn expressionspn evaluator.spn Sospn fromspn thespn evaluator'sspn pointspn ofspn view,spc $spn isn'tspn aspn purespn number:spn it'sspn anspn offsetspn fromspn aspn sectionspn base.spn Thereforespn thespn differencespn betweenspc $spn andspn 510spn isspn alsospn notspn aspn purespn number,spn butspn involvesspn aspn sectionspn base.spn Valuesspn involvingspn sectionspn basesspn cannotspn bespn passedspn asspn argumentsspn tospc TIMESn .
norm
n Thespn solution,spn asspn inspn thespn previousspn section,spn isspn tospn codespn thespc TIMESspn linespn inspn thespn form
code
        TIMES 510-($-$$) DB 0
norm
n inspn whichspc $spn andspc $$spn arespn offsetsspn fromspn thespn samespn sectionspn base,spn andspn sospn theirspn differencespn isspn aspn purespn number.spn Thisspn willspn solvespn thespn problemspn andspn generatespn sensiblespn code.
appn A :appendix-A
i ndisasmn Ndisasm
norm
n Thespn Netwidespn Disassembler,spn NDISASM
head A.1 :section-A.1
n Introduction
norm
n Thespn Netwidespn Disassemblerspn isspn aspn smallspn companionspn programspn tospn thespn Netwidespn Assembler,spn NASM.spn Itspn seemedspn aspn shamespn tospn havespn anspn x86spn assembler,spn completespn withspn aspn fullspn instructionspn table,spn andspn notspn makespn asspn muchspn usespn ofspn itspn asspn possible,spn sospn here'sspn aspn disassemblerspn whichspn sharesspn thespn instructionspn tablespn (andspn somespn otherspn bitsspn ofspn code)spn withspn NASM.
norm
n Thespn Netwidespn Disassemblerspn doesspn nothingspn exceptspn tospn producespn disassembliesspn ofspeobinaryspn sourcespn files.spn NDISASMspn doesspn notspn havespn anyspn understandingspn ofspn objectspn filespn formats,spn likespc objdumpn ,spn andspn itspn willspn notspn understandspc DOS .EXEspn filesspn likespc debugspn will.spn Itspn justspn disassembles.
head A.2 :section-A.2
n Runningspn NDISASM
norm
n Tospn disassemblespn aspn file,spn youspn willspn typicallyspn usespn aspn commandspn ofspn thespn form
code
       ndisasm -b {16|32|64} filename
norm
n NDISASMspn canspn disassemblespn 16-n ,spn 32-spn orspn 64-n bitspn codespn equallyspn easily,spn providedspn ofspn coursespn thatspn youspn rememberspn tospn specifyspn whichspn itspn isspn tospn workspn with.spn Ifspn nospi -bc -bspn switchspn isspn present,spn NDISASMspn worksspn inspn 16-n bitspn modespn byspn default.spn Thespi -uc -uspn switchspn (forspn USE32)spn alsospn invokesspn 32-n bitspn mode.
norm
n Twospn morespn commandspn linespn optionsspn arespi -rc -rspn whichspn reportsspn thespn versionspn numberspn ofspn NDISASMspn youspn arespn running,spn andspi -hc -hspn whichspn givesspn aspn shortspn summaryspn ofspn commandspn linespn options.
subh A.2.1 :section-A.2.1
n COMspn Files:spn Specifyingspn anspn Origin
norm
n Tospn disassemblespn aspc DOS .COMspn filespn correctly,spn aspn disassemblerspn mustspn assumespn thatspn thespn firstspn instructionspn inspn thespn filespn isspn loadedspn atspn addressspc 0x100n ,spn ratherspn thanspn atspn zero.spn NDISASM,spn whichspn assumesspn byspn defaultspn thatspn anyspn filespn youspn givespn itspn isspn loadedspn atspn zero,spn willspn thereforespn needspn tospn bespn informedspn ofspn this.
norm
n Thespi -oc -ospn optionspn allowsspn youspn tospn declarespn aspn differentspn originspn forspn thespn filespn youspn arespn disassembling.spn Itsspn argumentspn mayspn bespn expressedspn inspn anyspn ofspn thespn NASMspn numericspn formats:spn decimalspn byspn default,spn ifspn itspn beginsspn withspn `c $n 'spn orspn `c 0xn 'spn orspn endsspn inspn `c Hn 'spn it'sspc hexn ,spn ifspn itspn endsspn inspn `c Qn 'spn it'sspc octaln ,spn andspn ifspn itspn endsspn inspn `c Bn 'spn it'sspc binaryn .
norm
n Hence,spn tospn disassemblespn aspc .COMspn file:
code
       ndisasm -o100h filename.com
norm
n willspn dospn thespn trick.
subh A.2.2 :section-A.2.2
n Codespn Followingspn Data:spn Synchronization
norm
n Supposespn youspn arespn disassemblingspn aspn filespn whichspn containsspn somespn dataspn whichspn isn'tspn machinespn code,spn andspeothenspn containsspn somespn machinespn code.spn NDISASMspn willspn faithfullyspn ploughspn throughspn thespn dataspn section,spn producingspn machinespn instructionsspn whereverspn itspn canspn (althoughspn mostspn ofspn themspn willspn lookspn bizarre,spn andspn somespn mayspn havespn unusualspn prefixes,spn e.g.spn `c FS OR AX,0x240An '),spn andspn generatingspn `DB'spn instructionsspn everspn sospn oftenspn ifspn it'sspn totallyspn stumped.spn Thenspn itspn willspn reachspn thespn codespn section.
norm
n Supposingspn NDISASMspn hasspn justspn finishedspn generatingspn aspn strangespn machinespn instructionspn fromspn partspn ofspn thespn dataspn section,spn andspn itsspn filespn positionspn isspn nowspn onespn bytespeobeforespn thespn beginningspn ofspn thespn codespn section.spn It'sspn entirelyspn possiblespn thatspn anotherspn spuriousspn instructionspn willspn getspn generated,spn startingspn withspn thespn finalspn bytespn ofspn thespn dataspn section,spn andspn thenspn thespn correctspn firstspn instructionspn inspn thespn codespn sectionspn willspn notspn bespn seenspn becausespn thespn startingspn pointspn skippedspn overspn it.spn Thisspn isn'tspn reallyspn ideal.
norm
n Tospn avoidspn this,spn youspn canspn specifyspn aspn `i synchronizationn synchronizationn 'spn point,spn orspn indeedspn asspn manyspn synchronizationspn pointsspn asspn youspn likespn (althoughspn NDISASMspn canspn onlyspn handlespn 2147483647spn syncspn pointsspn internally).spn Thespn definitionspn ofspn aspn syncspn pointspn isspn this:spn NDISASMspn guaranteesspn tospn hitspn syncspn pointsspn exactlyspn duringspn disassembly.spn Ifspn itspn isspn thinkingspn aboutspn generatingspn anspn instructionspn whichspn wouldspn causespn itspn tospn jumpspn overspn aspn syncspn point,spn itspn willspn discardspn thatspn instructionspn andspn outputspn aspn `c dbn 'spn instead.spn Sospn itspeowillspn startspn disassemblyspn exactlyspn fromspn thespn syncspn point,spn andspn sospn youspeowillspn seespn allspn thespn instructionsspn inspn yourspn codespn section.
norm
n Syncspn pointsspn arespn specifiedspn usingspn thespi -sc -sspn option:spn theyspn arespn measuredspn inspn termsspn ofspn thespn programspn origin,spn notspn thespn filespn position.spn Sospn ifspn youspn wantspn tospn synchronizespn afterspn 32spn bytesspn ofspn aspc .COMspn file,spn youspn wouldspn havespn tospn do
code
       ndisasm -o100h -s120h file.com
norm
n ratherspn than
code
       ndisasm -o100h -s20h file.com
norm
n Asspn statedspn above,spn youspn canspn specifyspn multiplespn syncspn markersspn ifspn youspn needspn to,spn justspn byspn repeatingspn thespc -sspn option.
subh A.2.3 :section-A.2.3
n Mixedspn Codespn andspn Data:spn Automaticspn (Intelligent)spn Synchronizationspi auto-sync
norm
n Supposespn youspn arespn disassemblingspn thespn bootspn sectorspn ofspn aspc DOSspn floppyspn (maybespn itspn hasspn aspn virus,spn andspn youspn needspn tospn understandspn thespn virusspn sospn thatspn youspn knowspn whatspn kindsspn ofspn damagespn itspn mightspn havespn donespn you).spn Typically,spn thisspn willspn containspn aspc JMPspn instruction,spn thenspn somespn data,spn thenspn thespn restspn ofspn thespn code.spn Sospn therespn isspn aspn veryspn goodspn chancespn ofspn NDISASMspn beingspeomisalignedspn whenspn thespn dataspn endsspn andspn thespn codespn begins.spn Hencespn aspn syncspn pointspn isspn needed.
norm
n Onspn thespn otherspn hand,spn whyspn shouldspn youspn havespn tospn specifyspn thespn syncspn pointspn manually?spn Whatspn you'dspn dospn inspn orderspn tospn findspn wherespn thespn syncspn pointspn wouldspn be,spn surely,spn wouldspn bespn tospn readspn thespc JMPspn instruction,spn andspn thenspn tospn usespn itsspn targetspn addressspn asspn aspn syncspn point.spn Sospn canspn NDISASMspn dospn thatspn forspn you?
norm
n Thespn answer,spn ofspn course,spn isspn yes:spn usingspn eitherspn ofspn thespn synonymousspn switchesspi -ac -aspn (forspn automaticspn sync)spn orspi -ic -ispn (forspn intelligentspn sync)spn willspn enablespc auto-syncspn mode.spn Auto-n syncspn modespn automaticallyspn generatesspn aspn syncspn pointspn forspn anyspn forward-n referringspn PC-n relativespn jumpspn orspn callspn instructionspn thatspn NDISASMspn encounters.spn (Sincespn NDISASMspn isspn one-n pass,spn ifspn itspn encountersspn aspn PC-n relativespn jumpspn whosespn targetspn hasspn alreadyspn beenspn processed,spn therespn isn'tspn muchspn itspn canspn dospn aboutspn it...)
norm
n Onlyspn PC-n relativespn jumpsspn arespn processed,spn sincespn anspn absolutespn jumpspn isspn eitherspn throughspn aspn registerspn (inspn whichspn casespn NDISASMspn doesn'tspn knowspn whatspn thespn registerspn contains)spn orspn involvesspn aspn segmentspn addressspn (inspn whichspn casespn thespn targetspn codespn isn'tspn inspn thespn samespn segmentspn thatspn NDISASMspn isspn workingspn in,spn andspn sospn thespn syncspn pointspn can'tspn bespn placedspn anywherespn useful).
norm
n Forspn somespn kindsspn ofspn file,spn thisspn mechanismspn willspn automaticallyspn putspn syncspn pointsspn inspn allspn thespn rightspn places,spn andspn savespn youspn fromspn havingspn tospn placespn anyspn syncspn pointsspn manually.spn However,spn itspn shouldspn bespn stressedspn thatspn auto-n syncspn modespn isspeonotspn guaranteedspn tospn catchspn allspn thespn syncspn points,spn andspn youspn mayspn stillspn havespn tospn placespn somespn manually.
norm
n Auto-n syncspn modespn doesn'tspn preventspn youspn fromspn declaringspn manualspn syncspn points:spn itspn justspn addsspn automaticallyspn generatedspn onesspn tospn thespn onesspn youspn provide.spn It'sspn perfectlyspn feasiblespn tospn specifyspc -ispeoandspn somespc -sspn options.
norm
n Anotherspn caveatspn withspn auto-n syncspn modespn isspn thatspn if,spn byspn somespn unpleasantspn fluke,spn somethingspn inspn yourspn dataspn sectionspn shouldspn disassemblespn tospn aspn PC-n relativespn callspn orspn jumpspn instruction,spn NDISASMspn mayspn obedientlyspn placespn aspn syncspn pointspn inspn aspn totallyspn randomspn place,spn forspn examplespn inspn thespn middlespn ofspn onespn ofspn thespn instructionsspn inspn yourspn codespn section.spn Sospn youspn mayspn endspn upspn withspn aspn wrongspn disassemblyspn evenspn ifspn youspn usespn auto-n sync.spn Again,spn therespn isn'tspn muchspn Ispn canspn dospn aboutspn this.spn Ifspn youspn havespn problems,spn you'llspn havespn tospn usespn manualspn syncspn points,spn orspn usespn thespc -kspn optionspn (documentedspn below)spn tospn suppressspn disassemblyspn ofspn thespn dataspn area.
subh A.2.4 :section-A.2.4
n Otherspn Options
norm
n Thespi -ec -espn optionspn skipsspn aspn headerspn onspn thespn file,spn byspn ignoringspn thespn firstspn Nspn bytes.spn Thisspn meansspn thatspn thespn headerspn isspeonotspn countedspn towardsspn thespn disassemblyspn offset:spn ifspn youspn givespc -e10 -o10n ,spn disassemblyspn willspn startspn atspn bytespn 10spn inspn thespn file,spn andspn thisspn willspn bespn givenspn offsetspn 10,spn notspn 20.
norm
n Thespi -kc -kspn optionspn isspn providedspn withspn twospn comma-n separatedspn numericspn arguments,spn thespn firstspn ofspn whichspn isspn anspn assemblyspn offsetspn andspn thespn secondspn isspn aspn numberspn ofspn bytesspn tospn skip.spn Thisspeowillspn countspn thespn skippedspn bytesspn towardsspn thespn assemblyspn offset:spn itsspn usespn isspn tospn suppressspn disassemblyspn ofspn aspn dataspn sectionspn whichspn wouldn'tspn containspn anythingspn youspn wantedspn tospn seespn anyway.
appn B :appendix-B
i instruction listn Instructionspn List
head B.1 :section-B.1
n Introduction
norm
n Thespn followingspn sectionsspn showspn thespn instructionsspn whichspn NASMspn currentlyspn supports.spn Forspn eachspn instruction,spn therespn isspn aspn separatespn entryspn forspn eachspn supportedspn addressingspn mode.spn Thespn thirdspn columnspn showsspn thespn processorspn typespn inspn whichspn thespn instructionspn wasspn introducedspn and,spn whenspn appropriate,spn onespn orspn morespn usagespn flags.
subh B.1.1 :section-B.1.1
n Specialspn instructionsspn (pseudo-n ops)
code
DB                                         DW                                         DD                                         DQ                                         DT                                         DO                                         DY                                         DZ                                         RESB             imm                      8086 RESW             imm                      8086 RESD             imm                      8086 RESQ             imm                      8086 REST             imm                      8086 RESO             imm                      8086 RESY             imm                      8086 RESZ             imm                      8086 INCBIN                                    
subh B.1.2 :section-B.1.2
n Conventionalspn instructions
code
AAA                                       8086,NOLONG AAD                                       8086,NOLONG AAD              imm                      8086,NOLONG AAM                                       8086,NOLONG AAM              imm                      8086,NOLONG AAS                                       8086,NOLONG ADC              mem,reg8                 8086,LOCK ADC              reg8,reg8                8086 ADC              mem,reg16                8086,LOCK ADC              reg16,reg16              8086 ADC              mem,reg32                386,LOCK ADC              reg32,reg32              386 ADC              mem,reg64                X86_64,LONG,LOCK ADC              reg64,reg64              X86_64,LONG ADC              reg8,mem                 8086 ADC              reg8,reg8                8086 ADC              reg16,mem                8086 ADC              reg16,reg16              8086 ADC              reg32,mem                386 ADC              reg32,reg32              386 ADC              reg64,mem                X86_64,LONG ADC              reg64,reg64              X86_64,LONG ADC              rm16,imm8                8086,LOCK ADC              rm32,imm8                386,LOCK ADC              rm64,imm8                X86_64,LONG,LOCK ADC              reg_al,imm               8086 ADC              reg_ax,sbyteword         8086,ND ADC              reg_ax,imm               8086 ADC              reg_eax,sbytedword       386,ND ADC              reg_eax,imm              386 ADC              reg_rax,sbytedword       X86_64,LONG,ND ADC              reg_rax,imm              X86_64,LONG ADC              rm8,imm                  8086,LOCK ADC              rm16,sbyteword           8086,LOCK,ND ADC              rm16,imm                 8086,LOCK ADC              rm32,sbytedword          386,LOCK,ND ADC              rm32,imm                 386,LOCK ADC              rm64,sbytedword          X86_64,LONG,LOCK,ND ADC              rm64,imm                 X86_64,LONG,LOCK ADC              mem,imm8                 8086,LOCK,ND ADC              mem,sbyteword16          8086,LOCK,ND ADC              mem,imm16                8086,LOCK ADC              mem,sbytedword32         386,LOCK,ND ADC              mem,imm32                386,LOCK ADC              rm8,imm                  8086,LOCK,ND,NOLONG ADD              mem,reg8                 8086,LOCK ADD              reg8,reg8                8086 ADD              mem,reg16                8086,LOCK ADD              reg16,reg16              8086 ADD              mem,reg32                386,LOCK ADD              reg32,reg32              386 ADD              mem,reg64                X86_64,LONG,LOCK ADD              reg64,reg64              X86_64,LONG ADD              reg8,mem                 8086 ADD              reg8,reg8                8086 ADD              reg16,mem                8086 ADD              reg16,reg16              8086 ADD              reg32,mem                386 ADD              reg32,reg32              386 ADD              reg64,mem                X86_64,LONG ADD              reg64,reg64              X86_64,LONG ADD              rm16,imm8                8086,LOCK ADD              rm32,imm8                386,LOCK ADD              rm64,imm8                X86_64,LONG,LOCK ADD              reg_al,imm               8086 ADD              reg_ax,sbyteword         8086,ND ADD              reg_ax,imm               8086 ADD              reg_eax,sbytedword       386,ND ADD              reg_eax,imm              386 ADD              reg_rax,sbytedword       X86_64,LONG,ND ADD              reg_rax,imm              X86_64,LONG ADD              rm8,imm                  8086,LOCK ADD              rm16,sbyteword           8086,LOCK,ND ADD              rm16,imm                 8086,LOCK ADD              rm32,sbytedword          386,LOCK,ND ADD              rm32,imm                 386,LOCK ADD              rm64,sbytedword          X86_64,LONG,LOCK,ND ADD              rm64,imm                 X86_64,LONG,LOCK ADD              mem,imm8                 8086,LOCK ADD              mem,sbyteword16          8086,LOCK,ND ADD              mem,imm16                8086,LOCK ADD              mem,sbytedword32         386,LOCK,ND ADD              mem,imm32                386,LOCK ADD              rm8,imm                  8086,LOCK,ND,NOLONG AND              mem,reg8                 8086,LOCK AND              reg8,reg8                8086 AND              mem,reg16                8086,LOCK AND              reg16,reg16              8086 AND              mem,reg32                386,LOCK AND              reg32,reg32              386 AND              mem,reg64                X86_64,LONG,LOCK AND              reg64,reg64              X86_64,LONG AND              reg8,mem                 8086 AND              reg8,reg8                8086 AND              reg16,mem                8086 AND              reg16,reg16              8086 AND              reg32,mem                386 AND              reg32,reg32              386 AND              reg64,mem                X86_64,LONG AND              reg64,reg64              X86_64,LONG AND              rm16,imm8                8086,LOCK AND              rm32,imm8                386,LOCK AND              rm64,imm8                X86_64,LONG,LOCK AND              reg_al,imm               8086 AND              reg_ax,sbyteword         8086,ND AND              reg_ax,imm               8086 AND              reg_eax,sbytedword       386,ND AND              reg_eax,imm              386 AND              reg_rax,sbytedword       X86_64,LONG,ND AND              reg_rax,imm              X86_64,LONG AND              rm8,imm                  8086,LOCK AND              rm16,sbyteword           8086,LOCK,ND AND              rm16,imm                 8086,LOCK AND              rm32,sbytedword          386,LOCK,ND AND              rm32,imm                 386,LOCK AND              rm64,sbytedword          X86_64,LONG,LOCK,ND AND              rm64,imm                 X86_64,LONG,LOCK AND              mem,imm8                 8086,LOCK AND              mem,sbyteword16          8086,LOCK,ND AND              mem,imm16                8086,LOCK AND              mem,sbytedword32         386,LOCK,ND AND              mem,imm32                386,LOCK AND              rm8,imm                  8086,LOCK,ND,NOLONG ARPL             mem,reg16                286,PROT,NOLONG ARPL             reg16,reg16              286,PROT,NOLONG BB0_RESET                                 PENT,CYRIX,ND,OBSOLETE BB1_RESET                                 PENT,CYRIX,ND,OBSOLETE BOUND            reg16,mem                186,NOLONG BOUND            reg32,mem                386,NOLONG BSF              reg16,mem                386 BSF              reg16,reg16              386 BSF              reg32,mem                386 BSF              reg32,reg32              386 BSF              reg64,mem                X86_64,LONG BSF              reg64,reg64              X86_64,LONG BSR              reg16,mem                386 BSR              reg16,reg16              386 BSR              reg32,mem                386 BSR              reg32,reg32              386 BSR              reg64,mem                X86_64,LONG BSR              reg64,reg64              X86_64,LONG BSWAP            reg32                    486 BSWAP            reg64                    X86_64,LONG BT               mem,reg16                386 BT               reg16,reg16              386 BT               mem,reg32                386 BT               reg32,reg32              386 BT               mem,reg64                X86_64,LONG BT               reg64,reg64              X86_64,LONG BT               rm16,imm8                386 BT               rm32,imm8                386 BT               rm64,imm8                X86_64,LONG BTC              mem,reg16                386,LOCK BTC              reg16,reg16              386 BTC              mem,reg32                386,LOCK BTC              reg32,reg32              386 BTC              mem,reg64                X86_64,LONG,LOCK BTC              reg64,reg64              X86_64,LONG BTC              rm16,imm8                386,LOCK BTC              rm32,imm8                386,LOCK BTC              rm64,imm8                X86_64,LONG,LOCK BTR              mem,reg16                386,LOCK BTR              reg16,reg16              386 BTR              mem,reg32                386,LOCK BTR              reg32,reg32              386 BTR              mem,reg64                X86_64,LONG,LOCK BTR              reg64,reg64              X86_64,LONG BTR              rm16,imm8                386,LOCK BTR              rm32,imm8                386,LOCK BTR              rm64,imm8                X86_64,LONG,LOCK BTS              mem,reg16                386,LOCK BTS              reg16,reg16              386 BTS              mem,reg32                386,LOCK BTS              reg32,reg32              386 BTS              mem,reg64                X86_64,LONG,LOCK BTS              reg64,reg64              X86_64,LONG BTS              rm16,imm8                386,LOCK BTS              rm32,imm8                386,LOCK BTS              rm64,imm8                X86_64,LONG,LOCK CALL             imm                      8086,BND CALL             imm|near                 8086,ND,BND CALL             imm|far                  8086,ND,NOLONG CALL             imm16                    8086,NOLONG,BND CALL             imm16|near               8086,ND,NOLONG,BND CALL             imm16|far                8086,ND,NOLONG CALL             imm32                    386,NOLONG,BND CALL             imm32|near               386,ND,NOLONG,BND CALL             imm32|far                386,ND,NOLONG CALL             imm64                    X86_64,LONG,BND CALL             imm64|near               X86_64,LONG,ND,BND CALL             imm:imm                  8086,NOLONG CALL             imm16:imm                8086,NOLONG CALL             imm:imm16                8086,NOLONG CALL             imm32:imm                386,NOLONG CALL             imm:imm32                386,NOLONG CALL             mem|far                  8086,NOLONG CALL             mem|far                  X86_64,LONG CALL             mem16|far                8086 CALL             mem32|far                386 CALL             mem64|far                X86_64,LONG CALL             mem|near                 8086,ND,BND CALL             rm16|near                8086,NOLONG,ND,BND CALL             rm32|near                386,NOLONG,ND,BND CALL             rm64|near                X86_64,LONG,ND,BND CALL             mem                      8086,BND CALL             rm16                     8086,NOLONG,BND CALL             rm32                     386,NOLONG,BND CALL             rm64                     X86_64,LONG,BND CBW                                       8086 CDQ                                       386 CDQE                                      X86_64,LONG CLC                                       8086 CLD                                       8086 CLI                                       8086 CLTS                                      286,PRIV CMC                                       8086 CMP              mem,reg8                 8086 CMP              reg8,reg8                8086 CMP              mem,reg16                8086 CMP              reg16,reg16              8086 CMP              mem,reg32                386 CMP              reg32,reg32              386 CMP              mem,reg64                X86_64,LONG CMP              reg64,reg64              X86_64,LONG CMP              reg8,mem                 8086 CMP              reg8,reg8                8086 CMP              reg16,mem                8086 CMP              reg16,reg16              8086 CMP              reg32,mem                386 CMP              reg32,reg32              386 CMP              reg64,mem                X86_64,LONG CMP              reg64,reg64              X86_64,LONG CMP              rm16,imm8                8086 CMP              rm32,imm8                386 CMP              rm64,imm8                X86_64,LONG CMP              reg_al,imm               8086 CMP              reg_ax,sbyteword         8086,ND CMP              reg_ax,imm               8086 CMP              reg_eax,sbytedword       386,ND CMP              reg_eax,imm              386 CMP              reg_rax,sbytedword       X86_64,LONG,ND CMP              reg_rax,imm              X86_64,LONG CMP              rm8,imm                  8086 CMP              rm16,sbyteword           8086,ND CMP              rm16,imm                 8086 CMP              rm32,sbytedword          386,ND CMP              rm32,imm                 386 CMP              rm64,sbytedword          X86_64,LONG,ND CMP              rm64,imm                 X86_64,LONG CMP              mem,imm8                 8086 CMP              mem,sbyteword16          8086,ND CMP              mem,imm16                8086 CMP              mem,sbytedword32         386,ND CMP              mem,imm32                386 CMP              rm8,imm                  8086,ND,NOLONG CMPSB                                     8086 CMPSD                                     386 CMPSQ                                     X86_64,LONG CMPSW                                     8086 CMPXCHG          mem,reg8                 PENT,LOCK CMPXCHG          reg8,reg8                PENT CMPXCHG          mem,reg16                PENT,LOCK CMPXCHG          reg16,reg16              PENT CMPXCHG          mem,reg32                PENT,LOCK CMPXCHG          reg32,reg32              PENT CMPXCHG          mem,reg64                X86_64,LONG,LOCK CMPXCHG          reg64,reg64              X86_64,LONG CMPXCHG486       mem,reg8                 486,UNDOC,ND,LOCK,OBSOLETE CMPXCHG486       reg8,reg8                486,UNDOC,ND,OBSOLETE CMPXCHG486       mem,reg16                486,UNDOC,ND,LOCK,OBSOLETE CMPXCHG486       reg16,reg16              486,UNDOC,ND,OBSOLETE CMPXCHG486       mem,reg32                486,UNDOC,ND,LOCK,OBSOLETE CMPXCHG486       reg32,reg32              486,UNDOC,ND,OBSOLETE CMPXCHG8B        mem64                    PENT,LOCK CMPXCHG16B       mem128                   X86_64,LONG,LOCK CPUID                                     PENT CPU_READ                                  PENT,CYRIX CPU_WRITE                                 PENT,CYRIX CQO                                       X86_64,LONG CWD                                       8086 CWDE                                      386 DAA                                       8086,NOLONG DAS                                       8086,NOLONG DEC              reg16                    8086,NOLONG DEC              reg32                    386,NOLONG DEC              rm8                      8086,LOCK DEC              rm16                     8086,LOCK DEC              rm32                     386,LOCK DEC              rm64                     X86_64,LONG,LOCK DIV              rm8                      8086 DIV              rm16                     8086 DIV              rm32                     386 DIV              rm64                     X86_64,LONG DMINT                                     P6,CYRIX EMMS                                      PENT,MMX ENTER            imm,imm                  186 EQU              imm                      8086 EQU              imm:imm                  8086 F2XM1                                     8086,FPU FABS                                      8086,FPU FADD             mem32                    8086,FPU FADD             mem64                    8086,FPU FADD             fpureg|to                8086,FPU FADD             fpureg                   8086,FPU FADD             fpureg,fpu0              8086,FPU FADD             fpu0,fpureg              8086,FPU FADD                                      8086,FPU,ND FADDP            fpureg                   8086,FPU FADDP            fpureg,fpu0              8086,FPU FADDP                                     8086,FPU,ND FBLD             mem80                    8086,FPU FBLD             mem                      8086,FPU FBSTP            mem80                    8086,FPU FBSTP            mem                      8086,FPU FCHS                                      8086,FPU FCLEX                                     8086,FPU FCMOVB           fpureg                   P6,FPU FCMOVB           fpu0,fpureg              P6,FPU FCMOVB                                    P6,FPU,ND FCMOVBE          fpureg                   P6,FPU FCMOVBE          fpu0,fpureg              P6,FPU FCMOVBE                                   P6,FPU,ND FCMOVE           fpureg                   P6,FPU FCMOVE           fpu0,fpureg              P6,FPU FCMOVE                                    P6,FPU,ND FCMOVNB          fpureg                   P6,FPU FCMOVNB          fpu0,fpureg              P6,FPU FCMOVNB                                   P6,FPU,ND FCMOVNBE         fpureg                   P6,FPU FCMOVNBE         fpu0,fpureg              P6,FPU FCMOVNBE                                  P6,FPU,ND FCMOVNE          fpureg                   P6,FPU FCMOVNE          fpu0,fpureg              P6,FPU FCMOVNE                                   P6,FPU,ND FCMOVNU          fpureg                   P6,FPU FCMOVNU          fpu0,fpureg              P6,FPU FCMOVNU                                   P6,FPU,ND FCMOVU           fpureg                   P6,FPU FCMOVU           fpu0,fpureg              P6,FPU FCMOVU                                    P6,FPU,ND FCOM             mem32                    8086,FPU FCOM             mem64                    8086,FPU FCOM             fpureg                   8086,FPU FCOM             fpu0,fpureg              8086,FPU FCOM                                      8086,FPU,ND FCOMI            fpureg                   P6,FPU FCOMI            fpu0,fpureg              P6,FPU FCOMI                                     P6,FPU,ND FCOMIP           fpureg                   P6,FPU FCOMIP           fpu0,fpureg              P6,FPU FCOMIP                                    P6,FPU,ND FCOMP            mem32                    8086,FPU FCOMP            mem64                    8086,FPU FCOMP            fpureg                   8086,FPU FCOMP            fpu0,fpureg              8086,FPU FCOMP                                     8086,FPU,ND FCOMPP                                    8086,FPU FCOS                                      386,FPU FDECSTP                                   8086,FPU FDISI                                     8086,FPU FDIV             mem32                    8086,FPU FDIV             mem64                    8086,FPU FDIV             fpureg|to                8086,FPU FDIV             fpureg                   8086,FPU FDIV             fpureg,fpu0              8086,FPU FDIV             fpu0,fpureg              8086,FPU FDIV                                      8086,FPU,ND FDIVP            fpureg                   8086,FPU FDIVP            fpureg,fpu0              8086,FPU FDIVP                                     8086,FPU,ND FDIVR            mem32                    8086,FPU FDIVR            mem64                    8086,FPU FDIVR            fpureg|to                8086,FPU FDIVR            fpureg,fpu0              8086,FPU FDIVR            fpureg                   8086,FPU FDIVR            fpu0,fpureg              8086,FPU FDIVR                                     8086,FPU,ND FDIVRP           fpureg                   8086,FPU FDIVRP           fpureg,fpu0              8086,FPU FDIVRP                                    8086,FPU,ND FEMMS                                     PENT,3DNOW FENI                                      8086,FPU FFREE            fpureg                   8086,FPU FFREE                                     8086,FPU FFREEP           fpureg                   286,FPU,UNDOC FFREEP                                    286,FPU,UNDOC FIADD            mem32                    8086,FPU FIADD            mem16                    8086,FPU FICOM            mem32                    8086,FPU FICOM            mem16                    8086,FPU FICOMP           mem32                    8086,FPU FICOMP           mem16                    8086,FPU FIDIV            mem32                    8086,FPU FIDIV            mem16                    8086,FPU FIDIVR           mem32                    8086,FPU FIDIVR           mem16                    8086,FPU FILD             mem32                    8086,FPU FILD             mem16                    8086,FPU FILD             mem64                    8086,FPU FIMUL            mem32                    8086,FPU FIMUL            mem16                    8086,FPU FINCSTP                                   8086,FPU FINIT                                     8086,FPU FIST             mem32                    8086,FPU FIST             mem16                    8086,FPU FISTP            mem32                    8086,FPU FISTP            mem16                    8086,FPU FISTP            mem64                    8086,FPU FISTTP           mem16                    PRESCOTT,FPU FISTTP           mem32                    PRESCOTT,FPU FISTTP           mem64                    PRESCOTT,FPU FISUB            mem32                    8086,FPU FISUB            mem16                    8086,FPU FISUBR           mem32                    8086,FPU FISUBR           mem16                    8086,FPU FLD              mem32                    8086,FPU FLD              mem64                    8086,FPU FLD              mem80                    8086,FPU FLD              fpureg                   8086,FPU FLD                                       8086,FPU,ND FLD1                                      8086,FPU FLDCW            mem                      8086,FPU,SW FLDENV           mem                      8086,FPU FLDL2E                                    8086,FPU FLDL2T                                    8086,FPU FLDLG2                                    8086,FPU FLDLN2                                    8086,FPU FLDPI                                     8086,FPU FLDZ                                      8086,FPU FMUL             mem32                    8086,FPU FMUL             mem64                    8086,FPU FMUL             fpureg|to                8086,FPU FMUL             fpureg,fpu0              8086,FPU FMUL             fpureg                   8086,FPU FMUL             fpu0,fpureg              8086,FPU FMUL                                      8086,FPU,ND FMULP            fpureg                   8086,FPU FMULP            fpureg,fpu0              8086,FPU FMULP                                     8086,FPU,ND FNCLEX                                    8086,FPU FNDISI                                    8086,FPU FNENI                                     8086,FPU FNINIT                                    8086,FPU FNOP                                      8086,FPU FNSAVE           mem                      8086,FPU FNSTCW           mem                      8086,FPU,SW FNSTENV          mem                      8086,FPU FNSTSW           mem                      8086,FPU,SW FNSTSW           reg_ax                   286,FPU FPATAN                                    8086,FPU FPREM                                     8086,FPU FPREM1                                    386,FPU FPTAN                                     8086,FPU FRNDINT                                   8086,FPU FRSTOR           mem                      8086,FPU FSAVE            mem                      8086,FPU FSCALE                                    8086,FPU FSETPM                                    286,FPU FSIN                                      386,FPU FSINCOS                                   386,FPU FSQRT                                     8086,FPU FST              mem32                    8086,FPU FST              mem64                    8086,FPU FST              fpureg                   8086,FPU FST                                       8086,FPU,ND FSTCW            mem                      8086,FPU,SW FSTENV           mem                      8086,FPU FSTP             mem32                    8086,FPU FSTP             mem64                    8086,FPU FSTP             mem80                    8086,FPU FSTP             fpureg                   8086,FPU FSTP                                      8086,FPU,ND FSTSW            mem                      8086,FPU,SW FSTSW            reg_ax                   286,FPU FSUB             mem32                    8086,FPU FSUB             mem64                    8086,FPU FSUB             fpureg|to                8086,FPU FSUB             fpureg,fpu0              8086,FPU FSUB             fpureg                   8086,FPU FSUB             fpu0,fpureg              8086,FPU FSUB                                      8086,FPU,ND FSUBP            fpureg                   8086,FPU FSUBP            fpureg,fpu0              8086,FPU FSUBP                                     8086,FPU,ND FSUBR            mem32                    8086,FPU FSUBR            mem64                    8086,FPU FSUBR            fpureg|to                8086,FPU FSUBR            fpureg,fpu0              8086,FPU FSUBR            fpureg                   8086,FPU FSUBR            fpu0,fpureg              8086,FPU FSUBR                                     8086,FPU,ND FSUBRP           fpureg                   8086,FPU FSUBRP           fpureg,fpu0              8086,FPU FSUBRP                                    8086,FPU,ND FTST                                      8086,FPU FUCOM            fpureg                   386,FPU FUCOM            fpu0,fpureg              386,FPU FUCOM                                     386,FPU,ND FUCOMI           fpureg                   P6,FPU FUCOMI           fpu0,fpureg              P6,FPU FUCOMI                                    P6,FPU,ND FUCOMIP          fpureg                   P6,FPU FUCOMIP          fpu0,fpureg              P6,FPU FUCOMIP                                   P6,FPU,ND FUCOMP           fpureg                   386,FPU FUCOMP           fpu0,fpureg              386,FPU FUCOMP                                    386,FPU,ND FUCOMPP                                   386,FPU FXAM                                      8086,FPU FXCH             fpureg                   8086,FPU FXCH             fpureg,fpu0              8086,FPU FXCH             fpu0,fpureg              8086,FPU FXCH                                      8086,FPU,ND FXTRACT                                   8086,FPU FYL2X                                     8086,FPU FYL2XP1                                   8086,FPU HLT                                       8086,PRIV IBTS             mem,reg16                386,SW,UNDOC,ND,OBSOLETE IBTS             reg16,reg16              386,UNDOC,ND,OBSOLETE IBTS             mem,reg32                386,SD,UNDOC,ND,OBSOLETE IBTS             reg32,reg32              386,UNDOC,ND,OBSOLETE ICEBP                                     386,ND IDIV             rm8                      8086 IDIV             rm16                     8086 IDIV             rm32                     386 IDIV             rm64                     X86_64,LONG IMUL             rm8                      8086 IMUL             rm16                     8086 IMUL             rm32                     386 IMUL             rm64                     X86_64,LONG IMUL             reg16,mem                386 IMUL             reg16,reg16              386 IMUL             reg32,mem                386 IMUL             reg32,reg32              386 IMUL             reg64,mem                X86_64,LONG IMUL             reg64,reg64              X86_64,LONG IMUL             reg16,mem,imm8           186 IMUL             reg16,mem,sbyteword      186,ND IMUL             reg16,mem,imm16          186 IMUL             reg16,mem,imm            186,ND IMUL             reg16,reg16,imm8         186 IMUL             reg16,reg16,sbyteword    186,ND IMUL             reg16,reg16,imm16        186 IMUL             reg16,reg16,imm          186,ND IMUL             reg32,mem,imm8           386 IMUL             reg32,mem,sbytedword     386,ND IMUL             reg32,mem,imm32          386 IMUL             reg32,mem,imm            386,ND IMUL             reg32,reg32,imm8         386 IMUL             reg32,reg32,sbytedword   386,ND IMUL             reg32,reg32,imm32        386 IMUL             reg32,reg32,imm          386,ND IMUL             reg64,mem,imm8           X86_64,LONG IMUL             reg64,mem,sbytedword     X86_64,LONG,ND IMUL             reg64,mem,imm32          X86_64,LONG IMUL             reg64,mem,imm            X86_64,LONG,ND IMUL             reg64,reg64,imm8         X86_64,LONG IMUL             reg64,reg64,sbytedword   X86_64,LONG,ND IMUL             reg64,reg64,imm32        X86_64,LONG IMUL             reg64,reg64,imm          X86_64,LONG,ND IMUL             reg16,imm8               186 IMUL             reg16,sbyteword          186,ND IMUL             reg16,imm16              186 IMUL             reg16,imm                186,ND IMUL             reg32,imm8               386 IMUL             reg32,sbytedword         386,ND IMUL             reg32,imm32              386 IMUL             reg32,imm                386,ND IMUL             reg64,imm8               X86_64,LONG IMUL             reg64,sbytedword         X86_64,LONG,ND IMUL             reg64,imm32              X86_64,LONG IMUL             reg64,imm                X86_64,LONG,ND IN               reg_al,imm               8086 IN               reg_ax,imm               8086 IN               reg_eax,imm              386 IN               reg_al,reg_dx            8086 IN               reg_ax,reg_dx            8086 IN               reg_eax,reg_dx           386 INC              reg16                    8086,NOLONG INC              reg32                    386,NOLONG INC              rm8                      8086,LOCK INC              rm16                     8086,LOCK INC              rm32                     386,LOCK INC              rm64                     X86_64,LONG,LOCK INSB                                      186 INSD                                      386 INSW                                      186 INT              imm                      8086 INT01                                     386,ND INT1                                      386 INT03                                     8086,ND INT3                                      8086 INTO                                      8086,NOLONG INVD                                      486,PRIV INVPCID          reg32,mem128             INVPCID,PRIV,NOLONG INVPCID          reg64,mem128             INVPCID,PRIV,LONG INVLPG           mem                      486,PRIV INVLPGA          reg_ax,reg_ecx           X86_64,AMD,NOLONG INVLPGA          reg_eax,reg_ecx          X86_64,AMD INVLPGA          reg_rax,reg_ecx          X86_64,LONG,AMD INVLPGA                                   X86_64,AMD IRET                                      8086 IRETD                                     386 IRETQ                                     X86_64,LONG IRETW                                     8086 JCXZ             imm                      8086,NOLONG JECXZ            imm                      386 JRCXZ            imm                      X86_64,LONG JMP              imm|short                8086 JMP              imm                      8086,ND JMP              imm                      8086,BND JMP              imm|near                 8086,ND,BND JMP              imm|far                  8086,ND,NOLONG JMP              imm16                    8086,NOLONG,BND JMP              imm16|near               8086,ND,NOLONG,BND JMP              imm16|far                8086,ND,NOLONG JMP              imm32                    386,NOLONG,BND JMP              imm32|near               386,ND,NOLONG,BND JMP              imm32|far                386,ND,NOLONG JMP              imm64                    X86_64,LONG,BND JMP              imm64|near               X86_64,LONG,ND,BND JMP              imm:imm                  8086,NOLONG JMP              imm16:imm                8086,NOLONG JMP              imm:imm16                8086,NOLONG JMP              imm32:imm                386,NOLONG JMP              imm:imm32                386,NOLONG JMP              mem|far                  8086,NOLONG JMP              mem|far                  X86_64,LONG JMP              mem16|far                8086 JMP              mem32|far                386 JMP              mem64|far                X86_64,LONG JMP              mem|near                 8086,ND,BND JMP              rm16|near                8086,NOLONG,ND,BND JMP              rm32|near                386,NOLONG,ND,BND JMP              rm64|near                X86_64,LONG,ND,BND JMP              mem                      8086,BND JMP              rm16                     8086,NOLONG,BND JMP              rm32                     386,NOLONG,BND JMP              rm64                     X86_64,LONG,BND JMPE             imm                      IA64 JMPE             imm16                    IA64 JMPE             imm32                    IA64 JMPE             rm16                     IA64 JMPE             rm32                     IA64 LAHF                                      8086 LAR              reg16,mem                286,PROT,SW LAR              reg16,reg16              286,PROT LAR              reg16,reg32              386,PROT LAR              reg16,reg64              X86_64,LONG,PROT,ND LAR              reg32,mem                386,PROT,SW LAR              reg32,reg16              386,PROT LAR              reg32,reg32              386,PROT LAR              reg32,reg64              X86_64,LONG,PROT,ND LAR              reg64,mem                X86_64,LONG,PROT,SW LAR              reg64,reg16              X86_64,LONG,PROT LAR              reg64,reg32              X86_64,LONG,PROT LAR              reg64,reg64              X86_64,LONG,PROT LDS              reg16,mem                8086,NOLONG LDS              reg32,mem                386,NOLONG LEA              reg16,mem                8086,ANYSIZE LEA              reg32,mem                386,ANYSIZE LEA              reg64,mem                X86_64,LONG,ANYSIZE LEA              reg16,imm                8086,ND,ANYSIZE LEA              reg32,imm                386,ND,ANYSIZE LEA              reg64,imm                X86_64,LONG,ND,ANYSIZE LEAVE                                     186 LES              reg16,mem                8086,NOLONG LES              reg32,mem                386,NOLONG LFENCE                                    X86_64,LONG,AMD LFS              reg16,mem                386 LFS              reg32,mem                386 LFS              reg64,mem                X86_64,LONG LGDT             mem                      286,PRIV LGS              reg16,mem                386 LGS              reg32,mem                386 LGS              reg64,mem                X86_64,LONG LIDT             mem                      286,PRIV LLDT             mem                      286,PROT,PRIV LLDT             mem16                    286,PROT,PRIV LLDT             reg16                    286,PROT,PRIV LMSW             mem                      286,PRIV LMSW             mem16                    286,PRIV LMSW             reg16                    286,PRIV LOADALL                                   386,UNDOC,ND,OBSOLETE LOADALL286                                286,UNDOC,ND,OBSOLETE LODSB                                     8086 LODSD                                     386 LODSQ                                     X86_64,LONG LODSW                                     8086 LOOP             imm                      8086 LOOP             imm,reg_cx               8086,NOLONG LOOP             imm,reg_ecx              386 LOOP             imm,reg_rcx              X86_64,LONG LOOPE            imm                      8086 LOOPE            imm,reg_cx               8086,NOLONG LOOPE            imm,reg_ecx              386 LOOPE            imm,reg_rcx              X86_64,LONG LOOPNE           imm                      8086 LOOPNE           imm,reg_cx               8086,NOLONG LOOPNE           imm,reg_ecx              386 LOOPNE           imm,reg_rcx              X86_64,LONG LOOPNZ           imm                      8086 LOOPNZ           imm,reg_cx               8086,NOLONG LOOPNZ           imm,reg_ecx              386 LOOPNZ           imm,reg_rcx              X86_64,LONG LOOPZ            imm                      8086 LOOPZ            imm,reg_cx               8086,NOLONG LOOPZ            imm,reg_ecx              386 LOOPZ            imm,reg_rcx              X86_64,LONG LSL              reg16,mem                286,PROT,SW LSL              reg16,reg16              286,PROT LSL              reg16,reg32              386,PROT LSL              reg16,reg64              X86_64,LONG,PROT,ND LSL              reg32,mem                386,PROT,SW LSL              reg32,reg16              386,PROT LSL              reg32,reg32              386,PROT LSL              reg32,reg64              X86_64,LONG,PROT,ND LSL              reg64,mem                X86_64,LONG,PROT,SW LSL              reg64,reg16              X86_64,LONG,PROT LSL              reg64,reg32              X86_64,LONG,PROT LSL              reg64,reg64              X86_64,LONG,PROT LSS              reg16,mem                386 LSS              reg32,mem                386 LSS              reg64,mem                X86_64,LONG LTR              mem                      286,PROT,PRIV LTR              mem16                    286,PROT,PRIV LTR              reg16                    286,PROT,PRIV MFENCE                                    X86_64,LONG,AMD MONITOR                                   PRESCOTT MONITOR          reg_eax,reg_ecx,reg_edx  PRESCOTT,NOLONG,ND MONITOR          reg_rax,reg_ecx,reg_edx  X86_64,LONG,ND MONITORX                                  AMD MONITORX         reg_rax,reg_ecx,reg_edx  X86_64,LONG,AMD,ND MONITORX         reg_eax,reg_ecx,reg_edx  AMD,ND MONITORX         reg_ax,reg_ecx,reg_edx   AMD,ND MOV              mem,reg_sreg             8086,SW MOV              reg16,reg_sreg           8086 MOV              reg32,reg_sreg           386 MOV              reg64,reg_sreg           X86_64,LONG,OPT,ND MOV              rm64,reg_sreg            X86_64,LONG MOV              reg_sreg,mem             8086,SW MOV              reg_sreg,reg16           8086,OPT,ND MOV              reg_sreg,reg32           386,OPT,ND MOV              reg_sreg,reg64           X86_64,LONG,OPT,ND MOV              reg_sreg,reg16           8086 MOV              reg_sreg,reg32           386 MOV              reg_sreg,rm64            X86_64,LONG MOV              reg_al,mem_offs          8086 MOV              reg_ax,mem_offs          8086 MOV              reg_eax,mem_offs         386 MOV              reg_rax,mem_offs         X86_64,LONG MOV              mem_offs,reg_al          8086,NOHLE MOV              mem_offs,reg_ax          8086,NOHLE MOV              mem_offs,reg_eax         386,NOHLE MOV              mem_offs,reg_rax         X86_64,LONG,NOHLE MOV              reg32,reg_creg           386,PRIV,NOLONG MOV              reg64,reg_creg           X86_64,LONG,PRIV MOV              reg_creg,reg32           386,PRIV,NOLONG MOV              reg_creg,reg64           X86_64,LONG,PRIV MOV              reg32,reg_dreg           386,PRIV,NOLONG MOV              reg64,reg_dreg           X86_64,LONG,PRIV MOV              reg_dreg,reg32           386,PRIV,NOLONG MOV              reg_dreg,reg64           X86_64,LONG,PRIV MOV              reg32,reg_treg           386,NOLONG,ND MOV              reg_treg,reg32           386,NOLONG,ND MOV              mem,reg8                 8086 MOV              reg8,reg8                8086 MOV              mem,reg16                8086 MOV              reg16,reg16              8086 MOV              mem,reg32                386 MOV              reg32,reg32              386 MOV              mem,reg64                X86_64,LONG MOV              reg64,reg64              X86_64,LONG MOV              reg8,mem                 8086 MOV              reg8,reg8                8086 MOV              reg16,mem                8086 MOV              reg16,reg16              8086 MOV              reg32,mem                386 MOV              reg32,reg32              386 MOV              reg64,mem                X86_64,LONG MOV              reg64,reg64              X86_64,LONG MOV              reg8,imm                 8086 MOV              reg16,imm                8086 MOV              reg32,imm                386 MOV              reg64,udword             X86_64,LONG,OPT,ND MOV              reg64,sdword             X86_64,LONG,OPT,ND MOV              reg64,imm                X86_64,LONG MOV              rm8,imm                  8086 MOV              rm16,imm                 8086 MOV              rm32,imm                 386 MOV              rm64,imm                 X86_64,LONG MOV              rm64,imm32               X86_64,LONG MOV              mem,imm8                 8086 MOV              mem,imm16                8086 MOV              mem,imm32                386 MOVD             mmxreg,rm32              PENT,MMX,SD MOVD             rm32,mmxreg              PENT,MMX,SD MOVD             mmxreg,rm64              X86_64,LONG,MMX,SX,ND MOVD             rm64,mmxreg              X86_64,LONG,MMX,SX,ND MOVQ             mmxreg,mmxrm             PENT,MMX MOVQ             mmxrm,mmxreg             PENT,MMX MOVQ             mmxreg,rm64              X86_64,LONG,MMX MOVQ             rm64,mmxreg              X86_64,LONG,MMX MOVSB                                     8086 MOVSD                                     386 MOVSQ                                     X86_64,LONG MOVSW                                     8086 MOVSX            reg16,mem                386 MOVSX            reg16,reg8               386 MOVSX            reg32,rm8                386 MOVSX            reg32,rm16               386 MOVSX            reg64,rm8                X86_64,LONG MOVSX            reg64,rm16               X86_64,LONG MOVSXD           reg64,rm32               X86_64,LONG MOVSX            reg64,rm32               X86_64,LONG,ND MOVZX            reg16,mem                386 MOVZX            reg16,reg8               386 MOVZX            reg32,rm8                386 MOVZX            reg32,rm16               386 MOVZX            reg64,rm8                X86_64,LONG MOVZX            reg64,rm16               X86_64,LONG MUL              rm8                      8086 MUL              rm16                     8086 MUL              rm32                     386 MUL              rm64                     X86_64,LONG MWAIT                                     PRESCOTT MWAIT            reg_eax,reg_ecx          PRESCOTT,ND MWAITX                                    AMD MWAITX           reg_eax,reg_ecx          AMD,ND NEG              rm8                      8086,LOCK NEG              rm16                     8086,LOCK NEG              rm32                     386,LOCK NEG              rm64                     X86_64,LONG,LOCK NOP                                       8086 NOP              rm16                     P6 NOP              rm32                     P6 NOP              rm64                     X86_64,LONG NOT              rm8                      8086,LOCK NOT              rm16                     8086,LOCK NOT              rm32                     386,LOCK NOT              rm64                     X86_64,LONG,LOCK OR               mem,reg8                 8086,LOCK OR               reg8,reg8                8086 OR               mem,reg16                8086,LOCK OR               reg16,reg16              8086 OR               mem,reg32                386,LOCK OR               reg32,reg32              386 OR               mem,reg64                X86_64,LONG,LOCK OR               reg64,reg64              X86_64,LONG OR               reg8,mem                 8086 OR               reg8,reg8                8086 OR               reg16,mem                8086 OR               reg16,reg16              8086 OR               reg32,mem                386 OR               reg32,reg32              386 OR               reg64,mem                X86_64,LONG OR               reg64,reg64              X86_64,LONG OR               rm16,imm8                8086,LOCK OR               rm32,imm8                386,LOCK OR               rm64,imm8                X86_64,LONG,LOCK OR               reg_al,imm               8086 OR               reg_ax,sbyteword         8086,ND OR               reg_ax,imm               8086 OR               reg_eax,sbytedword       386,ND OR               reg_eax,imm              386 OR               reg_rax,sbytedword       X86_64,LONG,ND OR               reg_rax,imm              X86_64,LONG OR               rm8,imm                  8086,LOCK OR               rm16,sbyteword           8086,LOCK,ND OR               rm16,imm                 8086,LOCK OR               rm32,sbytedword          386,LOCK,ND OR               rm32,imm                 386,LOCK OR               rm64,sbytedword          X86_64,LONG,LOCK,ND OR               rm64,imm                 X86_64,LONG,LOCK OR               mem,imm8                 8086,LOCK OR               mem,sbyteword16          8086,LOCK,ND OR               mem,imm16                8086,LOCK OR               mem,sbytedword32         386,LOCK,ND OR               mem,imm32                386,LOCK OR               rm8,imm                  8086,LOCK,ND,NOLONG OUT              imm,reg_al               8086 OUT              imm,reg_ax               8086 OUT              imm,reg_eax              386 OUT              reg_dx,reg_al            8086 OUT              reg_dx,reg_ax            8086 OUT              reg_dx,reg_eax           386 OUTSB                                     186 OUTSD                                     386 OUTSW                                     186 PACKSSDW         mmxreg,mmxrm             PENT,MMX PACKSSWB         mmxreg,mmxrm             PENT,MMX PACKUSWB         mmxreg,mmxrm             PENT,MMX PADDB            mmxreg,mmxrm             PENT,MMX PADDD            mmxreg,mmxrm             PENT,MMX PADDSB           mmxreg,mmxrm             PENT,MMX PADDSIW          mmxreg,mmxrm             PENT,MMX,CYRIX PADDSW           mmxreg,mmxrm             PENT,MMX PADDUSB          mmxreg,mmxrm             PENT,MMX PADDUSW          mmxreg,mmxrm             PENT,MMX PADDW            mmxreg,mmxrm             PENT,MMX PAND             mmxreg,mmxrm             PENT,MMX PANDN            mmxreg,mmxrm             PENT,MMX PAUSE                                     8086 PAVEB            mmxreg,mmxrm             PENT,MMX,CYRIX PAVGUSB          mmxreg,mmxrm             PENT,3DNOW PCMPEQB          mmxreg,mmxrm             PENT,MMX PCMPEQD          mmxreg,mmxrm             PENT,MMX PCMPEQW          mmxreg,mmxrm             PENT,MMX PCMPGTB          mmxreg,mmxrm             PENT,MMX PCMPGTD          mmxreg,mmxrm             PENT,MMX PCMPGTW          mmxreg,mmxrm             PENT,MMX PDISTIB          mmxreg,mem               PENT,MMX,CYRIX PF2ID            mmxreg,mmxrm             PENT,3DNOW PFACC            mmxreg,mmxrm             PENT,3DNOW PFADD            mmxreg,mmxrm             PENT,3DNOW PFCMPEQ          mmxreg,mmxrm             PENT,3DNOW PFCMPGE          mmxreg,mmxrm             PENT,3DNOW PFCMPGT          mmxreg,mmxrm             PENT,3DNOW PFMAX            mmxreg,mmxrm             PENT,3DNOW PFMIN            mmxreg,mmxrm             PENT,3DNOW PFMUL            mmxreg,mmxrm             PENT,3DNOW PFRCP            mmxreg,mmxrm             PENT,3DNOW PFRCPIT1         mmxreg,mmxrm             PENT,3DNOW PFRCPIT2         mmxreg,mmxrm             PENT,3DNOW PFRSQIT1         mmxreg,mmxrm             PENT,3DNOW PFRSQRT          mmxreg,mmxrm             PENT,3DNOW PFSUB            mmxreg,mmxrm             PENT,3DNOW PFSUBR           mmxreg,mmxrm             PENT,3DNOW PI2FD            mmxreg,mmxrm             PENT,3DNOW PMACHRIW         mmxreg,mem               PENT,MMX,CYRIX PMADDWD          mmxreg,mmxrm             PENT,MMX PMAGW            mmxreg,mmxrm             PENT,MMX,CYRIX PMULHRIW         mmxreg,mmxrm             PENT,MMX,CYRIX PMULHRWA         mmxreg,mmxrm             PENT,3DNOW PMULHRWC         mmxreg,mmxrm             PENT,MMX,CYRIX PMULHW           mmxreg,mmxrm             PENT,MMX PMULLW           mmxreg,mmxrm             PENT,MMX PMVGEZB          mmxreg,mem               PENT,MMX,CYRIX PMVLZB           mmxreg,mem               PENT,MMX,CYRIX PMVNZB           mmxreg,mem               PENT,MMX,CYRIX PMVZB            mmxreg,mem               PENT,MMX,CYRIX POP              reg16                    8086 POP              reg32                    386,NOLONG POP              reg64                    X86_64,LONG POP              rm16                     8086 POP              rm32                     386,NOLONG POP              rm64                     X86_64,LONG POP              reg_es                   8086,NOLONG POP              reg_cs                   8086,UNDOC,ND,OBSOLETE POP              reg_ss                   8086,NOLONG POP              reg_ds                   8086,NOLONG POP              reg_fs                   386 POP              reg_gs                   386 POPA                                      186,NOLONG POPAD                                     386,NOLONG POPAW                                     186,NOLONG POPF                                      8086 POPFD                                     386,NOLONG POPFQ                                     X86_64,LONG POPFW                                     8086 POR              mmxreg,mmxrm             PENT,MMX PREFETCH         mem                      PENT,3DNOW PREFETCHW        mem                      PENT,3DNOW PSLLD            mmxreg,mmxrm             PENT,MMX PSLLD            mmxreg,imm               PENT,MMX PSLLQ            mmxreg,mmxrm             PENT,MMX PSLLQ            mmxreg,imm               PENT,MMX PSLLW            mmxreg,mmxrm             PENT,MMX PSLLW            mmxreg,imm               PENT,MMX PSRAD            mmxreg,mmxrm             PENT,MMX PSRAD            mmxreg,imm               PENT,MMX PSRAW            mmxreg,mmxrm             PENT,MMX PSRAW            mmxreg,imm               PENT,MMX PSRLD            mmxreg,mmxrm             PENT,MMX PSRLD            mmxreg,imm               PENT,MMX PSRLQ            mmxreg,mmxrm             PENT,MMX PSRLQ            mmxreg,imm               PENT,MMX PSRLW            mmxreg,mmxrm             PENT,MMX PSRLW            mmxreg,imm               PENT,MMX PSUBB            mmxreg,mmxrm             PENT,MMX PSUBD            mmxreg,mmxrm             PENT,MMX PSUBSB           mmxreg,mmxrm             PENT,MMX PSUBSIW          mmxreg,mmxrm             PENT,MMX,CYRIX PSUBSW           mmxreg,mmxrm             PENT,MMX PSUBUSB          mmxreg,mmxrm             PENT,MMX PSUBUSW          mmxreg,mmxrm             PENT,MMX PSUBW            mmxreg,mmxrm             PENT,MMX PUNPCKHBW        mmxreg,mmxrm             PENT,MMX PUNPCKHDQ        mmxreg,mmxrm             PENT,MMX PUNPCKHWD        mmxreg,mmxrm             PENT,MMX PUNPCKLBW        mmxreg,mmxrm             PENT,MMX PUNPCKLDQ        mmxreg,mmxrm             PENT,MMX PUNPCKLWD        mmxreg,mmxrm             PENT,MMX PUSH             reg16                    8086 PUSH             reg32                    386,NOLONG PUSH             reg64                    X86_64,LONG PUSH             rm16                     8086 PUSH             rm32                     386,NOLONG PUSH             rm64                     X86_64,LONG PUSH             reg_es                   8086,NOLONG PUSH             reg_cs                   8086,NOLONG PUSH             reg_ss                   8086,NOLONG PUSH             reg_ds                   8086,NOLONG PUSH             reg_fs                   386 PUSH             reg_gs                   386 PUSH             imm8                     186 PUSH             sbyteword16              186,AR0,SIZE,ND PUSH             imm16                    186,AR0,SIZE PUSH             sbytedword32             386,NOLONG,AR0,SIZE,ND PUSH             imm32                    386,NOLONG,AR0,SIZE PUSH             sbytedword32             386,NOLONG,SD,ND PUSH             imm32                    386,NOLONG,SD PUSH             sbytedword64             X86_64,LONG,AR0,SIZE,ND PUSH             imm64                    X86_64,LONG,AR0,SIZE PUSH             sbytedword32             X86_64,LONG,AR0,SIZE,ND PUSH             imm32                    X86_64,LONG,AR0,SIZE PUSHA                                     186,NOLONG PUSHAD                                    386,NOLONG PUSHAW                                    186,NOLONG PUSHF                                     8086 PUSHFD                                    386,NOLONG PUSHFQ                                    X86_64,LONG PUSHFW                                    8086 PXOR             mmxreg,mmxrm             PENT,MMX RCL              rm8,unity                8086 RCL              rm8,reg_cl               8086 RCL              rm8,imm8                 186 RCL              rm16,unity               8086 RCL              rm16,reg_cl              8086 RCL              rm16,imm8                186 RCL              rm32,unity               386 RCL              rm32,reg_cl              386 RCL              rm32,imm8                386 RCL              rm64,unity               X86_64,LONG RCL              rm64,reg_cl              X86_64,LONG RCL              rm64,imm8                X86_64,LONG RCR              rm8,unity                8086 RCR              rm8,reg_cl               8086 RCR              rm8,imm8                 186 RCR              rm16,unity               8086 RCR              rm16,reg_cl              8086 RCR              rm16,imm8                186 RCR              rm32,unity               386 RCR              rm32,reg_cl              386 RCR              rm32,imm8                386 RCR              rm64,unity               X86_64,LONG RCR              rm64,reg_cl              X86_64,LONG RCR              rm64,imm8                X86_64,LONG RDSHR            rm32                     P6,CYRIX,SMM RDMSR                                     PENT,PRIV RDPMC                                     P6 RDTSC                                     PENT RDTSCP                                    X86_64 RET                                       8086,BND RET              imm                      8086,SW,BND RETF                                      8086 RETF             imm                      8086,SW RETN                                      8086,BND RETN             imm                      8086,SW,BND RETW                                      8086,BND RETW             imm                      8086,SW,BND RETFW                                     8086 RETFW            imm                      8086,SW RETNW                                     8086,BND RETNW            imm                      8086,SW,BND RETD                                      8086,BND,NOLONG RETD             imm                      8086,SW,BND,NOLONG RETFD                                     8086 RETFD            imm                      8086,SW RETND                                     8086,BND,NOLONG RETND            imm                      8086,SW,BND,NOLONG RETQ                                      X86_64,LONG,BND RETQ             imm                      X86_64,LONG,SW,BND RETFQ                                     X86_64,LONG RETFQ            imm                      X86_64,LONG,SW RETNQ                                     X86_64,LONG,BND RETNQ            imm                      X86_64,LONG,SW,BND ROL              rm8,unity                8086 ROL              rm8,reg_cl               8086 ROL              rm8,imm8                 186 ROL              rm16,unity               8086 ROL              rm16,reg_cl              8086 ROL              rm16,imm8                186 ROL              rm32,unity               386 ROL              rm32,reg_cl              386 ROL              rm32,imm8                386 ROL              rm64,unity               X86_64,LONG ROL              rm64,reg_cl              X86_64,LONG ROL              rm64,imm8                X86_64,LONG ROR              rm8,unity                8086 ROR              rm8,reg_cl               8086 ROR              rm8,imm8                 186 ROR              rm16,unity               8086 ROR              rm16,reg_cl              8086 ROR              rm16,imm8                186 ROR              rm32,unity               386 ROR              rm32,reg_cl              386 ROR              rm32,imm8                386 ROR              rm64,unity               X86_64,LONG ROR              rm64,reg_cl              X86_64,LONG ROR              rm64,imm8                X86_64,LONG RDM                                       P6,CYRIX,ND RSDC             reg_sreg,mem80           486,CYRIX,SMM RSLDT            mem80                    486,CYRIX,SMM RSM                                       PENT,SMM RSTS             mem80                    486,CYRIX,SMM SAHF                                      8086 SAL              rm8,unity                8086,ND SAL              rm8,reg_cl               8086,ND SAL              rm8,imm8                 186,ND SAL              rm16,unity               8086,ND SAL              rm16,reg_cl              8086,ND SAL              rm16,imm8                186,ND SAL              rm32,unity               386,ND SAL              rm32,reg_cl              386,ND SAL              rm32,imm8                386,ND SAL              rm64,unity               X86_64,LONG,ND SAL              rm64,reg_cl              X86_64,LONG,ND SAL              rm64,imm8                X86_64,LONG,ND SALC                                      8086,UNDOC SAR              rm8,unity                8086 SAR              rm8,reg_cl               8086 SAR              rm8,imm8                 186 SAR              rm16,unity               8086 SAR              rm16,reg_cl              8086 SAR              rm16,imm8                186 SAR              rm32,unity               386 SAR              rm32,reg_cl              386 SAR              rm32,imm8                386 SAR              rm64,unity               X86_64,LONG SAR              rm64,reg_cl              X86_64,LONG SAR              rm64,imm8                X86_64,LONG SBB              mem,reg8                 8086,LOCK SBB              reg8,reg8                8086 SBB              mem,reg16                8086,LOCK SBB              reg16,reg16              8086 SBB              mem,reg32                386,LOCK SBB              reg32,reg32              386 SBB              mem,reg64                X86_64,LONG,LOCK SBB              reg64,reg64              X86_64,LONG SBB              reg8,mem                 8086 SBB              reg8,reg8                8086 SBB              reg16,mem                8086 SBB              reg16,reg16              8086 SBB              reg32,mem                386 SBB              reg32,reg32              386 SBB              reg64,mem                X86_64,LONG SBB              reg64,reg64              X86_64,LONG SBB              rm16,imm8                8086,LOCK SBB              rm32,imm8                386,LOCK SBB              rm64,imm8                X86_64,LONG,LOCK SBB              reg_al,imm               8086 SBB              reg_ax,sbyteword         8086,ND SBB              reg_ax,imm               8086 SBB              reg_eax,sbytedword       386,ND SBB              reg_eax,imm              386 SBB              reg_rax,sbytedword       X86_64,LONG,ND SBB              reg_rax,imm              X86_64,LONG SBB              rm8,imm                  8086,LOCK SBB              rm16,sbyteword           8086,LOCK,ND SBB              rm16,imm                 8086,LOCK SBB              rm32,sbytedword          386,LOCK,ND SBB              rm32,imm                 386,LOCK SBB              rm64,sbytedword          X86_64,LONG,LOCK,ND SBB              rm64,imm                 X86_64,LONG,LOCK SBB              mem,imm8                 8086,LOCK SBB              mem,sbyteword16          8086,LOCK,ND SBB              mem,imm16                8086,LOCK SBB              mem,sbytedword32         386,LOCK,ND SBB              mem,imm32                386,LOCK SBB              rm8,imm                  8086,LOCK,ND,NOLONG SCASB                                     8086 SCASD                                     386 SCASQ                                     X86_64,LONG SCASW                                     8086 SFENCE                                    X86_64,LONG,AMD SGDT             mem                      286 SHL              rm8,unity                8086 SHL              rm8,reg_cl               8086 SHL              rm8,imm8                 186 SHL              rm16,unity               8086 SHL              rm16,reg_cl              8086 SHL              rm16,imm8                186 SHL              rm32,unity               386 SHL              rm32,reg_cl              386 SHL              rm32,imm8                386 SHL              rm64,unity               X86_64,LONG SHL              rm64,reg_cl              X86_64,LONG SHL              rm64,imm8                X86_64,LONG SHLD             mem,reg16,imm            386 SHLD             reg16,reg16,imm          386 SHLD             mem,reg32,imm            386 SHLD             reg32,reg32,imm          386 SHLD             mem,reg64,imm            X86_64,LONG SHLD             reg64,reg64,imm          X86_64,LONG SHLD             mem,reg16,reg_cl         386 SHLD             reg16,reg16,reg_cl       386 SHLD             mem,reg32,reg_cl         386 SHLD             reg32,reg32,reg_cl       386 SHLD             mem,reg64,reg_cl         X86_64,LONG SHLD             reg64,reg64,reg_cl       X86_64,LONG SHR              rm8,unity                8086 SHR              rm8,reg_cl               8086 SHR              rm8,imm8                 186 SHR              rm16,unity               8086 SHR              rm16,reg_cl              8086 SHR              rm16,imm8                186 SHR              rm32,unity               386 SHR              rm32,reg_cl              386 SHR              rm32,imm8                386 SHR              rm64,unity               X86_64,LONG SHR              rm64,reg_cl              X86_64,LONG SHR              rm64,imm8                X86_64,LONG SHRD             mem,reg16,imm            386 SHRD             reg16,reg16,imm          386 SHRD             mem,reg32,imm            386 SHRD             reg32,reg32,imm          386 SHRD             mem,reg64,imm            X86_64,LONG SHRD             reg64,reg64,imm          X86_64,LONG SHRD             mem,reg16,reg_cl         386 SHRD             reg16,reg16,reg_cl       386 SHRD             mem,reg32,reg_cl         386 SHRD             reg32,reg32,reg_cl       386 SHRD             mem,reg64,reg_cl         X86_64,LONG SHRD             reg64,reg64,reg_cl       X86_64,LONG SIDT             mem                      286 SLDT             mem                      286 SLDT             mem16                    286 SLDT             reg16                    286 SLDT             reg32                    386 SLDT             reg64                    X86_64,LONG,ND SLDT             reg64                    X86_64,LONG SKINIT                                    X86_64,LONG SMI                                       386,UNDOC SMINT                                     P6,CYRIX,ND SMINTOLD                                  486,CYRIX,ND,OBSOLETE SMSW             mem                      286 SMSW             mem16                    286 SMSW             reg16                    286 SMSW             reg32                    386 SMSW             reg64                    X86_64,LONG STC                                       8086 STD                                       8086 STI                                       8086 STOSB                                     8086 STOSD                                     386 STOSQ                                     X86_64,LONG STOSW                                     8086 STR              mem                      286,PROT STR              mem16                    286,PROT STR              reg16                    286,PROT STR              reg32                    386,PROT STR              reg64                    X86_64,LONG SUB              mem,reg8                 8086,LOCK SUB              reg8,reg8                8086 SUB              mem,reg16                8086,LOCK SUB              reg16,reg16              8086 SUB              mem,reg32                386,LOCK SUB              reg32,reg32              386 SUB              mem,reg64                X86_64,LONG,LOCK SUB              reg64,reg64              X86_64,LONG SUB              reg8,mem                 8086 SUB              reg8,reg8                8086 SUB              reg16,mem                8086 SUB              reg16,reg16              8086 SUB              reg32,mem                386 SUB              reg32,reg32              386 SUB              reg64,mem                X86_64,LONG SUB              reg64,reg64              X86_64,LONG SUB              rm16,imm8                8086,LOCK SUB              rm32,imm8                386,LOCK SUB              rm64,imm8                X86_64,LONG,LOCK SUB              reg_al,imm               8086 SUB              reg_ax,sbyteword         8086,ND SUB              reg_ax,imm               8086 SUB              reg_eax,sbytedword       386,ND SUB              reg_eax,imm              386 SUB              reg_rax,sbytedword       X86_64,LONG,ND SUB              reg_rax,imm              X86_64,LONG SUB              rm8,imm                  8086,LOCK SUB              rm16,sbyteword           8086,LOCK,ND SUB              rm16,imm                 8086,LOCK SUB              rm32,sbytedword          386,LOCK,ND SUB              rm32,imm                 386,LOCK SUB              rm64,sbytedword          X86_64,LONG,LOCK,ND SUB              rm64,imm                 X86_64,LONG,LOCK SUB              mem,imm8                 8086,LOCK SUB              mem,sbyteword16          8086,LOCK,ND SUB              mem,imm16                8086,LOCK SUB              mem,sbytedword32         386,LOCK,ND SUB              mem,imm32                386,LOCK SUB              rm8,imm                  8086,LOCK,ND,NOLONG SVDC             mem80,reg_sreg           486,CYRIX,SMM SVLDT            mem80                    486,CYRIX,SMM,ND SVTS             mem80                    486,CYRIX,SMM SWAPGS                                    X86_64,LONG SYSCALL                                   P6,AMD SYSENTER                                  P6 SYSEXIT                                   P6,PRIV SYSRET                                    P6,PRIV,AMD TEST             mem,reg8                 8086 TEST             reg8,reg8                8086 TEST             mem,reg16                8086 TEST             reg16,reg16              8086 TEST             mem,reg32                386 TEST             reg32,reg32              386 TEST             mem,reg64                X86_64,LONG TEST             reg64,reg64              X86_64,LONG TEST             reg8,mem                 8086 TEST             reg16,mem                8086 TEST             reg32,mem                386 TEST             reg64,mem                X86_64,LONG TEST             reg_al,imm               8086 TEST             reg_ax,imm               8086 TEST             reg_eax,imm              386 TEST             reg_rax,imm              X86_64,LONG TEST             rm8,imm                  8086 TEST             rm16,imm                 8086 TEST             rm32,imm                 386 TEST             rm64,imm                 X86_64,LONG TEST             mem,imm8                 8086 TEST             mem,imm16                8086 TEST             mem,imm32                386 UD0                                       186,OBSOLETE UD0              reg16,rm16               186 UD0              reg32,rm32               186 UD0              reg64,rm64               186 UD1              reg16,rm16               186 UD1              reg32,rm32               186 UD1              reg64,rm64               186 UD1                                       186,ND UD2B                                      186,ND UD2B             reg16,rm16               186,ND UD2B             reg32,rm32               186,ND UD2B             reg64,rm64               186,ND UD2                                       186 UD2A                                      186,ND UMOV             mem,reg8                 386,UNDOC,ND UMOV             reg8,reg8                386,UNDOC,ND UMOV             mem,reg16                386,UNDOC,ND UMOV             reg16,reg16              386,UNDOC,ND UMOV             mem,reg32                386,UNDOC,ND UMOV             reg32,reg32              386,UNDOC,ND UMOV             reg8,mem                 386,UNDOC,ND UMOV             reg8,reg8                386,UNDOC,ND UMOV             reg16,mem                386,UNDOC,ND UMOV             reg16,reg16              386,UNDOC,ND UMOV             reg32,mem                386,UNDOC,ND UMOV             reg32,reg32              386,UNDOC,ND VERR             mem                      286,PROT VERR             mem16                    286,PROT VERR             reg16                    286,PROT VERW             mem                      286,PROT VERW             mem16                    286,PROT VERW             reg16                    286,PROT FWAIT                                     8086 WBINVD                                    486,PRIV WRSHR            rm32                     P6,CYRIX,SMM WRMSR                                     PENT,PRIV XADD             mem,reg8                 486,LOCK XADD             reg8,reg8                486 XADD             mem,reg16                486,LOCK XADD             reg16,reg16              486 XADD             mem,reg32                486,LOCK XADD             reg32,reg32              486 XADD             mem,reg64                X86_64,LONG,LOCK XADD             reg64,reg64              X86_64,LONG XBTS             reg16,mem                386,SW,UNDOC,ND XBTS             reg16,reg16              386,UNDOC,ND XBTS             reg32,mem                386,SD,UNDOC,ND XBTS             reg32,reg32              386,UNDOC,ND XCHG             reg_ax,reg16             8086 XCHG             reg_eax,reg32na          386 XCHG             reg_rax,reg64            X86_64,LONG XCHG             reg16,reg_ax             8086 XCHG             reg32na,reg_eax          386 XCHG             reg64,reg_rax            X86_64,LONG XCHG             reg_eax,reg_eax          386,NOLONG XCHG             reg8,mem                 8086,LOCK XCHG             reg8,reg8                8086 XCHG             reg16,mem                8086,LOCK XCHG             reg16,reg16              8086 XCHG             reg32,mem                386,LOCK XCHG             reg32,reg32              386 XCHG             reg64,mem                X86_64,LONG,LOCK XCHG             reg64,reg64              X86_64,LONG XCHG             mem,reg8                 8086,LOCK XCHG             reg8,reg8                8086 XCHG             mem,reg16                8086,LOCK XCHG             reg16,reg16              8086 XCHG             mem,reg32                386,LOCK XCHG             reg32,reg32              386 XCHG             mem,reg64                X86_64,LONG,LOCK XCHG             reg64,reg64              X86_64,LONG XLATB                                     8086 XLAT                                      8086 XOR              mem,reg8                 8086,LOCK XOR              reg8,reg8                8086 XOR              mem,reg16                8086,LOCK XOR              reg16,reg16              8086 XOR              mem,reg32                386,LOCK XOR              reg32,reg32              386 XOR              mem,reg64                X86_64,LONG,LOCK XOR              reg64,reg64              X86_64,LONG XOR              reg8,mem                 8086 XOR              reg8,reg8                8086 XOR              reg16,mem                8086 XOR              reg16,reg16              8086 XOR              reg32,mem                386 XOR              reg32,reg32              386 XOR              reg64,mem                X86_64,LONG XOR              reg64,reg64              X86_64,LONG XOR              rm16,imm8                8086,LOCK XOR              rm32,imm8                386,LOCK XOR              rm64,imm8                X86_64,LONG,LOCK XOR              reg_al,imm               8086 XOR              reg_ax,sbyteword         8086,ND XOR              reg_ax,imm               8086 XOR              reg_eax,sbytedword       386,ND XOR              reg_eax,imm              386 XOR              reg_rax,sbytedword       X86_64,LONG,ND XOR              reg_rax,imm              X86_64,LONG XOR              rm8,imm                  8086,LOCK XOR              rm16,sbyteword           8086,LOCK,ND XOR              rm16,imm                 8086,LOCK XOR              rm32,sbytedword          386,LOCK,ND XOR              rm32,imm                 386,LOCK XOR              rm64,sbytedword          X86_64,LONG,LOCK,ND XOR              rm64,imm                 X86_64,LONG,LOCK XOR              mem,imm8                 8086,LOCK XOR              mem,sbyteword16          8086,LOCK,ND XOR              mem,imm16                8086,LOCK XOR              mem,sbytedword32         386,LOCK,ND XOR              mem,imm32                386,LOCK XOR              rm8,imm                  8086,LOCK,ND,NOLONG CMOVcc           reg16,mem                P6 CMOVcc           reg16,reg16              P6 CMOVcc           reg32,mem                P6 CMOVcc           reg32,reg32              P6 CMOVcc           reg64,mem                X86_64,LONG CMOVcc           reg64,reg64              X86_64,LONG Jcc              imm|near                 386,BND Jcc              imm16|near               386,NOLONG,BND Jcc              imm32|near               386,NOLONG,BND Jcc              imm64|near               X86_64,LONG,BND Jcc              imm|short                8086,ND,BND Jcc              imm                      8086,ND,BND Jcc              imm                      386,ND,BND Jcc              imm                      8086,ND,BND Jcc              imm                      8086,BND SETcc            mem                      386 SETcc            reg8                     386
subh B.1.3 :section-B.1.3
n Katmaispn Streamingspn SIMDspn instructionsspn (SSEspdadaspn a.k.a.spn KNI,spn XMM,spn MMX2)
code
ADDPS            xmmreg,xmmrm128          KATMAI,SSE ADDSS            xmmreg,xmmrm32           KATMAI,SSE ANDNPS           xmmreg,xmmrm128          KATMAI,SSE ANDPS            xmmreg,xmmrm128          KATMAI,SSE CMPEQPS          xmmreg,xmmrm128          KATMAI,SSE CMPEQSS          xmmreg,xmmrm32           KATMAI,SSE CMPLEPS          xmmreg,xmmrm128          KATMAI,SSE CMPLESS          xmmreg,xmmrm32           KATMAI,SSE CMPLTPS          xmmreg,xmmrm128          KATMAI,SSE CMPLTSS          xmmreg,xmmrm32           KATMAI,SSE CMPNEQPS         xmmreg,xmmrm128          KATMAI,SSE CMPNEQSS         xmmreg,xmmrm32           KATMAI,SSE CMPNLEPS         xmmreg,xmmrm128          KATMAI,SSE CMPNLESS         xmmreg,xmmrm32           KATMAI,SSE CMPNLTPS         xmmreg,xmmrm128          KATMAI,SSE CMPNLTSS         xmmreg,xmmrm32           KATMAI,SSE CMPORDPS         xmmreg,xmmrm128          KATMAI,SSE CMPORDSS         xmmreg,xmmrm32           KATMAI,SSE CMPUNORDPS       xmmreg,xmmrm128          KATMAI,SSE CMPUNORDSS       xmmreg,xmmrm32           KATMAI,SSE CMPPS            xmmreg,xmmrm128,imm8     KATMAI,SSE CMPSS            xmmreg,xmmrm32,imm8      KATMAI,SSE COMISS           xmmreg,xmmrm32           KATMAI,SSE CVTPI2PS         xmmreg,mmxrm64           KATMAI,SSE,MMX CVTPS2PI         mmxreg,xmmrm64           KATMAI,SSE,MMX CVTSI2SS         xmmreg,mem               KATMAI,SSE,SD,AR1,ND CVTSI2SS         xmmreg,rm32              KATMAI,SSE,SD,AR1 CVTSI2SS         xmmreg,rm64              X86_64,LONG,SSE,AR1 CVTSS2SI         reg32,xmmreg             KATMAI,SSE,SD,AR1 CVTSS2SI         reg32,mem                KATMAI,SSE,SD,AR1 CVTSS2SI         reg64,xmmreg             X86_64,LONG,SSE,SD,AR1 CVTSS2SI         reg64,mem                X86_64,LONG,SSE,SD,AR1 CVTTPS2PI        mmxreg,xmmrm             KATMAI,SSE,MMX CVTTSS2SI        reg32,xmmrm              KATMAI,SSE,SD,AR1 CVTTSS2SI        reg64,xmmrm              X86_64,LONG,SSE,SD,AR1 DIVPS            xmmreg,xmmrm128          KATMAI,SSE DIVSS            xmmreg,xmmrm32           KATMAI,SSE LDMXCSR          mem32                    KATMAI,SSE MAXPS            xmmreg,xmmrm128          KATMAI,SSE MAXSS            xmmreg,xmmrm32           KATMAI,SSE MINPS            xmmreg,xmmrm128          KATMAI,SSE MINSS            xmmreg,xmmrm32           KATMAI,SSE MOVAPS           xmmreg,xmmrm128          KATMAI,SSE MOVAPS           xmmrm128,xmmreg          KATMAI,SSE MOVHPS           xmmreg,mem64             KATMAI,SSE MOVHPS           mem64,xmmreg             KATMAI,SSE MOVLHPS          xmmreg,xmmreg            KATMAI,SSE MOVLPS           xmmreg,mem64             KATMAI,SSE MOVLPS           mem64,xmmreg             KATMAI,SSE MOVHLPS          xmmreg,xmmreg            KATMAI,SSE MOVMSKPS         reg32,xmmreg             KATMAI,SSE MOVMSKPS         reg64,xmmreg             X86_64,LONG,SSE MOVNTPS          mem128,xmmreg            KATMAI,SSE MOVSS            xmmreg,xmmrm32           KATMAI,SSE MOVSS            xmmrm32,xmmreg           KATMAI,SSE MOVUPS           xmmreg,xmmrm128          KATMAI,SSE MOVUPS           xmmrm128,xmmreg          KATMAI,SSE MULPS            xmmreg,xmmrm128          KATMAI,SSE MULSS            xmmreg,xmmrm32           KATMAI,SSE ORPS             xmmreg,xmmrm128          KATMAI,SSE RCPPS            xmmreg,xmmrm128          KATMAI,SSE RCPSS            xmmreg,xmmrm32           KATMAI,SSE RSQRTPS          xmmreg,xmmrm128          KATMAI,SSE RSQRTSS          xmmreg,xmmrm32           KATMAI,SSE SHUFPS           xmmreg,xmmrm128,imm8     KATMAI,SSE SQRTPS           xmmreg,xmmrm128          KATMAI,SSE SQRTSS           xmmreg,xmmrm32           KATMAI,SSE STMXCSR          mem32                    KATMAI,SSE SUBPS            xmmreg,xmmrm128          KATMAI,SSE SUBSS            xmmreg,xmmrm32           KATMAI,SSE UCOMISS          xmmreg,xmmrm32           KATMAI,SSE UNPCKHPS         xmmreg,xmmrm128          KATMAI,SSE UNPCKLPS         xmmreg,xmmrm128          KATMAI,SSE XORPS            xmmreg,xmmrm128          KATMAI,SSE
subh B.1.4 :section-B.1.4
n Introducedspn inspn Deschutesspn butspn necessaryspn forspn SSEspn support
code
FXRSTOR          mem                      P6,SSE,FPU FXRSTOR64        mem                      X86_64,LONG,SSE,FPU FXSAVE           mem                      P6,SSE,FPU FXSAVE64         mem                      X86_64,LONG,SSE,FPU
subh B.1.5 :section-B.1.5
n XSAVEspn groupspn (AVXspn andspn extendedspn state)
code
XGETBV                                    NEHALEM XSETBV                                    NEHALEM,PRIV XSAVE            mem                      NEHALEM XSAVE64          mem                      LONG,NEHALEM XSAVEC           mem                       XSAVEC64         mem                      LONG XSAVEOPT         mem                       XSAVEOPT64       mem                      LONG XSAVES           mem                       XSAVES64         mem                      LONG XRSTOR           mem                      NEHALEM XRSTOR64         mem                      LONG,NEHALEM XRSTORS          mem                       XRSTORS64        mem                      LONG
subh B.1.6 :section-B.1.6
n Genericspn memoryspn operations
code
PREFETCHNTA      mem8                     KATMAI PREFETCHT0       mem8                     KATMAI PREFETCHT1       mem8                     KATMAI PREFETCHT2       mem8                     KATMAI SFENCE                                    KATMAI
subh B.1.7 :section-B.1.7
n Newspn MMXspn instructionsspn introducedspn inspn Katmai
code
MASKMOVQ         mmxreg,mmxreg            KATMAI,MMX MOVNTQ           mem,mmxreg               KATMAI,MMX PAVGB            mmxreg,mmxrm             KATMAI,MMX PAVGW            mmxreg,mmxrm             KATMAI,MMX PEXTRW           reg32,mmxreg,imm         KATMAI,MMX PINSRW           mmxreg,mem,imm           KATMAI,MMX PINSRW           mmxreg,rm16,imm          KATMAI,MMX PINSRW           mmxreg,reg32,imm         KATMAI,MMX PMAXSW           mmxreg,mmxrm             KATMAI,MMX PMAXUB           mmxreg,mmxrm             KATMAI,MMX PMINSW           mmxreg,mmxrm             KATMAI,MMX PMINUB           mmxreg,mmxrm             KATMAI,MMX PMOVMSKB         reg32,mmxreg             KATMAI,MMX PMULHUW          mmxreg,mmxrm             KATMAI,MMX PSADBW           mmxreg,mmxrm             KATMAI,MMX PSHUFW           mmxreg,mmxrm,imm         KATMAI,MMX
subh B.1.8 :section-B.1.8
n AMDspn Enhancedspn 3DNow!spn (Athlon)spn instructions
code
PF2IW            mmxreg,mmxrm             PENT,3DNOW PFNACC           mmxreg,mmxrm             PENT,3DNOW PFPNACC          mmxreg,mmxrm             PENT,3DNOW PI2FW            mmxreg,mmxrm             PENT,3DNOW PSWAPD           mmxreg,mmxrm             PENT,3DNOW
subh B.1.9 :section-B.1.9
n Willamettespn SSE2spn Cacheabilityspn Instructions
code
MASKMOVDQU       xmmreg,xmmreg            WILLAMETTE,SSE2 CLFLUSH          mem                      WILLAMETTE,SSE2 MOVNTDQ          mem,xmmreg               WILLAMETTE,SSE2,SO MOVNTI           mem,reg32                WILLAMETTE,SD MOVNTI           mem,reg64                X86_64,LONG MOVNTPD          mem,xmmreg               WILLAMETTE,SSE2,SO LFENCE                                    WILLAMETTE,SSE2 MFENCE                                    WILLAMETTE,SSE2
subh B.1.10 :section-B.1.10
n Willamettespn MMXspn instructionsspn (SSE2spn SIMDspn Integerspn Instructions)
code
MOVD             mem,xmmreg               WILLAMETTE,SSE2,SD MOVD             xmmreg,mem               WILLAMETTE,SSE2,SD MOVD             xmmreg,rm32              WILLAMETTE,SSE2 MOVD             rm32,xmmreg              WILLAMETTE,SSE2 MOVDQA           xmmreg,xmmrm128          WILLAMETTE,SSE2,SO MOVDQA           xmmrm128,xmmreg          WILLAMETTE,SSE2,SO MOVDQU           xmmreg,xmmrm128          WILLAMETTE,SSE2,SO MOVDQU           xmmrm128,xmmreg          WILLAMETTE,SSE2,SO MOVDQ2Q          mmxreg,xmmreg            WILLAMETTE,SSE2 MOVQ             xmmreg,xmmreg            WILLAMETTE,SSE2 MOVQ             xmmreg,xmmreg            WILLAMETTE,SSE2 MOVQ             mem,xmmreg               WILLAMETTE,SSE2 MOVQ             xmmreg,mem               WILLAMETTE,SSE2 MOVQ             xmmreg,rm64              X86_64,LONG,SSE2 MOVQ             rm64,xmmreg              X86_64,LONG,SSE2 MOVQ2DQ          xmmreg,mmxreg            WILLAMETTE,SSE2 PACKSSWB         xmmreg,xmmrm             WILLAMETTE,SSE2,SO PACKSSDW         xmmreg,xmmrm             WILLAMETTE,SSE2,SO PACKUSWB         xmmreg,xmmrm             WILLAMETTE,SSE2,SO PADDB            xmmreg,xmmrm             WILLAMETTE,SSE2,SO PADDW            xmmreg,xmmrm             WILLAMETTE,SSE2,SO PADDD            xmmreg,xmmrm             WILLAMETTE,SSE2,SO PADDQ            mmxreg,mmxrm             WILLAMETTE,MMX PADDQ            xmmreg,xmmrm             WILLAMETTE,SSE2,SO PADDSB           xmmreg,xmmrm             WILLAMETTE,SSE2,SO PADDSW           xmmreg,xmmrm             WILLAMETTE,SSE2,SO PADDUSB          xmmreg,xmmrm             WILLAMETTE,SSE2,SO PADDUSW          xmmreg,xmmrm             WILLAMETTE,SSE2,SO PAND             xmmreg,xmmrm             WILLAMETTE,SSE2,SO PANDN            xmmreg,xmmrm             WILLAMETTE,SSE2,SO PAVGB            xmmreg,xmmrm             WILLAMETTE,SSE2,SO PAVGW            xmmreg,xmmrm             WILLAMETTE,SSE2,SO PCMPEQB          xmmreg,xmmrm             WILLAMETTE,SSE2,SO PCMPEQW          xmmreg,xmmrm             WILLAMETTE,SSE2,SO PCMPEQD          xmmreg,xmmrm             WILLAMETTE,SSE2,SO PCMPGTB          xmmreg,xmmrm             WILLAMETTE,SSE2,SO PCMPGTW          xmmreg,xmmrm             WILLAMETTE,SSE2,SO PCMPGTD          xmmreg,xmmrm             WILLAMETTE,SSE2,SO PEXTRW           reg32,xmmreg,imm         WILLAMETTE,SSE2 PEXTRW           reg64,xmmreg,imm         X86_64,LONG,SSE2,ND PINSRW           xmmreg,reg16,imm         WILLAMETTE,SSE2 PINSRW           xmmreg,reg32,imm         WILLAMETTE,SSE2,ND PINSRW           xmmreg,reg64,imm         X86_64,LONG,SSE2,ND PINSRW           xmmreg,mem,imm           WILLAMETTE,SSE2 PINSRW           xmmreg,mem16,imm         WILLAMETTE,SSE2 PMADDWD          xmmreg,xmmrm             WILLAMETTE,SSE2,SO PMAXSW           xmmreg,xmmrm             WILLAMETTE,SSE2,SO PMAXUB           xmmreg,xmmrm             WILLAMETTE,SSE2,SO PMINSW           xmmreg,xmmrm             WILLAMETTE,SSE2,SO PMINUB           xmmreg,xmmrm             WILLAMETTE,SSE2,SO PMOVMSKB         reg32,xmmreg             WILLAMETTE,SSE2 PMULHUW          xmmreg,xmmrm             WILLAMETTE,SSE2,SO PMULHW           xmmreg,xmmrm             WILLAMETTE,SSE2,SO PMULLW           xmmreg,xmmrm             WILLAMETTE,SSE2,SO PMULUDQ          mmxreg,mmxrm             WILLAMETTE,SSE2,SO PMULUDQ          xmmreg,xmmrm             WILLAMETTE,SSE2,SO POR              xmmreg,xmmrm             WILLAMETTE,SSE2,SO PSADBW           xmmreg,xmmrm             WILLAMETTE,SSE2,SO PSHUFD           xmmreg,xmmreg,imm        WILLAMETTE,SSE2 PSHUFD           xmmreg,mem,imm           WILLAMETTE,SSE2 PSHUFHW          xmmreg,xmmreg,imm        WILLAMETTE,SSE2 PSHUFHW          xmmreg,mem,imm           WILLAMETTE,SSE2 PSHUFLW          xmmreg,xmmreg,imm        WILLAMETTE,SSE2 PSHUFLW          xmmreg,mem,imm           WILLAMETTE,SSE2 PSLLDQ           xmmreg,imm               WILLAMETTE,SSE2,AR1 PSLLW            xmmreg,xmmrm             WILLAMETTE,SSE2,SO PSLLW            xmmreg,imm               WILLAMETTE,SSE2,AR1 PSLLD            xmmreg,xmmrm             WILLAMETTE,SSE2,SO PSLLD            xmmreg,imm               WILLAMETTE,SSE2,AR1 PSLLQ            xmmreg,xmmrm             WILLAMETTE,SSE2,SO PSLLQ            xmmreg,imm               WILLAMETTE,SSE2,AR1 PSRAW            xmmreg,xmmrm             WILLAMETTE,SSE2,SO PSRAW            xmmreg,imm               WILLAMETTE,SSE2,AR1 PSRAD            xmmreg,xmmrm             WILLAMETTE,SSE2,SO PSRAD            xmmreg,imm               WILLAMETTE,SSE2,AR1 PSRLDQ           xmmreg,imm               WILLAMETTE,SSE2,AR1 PSRLW            xmmreg,xmmrm             WILLAMETTE,SSE2,SO PSRLW            xmmreg,imm               WILLAMETTE,SSE2,AR1 PSRLD            xmmreg,xmmrm             WILLAMETTE,SSE2,SO PSRLD            xmmreg,imm               WILLAMETTE,SSE2,AR1 PSRLQ            xmmreg,xmmrm             WILLAMETTE,SSE2,SO PSRLQ            xmmreg,imm               WILLAMETTE,SSE2,AR1 PSUBB            xmmreg,xmmrm             WILLAMETTE,SSE2,SO PSUBW            xmmreg,xmmrm             WILLAMETTE,SSE2,SO PSUBD            xmmreg,xmmrm             WILLAMETTE,SSE2,SO PSUBQ            mmxreg,mmxrm             WILLAMETTE,SSE2,SO PSUBQ            xmmreg,xmmrm             WILLAMETTE,SSE2,SO PSUBSB           xmmreg,xmmrm             WILLAMETTE,SSE2,SO PSUBSW           xmmreg,xmmrm             WILLAMETTE,SSE2,SO PSUBUSB          xmmreg,xmmrm             WILLAMETTE,SSE2,SO PSUBUSW          xmmreg,xmmrm             WILLAMETTE,SSE2,SO PUNPCKHBW        xmmreg,xmmrm             WILLAMETTE,SSE2,SO PUNPCKHWD        xmmreg,xmmrm             WILLAMETTE,SSE2,SO PUNPCKHDQ        xmmreg,xmmrm             WILLAMETTE,SSE2,SO PUNPCKHQDQ       xmmreg,xmmrm             WILLAMETTE,SSE2,SO PUNPCKLBW        xmmreg,xmmrm             WILLAMETTE,SSE2,SO PUNPCKLWD        xmmreg,xmmrm             WILLAMETTE,SSE2,SO PUNPCKLDQ        xmmreg,xmmrm             WILLAMETTE,SSE2,SO PUNPCKLQDQ       xmmreg,xmmrm             WILLAMETTE,SSE2,SO PXOR             xmmreg,xmmrm             WILLAMETTE,SSE2,SO
subh B.1.11 :section-B.1.11
n Willamettespn Streamingspn SIMDspn instructionsspn (SSE2)
code
ADDPD            xmmreg,xmmrm             WILLAMETTE,SSE2,SO ADDSD            xmmreg,xmmrm             WILLAMETTE,SSE2 ANDNPD           xmmreg,xmmrm             WILLAMETTE,SSE2,SO ANDPD            xmmreg,xmmrm             WILLAMETTE,SSE2,SO CMPEQPD          xmmreg,xmmrm             WILLAMETTE,SSE2,SO CMPEQSD          xmmreg,xmmrm             WILLAMETTE,SSE2 CMPLEPD          xmmreg,xmmrm             WILLAMETTE,SSE2,SO CMPLESD          xmmreg,xmmrm             WILLAMETTE,SSE2 CMPLTPD          xmmreg,xmmrm             WILLAMETTE,SSE2,SO CMPLTSD          xmmreg,xmmrm             WILLAMETTE,SSE2 CMPNEQPD         xmmreg,xmmrm             WILLAMETTE,SSE2,SO CMPNEQSD         xmmreg,xmmrm             WILLAMETTE,SSE2 CMPNLEPD         xmmreg,xmmrm             WILLAMETTE,SSE2,SO CMPNLESD         xmmreg,xmmrm             WILLAMETTE,SSE2 CMPNLTPD         xmmreg,xmmrm             WILLAMETTE,SSE2,SO CMPNLTSD         xmmreg,xmmrm             WILLAMETTE,SSE2 CMPORDPD         xmmreg,xmmrm             WILLAMETTE,SSE2,SO CMPORDSD         xmmreg,xmmrm             WILLAMETTE,SSE2 CMPUNORDPD       xmmreg,xmmrm             WILLAMETTE,SSE2,SO CMPUNORDSD       xmmreg,xmmrm             WILLAMETTE,SSE2 CMPPD            xmmreg,xmmrm128,imm8     WILLAMETTE,SSE2 CMPSD            xmmreg,xmmrm128,imm8     WILLAMETTE,SSE2 COMISD           xmmreg,xmmrm64           WILLAMETTE,SSE2 CVTDQ2PD         xmmreg,xmmrm             WILLAMETTE,SSE2 CVTDQ2PS         xmmreg,xmmrm             WILLAMETTE,SSE2,SO CVTPD2DQ         xmmreg,xmmrm             WILLAMETTE,SSE2,SO CVTPD2PI         mmxreg,xmmrm             WILLAMETTE,SSE2,SO CVTPD2PS         xmmreg,xmmrm             WILLAMETTE,SSE2,SO CVTPI2PD         xmmreg,mmxrm             WILLAMETTE,SSE2 CVTPS2DQ         xmmreg,xmmrm             WILLAMETTE,SSE2,SO CVTPS2PD         xmmreg,xmmrm             WILLAMETTE,SSE2 CVTSD2SI         reg32,xmmreg             WILLAMETTE,SSE2,AR1 CVTSD2SI         reg32,mem                WILLAMETTE,SSE2,AR1 CVTSD2SI         reg64,xmmreg             X86_64,LONG,SSE2,AR1 CVTSD2SI         reg64,mem                X86_64,LONG,SSE2,AR1 CVTSD2SS         xmmreg,xmmrm             WILLAMETTE,SSE2 CVTSI2SD         xmmreg,mem               WILLAMETTE,SSE2,SD,AR1,ND CVTSI2SD         xmmreg,rm32              WILLAMETTE,SSE2,SD,AR1 CVTSI2SD         xmmreg,rm64              X86_64,LONG,SSE2,AR1 CVTSS2SD         xmmreg,xmmrm             WILLAMETTE,SSE2,SD CVTTPD2PI        mmxreg,xmmrm             WILLAMETTE,SSE2,SO CVTTPD2DQ        xmmreg,xmmrm             WILLAMETTE,SSE2,SO CVTTPS2DQ        xmmreg,xmmrm             WILLAMETTE,SSE2,SO CVTTSD2SI        reg32,xmmreg             WILLAMETTE,SSE2,AR1 CVTTSD2SI        reg32,mem                WILLAMETTE,SSE2,AR1 CVTTSD2SI        reg64,xmmreg             X86_64,LONG,SSE2,AR1 CVTTSD2SI        reg64,mem                X86_64,LONG,SSE2,AR1 DIVPD            xmmreg,xmmrm             WILLAMETTE,SSE2,SO DIVSD            xmmreg,xmmrm             WILLAMETTE,SSE2 MAXPD            xmmreg,xmmrm             WILLAMETTE,SSE2,SO MAXSD            xmmreg,xmmrm             WILLAMETTE,SSE2 MINPD            xmmreg,xmmrm             WILLAMETTE,SSE2,SO MINSD            xmmreg,xmmrm             WILLAMETTE,SSE2 MOVAPD           xmmreg,xmmrm128          WILLAMETTE,SSE2 MOVAPD           xmmrm128,xmmreg          WILLAMETTE,SSE2 MOVHPD           mem64,xmmreg             WILLAMETTE,SSE2 MOVHPD           xmmreg,mem64             WILLAMETTE,SSE2 MOVLPD           mem64,xmmreg             WILLAMETTE,SSE2 MOVLPD           xmmreg,mem64             WILLAMETTE,SSE2 MOVMSKPD         reg32,xmmreg             WILLAMETTE,SSE2 MOVMSKPD         reg64,xmmreg             X86_64,LONG,SSE2 MOVSD            xmmreg,xmmrm64           WILLAMETTE,SSE2 MOVSD            xmmrm64,xmmreg           WILLAMETTE,SSE2 MOVUPD           xmmreg,xmmrm128          WILLAMETTE,SSE2 MOVUPD           xmmrm128,xmmreg          WILLAMETTE,SSE2 MULPD            xmmreg,xmmrm128          WILLAMETTE,SSE2,SO MULSD            xmmreg,xmmrm64           WILLAMETTE,SSE2 ORPD             xmmreg,xmmrm128          WILLAMETTE,SSE2,SO SHUFPD           xmmreg,xmmrm128,imm8     WILLAMETTE,SSE2 SQRTPD           xmmreg,xmmrm128          WILLAMETTE,SSE2,SO SQRTSD           xmmreg,xmmrm64           WILLAMETTE,SSE2 SUBPD            xmmreg,xmmrm128          WILLAMETTE,SSE2,SO SUBSD            xmmreg,xmmrm64           WILLAMETTE,SSE2 UCOMISD          xmmreg,xmmrm64           WILLAMETTE,SSE2 UNPCKHPD         xmmreg,xmmrm128          WILLAMETTE,SSE2 UNPCKLPD         xmmreg,xmmrm128          WILLAMETTE,SSE2 XORPD            xmmreg,xmmrm128          WILLAMETTE,SSE2
subh B.1.12 :section-B.1.12
n Prescottspn Newspn Instructionsspn (SSE3)
code
ADDSUBPD         xmmreg,xmmrm128          PRESCOTT,SSE3,SO ADDSUBPS         xmmreg,xmmrm128          PRESCOTT,SSE3,SO HADDPD           xmmreg,xmmrm128          PRESCOTT,SSE3,SO HADDPS           xmmreg,xmmrm128          PRESCOTT,SSE3,SO HSUBPD           xmmreg,xmmrm128          PRESCOTT,SSE3,SO HSUBPS           xmmreg,xmmrm128          PRESCOTT,SSE3,SO LDDQU            xmmreg,mem128            PRESCOTT,SSE3,SO MOVDDUP          xmmreg,xmmrm64           PRESCOTT,SSE3 MOVSHDUP         xmmreg,xmmrm128          PRESCOTT,SSE3 MOVSLDUP         xmmreg,xmmrm128          PRESCOTT,SSE3
subh B.1.13 :section-B.1.13
n VMX/SVMspn Instructions
code
CLGI                                      VMX,AMD STGI                                      VMX,AMD VMCALL                                    VMX VMCLEAR          mem                      VMX VMFUNC                                    VMX VMLAUNCH                                  VMX VMLOAD                                    VMX,AMD VMMCALL                                   VMX,AMD VMPTRLD          mem                      VMX VMPTRST          mem                      VMX VMREAD           rm32,reg32               VMX,NOLONG,SD VMREAD           rm64,reg64               X86_64,LONG,VMX VMRESUME                                  VMX VMRUN                                     VMX,AMD VMSAVE                                    VMX,AMD VMWRITE          reg32,rm32               VMX,NOLONG,SD VMWRITE          reg64,rm64               X86_64,LONG,VMX VMXOFF                                    VMX VMXON            mem                      VMX
subh B.1.14 :section-B.1.14
n Extendedspn Pagespn Tablesspn VMXspn instructions
code
INVEPT           reg32,mem                VMX,SO,NOLONG INVEPT           reg64,mem                VMX,SO,LONG INVVPID          reg32,mem                VMX,SO,NOLONG INVVPID          reg64,mem                VMX,SO,LONG
subh B.1.15 :section-B.1.15
n Tejasspn Newspn Instructionsspn (SSSE3)
code
PABSB            mmxreg,mmxrm             SSSE3,MMX PABSB            xmmreg,xmmrm128          SSSE3 PABSW            mmxreg,mmxrm             SSSE3,MMX PABSW            xmmreg,xmmrm128          SSSE3 PABSD            mmxreg,mmxrm             SSSE3,MMX PABSD            xmmreg,xmmrm128          SSSE3 PALIGNR          mmxreg,mmxrm,imm         SSSE3,MMX PALIGNR          xmmreg,xmmrm,imm         SSSE3 PHADDW           mmxreg,mmxrm             SSSE3,MMX PHADDW           xmmreg,xmmrm128          SSSE3 PHADDD           mmxreg,mmxrm             SSSE3,MMX PHADDD           xmmreg,xmmrm128          SSSE3 PHADDSW          mmxreg,mmxrm             SSSE3,MMX PHADDSW          xmmreg,xmmrm128          SSSE3 PHSUBW           mmxreg,mmxrm             SSSE3,MMX PHSUBW           xmmreg,xmmrm128          SSSE3 PHSUBD           mmxreg,mmxrm             SSSE3,MMX PHSUBD           xmmreg,xmmrm128          SSSE3 PHSUBSW          mmxreg,mmxrm             SSSE3,MMX PHSUBSW          xmmreg,xmmrm128          SSSE3 PMADDUBSW        mmxreg,mmxrm             SSSE3,MMX PMADDUBSW        xmmreg,xmmrm128          SSSE3 PMULHRSW         mmxreg,mmxrm             SSSE3,MMX PMULHRSW         xmmreg,xmmrm128          SSSE3 PSHUFB           mmxreg,mmxrm             SSSE3,MMX PSHUFB           xmmreg,xmmrm128          SSSE3 PSIGNB           mmxreg,mmxrm             SSSE3,MMX PSIGNB           xmmreg,xmmrm128          SSSE3 PSIGNW           mmxreg,mmxrm             SSSE3,MMX PSIGNW           xmmreg,xmmrm128          SSSE3 PSIGND           mmxreg,mmxrm             SSSE3,MMX PSIGND           xmmreg,xmmrm128          SSSE3
subh B.1.16 :section-B.1.16
n AMDspn SSE4A
code
EXTRQ            xmmreg,imm,imm           SSE4A,AMD EXTRQ            xmmreg,xmmreg            SSE4A,AMD INSERTQ          xmmreg,xmmreg,imm,imm    SSE4A,AMD INSERTQ          xmmreg,xmmreg            SSE4A,AMD MOVNTSD          mem64,xmmreg             SSE4A,AMD MOVNTSS          mem32,xmmreg             SSE4A,AMD,SD
subh B.1.17 :section-B.1.17
n Newspn instructionsspn inspn Barcelona
code
LZCNT            reg16,rm16               P6,AMD LZCNT            reg32,rm32               P6,AMD LZCNT            reg64,rm64               X86_64,LONG,AMD
subh B.1.18 :section-B.1.18
n Penrynspn Newspn Instructionsspn (SSE4.1)
code
BLENDPD          xmmreg,xmmrm128,imm8     SSE41 BLENDPS          xmmreg,xmmrm128,imm8     SSE41 BLENDVPD         xmmreg,xmmrm128,xmm0     SSE41 BLENDVPD         xmmreg,xmmrm128          SSE41 BLENDVPS         xmmreg,xmmrm128,xmm0     SSE41 BLENDVPS         xmmreg,xmmrm128          SSE41 DPPD             xmmreg,xmmrm128,imm8     SSE41 DPPS             xmmreg,xmmrm128,imm8     SSE41 EXTRACTPS        rm32,xmmreg,imm8         SSE41 EXTRACTPS        reg64,xmmreg,imm8        SSE41,X86_64,LONG INSERTPS         xmmreg,xmmrm32,imm8      SSE41 MOVNTDQA         xmmreg,mem128            SSE41 MPSADBW          xmmreg,xmmrm128,imm8     SSE41 PACKUSDW         xmmreg,xmmrm128          SSE41 PBLENDVB         xmmreg,xmmrm,xmm0        SSE41 PBLENDVB         xmmreg,xmmrm128          SSE41 PBLENDW          xmmreg,xmmrm128,imm8     SSE41 PCMPEQQ          xmmreg,xmmrm128          SSE41 PEXTRB           reg32,xmmreg,imm8        SSE41 PEXTRB           mem8,xmmreg,imm8         SSE41 PEXTRB           reg64,xmmreg,imm8        SSE41,X86_64,LONG PEXTRD           rm32,xmmreg,imm8         SSE41 PEXTRQ           rm64,xmmreg,imm8         SSE41,X86_64,LONG PEXTRW           reg32,xmmreg,imm8        SSE41 PEXTRW           mem16,xmmreg,imm8        SSE41 PEXTRW           reg64,xmmreg,imm8        SSE41,X86_64,LONG PHMINPOSUW       xmmreg,xmmrm128          SSE41 PINSRB           xmmreg,mem,imm8          SSE41 PINSRB           xmmreg,rm8,imm8          SSE41 PINSRB           xmmreg,reg32,imm8        SSE41 PINSRD           xmmreg,rm32,imm8         SSE41 PINSRQ           xmmreg,rm64,imm8         SSE41,X86_64,LONG PMAXSB           xmmreg,xmmrm128          SSE41 PMAXSD           xmmreg,xmmrm128          SSE41 PMAXUD           xmmreg,xmmrm128          SSE41 PMAXUW           xmmreg,xmmrm128          SSE41 PMINSB           xmmreg,xmmrm128          SSE41 PMINSD           xmmreg,xmmrm128          SSE41 PMINUD           xmmreg,xmmrm128          SSE41 PMINUW           xmmreg,xmmrm128          SSE41 PMOVSXBW         xmmreg,xmmrm64           SSE41 PMOVSXBD         xmmreg,xmmrm32           SSE41,SD PMOVSXBQ         xmmreg,xmmrm16           SSE41,SW PMOVSXWD         xmmreg,xmmrm64           SSE41 PMOVSXWQ         xmmreg,xmmrm32           SSE41,SD PMOVSXDQ         xmmreg,xmmrm64           SSE41 PMOVZXBW         xmmreg,xmmrm64           SSE41 PMOVZXBD         xmmreg,xmmrm32           SSE41,SD PMOVZXBQ         xmmreg,xmmrm16           SSE41,SW PMOVZXWD         xmmreg,xmmrm64           SSE41 PMOVZXWQ         xmmreg,xmmrm32           SSE41,SD PMOVZXDQ         xmmreg,xmmrm64           SSE41 PMULDQ           xmmreg,xmmrm128          SSE41 PMULLD           xmmreg,xmmrm128          SSE41 PTEST            xmmreg,xmmrm128          SSE41 ROUNDPD          xmmreg,xmmrm128,imm8     SSE41 ROUNDPS          xmmreg,xmmrm128,imm8     SSE41 ROUNDSD          xmmreg,xmmrm64,imm8      SSE41 ROUNDSS          xmmreg,xmmrm32,imm8      SSE41
subh B.1.19 :section-B.1.19
n Nehalemspn Newspn Instructionsspn (SSE4.2)
code
CRC32            reg32,rm8                SSE42 CRC32            reg32,rm16               SSE42 CRC32            reg32,rm32               SSE42 CRC32            reg64,rm8                SSE42,X86_64,LONG CRC32            reg64,rm64               SSE42,X86_64,LONG PCMPESTRI        xmmreg,xmmrm128,imm8     SSE42 PCMPESTRM        xmmreg,xmmrm128,imm8     SSE42 PCMPISTRI        xmmreg,xmmrm128,imm8     SSE42 PCMPISTRM        xmmreg,xmmrm128,imm8     SSE42 PCMPGTQ          xmmreg,xmmrm128          SSE42 POPCNT           reg16,rm16               NEHALEM,SW POPCNT           reg32,rm32               NEHALEM,SD POPCNT           reg64,rm64               NEHALEM,LONG
subh B.1.20 :section-B.1.20
n Intelspn SMX
code
GETSEC                                    KATMAI
subh B.1.21 :section-B.1.21
n Geodespn (Cyrix)spn 3DNow!spn additions
code
PFRCPV           mmxreg,mmxrm             PENT,3DNOW,CYRIX PFRSQRTV         mmxreg,mmxrm             PENT,3DNOW,CYRIX
subh B.1.22 :section-B.1.22
n Intelspn newspn instructionsspn inspn ???
code
MOVBE            reg16,mem16              NEHALEM MOVBE            reg32,mem32              NEHALEM MOVBE            reg64,mem64              NEHALEM MOVBE            mem16,reg16              NEHALEM MOVBE            mem32,reg32              NEHALEM MOVBE            mem64,reg64              NEHALEM
subh B.1.23 :section-B.1.23
n Intelspn AESspn instructions
code
AESENC           xmmreg,xmmrm128          SSE,WESTMERE AESENCLAST       xmmreg,xmmrm128          SSE,WESTMERE AESDEC           xmmreg,xmmrm128          SSE,WESTMERE AESDECLAST       xmmreg,xmmrm128          SSE,WESTMERE AESIMC           xmmreg,xmmrm128          SSE,WESTMERE AESKEYGENASSIST  xmmreg,xmmrm128,imm8     SSE,WESTMERE
subh B.1.24 :section-B.1.24
n Intelspn AVXspn AESspn instructions
code
VAESENC          xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE VAESENCLAST      xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE VAESDEC          xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE VAESDECLAST      xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE VAESIMC          xmmreg,xmmrm128          AVX,SANDYBRIDGE VAESKEYGENASSIST xmmreg,xmmrm128,imm8     AVX,SANDYBRIDGE
subh B.1.25 :section-B.1.25
n Intelspn instructionspn extensionspn basedspn onspn pubspn numberspn 319433-n 030spn datedspn Octoberspn 2017
code
VAESENC          ymmreg,ymmreg*,ymmrm256  VAES VAESENCLAST      ymmreg,ymmreg*,ymmrm256  VAES VAESDEC          ymmreg,ymmreg*,ymmrm256  VAES VAESDECLAST      ymmreg,ymmreg*,ymmrm256  VAES VAESENC          xmmreg,xmmreg*,xmmrm128  AVX512VL,VAES VAESENC          ymmreg,ymmreg*,ymmrm256  AVX512VL,VAES VAESENCLAST      xmmreg,xmmreg*,xmmrm128  AVX512VL,VAES VAESENCLAST      ymmreg,ymmreg*,ymmrm256  AVX512VL,VAES VAESDEC          xmmreg,xmmreg*,xmmrm128  AVX512VL,VAES VAESDEC          ymmreg,ymmreg*,ymmrm256  AVX512VL,VAES VAESDECLAST      xmmreg,xmmreg*,xmmrm128  AVX512VL,VAES VAESDECLAST      ymmreg,ymmreg*,ymmrm256  AVX512VL,VAES VAESENC          zmmreg,zmmreg*,zmmrm512  AVX512,VAES VAESENCLAST      zmmreg,zmmreg*,zmmrm512  AVX512,VAES VAESDEC          zmmreg,zmmreg*,zmmrm512  AVX512,VAES VAESDECLAST      zmmreg,zmmreg*,zmmrm512  AVX512,VAES
subh B.1.26 :section-B.1.26
n Intelspn AVXspn instructions
code
VADDPD           xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE VADDPD           ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE VADDPS           xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE VADDPS           ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE VADDSD           xmmreg,xmmreg*,xmmrm64   AVX,SANDYBRIDGE VADDSS           xmmreg,xmmreg*,xmmrm32   AVX,SANDYBRIDGE VADDSUBPD        xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE VADDSUBPD        ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE VADDSUBPS        xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE VADDSUBPS        ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE VANDPD           xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE VANDPD           ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE VANDPS           xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE VANDPS           ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE VANDNPD          xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE VANDNPD          ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE VANDNPS          xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE VANDNPS          ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE VBLENDPD         xmmreg,xmmreg*,xmmrm128,imm8 AVX,SANDYBRIDGE VBLENDPD         ymmreg,ymmreg*,ymmrm256,imm8 AVX,SANDYBRIDGE VBLENDPS         xmmreg,xmmreg*,xmmrm128,imm8 AVX,SANDYBRIDGE VBLENDPS         ymmreg,ymmreg*,ymmrm256,imm8 AVX,SANDYBRIDGE VBLENDVPD        xmmreg,xmmreg*,xmmrm128,xmmreg AVX,SANDYBRIDGE VBLENDVPD        ymmreg,ymmreg*,ymmrm256,ymmreg AVX,SANDYBRIDGE VBLENDVPS        xmmreg,xmmreg*,xmmrm128,xmmreg AVX,SANDYBRIDGE VBLENDVPS        ymmreg,ymmreg*,ymmrm256,ymmreg AVX,SANDYBRIDGE VBROADCASTSS     xmmreg,mem32             AVX,SANDYBRIDGE VBROADCASTSS     ymmreg,mem32             AVX,SANDYBRIDGE VBROADCASTSD     ymmreg,mem64             AVX,SANDYBRIDGE VBROADCASTF128   ymmreg,mem128            AVX,SANDYBRIDGE VCMPEQ_OSPD      xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE VCMPEQ_OSPD      ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE VCMPEQPD         xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE VCMPEQPD         ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE VCMPLT_OSPD      xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE VCMPLT_OSPD      ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE VCMPLTPD         xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE VCMPLTPD         ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE VCMPLE_OSPD      xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE VCMPLE_OSPD      ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE VCMPLEPD         xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE VCMPLEPD         ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE VCMPUNORD_QPD    xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE VCMPUNORD_QPD    ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE VCMPUNORDPD      xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE VCMPUNORDPD      ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE VCMPNEQ_UQPD     xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE VCMPNEQ_UQPD     ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE VCMPNEQPD        xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE VCMPNEQPD        ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE VCMPNLT_USPD     xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE VCMPNLT_USPD     ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE VCMPNLTPD        xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE VCMPNLTPD        ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE VCMPNLE_USPD     xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE VCMPNLE_USPD     ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE VCMPNLEPD        xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE VCMPNLEPD        ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE VCMPORD_QPD      xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE VCMPORD_QPD      ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE VCMPORDPD        xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE VCMPORDPD        ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE VCMPEQ_UQPD      xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE VCMPEQ_UQPD      ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE VCMPNGE_USPD     xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE VCMPNGE_USPD     ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE VCMPNGEPD        xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE VCMPNGEPD        ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE VCMPNGT_USPD     xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE VCMPNGT_USPD     ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE VCMPNGTPD        xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE VCMPNGTPD        ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE VCMPFALSE_OQPD   xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE VCMPFALSE_OQPD   ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE VCMPFALSEPD      xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE VCMPFALSEPD      ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE VCMPNEQ_OQPD     xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE VCMPNEQ_OQPD     ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE VCMPGE_OSPD      xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE VCMPGE_OSPD      ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE VCMPGEPD         xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE VCMPGEPD         ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE VCMPGT_OSPD      xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE VCMPGT_OSPD      ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE VCMPGTPD         xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE VCMPGTPD         ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE VCMPTRUE_UQPD    xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE VCMPTRUE_UQPD    ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE VCMPTRUEPD       xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE VCMPTRUEPD       ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE VCMPEQ_OSPD      xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE VCMPEQ_OSPD      ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE VCMPLT_OQPD      xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE VCMPLT_OQPD      ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE VCMPLE_OQPD      xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE VCMPLE_OQPD      ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE VCMPUNORD_SPD    xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE VCMPUNORD_SPD    ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE VCMPNEQ_USPD     xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE VCMPNEQ_USPD     ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE VCMPNLT_UQPD     xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE VCMPNLT_UQPD     ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE VCMPNLE_UQPD     xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE VCMPNLE_UQPD     ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE VCMPORD_SPD      xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE VCMPORD_SPD      ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE VCMPEQ_USPD      xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE VCMPEQ_USPD      ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE VCMPNGE_UQPD     xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE VCMPNGE_UQPD     ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE VCMPNGT_UQPD     xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE VCMPNGT_UQPD     ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE VCMPFALSE_OSPD   xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE VCMPFALSE_OSPD   ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE VCMPNEQ_OSPD     xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE VCMPNEQ_OSPD     ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE VCMPGE_OQPD      xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE VCMPGE_OQPD      ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE VCMPGT_OQPD      xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE VCMPGT_OQPD      ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE VCMPTRUE_USPD    xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE VCMPTRUE_USPD    ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE VCMPPD           xmmreg,xmmreg*,xmmrm128,imm8 AVX,SANDYBRIDGE VCMPPD           ymmreg,ymmreg*,ymmrm256,imm8 AVX,SANDYBRIDGE VCMPEQ_OSPS      xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE VCMPEQ_OSPS      ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE VCMPEQPS         xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE VCMPEQPS         ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE VCMPLT_OSPS      xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE VCMPLT_OSPS      ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE VCMPLTPS         xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE VCMPLTPS         ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE VCMPLE_OSPS      xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE VCMPLE_OSPS      ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE VCMPLEPS         xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE VCMPLEPS         ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE VCMPUNORD_QPS    xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE VCMPUNORD_QPS    ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE VCMPUNORDPS      xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE VCMPUNORDPS      ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE VCMPNEQ_UQPS     xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE VCMPNEQ_UQPS     ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE VCMPNEQPS        xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE VCMPNEQPS        ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE VCMPNLT_USPS     xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE VCMPNLT_USPS     ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE VCMPNLTPS        xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE VCMPNLTPS        ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE VCMPNLE_USPS     xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE VCMPNLE_USPS     ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE VCMPNLEPS        xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE VCMPNLEPS        ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE VCMPORD_QPS      xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE VCMPORD_QPS      ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE VCMPORDPS        xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE VCMPORDPS        ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE VCMPEQ_UQPS      xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE VCMPEQ_UQPS      ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE VCMPNGE_USPS     xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE VCMPNGE_USPS     ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE VCMPNGEPS        xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE VCMPNGEPS        ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE VCMPNGT_USPS     xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE VCMPNGT_USPS     ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE VCMPNGTPS        xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE VCMPNGTPS        ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE VCMPFALSE_OQPS   xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE VCMPFALSE_OQPS   ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE VCMPFALSEPS      xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE VCMPFALSEPS      ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE VCMPNEQ_OQPS     xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE VCMPNEQ_OQPS     ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE VCMPGE_OSPS      xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE VCMPGE_OSPS      ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE VCMPGEPS         xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE VCMPGEPS         ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE VCMPGT_OSPS      xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE VCMPGT_OSPS      ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE VCMPGTPS         xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE VCMPGTPS         ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE VCMPTRUE_UQPS    xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE VCMPTRUE_UQPS    ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE VCMPTRUEPS       xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE VCMPTRUEPS       ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE VCMPEQ_OSPS      xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE VCMPEQ_OSPS      ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE VCMPLT_OQPS      xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE VCMPLT_OQPS      ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE VCMPLE_OQPS      xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE VCMPLE_OQPS      ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE VCMPUNORD_SPS    xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE VCMPUNORD_SPS    ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE VCMPNEQ_USPS     xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE VCMPNEQ_USPS     ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE VCMPNLT_UQPS     xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE VCMPNLT_UQPS     ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE VCMPNLE_UQPS     xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE VCMPNLE_UQPS     ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE VCMPORD_SPS      xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE VCMPORD_SPS      ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE VCMPEQ_USPS      xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE VCMPEQ_USPS      ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE VCMPNGE_UQPS     xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE VCMPNGE_UQPS     ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE VCMPNGT_UQPS     xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE VCMPNGT_UQPS     ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE VCMPFALSE_OSPS   xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE VCMPFALSE_OSPS   ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE VCMPNEQ_OSPS     xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE VCMPNEQ_OSPS     ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE VCMPGE_OQPS      xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE VCMPGE_OQPS      ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE VCMPGT_OQPS      xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE VCMPGT_OQPS      ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE VCMPTRUE_USPS    xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE VCMPTRUE_USPS    ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE VCMPPS           xmmreg,xmmreg*,xmmrm128,imm8 AVX,SANDYBRIDGE VCMPPS           ymmreg,ymmreg*,ymmrm256,imm8 AVX,SANDYBRIDGE VCMPEQ_OSSD      xmmreg,xmmreg*,xmmrm64   AVX,SANDYBRIDGE VCMPEQSD         xmmreg,xmmreg*,xmmrm64   AVX,SANDYBRIDGE VCMPLT_OSSD      xmmreg,xmmreg*,xmmrm64   AVX,SANDYBRIDGE VCMPLTSD         xmmreg,xmmreg*,xmmrm64   AVX,SANDYBRIDGE VCMPLE_OSSD      xmmreg,xmmreg*,xmmrm64   AVX,SANDYBRIDGE VCMPLESD         xmmreg,xmmreg*,xmmrm64   AVX,SANDYBRIDGE VCMPUNORD_QSD    xmmreg,xmmreg*,xmmrm64   AVX,SANDYBRIDGE VCMPUNORDSD      xmmreg,xmmreg*,xmmrm64   AVX,SANDYBRIDGE VCMPNEQ_UQSD     xmmreg,xmmreg*,xmmrm64   AVX,SANDYBRIDGE VCMPNEQSD        xmmreg,xmmreg*,xmmrm64   AVX,SANDYBRIDGE VCMPNLT_USSD     xmmreg,xmmreg*,xmmrm64   AVX,SANDYBRIDGE VCMPNLTSD        xmmreg,xmmreg*,xmmrm64   AVX,SANDYBRIDGE VCMPNLE_USSD     xmmreg,xmmreg*,xmmrm64   AVX,SANDYBRIDGE VCMPNLESD        xmmreg,xmmreg*,xmmrm64   AVX,SANDYBRIDGE VCMPORD_QSD      xmmreg,xmmreg*,xmmrm64   AVX,SANDYBRIDGE VCMPORDSD        xmmreg,xmmreg*,xmmrm64   AVX,SANDYBRIDGE VCMPEQ_UQSD      xmmreg,xmmreg*,xmmrm64   AVX,SANDYBRIDGE VCMPNGE_USSD     xmmreg,xmmreg*,xmmrm64   AVX,SANDYBRIDGE VCMPNGESD        xmmreg,xmmreg*,xmmrm64   AVX,SANDYBRIDGE VCMPNGT_USSD     xmmreg,xmmreg*,xmmrm64   AVX,SANDYBRIDGE VCMPNGTSD        xmmreg,xmmreg*,xmmrm64   AVX,SANDYBRIDGE VCMPFALSE_OQSD   xmmreg,xmmreg*,xmmrm64   AVX,SANDYBRIDGE VCMPFALSESD      xmmreg,xmmreg*,xmmrm64   AVX,SANDYBRIDGE VCMPNEQ_OQSD     xmmreg,xmmreg*,xmmrm64   AVX,SANDYBRIDGE VCMPGE_OSSD      xmmreg,xmmreg*,xmmrm64   AVX,SANDYBRIDGE VCMPGESD         xmmreg,xmmreg*,xmmrm64   AVX,SANDYBRIDGE VCMPGT_OSSD      xmmreg,xmmreg*,xmmrm64   AVX,SANDYBRIDGE VCMPGTSD         xmmreg,xmmreg*,xmmrm64   AVX,SANDYBRIDGE VCMPTRUE_UQSD    xmmreg,xmmreg*,xmmrm64   AVX,SANDYBRIDGE VCMPTRUESD       xmmreg,xmmreg*,xmmrm64   AVX,SANDYBRIDGE VCMPEQ_OSSD      xmmreg,xmmreg*,xmmrm64   AVX,SANDYBRIDGE VCMPLT_OQSD      xmmreg,xmmreg*,xmmrm64   AVX,SANDYBRIDGE VCMPLE_OQSD      xmmreg,xmmreg*,xmmrm64   AVX,SANDYBRIDGE VCMPUNORD_SSD    xmmreg,xmmreg*,xmmrm64   AVX,SANDYBRIDGE VCMPNEQ_USSD     xmmreg,xmmreg*,xmmrm64   AVX,SANDYBRIDGE VCMPNLT_UQSD     xmmreg,xmmreg*,xmmrm64   AVX,SANDYBRIDGE VCMPNLE_UQSD     xmmreg,xmmreg*,xmmrm64   AVX,SANDYBRIDGE VCMPORD_SSD      xmmreg,xmmreg*,xmmrm64   AVX,SANDYBRIDGE VCMPEQ_USSD      xmmreg,xmmreg*,xmmrm64   AVX,SANDYBRIDGE VCMPNGE_UQSD     xmmreg,xmmreg*,xmmrm64   AVX,SANDYBRIDGE VCMPNGT_UQSD     xmmreg,xmmreg*,xmmrm64   AVX,SANDYBRIDGE VCMPFALSE_OSSD   xmmreg,xmmreg*,xmmrm64   AVX,SANDYBRIDGE VCMPNEQ_OSSD     xmmreg,xmmreg*,xmmrm64   AVX,SANDYBRIDGE VCMPGE_OQSD      xmmreg,xmmreg*,xmmrm64   AVX,SANDYBRIDGE VCMPGT_OQSD      xmmreg,xmmreg*,xmmrm64   AVX,SANDYBRIDGE VCMPTRUE_USSD    xmmreg,xmmreg*,xmmrm64   AVX,SANDYBRIDGE VCMPSD           xmmreg,xmmreg*,xmmrm64,imm8 AVX,SANDYBRIDGE VCMPEQ_OSSS      xmmreg,xmmreg*,xmmrm64   AVX,SANDYBRIDGE VCMPEQSS         xmmreg,xmmreg*,xmmrm64   AVX,SANDYBRIDGE VCMPLT_OSSS      xmmreg,xmmreg*,xmmrm64   AVX,SANDYBRIDGE VCMPLTSS         xmmreg,xmmreg*,xmmrm64   AVX,SANDYBRIDGE VCMPLE_OSSS      xmmreg,xmmreg*,xmmrm64   AVX,SANDYBRIDGE VCMPLESS         xmmreg,xmmreg*,xmmrm64   AVX,SANDYBRIDGE VCMPUNORD_QSS    xmmreg,xmmreg*,xmmrm64   AVX,SANDYBRIDGE VCMPUNORDSS      xmmreg,xmmreg*,xmmrm64   AVX,SANDYBRIDGE VCMPNEQ_UQSS     xmmreg,xmmreg*,xmmrm64   AVX,SANDYBRIDGE VCMPNEQSS        xmmreg,xmmreg*,xmmrm64   AVX,SANDYBRIDGE VCMPNLT_USSS     xmmreg,xmmreg*,xmmrm64   AVX,SANDYBRIDGE VCMPNLTSS        xmmreg,xmmreg*,xmmrm64   AVX,SANDYBRIDGE VCMPNLE_USSS     xmmreg,xmmreg*,xmmrm64   AVX,SANDYBRIDGE VCMPNLESS        xmmreg,xmmreg*,xmmrm64   AVX,SANDYBRIDGE VCMPORD_QSS      xmmreg,xmmreg*,xmmrm64   AVX,SANDYBRIDGE VCMPORDSS        xmmreg,xmmreg*,xmmrm64   AVX,SANDYBRIDGE VCMPEQ_UQSS      xmmreg,xmmreg*,xmmrm64   AVX,SANDYBRIDGE VCMPNGE_USSS     xmmreg,xmmreg*,xmmrm64   AVX,SANDYBRIDGE VCMPNGESS        xmmreg,xmmreg*,xmmrm64   AVX,SANDYBRIDGE VCMPNGT_USSS     xmmreg,xmmreg*,xmmrm64   AVX,SANDYBRIDGE VCMPNGTSS        xmmreg,xmmreg*,xmmrm64   AVX,SANDYBRIDGE VCMPFALSE_OQSS   xmmreg,xmmreg*,xmmrm64   AVX,SANDYBRIDGE VCMPFALSESS      xmmreg,xmmreg*,xmmrm64   AVX,SANDYBRIDGE VCMPNEQ_OQSS     xmmreg,xmmreg*,xmmrm64   AVX,SANDYBRIDGE VCMPGE_OSSS      xmmreg,xmmreg*,xmmrm64   AVX,SANDYBRIDGE VCMPGESS         xmmreg,xmmreg*,xmmrm64   AVX,SANDYBRIDGE VCMPGT_OSSS      xmmreg,xmmreg*,xmmrm64   AVX,SANDYBRIDGE VCMPGTSS         xmmreg,xmmreg*,xmmrm64   AVX,SANDYBRIDGE VCMPTRUE_UQSS    xmmreg,xmmreg*,xmmrm64   AVX,SANDYBRIDGE VCMPTRUESS       xmmreg,xmmreg*,xmmrm64   AVX,SANDYBRIDGE VCMPEQ_OSSS      xmmreg,xmmreg*,xmmrm64   AVX,SANDYBRIDGE VCMPLT_OQSS      xmmreg,xmmreg*,xmmrm64   AVX,SANDYBRIDGE VCMPLE_OQSS      xmmreg,xmmreg*,xmmrm64   AVX,SANDYBRIDGE VCMPUNORD_SSS    xmmreg,xmmreg*,xmmrm64   AVX,SANDYBRIDGE VCMPNEQ_USSS     xmmreg,xmmreg*,xmmrm64   AVX,SANDYBRIDGE VCMPNLT_UQSS     xmmreg,xmmreg*,xmmrm64   AVX,SANDYBRIDGE VCMPNLE_UQSS     xmmreg,xmmreg*,xmmrm64   AVX,SANDYBRIDGE VCMPORD_SSS      xmmreg,xmmreg*,xmmrm64   AVX,SANDYBRIDGE VCMPEQ_USSS      xmmreg,xmmreg*,xmmrm64   AVX,SANDYBRIDGE VCMPNGE_UQSS     xmmreg,xmmreg*,xmmrm64   AVX,SANDYBRIDGE VCMPNGT_UQSS     xmmreg,xmmreg*,xmmrm64   AVX,SANDYBRIDGE VCMPFALSE_OSSS   xmmreg,xmmreg*,xmmrm64   AVX,SANDYBRIDGE VCMPNEQ_OSSS     xmmreg,xmmreg*,xmmrm64   AVX,SANDYBRIDGE VCMPGE_OQSS      xmmreg,xmmreg*,xmmrm64   AVX,SANDYBRIDGE VCMPGT_OQSS      xmmreg,xmmreg*,xmmrm64   AVX,SANDYBRIDGE VCMPTRUE_USSS    xmmreg,xmmreg*,xmmrm64   AVX,SANDYBRIDGE VCMPSS           xmmreg,xmmreg*,xmmrm64,imm8 AVX,SANDYBRIDGE VCOMISD          xmmreg,xmmrm64           AVX,SANDYBRIDGE VCOMISS          xmmreg,xmmrm32           AVX,SANDYBRIDGE VCVTDQ2PD        xmmreg,xmmrm64           AVX,SANDYBRIDGE VCVTDQ2PD        ymmreg,xmmrm128          AVX,SANDYBRIDGE VCVTDQ2PS        xmmreg,xmmrm128          AVX,SANDYBRIDGE VCVTDQ2PS        ymmreg,ymmrm256          AVX,SANDYBRIDGE VCVTPD2DQ        xmmreg,xmmreg            AVX,SANDYBRIDGE VCVTPD2DQ        xmmreg,mem128            AVX,SANDYBRIDGE,SO VCVTPD2DQ        xmmreg,ymmreg            AVX,SANDYBRIDGE VCVTPD2DQ        xmmreg,mem256            AVX,SANDYBRIDGE,SY VCVTPD2PS        xmmreg,xmmreg            AVX,SANDYBRIDGE VCVTPD2PS        xmmreg,mem128            AVX,SANDYBRIDGE,SO VCVTPD2PS        xmmreg,ymmreg            AVX,SANDYBRIDGE VCVTPD2PS        xmmreg,mem256            AVX,SANDYBRIDGE,SY VCVTPS2DQ        xmmreg,xmmrm128          AVX,SANDYBRIDGE VCVTPS2DQ        ymmreg,ymmrm256          AVX,SANDYBRIDGE VCVTPS2PD        xmmreg,xmmrm64           AVX,SANDYBRIDGE VCVTPS2PD        ymmreg,xmmrm128          AVX,SANDYBRIDGE VCVTSD2SI        reg32,xmmrm64            AVX,SANDYBRIDGE VCVTSD2SI        reg64,xmmrm64            AVX,SANDYBRIDGE,LONG VCVTSD2SS        xmmreg,xmmreg*,xmmrm64   AVX,SANDYBRIDGE VCVTSI2SD        xmmreg,xmmreg*,rm32      AVX,SANDYBRIDGE,SD VCVTSI2SD        xmmreg,xmmreg*,mem32     AVX,SANDYBRIDGE,ND,SD VCVTSI2SD        xmmreg,xmmreg*,rm64      AVX,SANDYBRIDGE,LONG VCVTSI2SS        xmmreg,xmmreg*,rm32      AVX,SANDYBRIDGE,SD VCVTSI2SS        xmmreg,xmmreg*,mem32     AVX,SANDYBRIDGE,ND,SD VCVTSI2SS        xmmreg,xmmreg*,rm64      AVX,SANDYBRIDGE,LONG VCVTSS2SD        xmmreg,xmmreg*,xmmrm32   AVX,SANDYBRIDGE VCVTSS2SI        reg32,xmmrm32            AVX,SANDYBRIDGE VCVTSS2SI        reg64,xmmrm32            AVX,SANDYBRIDGE,LONG VCVTTPD2DQ       xmmreg,xmmreg            AVX,SANDYBRIDGE VCVTTPD2DQ       xmmreg,mem128            AVX,SANDYBRIDGE,SO VCVTTPD2DQ       xmmreg,ymmreg            AVX,SANDYBRIDGE VCVTTPD2DQ       xmmreg,mem256            AVX,SANDYBRIDGE,SY VCVTTPS2DQ       xmmreg,xmmrm128          AVX,SANDYBRIDGE VCVTTPS2DQ       ymmreg,ymmrm256          AVX,SANDYBRIDGE VCVTTSD2SI       reg32,xmmrm64            AVX,SANDYBRIDGE VCVTTSD2SI       reg64,xmmrm64            AVX,SANDYBRIDGE,LONG VCVTTSS2SI       reg32,xmmrm32            AVX,SANDYBRIDGE VCVTTSS2SI       reg64,xmmrm32            AVX,SANDYBRIDGE,LONG VDIVPD           xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE VDIVPD           ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE VDIVPS           xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE VDIVPS           ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE VDIVSD           xmmreg,xmmreg*,xmmrm64   AVX,SANDYBRIDGE VDIVSS           xmmreg,xmmreg*,xmmrm32   AVX,SANDYBRIDGE VDPPD            xmmreg,xmmreg*,xmmrm128,imm8 AVX,SANDYBRIDGE VDPPS            xmmreg,xmmreg*,xmmrm128,imm8 AVX,SANDYBRIDGE VDPPS            ymmreg,ymmreg*,ymmrm256,imm8 AVX,SANDYBRIDGE VEXTRACTF128     xmmrm128,ymmreg,imm8     AVX,SANDYBRIDGE VEXTRACTPS       rm32,xmmreg,imm8         AVX,SANDYBRIDGE VHADDPD          xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE VHADDPD          ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE VHADDPS          xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE VHADDPS          ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE VHSUBPD          xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE VHSUBPD          ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE VHSUBPS          xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE VHSUBPS          ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE VINSERTF128      ymmreg,ymmreg*,xmmrm128,imm8 AVX,SANDYBRIDGE VINSERTPS        xmmreg,xmmreg*,xmmrm32,imm8 AVX,SANDYBRIDGE VLDDQU           xmmreg,mem128            AVX,SANDYBRIDGE VLDQQU           ymmreg,mem256            AVX,SANDYBRIDGE VLDDQU           ymmreg,mem256            AVX,SANDYBRIDGE VLDMXCSR         mem32                    AVX,SANDYBRIDGE VMASKMOVDQU      xmmreg,xmmreg            AVX,SANDYBRIDGE VMASKMOVPS       xmmreg,xmmreg,mem128     AVX,SANDYBRIDGE VMASKMOVPS       ymmreg,ymmreg,mem256     AVX,SANDYBRIDGE VMASKMOVPS       mem128,xmmreg,xmmreg     AVX,SANDYBRIDGE,SO VMASKMOVPS       mem256,ymmreg,ymmreg     AVX,SANDYBRIDGE,SY VMASKMOVPD       xmmreg,xmmreg,mem128     AVX,SANDYBRIDGE VMASKMOVPD       ymmreg,ymmreg,mem256     AVX,SANDYBRIDGE VMASKMOVPD       mem128,xmmreg,xmmreg     AVX,SANDYBRIDGE VMASKMOVPD       mem256,ymmreg,ymmreg     AVX,SANDYBRIDGE VMAXPD           xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE VMAXPD           ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE VMAXPS           xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE VMAXPS           ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE VMAXSD           xmmreg,xmmreg*,xmmrm64   AVX,SANDYBRIDGE VMAXSS           xmmreg,xmmreg*,xmmrm32   AVX,SANDYBRIDGE VMINPD           xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE VMINPD           ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE VMINPS           xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE VMINPS           ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE VMINSD           xmmreg,xmmreg*,xmmrm64   AVX,SANDYBRIDGE VMINSS           xmmreg,xmmreg*,xmmrm32   AVX,SANDYBRIDGE VMOVAPD          xmmreg,xmmrm128          AVX,SANDYBRIDGE VMOVAPD          xmmrm128,xmmreg          AVX,SANDYBRIDGE VMOVAPD          ymmreg,ymmrm256          AVX,SANDYBRIDGE VMOVAPD          ymmrm256,ymmreg          AVX,SANDYBRIDGE VMOVAPS          xmmreg,xmmrm128          AVX,SANDYBRIDGE VMOVAPS          xmmrm128,xmmreg          AVX,SANDYBRIDGE VMOVAPS          ymmreg,ymmrm256          AVX,SANDYBRIDGE VMOVAPS          ymmrm256,ymmreg          AVX,SANDYBRIDGE VMOVD            xmmreg,rm32              AVX,SANDYBRIDGE VMOVD            rm32,xmmreg              AVX,SANDYBRIDGE VMOVQ            xmmreg,xmmrm64           AVX,SANDYBRIDGE VMOVQ            xmmrm64,xmmreg           AVX,SANDYBRIDGE VMOVQ            xmmreg,rm64              AVX,SANDYBRIDGE,LONG VMOVQ            rm64,xmmreg              AVX,SANDYBRIDGE,LONG VMOVDDUP         xmmreg,xmmrm64           AVX,SANDYBRIDGE VMOVDDUP         ymmreg,ymmrm256          AVX,SANDYBRIDGE VMOVDQA          xmmreg,xmmrm128          AVX,SANDYBRIDGE VMOVDQA          xmmrm128,xmmreg          AVX,SANDYBRIDGE VMOVQQA          ymmreg,ymmrm256          AVX,SANDYBRIDGE VMOVQQA          ymmrm256,ymmreg          AVX,SANDYBRIDGE VMOVDQA          ymmreg,ymmrm256          AVX,SANDYBRIDGE VMOVDQA          ymmrm256,ymmreg          AVX,SANDYBRIDGE VMOVDQU          xmmreg,xmmrm128          AVX,SANDYBRIDGE VMOVDQU          xmmrm128,xmmreg          AVX,SANDYBRIDGE VMOVQQU          ymmreg,ymmrm256          AVX,SANDYBRIDGE VMOVQQU          ymmrm256,ymmreg          AVX,SANDYBRIDGE VMOVDQU          ymmreg,ymmrm256          AVX,SANDYBRIDGE VMOVDQU          ymmrm256,ymmreg          AVX,SANDYBRIDGE VMOVHLPS         xmmreg,xmmreg*,xmmreg    AVX,SANDYBRIDGE VMOVHPD          xmmreg,xmmreg*,mem64     AVX,SANDYBRIDGE VMOVHPD          mem64,xmmreg             AVX,SANDYBRIDGE VMOVHPS          xmmreg,xmmreg*,mem64     AVX,SANDYBRIDGE VMOVHPS          mem64,xmmreg             AVX,SANDYBRIDGE VMOVLHPS         xmmreg,xmmreg*,xmmreg    AVX,SANDYBRIDGE VMOVLPD          xmmreg,xmmreg*,mem64     AVX,SANDYBRIDGE VMOVLPD          mem64,xmmreg             AVX,SANDYBRIDGE VMOVLPS          xmmreg,xmmreg*,mem64     AVX,SANDYBRIDGE VMOVLPS          mem64,xmmreg             AVX,SANDYBRIDGE VMOVMSKPD        reg64,xmmreg             AVX,SANDYBRIDGE,LONG VMOVMSKPD        reg32,xmmreg             AVX,SANDYBRIDGE VMOVMSKPD        reg64,ymmreg             AVX,SANDYBRIDGE,LONG VMOVMSKPD        reg32,ymmreg             AVX,SANDYBRIDGE VMOVMSKPS        reg64,xmmreg             AVX,SANDYBRIDGE,LONG VMOVMSKPS        reg32,xmmreg             AVX,SANDYBRIDGE VMOVMSKPS        reg64,ymmreg             AVX,SANDYBRIDGE,LONG VMOVMSKPS        reg32,ymmreg             AVX,SANDYBRIDGE VMOVNTDQ         mem128,xmmreg            AVX,SANDYBRIDGE VMOVNTQQ         mem256,ymmreg            AVX,SANDYBRIDGE VMOVNTDQ         mem256,ymmreg            AVX,SANDYBRIDGE VMOVNTDQA        xmmreg,mem128            AVX,SANDYBRIDGE VMOVNTPD         mem128,xmmreg            AVX,SANDYBRIDGE VMOVNTPD         mem256,ymmreg            AVX,SANDYBRIDGE VMOVNTPS         mem128,xmmreg            AVX,SANDYBRIDGE VMOVNTPS         mem256,ymmreg            AVX,SANDYBRIDGE VMOVSD           xmmreg,xmmreg*,xmmreg    AVX,SANDYBRIDGE VMOVSD           xmmreg,mem64             AVX,SANDYBRIDGE VMOVSD           xmmreg,xmmreg*,xmmreg    AVX,SANDYBRIDGE VMOVSD           mem64,xmmreg             AVX,SANDYBRIDGE VMOVSHDUP        xmmreg,xmmrm128          AVX,SANDYBRIDGE VMOVSHDUP        ymmreg,ymmrm256          AVX,SANDYBRIDGE VMOVSLDUP        xmmreg,xmmrm128          AVX,SANDYBRIDGE VMOVSLDUP        ymmreg,ymmrm256          AVX,SANDYBRIDGE VMOVSS           xmmreg,xmmreg*,xmmreg    AVX,SANDYBRIDGE VMOVSS           xmmreg,mem32             AVX,SANDYBRIDGE VMOVSS           xmmreg,xmmreg*,xmmreg    AVX,SANDYBRIDGE VMOVSS           mem32,xmmreg             AVX,SANDYBRIDGE VMOVUPD          xmmreg,xmmrm128          AVX,SANDYBRIDGE VMOVUPD          xmmrm128,xmmreg          AVX,SANDYBRIDGE VMOVUPD          ymmreg,ymmrm256          AVX,SANDYBRIDGE VMOVUPD          ymmrm256,ymmreg          AVX,SANDYBRIDGE VMOVUPS          xmmreg,xmmrm128          AVX,SANDYBRIDGE VMOVUPS          xmmrm128,xmmreg          AVX,SANDYBRIDGE VMOVUPS          ymmreg,ymmrm256          AVX,SANDYBRIDGE VMOVUPS          ymmrm256,ymmreg          AVX,SANDYBRIDGE VMPSADBW         xmmreg,xmmreg*,xmmrm128,imm8 AVX,SANDYBRIDGE VMULPD           xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE VMULPD           ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE VMULPS           xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE VMULPS           ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE VMULSD           xmmreg,xmmreg*,xmmrm64   AVX,SANDYBRIDGE VMULSS           xmmreg,xmmreg*,xmmrm32   AVX,SANDYBRIDGE VORPD            xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE VORPD            ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE VORPS            xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE VORPS            ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE VPABSB           xmmreg,xmmrm128          AVX,SANDYBRIDGE VPABSW           xmmreg,xmmrm128          AVX,SANDYBRIDGE VPABSD           xmmreg,xmmrm128          AVX,SANDYBRIDGE VPACKSSWB        xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE VPACKSSDW        xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE VPACKUSWB        xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE VPACKUSDW        xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE VPADDB           xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE VPADDW           xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE VPADDD           xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE VPADDQ           xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE VPADDSB          xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE VPADDSW          xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE VPADDUSB         xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE VPADDUSW         xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE VPALIGNR         xmmreg,xmmreg*,xmmrm128,imm8 AVX,SANDYBRIDGE VPAND            xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE VPANDN           xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE VPAVGB           xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE VPAVGW           xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE VPBLENDVB        xmmreg,xmmreg*,xmmrm128,xmmreg AVX,SANDYBRIDGE VPBLENDW         xmmreg,xmmreg*,xmmrm128,imm8 AVX,SANDYBRIDGE VPCMPESTRI       xmmreg,xmmrm128,imm8     AVX,SANDYBRIDGE VPCMPESTRM       xmmreg,xmmrm128,imm8     AVX,SANDYBRIDGE VPCMPISTRI       xmmreg,xmmrm128,imm8     AVX,SANDYBRIDGE VPCMPISTRM       xmmreg,xmmrm128,imm8     AVX,SANDYBRIDGE VPCMPEQB         xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE VPCMPEQW         xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE VPCMPEQD         xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE VPCMPEQQ         xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE VPCMPGTB         xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE VPCMPGTW         xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE VPCMPGTD         xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE VPCMPGTQ         xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE VPERMILPD        xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE VPERMILPD        ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE VPERMILPD        xmmreg,xmmrm128,imm8     AVX,SANDYBRIDGE VPERMILPD        ymmreg,ymmrm256,imm8     AVX,SANDYBRIDGE VPERMILPS        xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE VPERMILPS        ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE VPERMILPS        xmmreg,xmmrm128,imm8     AVX,SANDYBRIDGE VPERMILPS        ymmreg,ymmrm256,imm8     AVX,SANDYBRIDGE VPERM2F128       ymmreg,ymmreg*,ymmrm256,imm8 AVX,SANDYBRIDGE VPEXTRB          reg64,xmmreg,imm8        AVX,SANDYBRIDGE,LONG VPEXTRB          reg32,xmmreg,imm8        AVX,SANDYBRIDGE VPEXTRB          mem8,xmmreg,imm8         AVX,SANDYBRIDGE VPEXTRW          reg64,xmmreg,imm8        AVX,SANDYBRIDGE,LONG VPEXTRW          reg32,xmmreg,imm8        AVX,SANDYBRIDGE VPEXTRW          reg64,xmmreg,imm8        AVX,SANDYBRIDGE,LONG VPEXTRW          reg32,xmmreg,imm8        AVX,SANDYBRIDGE VPEXTRW          mem16,xmmreg,imm8        AVX,SANDYBRIDGE VPEXTRD          reg64,xmmreg,imm8        AVX,SANDYBRIDGE,LONG VPEXTRD          rm32,xmmreg,imm8         AVX,SANDYBRIDGE VPEXTRQ          rm64,xmmreg,imm8         AVX,SANDYBRIDGE,LONG VPHADDW          xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE VPHADDD          xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE VPHADDSW         xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE VPHMINPOSUW      xmmreg,xmmrm128          AVX,SANDYBRIDGE VPHSUBW          xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE VPHSUBD          xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE VPHSUBSW         xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE VPINSRB          xmmreg,xmmreg*,mem8,imm8 AVX,SANDYBRIDGE VPINSRB          xmmreg,xmmreg*,rm8,imm8  AVX,SANDYBRIDGE VPINSRB          xmmreg,xmmreg*,reg32,imm8 AVX,SANDYBRIDGE VPINSRW          xmmreg,xmmreg*,mem16,imm8 AVX,SANDYBRIDGE VPINSRW          xmmreg,xmmreg*,rm16,imm8 AVX,SANDYBRIDGE VPINSRW          xmmreg,xmmreg*,reg32,imm8 AVX,SANDYBRIDGE VPINSRD          xmmreg,xmmreg*,mem32,imm8 AVX,SANDYBRIDGE VPINSRD          xmmreg,xmmreg*,rm32,imm8 AVX,SANDYBRIDGE VPINSRQ          xmmreg,xmmreg*,mem64,imm8 AVX,SANDYBRIDGE,LONG VPINSRQ          xmmreg,xmmreg*,rm64,imm8 AVX,SANDYBRIDGE,LONG VPMADDWD         xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE VPMADDUBSW       xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE VPMAXSB          xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE VPMAXSW          xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE VPMAXSD          xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE VPMAXUB          xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE VPMAXUW          xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE VPMAXUD          xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE VPMINSB          xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE VPMINSW          xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE VPMINSD          xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE VPMINUB          xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE VPMINUW          xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE VPMINUD          xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE VPMOVMSKB        reg64,xmmreg             AVX,SANDYBRIDGE,LONG VPMOVMSKB        reg32,xmmreg             AVX,SANDYBRIDGE VPMOVSXBW        xmmreg,xmmrm64           AVX,SANDYBRIDGE VPMOVSXBD        xmmreg,xmmrm32           AVX,SANDYBRIDGE VPMOVSXBQ        xmmreg,xmmrm16           AVX,SANDYBRIDGE VPMOVSXWD        xmmreg,xmmrm64           AVX,SANDYBRIDGE VPMOVSXWQ        xmmreg,xmmrm32           AVX,SANDYBRIDGE VPMOVSXDQ        xmmreg,xmmrm64           AVX,SANDYBRIDGE VPMOVZXBW        xmmreg,xmmrm64           AVX,SANDYBRIDGE VPMOVZXBD        xmmreg,xmmrm32           AVX,SANDYBRIDGE VPMOVZXBQ        xmmreg,xmmrm16           AVX,SANDYBRIDGE VPMOVZXWD        xmmreg,xmmrm64           AVX,SANDYBRIDGE VPMOVZXWQ        xmmreg,xmmrm32           AVX,SANDYBRIDGE VPMOVZXDQ        xmmreg,xmmrm64           AVX,SANDYBRIDGE VPMULHUW         xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE VPMULHRSW        xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE VPMULHW          xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE VPMULLW          xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE VPMULLD          xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE VPMULUDQ         xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE VPMULDQ          xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE VPOR             xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE VPSADBW          xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE VPSHUFB          xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE VPSHUFD          xmmreg,xmmrm128,imm8     AVX,SANDYBRIDGE VPSHUFHW         xmmreg,xmmrm128,imm8     AVX,SANDYBRIDGE VPSHUFLW         xmmreg,xmmrm128,imm8     AVX,SANDYBRIDGE VPSIGNB          xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE VPSIGNW          xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE VPSIGND          xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE VPSLLDQ          xmmreg,xmmreg*,imm8      AVX,SANDYBRIDGE VPSRLDQ          xmmreg,xmmreg*,imm8      AVX,SANDYBRIDGE VPSLLW           xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE VPSLLW           xmmreg,xmmreg*,imm8      AVX,SANDYBRIDGE VPSLLD           xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE VPSLLD           xmmreg,xmmreg*,imm8      AVX,SANDYBRIDGE VPSLLQ           xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE VPSLLQ           xmmreg,xmmreg*,imm8      AVX,SANDYBRIDGE VPSRAW           xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE VPSRAW           xmmreg,xmmreg*,imm8      AVX,SANDYBRIDGE VPSRAD           xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE VPSRAD           xmmreg,xmmreg*,imm8      AVX,SANDYBRIDGE VPSRLW           xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE VPSRLW           xmmreg,xmmreg*,imm8      AVX,SANDYBRIDGE VPSRLD           xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE VPSRLD           xmmreg,xmmreg*,imm8      AVX,SANDYBRIDGE VPSRLQ           xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE VPSRLQ           xmmreg,xmmreg*,imm8      AVX,SANDYBRIDGE VPTEST           xmmreg,xmmrm128          AVX,SANDYBRIDGE VPTEST           ymmreg,ymmrm256          AVX,SANDYBRIDGE VPSUBB           xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE VPSUBW           xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE VPSUBD           xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE VPSUBQ           xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE VPSUBSB          xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE VPSUBSW          xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE VPSUBUSB         xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE VPSUBUSW         xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE VPUNPCKHBW       xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE VPUNPCKHWD       xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE VPUNPCKHDQ       xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE VPUNPCKHQDQ      xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE VPUNPCKLBW       xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE VPUNPCKLWD       xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE VPUNPCKLDQ       xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE VPUNPCKLQDQ      xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE VPXOR            xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE VRCPPS           xmmreg,xmmrm128          AVX,SANDYBRIDGE VRCPPS           ymmreg,ymmrm256          AVX,SANDYBRIDGE VRCPSS           xmmreg,xmmreg*,xmmrm32   AVX,SANDYBRIDGE VRSQRTPS         xmmreg,xmmrm128          AVX,SANDYBRIDGE VRSQRTPS         ymmreg,ymmrm256          AVX,SANDYBRIDGE VRSQRTSS         xmmreg,xmmreg*,xmmrm32   AVX,SANDYBRIDGE VROUNDPD         xmmreg,xmmrm128,imm8     AVX,SANDYBRIDGE VROUNDPD         ymmreg,ymmrm256,imm8     AVX,SANDYBRIDGE VROUNDPS         xmmreg,xmmrm128,imm8     AVX,SANDYBRIDGE VROUNDPS         ymmreg,ymmrm256,imm8     AVX,SANDYBRIDGE VROUNDSD         xmmreg,xmmreg*,xmmrm64,imm8 AVX,SANDYBRIDGE VROUNDSS         xmmreg,xmmreg*,xmmrm32,imm8 AVX,SANDYBRIDGE VSHUFPD          xmmreg,xmmreg*,xmmrm128,imm8 AVX,SANDYBRIDGE VSHUFPD          ymmreg,ymmreg*,ymmrm256,imm8 AVX,SANDYBRIDGE VSHUFPS          xmmreg,xmmreg*,xmmrm128,imm8 AVX,SANDYBRIDGE VSHUFPS          ymmreg,ymmreg*,ymmrm256,imm8 AVX,SANDYBRIDGE VSQRTPD          xmmreg,xmmrm128          AVX,SANDYBRIDGE VSQRTPD          ymmreg,ymmrm256          AVX,SANDYBRIDGE VSQRTPS          xmmreg,xmmrm128          AVX,SANDYBRIDGE VSQRTPS          ymmreg,ymmrm256          AVX,SANDYBRIDGE VSQRTSD          xmmreg,xmmreg*,xmmrm64   AVX,SANDYBRIDGE VSQRTSS          xmmreg,xmmreg*,xmmrm32   AVX,SANDYBRIDGE VSTMXCSR         mem32                    AVX,SANDYBRIDGE VSUBPD           xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE VSUBPD           ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE VSUBPS           xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE VSUBPS           ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE VSUBSD           xmmreg,xmmreg*,xmmrm64   AVX,SANDYBRIDGE VSUBSS           xmmreg,xmmreg*,xmmrm32   AVX,SANDYBRIDGE VTESTPS          xmmreg,xmmrm128          AVX,SANDYBRIDGE VTESTPS          ymmreg,ymmrm256          AVX,SANDYBRIDGE VTESTPD          xmmreg,xmmrm128          AVX,SANDYBRIDGE VTESTPD          ymmreg,ymmrm256          AVX,SANDYBRIDGE VUCOMISD         xmmreg,xmmrm64           AVX,SANDYBRIDGE VUCOMISS         xmmreg,xmmrm32           AVX,SANDYBRIDGE VUNPCKHPD        xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE VUNPCKHPD        ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE VUNPCKHPS        xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE VUNPCKHPS        ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE VUNPCKLPD        xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE VUNPCKLPD        ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE VUNPCKLPS        xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE VUNPCKLPS        ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE VXORPD           xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE VXORPD           ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE VXORPS           xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE VXORPS           ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE VZEROALL                                  AVX,SANDYBRIDGE VZEROUPPER                                AVX,SANDYBRIDGE
subh B.1.27 :section-B.1.27
n Intelspn Carry-n Lessspn Multiplicationspn instructionsspn (CLMUL)
code
PCLMULLQLQDQ     xmmreg,xmmrm128          SSE,WESTMERE PCLMULHQLQDQ     xmmreg,xmmrm128          SSE,WESTMERE PCLMULLQHQDQ     xmmreg,xmmrm128          SSE,WESTMERE PCLMULHQHQDQ     xmmreg,xmmrm128          SSE,WESTMERE PCLMULQDQ        xmmreg,xmmrm128,imm8     SSE,WESTMERE
subh B.1.28 :section-B.1.28
n Intelspn AVXspn Carry-n Lessspn Multiplicationspn instructionsspn (CLMUL)
code
VPCLMULLQLQDQ    xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE VPCLMULHQLQDQ    xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE VPCLMULLQHQDQ    xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE VPCLMULHQHQDQ    xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE VPCLMULQDQ       xmmreg,xmmreg*,xmmrm128,imm8 AVX,SANDYBRIDGE VPCLMULLQLQDQ    ymmreg,ymmreg*,ymmrm256  VPCLMULQDQ VPCLMULHQLQDQ    ymmreg,ymmreg*,ymmrm256  VPCLMULQDQ VPCLMULLQHQDQ    ymmreg,ymmreg*,ymmrm256  VPCLMULQDQ VPCLMULHQHQDQ    ymmreg,ymmreg*,ymmrm256  VPCLMULQDQ VPCLMULQDQ       ymmreg,ymmreg*,ymmrm256,imm8 VPCLMULQDQ VPCLMULLQLQDQ    xmmreg,xmmreg*,xmmrm128  AVX512VL,VPCLMULQDQ VPCLMULHQLQDQ    xmmreg,xmmreg*,xmmrm128  AVX512VL,VPCLMULQDQ VPCLMULLQHQDQ    xmmreg,xmmreg*,xmmrm128  AVX512VL,VPCLMULQDQ VPCLMULHQHQDQ    xmmreg,xmmreg*,xmmrm128  AVX512VL,VPCLMULQDQ VPCLMULQDQ       xmmreg,xmmreg*,xmmrm128,imm8 AVX512VL,VPCLMULQDQ VPCLMULLQLQDQ    ymmreg,ymmreg*,ymmrm256  AVX512VL,VPCLMULQDQ VPCLMULHQLQDQ    ymmreg,ymmreg*,ymmrm256  AVX512VL,VPCLMULQDQ VPCLMULLQHQDQ    ymmreg,ymmreg*,ymmrm256  AVX512VL,VPCLMULQDQ VPCLMULHQHQDQ    ymmreg,ymmreg*,ymmrm256  AVX512VL,VPCLMULQDQ VPCLMULQDQ       ymmreg,ymmreg*,ymmrm256,imm8 AVX512VL,VPCLMULQDQ VPCLMULLQLQDQ    zmmreg,zmmreg*,zmmrm512  AVX512,VPCLMULQDQ VPCLMULHQLQDQ    zmmreg,zmmreg*,zmmrm512  AVX512,VPCLMULQDQ VPCLMULLQHQDQ    zmmreg,zmmreg*,zmmrm512  AVX512,VPCLMULQDQ VPCLMULHQHQDQ    zmmreg,zmmreg*,zmmrm512  AVX512,VPCLMULQDQ VPCLMULQDQ       zmmreg,zmmreg*,zmmrm512,imm8 AVX512,VPCLMULQDQ
subh B.1.29 :section-B.1.29
n Intelspn Fusedspn Multiply-n Addspn instructionsspn (FMA)
code
VFMADD132PS      xmmreg,xmmreg,xmmrm128   FMA VFMADD132PS      ymmreg,ymmreg,ymmrm256   FMA VFMADD132PD      xmmreg,xmmreg,xmmrm128   FMA VFMADD132PD      ymmreg,ymmreg,ymmrm256   FMA VFMADD312PS      xmmreg,xmmreg,xmmrm128   FMA VFMADD312PS      ymmreg,ymmreg,ymmrm256   FMA VFMADD312PD      xmmreg,xmmreg,xmmrm128   FMA VFMADD312PD      ymmreg,ymmreg,ymmrm256   FMA VFMADD213PS      xmmreg,xmmreg,xmmrm128   FMA VFMADD213PS      ymmreg,ymmreg,ymmrm256   FMA VFMADD213PD      xmmreg,xmmreg,xmmrm128   FMA VFMADD213PD      ymmreg,ymmreg,ymmrm256   FMA VFMADD123PS      xmmreg,xmmreg,xmmrm128   FMA VFMADD123PS      ymmreg,ymmreg,ymmrm256   FMA VFMADD123PD      xmmreg,xmmreg,xmmrm128   FMA VFMADD123PD      ymmreg,ymmreg,ymmrm256   FMA VFMADD231PS      xmmreg,xmmreg,xmmrm128   FMA VFMADD231PS      ymmreg,ymmreg,ymmrm256   FMA VFMADD231PD      xmmreg,xmmreg,xmmrm128   FMA VFMADD231PD      ymmreg,ymmreg,ymmrm256   FMA VFMADD321PS      xmmreg,xmmreg,xmmrm128   FMA VFMADD321PS      ymmreg,ymmreg,ymmrm256   FMA VFMADD321PD      xmmreg,xmmreg,xmmrm128   FMA VFMADD321PD      ymmreg,ymmreg,ymmrm256   FMA VFMADDSUB132PS   xmmreg,xmmreg,xmmrm128   FMA VFMADDSUB132PS   ymmreg,ymmreg,ymmrm256   FMA VFMADDSUB132PD   xmmreg,xmmreg,xmmrm128   FMA VFMADDSUB132PD   ymmreg,ymmreg,ymmrm256   FMA VFMADDSUB312PS   xmmreg,xmmreg,xmmrm128   FMA VFMADDSUB312PS   ymmreg,ymmreg,ymmrm256   FMA VFMADDSUB312PD   xmmreg,xmmreg,xmmrm128   FMA VFMADDSUB312PD   ymmreg,ymmreg,ymmrm256   FMA VFMADDSUB213PS   xmmreg,xmmreg,xmmrm128   FMA VFMADDSUB213PS   ymmreg,ymmreg,ymmrm256   FMA VFMADDSUB213PD   xmmreg,xmmreg,xmmrm128   FMA VFMADDSUB213PD   ymmreg,ymmreg,ymmrm256   FMA VFMADDSUB123PS   xmmreg,xmmreg,xmmrm128   FMA VFMADDSUB123PS   ymmreg,ymmreg,ymmrm256   FMA VFMADDSUB123PD   xmmreg,xmmreg,xmmrm128   FMA VFMADDSUB123PD   ymmreg,ymmreg,ymmrm256   FMA VFMADDSUB231PS   xmmreg,xmmreg,xmmrm128   FMA VFMADDSUB231PS   ymmreg,ymmreg,ymmrm256   FMA VFMADDSUB231PD   xmmreg,xmmreg,xmmrm128   FMA VFMADDSUB231PD   ymmreg,ymmreg,ymmrm256   FMA VFMADDSUB321PS   xmmreg,xmmreg,xmmrm128   FMA VFMADDSUB321PS   ymmreg,ymmreg,ymmrm256   FMA VFMADDSUB321PD   xmmreg,xmmreg,xmmrm128   FMA VFMADDSUB321PD   ymmreg,ymmreg,ymmrm256   FMA VFMSUB132PS      xmmreg,xmmreg,xmmrm128   FMA VFMSUB132PS      ymmreg,ymmreg,ymmrm256   FMA VFMSUB132PD      xmmreg,xmmreg,xmmrm128   FMA VFMSUB132PD      ymmreg,ymmreg,ymmrm256   FMA VFMSUB312PS      xmmreg,xmmreg,xmmrm128   FMA VFMSUB312PS      ymmreg,ymmreg,ymmrm256   FMA VFMSUB312PD      xmmreg,xmmreg,xmmrm128   FMA VFMSUB312PD      ymmreg,ymmreg,ymmrm256   FMA VFMSUB213PS      xmmreg,xmmreg,xmmrm128   FMA VFMSUB213PS      ymmreg,ymmreg,ymmrm256   FMA VFMSUB213PD      xmmreg,xmmreg,xmmrm128   FMA VFMSUB213PD      ymmreg,ymmreg,ymmrm256   FMA VFMSUB123PS      xmmreg,xmmreg,xmmrm128   FMA VFMSUB123PS      ymmreg,ymmreg,ymmrm256   FMA VFMSUB123PD      xmmreg,xmmreg,xmmrm128   FMA VFMSUB123PD      ymmreg,ymmreg,ymmrm256   FMA VFMSUB231PS      xmmreg,xmmreg,xmmrm128   FMA VFMSUB231PS      ymmreg,ymmreg,ymmrm256   FMA VFMSUB231PD      xmmreg,xmmreg,xmmrm128   FMA VFMSUB231PD      ymmreg,ymmreg,ymmrm256   FMA VFMSUB321PS      xmmreg,xmmreg,xmmrm128   FMA VFMSUB321PS      ymmreg,ymmreg,ymmrm256   FMA VFMSUB321PD      xmmreg,xmmreg,xmmrm128   FMA VFMSUB321PD      ymmreg,ymmreg,ymmrm256   FMA VFMSUBADD132PS   xmmreg,xmmreg,xmmrm128   FMA VFMSUBADD132PS   ymmreg,ymmreg,ymmrm256   FMA VFMSUBADD132PD   xmmreg,xmmreg,xmmrm128   FMA VFMSUBADD132PD   ymmreg,ymmreg,ymmrm256   FMA VFMSUBADD312PS   xmmreg,xmmreg,xmmrm128   FMA VFMSUBADD312PS   ymmreg,ymmreg,ymmrm256   FMA VFMSUBADD312PD   xmmreg,xmmreg,xmmrm128   FMA VFMSUBADD312PD   ymmreg,ymmreg,ymmrm256   FMA VFMSUBADD213PS   xmmreg,xmmreg,xmmrm128   FMA VFMSUBADD213PS   ymmreg,ymmreg,ymmrm256   FMA VFMSUBADD213PD   xmmreg,xmmreg,xmmrm128   FMA VFMSUBADD213PD   ymmreg,ymmreg,ymmrm256   FMA VFMSUBADD123PS   xmmreg,xmmreg,xmmrm128   FMA VFMSUBADD123PS   ymmreg,ymmreg,ymmrm256   FMA VFMSUBADD123PD   xmmreg,xmmreg,xmmrm128   FMA VFMSUBADD123PD   ymmreg,ymmreg,ymmrm256   FMA VFMSUBADD231PS   xmmreg,xmmreg,xmmrm128   FMA VFMSUBADD231PS   ymmreg,ymmreg,ymmrm256   FMA VFMSUBADD231PD   xmmreg,xmmreg,xmmrm128   FMA VFMSUBADD231PD   ymmreg,ymmreg,ymmrm256   FMA VFMSUBADD321PS   xmmreg,xmmreg,xmmrm128   FMA VFMSUBADD321PS   ymmreg,ymmreg,ymmrm256   FMA VFMSUBADD321PD   xmmreg,xmmreg,xmmrm128   FMA VFMSUBADD321PD   ymmreg,ymmreg,ymmrm256   FMA VFNMADD132PS     xmmreg,xmmreg,xmmrm128   FMA VFNMADD132PS     ymmreg,ymmreg,ymmrm256   FMA VFNMADD132PD     xmmreg,xmmreg,xmmrm128   FMA VFNMADD132PD     ymmreg,ymmreg,ymmrm256   FMA VFNMADD312PS     xmmreg,xmmreg,xmmrm128   FMA VFNMADD312PS     ymmreg,ymmreg,ymmrm256   FMA VFNMADD312PD     xmmreg,xmmreg,xmmrm128   FMA VFNMADD312PD     ymmreg,ymmreg,ymmrm256   FMA VFNMADD213PS     xmmreg,xmmreg,xmmrm128   FMA VFNMADD213PS     ymmreg,ymmreg,ymmrm256   FMA VFNMADD213PD     xmmreg,xmmreg,xmmrm128   FMA VFNMADD213PD     ymmreg,ymmreg,ymmrm256   FMA VFNMADD123PS     xmmreg,xmmreg,xmmrm128   FMA VFNMADD123PS     ymmreg,ymmreg,ymmrm256   FMA VFNMADD123PD     xmmreg,xmmreg,xmmrm128   FMA VFNMADD123PD     ymmreg,ymmreg,ymmrm256   FMA VFNMADD231PS     xmmreg,xmmreg,xmmrm128   FMA VFNMADD231PS     ymmreg,ymmreg,ymmrm256   FMA VFNMADD231PD     xmmreg,xmmreg,xmmrm128   FMA VFNMADD231PD     ymmreg,ymmreg,ymmrm256   FMA VFNMADD321PS     xmmreg,xmmreg,xmmrm128   FMA VFNMADD321PS     ymmreg,ymmreg,ymmrm256   FMA VFNMADD321PD     xmmreg,xmmreg,xmmrm128   FMA VFNMADD321PD     ymmreg,ymmreg,ymmrm256   FMA VFNMSUB132PS     xmmreg,xmmreg,xmmrm128   FMA VFNMSUB132PS     ymmreg,ymmreg,ymmrm256   FMA VFNMSUB132PD     xmmreg,xmmreg,xmmrm128   FMA VFNMSUB132PD     ymmreg,ymmreg,ymmrm256   FMA VFNMSUB312PS     xmmreg,xmmreg,xmmrm128   FMA VFNMSUB312PS     ymmreg,ymmreg,ymmrm256   FMA VFNMSUB312PD     xmmreg,xmmreg,xmmrm128   FMA VFNMSUB312PD     ymmreg,ymmreg,ymmrm256   FMA VFNMSUB213PS     xmmreg,xmmreg,xmmrm128   FMA VFNMSUB213PS     ymmreg,ymmreg,ymmrm256   FMA VFNMSUB213PD     xmmreg,xmmreg,xmmrm128   FMA VFNMSUB213PD     ymmreg,ymmreg,ymmrm256   FMA VFNMSUB123PS     xmmreg,xmmreg,xmmrm128   FMA VFNMSUB123PS     ymmreg,ymmreg,ymmrm256   FMA VFNMSUB123PD     xmmreg,xmmreg,xmmrm128   FMA VFNMSUB123PD     ymmreg,ymmreg,ymmrm256   FMA VFNMSUB231PS     xmmreg,xmmreg,xmmrm128   FMA VFNMSUB231PS     ymmreg,ymmreg,ymmrm256   FMA VFNMSUB231PD     xmmreg,xmmreg,xmmrm128   FMA VFNMSUB231PD     ymmreg,ymmreg,ymmrm256   FMA VFNMSUB321PS     xmmreg,xmmreg,xmmrm128   FMA VFNMSUB321PS     ymmreg,ymmreg,ymmrm256   FMA VFNMSUB321PD     xmmreg,xmmreg,xmmrm128   FMA VFNMSUB321PD     ymmreg,ymmreg,ymmrm256   FMA VFMADD132SS      xmmreg,xmmreg,xmmrm32    FMA VFMADD132SD      xmmreg,xmmreg,xmmrm64    FMA VFMADD312SS      xmmreg,xmmreg,xmmrm32    FMA VFMADD312SD      xmmreg,xmmreg,xmmrm64    FMA VFMADD213SS      xmmreg,xmmreg,xmmrm32    FMA VFMADD213SD      xmmreg,xmmreg,xmmrm64    FMA VFMADD123SS      xmmreg,xmmreg,xmmrm32    FMA VFMADD123SD      xmmreg,xmmreg,xmmrm64    FMA VFMADD231SS      xmmreg,xmmreg,xmmrm32    FMA VFMADD231SD      xmmreg,xmmreg,xmmrm64    FMA VFMADD321SS      xmmreg,xmmreg,xmmrm32    FMA VFMADD321SD      xmmreg,xmmreg,xmmrm64    FMA VFMSUB132SS      xmmreg,xmmreg,xmmrm32    FMA VFMSUB132SD      xmmreg,xmmreg,xmmrm64    FMA VFMSUB312SS      xmmreg,xmmreg,xmmrm32    FMA VFMSUB312SD      xmmreg,xmmreg,xmmrm64    FMA VFMSUB213SS      xmmreg,xmmreg,xmmrm32    FMA VFMSUB213SD      xmmreg,xmmreg,xmmrm64    FMA VFMSUB123SS      xmmreg,xmmreg,xmmrm32    FMA VFMSUB123SD      xmmreg,xmmreg,xmmrm64    FMA VFMSUB231SS      xmmreg,xmmreg,xmmrm32    FMA VFMSUB231SD      xmmreg,xmmreg,xmmrm64    FMA VFMSUB321SS      xmmreg,xmmreg,xmmrm32    FMA VFMSUB321SD      xmmreg,xmmreg,xmmrm64    FMA VFNMADD132SS     xmmreg,xmmreg,xmmrm32    FMA VFNMADD132SD     xmmreg,xmmreg,xmmrm64    FMA VFNMADD312SS     xmmreg,xmmreg,xmmrm32    FMA VFNMADD312SD     xmmreg,xmmreg,xmmrm64    FMA VFNMADD213SS     xmmreg,xmmreg,xmmrm32    FMA VFNMADD213SD     xmmreg,xmmreg,xmmrm64    FMA VFNMADD123SS     xmmreg,xmmreg,xmmrm32    FMA VFNMADD123SD     xmmreg,xmmreg,xmmrm64    FMA VFNMADD231SS     xmmreg,xmmreg,xmmrm32    FMA VFNMADD231SD     xmmreg,xmmreg,xmmrm64    FMA VFNMADD321SS     xmmreg,xmmreg,xmmrm32    FMA VFNMADD321SD     xmmreg,xmmreg,xmmrm64    FMA VFNMSUB132SS     xmmreg,xmmreg,xmmrm32    FMA VFNMSUB132SD     xmmreg,xmmreg,xmmrm64    FMA VFNMSUB312SS     xmmreg,xmmreg,xmmrm32    FMA VFNMSUB312SD     xmmreg,xmmreg,xmmrm64    FMA VFNMSUB213SS     xmmreg,xmmreg,xmmrm32    FMA VFNMSUB213SD     xmmreg,xmmreg,xmmrm64    FMA VFNMSUB123SS     xmmreg,xmmreg,xmmrm32    FMA VFNMSUB123SD     xmmreg,xmmreg,xmmrm64    FMA VFNMSUB231SS     xmmreg,xmmreg,xmmrm32    FMA VFNMSUB231SD     xmmreg,xmmreg,xmmrm64    FMA VFNMSUB321SS     xmmreg,xmmreg,xmmrm32    FMA VFNMSUB321SD     xmmreg,xmmreg,xmmrm64    FMA
subh B.1.30 :section-B.1.30
n Intelspn post-n 32spn nmspn processorspn instructions
code
RDFSBASE         reg32                    LONG RDFSBASE         reg64                    LONG RDGSBASE         reg32                    LONG RDGSBASE         reg64                    LONG RDRAND           reg16                     RDRAND           reg32                     RDRAND           reg64                    LONG WRFSBASE         reg32                    LONG WRFSBASE         reg64                    LONG WRGSBASE         reg32                    LONG WRGSBASE         reg64                    LONG VCVTPH2PS        ymmreg,xmmrm128          AVX VCVTPH2PS        xmmreg,xmmrm64           AVX VCVTPS2PH        xmmrm128,ymmreg,imm8     AVX VCVTPS2PH        xmmrm64,xmmreg,imm8      AVX ADCX             reg32,rm32                ADCX             reg64,rm64               LONG ADOX             reg32,rm32                ADOX             reg64,rm64               LONG RDSEED           reg16                     RDSEED           reg32                     RDSEED           reg64                    LONG CLAC                                      PRIV STAC                                      PRIV
subh B.1.31 :section-B.1.31
n VIAspn (Centaur)spn securityspn instructions
code
XSTORE                                    PENT,CYRIX XCRYPTECB                                 PENT,CYRIX XCRYPTCBC                                 PENT,CYRIX XCRYPTCTR                                 PENT,CYRIX XCRYPTCFB                                 PENT,CYRIX XCRYPTOFB                                 PENT,CYRIX MONTMUL                                   PENT,CYRIX XSHA1                                     PENT,CYRIX XSHA256                                   PENT,CYRIX
subh B.1.32 :section-B.1.32
n AMDspn Lightweightspn Profilingspn (LWP)spn instructions
code
LLWPCB           reg32                    AMD,386 LLWPCB           reg64                    AMD,X86_64,LONG SLWPCB           reg32                    AMD,386 SLWPCB           reg64                    AMD,X86_64,LONG LWPVAL           reg32,rm32,imm32         AMD,386 LWPVAL           reg64,rm32,imm32         AMD,X86_64,LONG LWPINS           reg32,rm32,imm32         AMD,386 LWPINS           reg64,rm32,imm32         AMD,X86_64,LONG
subh B.1.33 :section-B.1.33
n AMDspn XOPspn andspn FMA4spn instructionsspn (SSE5)
code
VFMADDPD         xmmreg,xmmreg*,xmmrm128,xmmreg AMD,SSE5 VFMADDPD         ymmreg,ymmreg*,ymmrm256,ymmreg AMD,SSE5 VFMADDPD         xmmreg,xmmreg*,xmmreg,xmmrm128 AMD,SSE5 VFMADDPD         ymmreg,ymmreg*,ymmreg,ymmrm256 AMD,SSE5 VFMADDPS         xmmreg,xmmreg*,xmmrm128,xmmreg AMD,SSE5 VFMADDPS         ymmreg,ymmreg*,ymmrm256,ymmreg AMD,SSE5 VFMADDPS         xmmreg,xmmreg*,xmmreg,xmmrm128 AMD,SSE5 VFMADDPS         ymmreg,ymmreg*,ymmreg,ymmrm256 AMD,SSE5 VFMADDSD         xmmreg,xmmreg*,xmmrm64,xmmreg AMD,SSE5 VFMADDSD         xmmreg,xmmreg*,xmmreg,xmmrm64 AMD,SSE5 VFMADDSS         xmmreg,xmmreg*,xmmrm32,xmmreg AMD,SSE5 VFMADDSS         xmmreg,xmmreg*,xmmreg,xmmrm32 AMD,SSE5 VFMADDSUBPD      xmmreg,xmmreg*,xmmrm128,xmmreg AMD,SSE5 VFMADDSUBPD      ymmreg,ymmreg*,ymmrm256,ymmreg AMD,SSE5 VFMADDSUBPD      xmmreg,xmmreg*,xmmreg,xmmrm128 AMD,SSE5 VFMADDSUBPD      ymmreg,ymmreg*,ymmreg,ymmrm256 AMD,SSE5 VFMADDSUBPS      xmmreg,xmmreg*,xmmrm128,xmmreg AMD,SSE5 VFMADDSUBPS      ymmreg,ymmreg*,ymmrm256,ymmreg AMD,SSE5 VFMADDSUBPS      xmmreg,xmmreg*,xmmreg,xmmrm128 AMD,SSE5 VFMADDSUBPS      ymmreg,ymmreg*,ymmreg,ymmrm256 AMD,SSE5 VFMSUBADDPD      xmmreg,xmmreg*,xmmrm128,xmmreg AMD,SSE5 VFMSUBADDPD      ymmreg,ymmreg*,ymmrm256,ymmreg AMD,SSE5 VFMSUBADDPD      xmmreg,xmmreg*,xmmreg,xmmrm128 AMD,SSE5 VFMSUBADDPD      ymmreg,ymmreg*,ymmreg,ymmrm256 AMD,SSE5 VFMSUBADDPS      xmmreg,xmmreg*,xmmrm128,xmmreg AMD,SSE5 VFMSUBADDPS      ymmreg,ymmreg*,ymmrm256,ymmreg AMD,SSE5 VFMSUBADDPS      xmmreg,xmmreg*,xmmreg,xmmrm128 AMD,SSE5 VFMSUBADDPS      ymmreg,ymmreg*,ymmreg,ymmrm256 AMD,SSE5 VFMSUBPD         xmmreg,xmmreg*,xmmrm128,xmmreg AMD,SSE5 VFMSUBPD         ymmreg,ymmreg*,ymmrm256,ymmreg AMD,SSE5 VFMSUBPD         xmmreg,xmmreg*,xmmreg,xmmrm128 AMD,SSE5 VFMSUBPD         ymmreg,ymmreg*,ymmreg,ymmrm256 AMD,SSE5 VFMSUBPS         xmmreg,xmmreg*,xmmrm128,xmmreg AMD,SSE5 VFMSUBPS         ymmreg,ymmreg*,ymmrm256,ymmreg AMD,SSE5 VFMSUBPS         xmmreg,xmmreg*,xmmreg,xmmrm128 AMD,SSE5 VFMSUBPS         ymmreg,ymmreg*,ymmreg,ymmrm256 AMD,SSE5 VFMSUBSD         xmmreg,xmmreg*,xmmrm64,xmmreg AMD,SSE5 VFMSUBSD         xmmreg,xmmreg*,xmmreg,xmmrm64 AMD,SSE5 VFMSUBSS         xmmreg,xmmreg*,xmmrm32,xmmreg AMD,SSE5 VFMSUBSS         xmmreg,xmmreg*,xmmreg,xmmrm32 AMD,SSE5 VFNMADDPD        xmmreg,xmmreg*,xmmrm128,xmmreg AMD,SSE5 VFNMADDPD        ymmreg,ymmreg*,ymmrm256,ymmreg AMD,SSE5 VFNMADDPD        xmmreg,xmmreg*,xmmreg,xmmrm128 AMD,SSE5 VFNMADDPD        ymmreg,ymmreg*,ymmreg,ymmrm256 AMD,SSE5 VFNMADDPS        xmmreg,xmmreg*,xmmrm128,xmmreg AMD,SSE5 VFNMADDPS        ymmreg,ymmreg*,ymmrm256,ymmreg AMD,SSE5 VFNMADDPS        xmmreg,xmmreg*,xmmreg,xmmrm128 AMD,SSE5 VFNMADDPS        ymmreg,ymmreg*,ymmreg,ymmrm256 AMD,SSE5 VFNMADDSD        xmmreg,xmmreg*,xmmrm64,xmmreg AMD,SSE5 VFNMADDSD        xmmreg,xmmreg*,xmmreg,xmmrm64 AMD,SSE5 VFNMADDSS        xmmreg,xmmreg*,xmmrm32,xmmreg AMD,SSE5 VFNMADDSS        xmmreg,xmmreg*,xmmreg,xmmrm32 AMD,SSE5 VFNMSUBPD        xmmreg,xmmreg*,xmmrm128,xmmreg AMD,SSE5 VFNMSUBPD        ymmreg,ymmreg*,ymmrm256,ymmreg AMD,SSE5 VFNMSUBPD        xmmreg,xmmreg*,xmmreg,xmmrm128 AMD,SSE5 VFNMSUBPD        ymmreg,ymmreg*,ymmreg,ymmrm256 AMD,SSE5 VFNMSUBPS        xmmreg,xmmreg*,xmmrm128,xmmreg AMD,SSE5 VFNMSUBPS        ymmreg,ymmreg*,ymmrm256,ymmreg AMD,SSE5 VFNMSUBPS        xmmreg,xmmreg*,xmmreg,xmmrm128 AMD,SSE5 VFNMSUBPS        ymmreg,ymmreg*,ymmreg,ymmrm256 AMD,SSE5 VFNMSUBSD        xmmreg,xmmreg*,xmmrm64,xmmreg AMD,SSE5 VFNMSUBSD        xmmreg,xmmreg*,xmmreg,xmmrm64 AMD,SSE5 VFNMSUBSS        xmmreg,xmmreg*,xmmrm32,xmmreg AMD,SSE5 VFNMSUBSS        xmmreg,xmmreg*,xmmreg,xmmrm32 AMD,SSE5 VFRCZPD          xmmreg,xmmrm128*         AMD,SSE5 VFRCZPD          ymmreg,ymmrm256*         AMD,SSE5 VFRCZPS          xmmreg,xmmrm128*         AMD,SSE5 VFRCZPS          ymmreg,ymmrm256*         AMD,SSE5 VFRCZSD          xmmreg,xmmrm64*          AMD,SSE5 VFRCZSS          xmmreg,xmmrm32*          AMD,SSE5 VPCMOV           xmmreg,xmmreg*,xmmrm128,xmmreg AMD,SSE5 VPCMOV           ymmreg,ymmreg*,ymmrm256,ymmreg AMD,SSE5 VPCMOV           xmmreg,xmmreg*,xmmreg,xmmrm128 AMD,SSE5 VPCMOV           ymmreg,ymmreg*,ymmreg,ymmrm256 AMD,SSE5 VPCOMB           xmmreg,xmmreg*,xmmrm128,imm8 AMD,SSE5 VPCOMD           xmmreg,xmmreg*,xmmrm128,imm8 AMD,SSE5 VPCOMQ           xmmreg,xmmreg*,xmmrm128,imm8 AMD,SSE5 VPCOMUB          xmmreg,xmmreg*,xmmrm128,imm8 AMD,SSE5 VPCOMUD          xmmreg,xmmreg*,xmmrm128,imm8 AMD,SSE5 VPCOMUQ          xmmreg,xmmreg*,xmmrm128,imm8 AMD,SSE5 VPCOMUW          xmmreg,xmmreg*,xmmrm128,imm8 AMD,SSE5 VPCOMW           xmmreg,xmmreg*,xmmrm128,imm8 AMD,SSE5 VPHADDBD         xmmreg,xmmrm128*         AMD,SSE5 VPHADDBQ         xmmreg,xmmrm128*         AMD,SSE5 VPHADDBW         xmmreg,xmmrm128*         AMD,SSE5 VPHADDDQ         xmmreg,xmmrm128*         AMD,SSE5 VPHADDUBD        xmmreg,xmmrm128*         AMD,SSE5 VPHADDUBQ        xmmreg,xmmrm128*         AMD,SSE5 VPHADDUBW        xmmreg,xmmrm128*         AMD,SSE5 VPHADDUDQ        xmmreg,xmmrm128*         AMD,SSE5 VPHADDUWD        xmmreg,xmmrm128*         AMD,SSE5 VPHADDUWQ        xmmreg,xmmrm128*         AMD,SSE5 VPHADDWD         xmmreg,xmmrm128*         AMD,SSE5 VPHADDWQ         xmmreg,xmmrm128*         AMD,SSE5 VPHSUBBW         xmmreg,xmmrm128*         AMD,SSE5 VPHSUBDQ         xmmreg,xmmrm128*         AMD,SSE5 VPHSUBWD         xmmreg,xmmrm128*         AMD,SSE5 VPMACSDD         xmmreg,xmmreg*,xmmrm128,xmmreg AMD,SSE5 VPMACSDQH        xmmreg,xmmreg*,xmmrm128,xmmreg AMD,SSE5 VPMACSDQL        xmmreg,xmmreg*,xmmrm128,xmmreg AMD,SSE5 VPMACSSDD        xmmreg,xmmreg*,xmmrm128,xmmreg AMD,SSE5 VPMACSSDQH       xmmreg,xmmreg*,xmmrm128,xmmreg AMD,SSE5 VPMACSSDQL       xmmreg,xmmreg*,xmmrm128,xmmreg AMD,SSE5 VPMACSSWD        xmmreg,xmmreg*,xmmrm128,xmmreg AMD,SSE5 VPMACSSWW        xmmreg,xmmreg*,xmmrm128,xmmreg AMD,SSE5 VPMACSWD         xmmreg,xmmreg*,xmmrm128,xmmreg AMD,SSE5 VPMACSWW         xmmreg,xmmreg*,xmmrm128,xmmreg AMD,SSE5 VPMADCSSWD       xmmreg,xmmreg*,xmmrm128,xmmreg AMD,SSE5 VPMADCSWD        xmmreg,xmmreg*,xmmrm128,xmmreg AMD,SSE5 VPPERM           xmmreg,xmmreg*,xmmreg,xmmrm128 AMD,SSE5 VPPERM           xmmreg,xmmreg*,xmmrm128,xmmreg AMD,SSE5 VPROTB           xmmreg,xmmrm128*,xmmreg  AMD,SSE5 VPROTB           xmmreg,xmmreg*,xmmrm128  AMD,SSE5 VPROTB           xmmreg,xmmrm128*,imm8    AMD,SSE5 VPROTD           xmmreg,xmmrm128*,xmmreg  AMD,SSE5 VPROTD           xmmreg,xmmreg*,xmmrm128  AMD,SSE5 VPROTD           xmmreg,xmmrm128*,imm8    AMD,SSE5 VPROTQ           xmmreg,xmmrm128*,xmmreg  AMD,SSE5 VPROTQ           xmmreg,xmmreg*,xmmrm128  AMD,SSE5 VPROTQ           xmmreg,xmmrm128*,imm8    AMD,SSE5 VPROTW           xmmreg,xmmrm128*,xmmreg  AMD,SSE5 VPROTW           xmmreg,xmmreg*,xmmrm128  AMD,SSE5 VPROTW           xmmreg,xmmrm128*,imm8    AMD,SSE5 VPSHAB           xmmreg,xmmrm128*,xmmreg  AMD,SSE5 VPSHAB           xmmreg,xmmreg*,xmmrm128  AMD,SSE5 VPSHAD           xmmreg,xmmrm128*,xmmreg  AMD,SSE5 VPSHAD           xmmreg,xmmreg*,xmmrm128  AMD,SSE5 VPSHAQ           xmmreg,xmmrm128*,xmmreg  AMD,SSE5 VPSHAQ           xmmreg,xmmreg*,xmmrm128  AMD,SSE5 VPSHAW           xmmreg,xmmrm128*,xmmreg  AMD,SSE5 VPSHAW           xmmreg,xmmreg*,xmmrm128  AMD,SSE5 VPSHLB           xmmreg,xmmrm128*,xmmreg  AMD,SSE5 VPSHLB           xmmreg,xmmreg*,xmmrm128  AMD,SSE5 VPSHLD           xmmreg,xmmrm128*,xmmreg  AMD,SSE5 VPSHLD           xmmreg,xmmreg*,xmmrm128  AMD,SSE5 VPSHLQ           xmmreg,xmmrm128*,xmmreg  AMD,SSE5 VPSHLQ           xmmreg,xmmreg*,xmmrm128  AMD,SSE5 VPSHLW           xmmreg,xmmrm128*,xmmreg  AMD,SSE5 VPSHLW           xmmreg,xmmreg*,xmmrm128  AMD,SSE5
subh B.1.34 :section-B.1.34
n Intelspn AVX2spn instructions
code
VMPSADBW         ymmreg,ymmreg*,ymmrm256,imm8 AVX2 VPABSB           ymmreg,ymmrm256          AVX2 VPABSW           ymmreg,ymmrm256          AVX2 VPABSD           ymmreg,ymmrm256          AVX2 VPACKSSWB        ymmreg,ymmreg*,ymmrm256  AVX2 VPACKSSDW        ymmreg,ymmreg*,ymmrm256  AVX2 VPACKUSDW        ymmreg,ymmreg*,ymmrm256  AVX2 VPACKUSWB        ymmreg,ymmreg*,ymmrm256  AVX2 VPADDB           ymmreg,ymmreg*,ymmrm256  AVX2 VPADDW           ymmreg,ymmreg*,ymmrm256  AVX2 VPADDD           ymmreg,ymmreg*,ymmrm256  AVX2 VPADDQ           ymmreg,ymmreg*,ymmrm256  AVX2 VPADDSB          ymmreg,ymmreg*,ymmrm256  AVX2 VPADDSW          ymmreg,ymmreg*,ymmrm256  AVX2 VPADDUSB         ymmreg,ymmreg*,ymmrm256  AVX2 VPADDUSW         ymmreg,ymmreg*,ymmrm256  AVX2 VPALIGNR         ymmreg,ymmreg*,ymmrm256,imm8 AVX2 VPAND            ymmreg,ymmreg*,ymmrm256  AVX2 VPANDN           ymmreg,ymmreg*,ymmrm256  AVX2 VPAVGB           ymmreg,ymmreg*,ymmrm256  AVX2 VPAVGW           ymmreg,ymmreg*,ymmrm256  AVX2 VPBLENDVB        ymmreg,ymmreg*,ymmrm256,ymmreg AVX2 VPBLENDW         ymmreg,ymmreg*,ymmrm256,imm8 AVX2 VPCMPEQB         ymmreg,ymmreg*,ymmrm256  AVX2 VPCMPEQW         ymmreg,ymmreg*,ymmrm256  AVX2 VPCMPEQD         ymmreg,ymmreg*,ymmrm256  AVX2 VPCMPEQQ         ymmreg,ymmreg*,ymmrm256  AVX2 VPCMPGTB         ymmreg,ymmreg*,ymmrm256  AVX2 VPCMPGTW         ymmreg,ymmreg*,ymmrm256  AVX2 VPCMPGTD         ymmreg,ymmreg*,ymmrm256  AVX2 VPCMPGTQ         ymmreg,ymmreg*,ymmrm256  AVX2 VPHADDW          ymmreg,ymmreg*,ymmrm256  AVX2 VPHADDD          ymmreg,ymmreg*,ymmrm256  AVX2 VPHADDSW         ymmreg,ymmreg*,ymmrm256  AVX2 VPHSUBW          ymmreg,ymmreg*,ymmrm256  AVX2 VPHSUBD          ymmreg,ymmreg*,ymmrm256  AVX2 VPHSUBSW         ymmreg,ymmreg*,ymmrm256  AVX2 VPMADDUBSW       ymmreg,ymmreg*,ymmrm256  AVX2 VPMADDWD         ymmreg,ymmreg*,ymmrm256  AVX2 VPMAXSB          ymmreg,ymmreg*,ymmrm256  AVX2 VPMAXSW          ymmreg,ymmreg*,ymmrm256  AVX2 VPMAXSD          ymmreg,ymmreg*,ymmrm256  AVX2 VPMAXUB          ymmreg,ymmreg*,ymmrm256  AVX2 VPMAXUW          ymmreg,ymmreg*,ymmrm256  AVX2 VPMAXUD          ymmreg,ymmreg*,ymmrm256  AVX2 VPMINSB          ymmreg,ymmreg*,ymmrm256  AVX2 VPMINSW          ymmreg,ymmreg*,ymmrm256  AVX2 VPMINSD          ymmreg,ymmreg*,ymmrm256  AVX2 VPMINUB          ymmreg,ymmreg*,ymmrm256  AVX2 VPMINUW          ymmreg,ymmreg*,ymmrm256  AVX2 VPMINUD          ymmreg,ymmreg*,ymmrm256  AVX2 VPMOVMSKB        reg32,ymmreg             AVX2 VPMOVMSKB        reg64,ymmreg             AVX2 VPMOVSXBW        ymmreg,xmmrm128          AVX2 VPMOVSXBD        ymmreg,mem64             AVX2 VPMOVSXBD        ymmreg,xmmreg            AVX2 VPMOVSXBQ        ymmreg,mem32             AVX2 VPMOVSXBQ        ymmreg,xmmreg            AVX2 VPMOVSXWD        ymmreg,xmmrm128          AVX2 VPMOVSXWQ        ymmreg,mem64             AVX2 VPMOVSXWQ        ymmreg,xmmreg            AVX2 VPMOVSXDQ        ymmreg,xmmrm128          AVX2 VPMOVZXBW        ymmreg,xmmrm128          AVX2 VPMOVZXBD        ymmreg,mem64             AVX2 VPMOVZXBD        ymmreg,xmmreg            AVX2 VPMOVZXBQ        ymmreg,mem32             AVX2 VPMOVZXBQ        ymmreg,xmmreg            AVX2 VPMOVZXWD        ymmreg,xmmrm128          AVX2 VPMOVZXWQ        ymmreg,mem64             AVX2 VPMOVZXWQ        ymmreg,xmmreg            AVX2 VPMOVZXDQ        ymmreg,xmmrm128          AVX2 VPMULDQ          ymmreg,ymmreg*,ymmrm256  AVX2 VPMULHRSW        ymmreg,ymmreg*,ymmrm256  AVX2 VPMULHUW         ymmreg,ymmreg*,ymmrm256  AVX2 VPMULHW          ymmreg,ymmreg*,ymmrm256  AVX2 VPMULLW          ymmreg,ymmreg*,ymmrm256  AVX2 VPMULLD          ymmreg,ymmreg*,ymmrm256  AVX2 VPMULUDQ         ymmreg,ymmreg*,ymmrm256  AVX2 VPOR             ymmreg,ymmreg*,ymmrm256  AVX2 VPSADBW          ymmreg,ymmreg*,ymmrm256  AVX2 VPSHUFB          ymmreg,ymmreg*,ymmrm256  AVX2 VPSHUFD          ymmreg,ymmrm256,imm8     AVX2 VPSHUFHW         ymmreg,ymmrm256,imm8     AVX2 VPSHUFLW         ymmreg,ymmrm256,imm8     AVX2 VPSIGNB          ymmreg,ymmreg*,ymmrm256  AVX2 VPSIGNW          ymmreg,ymmreg*,ymmrm256  AVX2 VPSIGND          ymmreg,ymmreg*,ymmrm256  AVX2 VPSLLDQ          ymmreg,ymmreg*,imm8      AVX2 VPSLLW           ymmreg,ymmreg*,xmmrm128  AVX2 VPSLLW           ymmreg,ymmreg*,imm8      AVX2 VPSLLD           ymmreg,ymmreg*,xmmrm128  AVX2 VPSLLD           ymmreg,ymmreg*,imm8      AVX2 VPSLLQ           ymmreg,ymmreg*,xmmrm128  AVX2 VPSLLQ           ymmreg,ymmreg*,imm8      AVX2 VPSRAW           ymmreg,ymmreg*,xmmrm128  AVX2 VPSRAW           ymmreg,ymmreg*,imm8      AVX2 VPSRAD           ymmreg,ymmreg*,xmmrm128  AVX2 VPSRAD           ymmreg,ymmreg*,imm8      AVX2 VPSRLDQ          ymmreg,ymmreg*,imm8      AVX2 VPSRLW           ymmreg,ymmreg*,xmmrm128  AVX2 VPSRLW           ymmreg,ymmreg*,imm8      AVX2 VPSRLD           ymmreg,ymmreg*,xmmrm128  AVX2 VPSRLD           ymmreg,ymmreg*,imm8      AVX2 VPSRLQ           ymmreg,ymmreg*,xmmrm128  AVX2 VPSRLQ           ymmreg,ymmreg*,imm8      AVX2 VPSUBB           ymmreg,ymmreg*,ymmrm256  AVX2 VPSUBW           ymmreg,ymmreg*,ymmrm256  AVX2 VPSUBD           ymmreg,ymmreg*,ymmrm256  AVX2 VPSUBQ           ymmreg,ymmreg*,ymmrm256  AVX2 VPSUBSB          ymmreg,ymmreg*,ymmrm256  AVX2 VPSUBSW          ymmreg,ymmreg*,ymmrm256  AVX2 VPSUBUSB         ymmreg,ymmreg*,ymmrm256  AVX2 VPSUBUSW         ymmreg,ymmreg*,ymmrm256  AVX2 VPUNPCKHBW       ymmreg,ymmreg*,ymmrm256  AVX2 VPUNPCKHWD       ymmreg,ymmreg*,ymmrm256  AVX2 VPUNPCKHDQ       ymmreg,ymmreg*,ymmrm256  AVX2 VPUNPCKHQDQ      ymmreg,ymmreg*,ymmrm256  AVX2 VPUNPCKLBW       ymmreg,ymmreg*,ymmrm256  AVX2 VPUNPCKLWD       ymmreg,ymmreg*,ymmrm256  AVX2 VPUNPCKLDQ       ymmreg,ymmreg*,ymmrm256  AVX2 VPUNPCKLQDQ      ymmreg,ymmreg*,ymmrm256  AVX2 VPXOR            ymmreg,ymmreg*,ymmrm256  AVX2 VMOVNTDQA        ymmreg,mem256            AVX2 VBROADCASTSS     xmmreg,xmmreg            AVX2 VBROADCASTSS     ymmreg,xmmreg            AVX2 VBROADCASTSD     ymmreg,xmmreg            AVX2 VBROADCASTI128   ymmreg,mem128            AVX2 VPBLENDD         xmmreg,xmmreg*,xmmrm128,imm8 AVX2 VPBLENDD         ymmreg,ymmreg*,ymmrm256,imm8 AVX2 VPBROADCASTB     xmmreg,mem8              AVX2 VPBROADCASTB     xmmreg,xmmreg            AVX2 VPBROADCASTB     ymmreg,mem8              AVX2 VPBROADCASTB     ymmreg,xmmreg            AVX2 VPBROADCASTW     xmmreg,mem16             AVX2 VPBROADCASTW     xmmreg,xmmreg            AVX2 VPBROADCASTW     ymmreg,mem16             AVX2 VPBROADCASTW     ymmreg,xmmreg            AVX2 VPBROADCASTD     xmmreg,mem32             AVX2 VPBROADCASTD     xmmreg,xmmreg            AVX2 VPBROADCASTD     ymmreg,mem32             AVX2 VPBROADCASTD     ymmreg,xmmreg            AVX2 VPBROADCASTQ     xmmreg,mem64             AVX2 VPBROADCASTQ     xmmreg,xmmreg            AVX2 VPBROADCASTQ     ymmreg,mem64             AVX2 VPBROADCASTQ     ymmreg,xmmreg            AVX2 VPERMD           ymmreg,ymmreg*,ymmrm256  AVX2 VPERMPD          ymmreg,ymmrm256,imm8     AVX2 VPERMPS          ymmreg,ymmreg*,ymmrm256  AVX2 VPERMQ           ymmreg,ymmrm256,imm8     AVX2 VPERM2I128       ymmreg,ymmreg*,ymmrm256,imm8 AVX2 VEXTRACTI128     xmmrm128,ymmreg,imm8     AVX2 VINSERTI128      ymmreg,ymmreg*,xmmrm128,imm8 AVX2 VPMASKMOVD       xmmreg,xmmreg*,mem128    AVX2 VPMASKMOVD       ymmreg,ymmreg*,mem256    AVX2 VPMASKMOVQ       xmmreg,xmmreg*,mem128    AVX2 VPMASKMOVQ       ymmreg,ymmreg*,mem256    AVX2 VPMASKMOVD       mem128,xmmreg*,xmmreg    AVX2 VPMASKMOVD       mem256,ymmreg*,ymmreg    AVX2 VPMASKMOVQ       mem128,xmmreg*,xmmreg    AVX2 VPMASKMOVQ       mem256,ymmreg*,ymmreg    AVX2 VPSLLVD          xmmreg,xmmreg*,xmmrm128  AVX2 VPSLLVQ          xmmreg,xmmreg*,xmmrm128  AVX2 VPSLLVD          ymmreg,ymmreg*,ymmrm256  AVX2 VPSLLVQ          ymmreg,ymmreg*,ymmrm256  AVX2 VPSRAVD          xmmreg,xmmreg*,xmmrm128  AVX2 VPSRAVD          ymmreg,ymmreg*,ymmrm256  AVX2 VPSRLVD          xmmreg,xmmreg*,xmmrm128  AVX2 VPSRLVQ          xmmreg,xmmreg*,xmmrm128  AVX2 VPSRLVD          ymmreg,ymmreg*,ymmrm256  AVX2 VPSRLVQ          ymmreg,ymmreg*,ymmrm256  AVX2 VGATHERDPD       xmmreg,xmem64,xmmreg     AVX2 VGATHERQPD       xmmreg,xmem64,xmmreg     AVX2 VGATHERDPD       ymmreg,xmem64,ymmreg     AVX2 VGATHERQPD       ymmreg,ymem64,ymmreg     AVX2 VGATHERDPS       xmmreg,xmem32,xmmreg     AVX2 VGATHERQPS       xmmreg,xmem32,xmmreg     AVX2 VGATHERDPS       ymmreg,ymem32,ymmreg     AVX2 VGATHERQPS       xmmreg,ymem32,xmmreg     AVX2 VPGATHERDD       xmmreg,xmem32,xmmreg     AVX2 VPGATHERQD       xmmreg,xmem32,xmmreg     AVX2 VPGATHERDD       ymmreg,ymem32,ymmreg     AVX2 VPGATHERQD       xmmreg,ymem32,xmmreg     AVX2 VPGATHERDQ       xmmreg,xmem64,xmmreg     AVX2 VPGATHERQQ       xmmreg,xmem64,xmmreg     AVX2 VPGATHERDQ       ymmreg,xmem64,ymmreg     AVX2 VPGATHERQQ       ymmreg,ymem64,ymmreg     AVX2
subh B.1.35 :section-B.1.35
n Intelspn Transactionalspn Synchronizationspn Extensionsspn (TSX)
code
XABORT           imm                      RTM XABORT           imm8                     RTM XBEGIN           imm                      RTM XBEGIN           imm|near                 RTM,ND XBEGIN           imm16                    RTM,NOLONG XBEGIN           imm16|near               RTM,NOLONG,ND XBEGIN           imm32                    RTM,NOLONG XBEGIN           imm32|near               RTM,NOLONG,ND XBEGIN           imm64                    RTM,LONG XBEGIN           imm64|near               RTM,LONG,ND XEND                                      RTM XTEST                                     HLE,RTM
subh B.1.36 :section-B.1.36
n Intelspn BMI1spn andspn BMI2spn instructions,spn AMDspn TBMspn instructions
code
ANDN             reg32,reg32,rm32         BMI1 ANDN             reg64,reg64,rm64         LONG,BMI1 BEXTR            reg32,rm32,reg32         BMI1 BEXTR            reg64,rm64,reg64         LONG,BMI1 BEXTR            reg32,rm32,imm32         TBM BEXTR            reg64,rm64,imm32         LONG,TBM BLCI             reg32,rm32               TBM BLCI             reg64,rm64               LONG,TBM BLCIC            reg32,rm32               TBM BLCIC            reg64,rm64               LONG,TBM BLSI             reg32,rm32               BMI1 BLSI             reg64,rm64               LONG,BMI1 BLSIC            reg32,rm32               TBM BLSIC            reg64,rm64               LONG,TBM BLCFILL          reg32,rm32               TBM BLCFILL          reg64,rm64               LONG,TBM BLSFILL          reg32,rm32               TBM BLSFILL          reg64,rm64               LONG,TBM BLCMSK           reg32,rm32               TBM BLCMSK           reg64,rm64               LONG,TBM BLSMSK           reg32,rm32               BMI1 BLSMSK           reg64,rm64               LONG,BMI1 BLSR             reg32,rm32               BMI1 BLSR             reg64,rm64               LONG,BMI1 BLCS             reg32,rm32               TBM BLCS             reg64,rm64               LONG,TBM BZHI             reg32,rm32,reg32         BMI2 BZHI             reg64,rm64,reg64         LONG,BMI2 MULX             reg32,reg32,rm32         BMI2 MULX             reg64,reg64,rm64         LONG,BMI2 PDEP             reg32,reg32,rm32         BMI2 PDEP             reg64,reg64,rm64         LONG,BMI2 PEXT             reg32,reg32,rm32         BMI2 PEXT             reg64,reg64,rm64         LONG,BMI2 RORX             reg32,rm32,imm8          BMI2 RORX             reg64,rm64,imm8          LONG,BMI2 SARX             reg32,rm32,reg32         BMI2 SARX             reg64,rm64,reg64         LONG,BMI2 SHLX             reg32,rm32,reg32         BMI2 SHLX             reg64,rm64,reg64         LONG,BMI2 SHRX             reg32,rm32,reg32         BMI2 SHRX             reg64,rm64,reg64         LONG,BMI2 TZCNT            reg16,rm16               BMI1 TZCNT            reg32,rm32               BMI1 TZCNT            reg64,rm64               LONG,BMI1 TZMSK            reg32,rm32               TBM TZMSK            reg64,rm64               LONG,TBM T1MSKC           reg32,rm32               TBM T1MSKC           reg64,rm64               LONG,TBM PREFETCHWT1      mem8                     PREFETCHWT1
subh B.1.37 :section-B.1.37
n Intelspn Memoryspn Protectionspn Extensionsspn (MPX)
code
BNDMK            bndreg,mem               MPX,MIB BNDCL            bndreg,mem               MPX BNDCL            bndreg,reg32             MPX,NOLONG BNDCL            bndreg,reg64             MPX,LONG BNDCU            bndreg,mem               MPX BNDCU            bndreg,reg32             MPX,NOLONG BNDCU            bndreg,reg64             MPX,LONG BNDCN            bndreg,mem               MPX BNDCN            bndreg,reg32             MPX,NOLONG BNDCN            bndreg,reg64             MPX,LONG BNDMOV           bndreg,bndreg            MPX BNDMOV           bndreg,mem               MPX BNDMOV           bndreg,bndreg            MPX BNDMOV           mem,bndreg               MPX BNDLDX           bndreg,mem               MPX,MIB BNDLDX           bndreg,mem,reg32         MPX,MIB,NOLONG BNDLDX           bndreg,mem,reg64         MPX,MIB,LONG BNDSTX           mem,bndreg               MPX,MIB BNDSTX           mem,reg32,bndreg         MPX,MIB,NOLONG BNDSTX           mem,reg64,bndreg         MPX,MIB,LONG BNDSTX           mem,bndreg,reg32         MPX,MIB,NOLONG BNDSTX           mem,bndreg,reg64         MPX,MIB,LONG
subh B.1.38 :section-B.1.38
n Intelspn SHAspn accelerationspn instructions
code
SHA1MSG1         xmmreg,xmmrm128          SHA SHA1MSG2         xmmreg,xmmrm128          SHA SHA1NEXTE        xmmreg,xmmrm128          SHA SHA1RNDS4        xmmreg,xmmrm128,imm8     SHA SHA256MSG1       xmmreg,xmmrm128          SHA SHA256MSG2       xmmreg,xmmrm128          SHA SHA256RNDS2      xmmreg,xmmrm128,xmm0     SHA SHA256RNDS2      xmmreg,xmmrm128          SHA
subh B.1.39 :section-B.1.39
n AVX-n 512spn maskspn registerspn instructions
code
KADDB            kreg,kreg,kreg            KADDD            kreg,kreg,kreg            KADDQ            kreg,kreg,kreg            KADDW            kreg,kreg,kreg            KANDB            kreg,kreg,kreg            KANDD            kreg,kreg,kreg            KANDNB           kreg,kreg,kreg            KANDND           kreg,kreg,kreg            KANDNQ           kreg,kreg,kreg            KANDNW           kreg,kreg,kreg            KANDQ            kreg,kreg,kreg            KANDW            kreg,kreg,kreg            KMOVB            kreg,krm8                 KMOVB            mem8,kreg                 KMOVB            kreg,reg32                KMOVB            kreg,reg8                ND KMOVB            reg32,kreg                KMOVD            kreg,krm32                KMOVD            mem32,kreg                KMOVD            kreg,reg32                KMOVD            reg32,kreg                KMOVQ            kreg,krm64                KMOVQ            mem64,kreg                KMOVQ            kreg,reg64                KMOVQ            reg64,kreg                KMOVW            kreg,krm16                KMOVW            mem16,kreg                KMOVW            kreg,reg32                KMOVW            kreg,reg16               ND KMOVW            reg32,kreg                KNOTB            kreg,kreg                 KNOTD            kreg,kreg                 KNOTQ            kreg,kreg                 KNOTW            kreg,kreg                 KORB             kreg,kreg,kreg            KORD             kreg,kreg,kreg            KORQ             kreg,kreg,kreg            KORW             kreg,kreg,kreg            KORTESTB         kreg,kreg                 KORTESTD         kreg,kreg                 KORTESTQ         kreg,kreg                 KORTESTW         kreg,kreg                 KSHIFTLB         kreg,kreg,imm8            KSHIFTLD         kreg,kreg,imm8            KSHIFTLQ         kreg,kreg,imm8            KSHIFTLW         kreg,kreg,imm8            KSHIFTRB         kreg,kreg,imm8            KSHIFTRD         kreg,kreg,imm8            KSHIFTRQ         kreg,kreg,imm8            KSHIFTRW         kreg,kreg,imm8            KTESTB           kreg,kreg                 KTESTD           kreg,kreg                 KTESTQ           kreg,kreg                 KTESTW           kreg,kreg                 KUNPCKBW         kreg,kreg,kreg            KUNPCKDQ         kreg,kreg,kreg            KUNPCKWD         kreg,kreg,kreg            KXNORB           kreg,kreg,kreg            KXNORD           kreg,kreg,kreg            KXNORQ           kreg,kreg,kreg            KXNORW           kreg,kreg,kreg            KXORB            kreg,kreg,kreg            KXORD            kreg,kreg,kreg            KXORQ            kreg,kreg,kreg            KXORW            kreg,kreg,kreg           
subh B.1.40 :section-B.1.40
n AVX-n 512spn maskspn registerspn instructionsspn (aliasesspn requiringspn explicitspn sizespn support)
code
KADD             kreg8,kreg,kreg          ND KADD             kreg32,kreg,kreg         ND KADD             kreg64,kreg,kreg         ND KADD             kreg16,kreg,kreg         ND KAND             kreg8,kreg,kreg          ND KAND             kreg32,kreg,kreg         ND KANDN            kreg64,kreg,kreg         ND KANDN            kreg16,kreg,kreg         ND KANDN            kreg8,kreg,kreg          ND KANDN            kreg32,kreg,kreg         ND KAND             kreg64,kreg,kreg         ND KAND             kreg16,kreg,kreg         ND KMOV             kreg8,krm8               ND KMOV             mem8,kreg8               ND KMOV             kreg8,reg32              ND,SX KMOV             kreg8,reg8               ND KMOV             reg32,kreg8              ND,SX KMOV             kreg32,krm32             ND KMOV             mem32,kreg32             ND KMOV             kreg32,reg32             ND KMOV             reg32,kreg32             ND KMOV             kreg64,krm64             ND KMOV             mem64,kreg64             ND KMOV             kreg64,reg64             ND KMOV             reg64,kreg64             ND KMOV             kreg16,krm16             ND KMOV             mem16,kreg16             ND KMOV             kreg16,reg32             ND,SX KMOV             reg32,kreg16             ND,SX KMOV             kreg16,reg32             ND,SX KMOV             kreg16,reg16             ND KNOT             kreg8,kreg8              ND KNOT             kreg32,kreg32            ND KNOT             kreg64,kreg64            ND KNOT             kreg16,kreg16            ND KOR              kreg8,kreg,kreg          ND KOR              kreg32,kreg,kreg         ND KOR              kreg64,kreg,kreg         ND KOR              kreg16,kreg,kreg         ND KORTEST          kreg8,kreg               ND KORTEST          kreg32,kreg              ND KORTEST          kreg64,kreg              ND KORTEST          kreg16,kreg              ND KSHIFTL          kreg8,kreg,imm8          ND KSHIFTL          kreg32,kreg,imm8         ND KSHIFTL          kreg64,kreg,imm8         ND KSHIFTL          kreg16,kreg,imm8         ND KSHIFTR          kreg8,kreg,imm8          ND KSHIFTR          kreg32,kreg,imm8         ND KSHIFTR          kreg64,kreg,imm8         ND KSHIFTR          kreg16,kreg,imm8         ND KTEST            kreg8,kreg               ND KTEST            kreg32,kreg              ND KTEST            kreg64,kreg              ND KTEST            kreg16,kreg              ND KUNPCK           kreg16,kreg8,kreg8       ND KUNPCK           kreg64,kreg32,kreg32     ND KUNPCK           kreg32,kreg16,kreg16     ND KXNOR            kreg8,kreg,kreg          ND KXNOR            kreg32,kreg,kreg         ND KXNOR            kreg64,kreg,kreg         ND KXNOR            kreg16,kreg,kreg         ND KXOR             kreg8,kreg,kreg          ND KXOR             kreg32,kreg,kreg         ND KXOR             kreg64,kreg,kreg         ND KXOR             kreg16,kreg,kreg         ND
subh B.1.41 :section-B.1.41
n AVX-n 512spn instructions
code
VADDPD           xmmreg|mask|z,xmmreg*,xmmrm128|b64 AVX512VL VADDPD           ymmreg|mask|z,ymmreg*,ymmrm256|b64 AVX512VL VADDPD           zmmreg|mask|z,zmmreg*,zmmrm512|b64|er AVX512 VADDPS           xmmreg|mask|z,xmmreg*,xmmrm128|b32 AVX512VL VADDPS           ymmreg|mask|z,ymmreg*,ymmrm256|b32 AVX512VL VADDPS           zmmreg|mask|z,zmmreg*,zmmrm512|b32|er AVX512 VADDSD           xmmreg|mask|z,xmmreg*,xmmrm64|er AVX512 VADDSS           xmmreg|mask|z,xmmreg*,xmmrm32|er AVX512 VALIGND          xmmreg|mask|z,xmmreg*,xmmrm128|b32,imm8 AVX512VL VALIGND          ymmreg|mask|z,ymmreg*,ymmrm256|b32,imm8 AVX512VL VALIGND          zmmreg|mask|z,zmmreg*,zmmrm512|b32,imm8 AVX512 VALIGNQ          xmmreg|mask|z,xmmreg*,xmmrm128|b64,imm8 AVX512VL VALIGNQ          ymmreg|mask|z,ymmreg*,ymmrm256|b64,imm8 AVX512VL VALIGNQ          zmmreg|mask|z,zmmreg*,zmmrm512|b64,imm8 AVX512 VANDNPD          xmmreg|mask|z,xmmreg*,xmmrm128|b64 AVX512VL/DQ VANDNPD          ymmreg|mask|z,ymmreg*,ymmrm256|b64 AVX512VL/DQ VANDNPD          zmmreg|mask|z,zmmreg*,zmmrm512|b64 AVX512DQ VANDNPS          xmmreg|mask|z,xmmreg*,xmmrm128|b32 AVX512VL/DQ VANDNPS          ymmreg|mask|z,ymmreg*,ymmrm256|b32 AVX512VL/DQ VANDNPS          zmmreg|mask|z,zmmreg*,zmmrm512|b32 AVX512DQ VANDPD           xmmreg|mask|z,xmmreg*,xmmrm128|b64 AVX512VL/DQ VANDPD           ymmreg|mask|z,ymmreg*,ymmrm256|b64 AVX512VL/DQ VANDPD           zmmreg|mask|z,zmmreg*,zmmrm512|b64 AVX512DQ VANDPS           xmmreg|mask|z,xmmreg*,xmmrm128|b32 AVX512VL/DQ VANDPS           ymmreg|mask|z,ymmreg*,ymmrm256|b32 AVX512VL/DQ VANDPS           zmmreg|mask|z,zmmreg*,zmmrm512|b32 AVX512DQ VBLENDMPD        xmmreg|mask|z,xmmreg,xmmrm128|b64 AVX512VL VBLENDMPD        ymmreg|mask|z,ymmreg,ymmrm256|b64 AVX512VL VBLENDMPD        zmmreg|mask|z,zmmreg,zmmrm512|b64 AVX512 VBLENDMPS        xmmreg|mask|z,xmmreg,xmmrm128|b32 AVX512VL VBLENDMPS        ymmreg|mask|z,ymmreg,ymmrm256|b32 AVX512VL VBLENDMPS        zmmreg|mask|z,zmmreg,zmmrm512|b32 AVX512 VBROADCASTF32X2  ymmreg|mask|z,xmmrm64    AVX512VL/DQ VBROADCASTF32X2  zmmreg|mask|z,xmmrm64    AVX512DQ VBROADCASTF32X4  ymmreg|mask|z,mem128     AVX512VL VBROADCASTF32X4  zmmreg|mask|z,mem128     AVX512 VBROADCASTF32X8  zmmreg|mask|z,mem256     AVX512DQ VBROADCASTF64X2  ymmreg|mask|z,mem128     AVX512VL/DQ VBROADCASTF64X2  zmmreg|mask|z,mem128     AVX512DQ VBROADCASTF64X4  zmmreg|mask|z,mem256     AVX512 VBROADCASTI32X2  xmmreg|mask|z,xmmrm64    AVX512VL/DQ VBROADCASTI32X2  ymmreg|mask|z,xmmrm64    AVX512VL/DQ VBROADCASTI32X2  zmmreg|mask|z,xmmrm64    AVX512DQ VBROADCASTI32X4  ymmreg|mask|z,mem128     AVX512VL VBROADCASTI32X4  zmmreg|mask|z,mem128     AVX512 VBROADCASTI32X8  zmmreg|mask|z,mem256     AVX512DQ VBROADCASTI64X2  ymmreg|mask|z,mem128     AVX512VL/DQ VBROADCASTI64X2  zmmreg|mask|z,mem128     AVX512DQ VBROADCASTI64X4  zmmreg|mask|z,mem256     AVX512 VBROADCASTSD     ymmreg|mask|z,mem64      AVX512VL VBROADCASTSD     zmmreg|mask|z,mem64      AVX512 VBROADCASTSD     ymmreg|mask|z,xmmreg     AVX512VL VBROADCASTSD     zmmreg|mask|z,xmmreg     AVX512 VBROADCASTSS     xmmreg|mask|z,mem32      AVX512VL VBROADCASTSS     ymmreg|mask|z,mem32      AVX512VL VBROADCASTSS     zmmreg|mask|z,mem32      AVX512 VBROADCASTSS     xmmreg|mask|z,xmmreg     AVX512VL VBROADCASTSS     ymmreg|mask|z,xmmreg     AVX512VL VBROADCASTSS     zmmreg|mask|z,xmmreg     AVX512 VCMPEQPD         kreg|mask,xmmreg,xmmrm128|b64 AVX512VL VCMPEQPD         kreg|mask,ymmreg,ymmrm256|b64 AVX512VL VCMPEQPD         kreg|mask,zmmreg,zmmrm512|b64|sae AVX512 VCMPEQPS         kreg|mask,xmmreg,xmmrm128|b32 AVX512VL VCMPEQPS         kreg|mask,ymmreg,ymmrm256|b32 AVX512VL VCMPEQPS         kreg|mask,zmmreg,zmmrm512|b32|sae AVX512 VCMPEQSD         kreg|mask,xmmreg,xmmrm64|sae AVX512 VCMPEQSS         kreg|mask,xmmreg,xmmrm32|sae AVX512 VCMPEQ_OQPD      kreg|mask,xmmreg,xmmrm128|b64 AVX512VL VCMPEQ_OQPD      kreg|mask,ymmreg,ymmrm256|b64 AVX512VL VCMPEQ_OQPD      kreg|mask,zmmreg,zmmrm512|b64|sae AVX512 VCMPEQ_OQPS      kreg|mask,xmmreg,xmmrm128|b32 AVX512VL VCMPEQ_OQPS      kreg|mask,ymmreg,ymmrm256|b32 AVX512VL VCMPEQ_OQPS      kreg|mask,zmmreg,zmmrm512|b32|sae AVX512 VCMPEQ_OQSD      kreg|mask,xmmreg,xmmrm64|sae AVX512 VCMPEQ_OQSS      kreg|mask,xmmreg,xmmrm32|sae AVX512 VCMPLTPD         kreg|mask,xmmreg,xmmrm128|b64 AVX512VL VCMPLTPD         kreg|mask,ymmreg,ymmrm256|b64 AVX512VL VCMPLTPD         kreg|mask,zmmreg,zmmrm512|b64|sae AVX512 VCMPLTPS         kreg|mask,xmmreg,xmmrm128|b32 AVX512VL VCMPLTPS         kreg|mask,ymmreg,ymmrm256|b32 AVX512VL VCMPLTPS         kreg|mask,zmmreg,zmmrm512|b32|sae AVX512 VCMPLTSD         kreg|mask,xmmreg,xmmrm64|sae AVX512 VCMPLTSS         kreg|mask,xmmreg,xmmrm32|sae AVX512 VCMPLT_OSPD      kreg|mask,xmmreg,xmmrm128|b64 AVX512VL VCMPLT_OSPD      kreg|mask,ymmreg,ymmrm256|b64 AVX512VL VCMPLT_OSPD      kreg|mask,zmmreg,zmmrm512|b64|sae AVX512 VCMPLT_OSPS      kreg|mask,xmmreg,xmmrm128|b32 AVX512VL VCMPLT_OSPS      kreg|mask,ymmreg,ymmrm256|b32 AVX512VL VCMPLT_OSPS      kreg|mask,zmmreg,zmmrm512|b32|sae AVX512 VCMPLT_OSSD      kreg|mask,xmmreg,xmmrm64|sae AVX512 VCMPLT_OSSS      kreg|mask,xmmreg,xmmrm32|sae AVX512 VCMPLEPD         kreg|mask,xmmreg,xmmrm128|b64 AVX512VL VCMPLEPD         kreg|mask,ymmreg,ymmrm256|b64 AVX512VL VCMPLEPD         kreg|mask,zmmreg,zmmrm512|b64|sae AVX512 VCMPLEPS         kreg|mask,xmmreg,xmmrm128|b32 AVX512VL VCMPLEPS         kreg|mask,ymmreg,ymmrm256|b32 AVX512VL VCMPLEPS         kreg|mask,zmmreg,zmmrm512|b32|sae AVX512 VCMPLESD         kreg|mask,xmmreg,xmmrm64|sae AVX512 VCMPLESS         kreg|mask,xmmreg,xmmrm32|sae AVX512 VCMPLE_OSPD      kreg|mask,xmmreg,xmmrm128|b64 AVX512VL VCMPLE_OSPD      kreg|mask,ymmreg,ymmrm256|b64 AVX512VL VCMPLE_OSPD      kreg|mask,zmmreg,zmmrm512|b64|sae AVX512 VCMPLE_OSPS      kreg|mask,xmmreg,xmmrm128|b32 AVX512VL VCMPLE_OSPS      kreg|mask,ymmreg,ymmrm256|b32 AVX512VL VCMPLE_OSPS      kreg|mask,zmmreg,zmmrm512|b32|sae AVX512 VCMPLE_OSSD      kreg|mask,xmmreg,xmmrm64|sae AVX512 VCMPLE_OSSS      kreg|mask,xmmreg,xmmrm32|sae AVX512 VCMPUNORDPD      kreg|mask,xmmreg,xmmrm128|b64 AVX512VL VCMPUNORDPD      kreg|mask,ymmreg,ymmrm256|b64 AVX512VL VCMPUNORDPD      kreg|mask,zmmreg,zmmrm512|b64|sae AVX512 VCMPUNORDPS      kreg|mask,xmmreg,xmmrm128|b32 AVX512VL VCMPUNORDPS      kreg|mask,ymmreg,ymmrm256|b32 AVX512VL VCMPUNORDPS      kreg|mask,zmmreg,zmmrm512|b32|sae AVX512 VCMPUNORDSD      kreg|mask,xmmreg,xmmrm64|sae AVX512 VCMPUNORDSS      kreg|mask,xmmreg,xmmrm32|sae AVX512 VCMPUNORD_QPD    kreg|mask,xmmreg,xmmrm128|b64 AVX512VL VCMPUNORD_QPD    kreg|mask,ymmreg,ymmrm256|b64 AVX512VL VCMPUNORD_QPD    kreg|mask,zmmreg,zmmrm512|b64|sae AVX512 VCMPUNORD_QPS    kreg|mask,xmmreg,xmmrm128|b32 AVX512VL VCMPUNORD_QPS    kreg|mask,ymmreg,ymmrm256|b32 AVX512VL VCMPUNORD_QPS    kreg|mask,zmmreg,zmmrm512|b32|sae AVX512 VCMPUNORD_QSD    kreg|mask,xmmreg,xmmrm64|sae AVX512 VCMPUNORD_QSS    kreg|mask,xmmreg,xmmrm32|sae AVX512 VCMPNEQPD        kreg|mask,xmmreg,xmmrm128|b64 AVX512VL VCMPNEQPD        kreg|mask,ymmreg,ymmrm256|b64 AVX512VL VCMPNEQPD        kreg|mask,zmmreg,zmmrm512|b64|sae AVX512 VCMPNEQPS        kreg|mask,xmmreg,xmmrm128|b32 AVX512VL VCMPNEQPS        kreg|mask,ymmreg,ymmrm256|b32 AVX512VL VCMPNEQPS        kreg|mask,zmmreg,zmmrm512|b32|sae AVX512 VCMPNEQSD        kreg|mask,xmmreg,xmmrm64|sae AVX512 VCMPNEQSS        kreg|mask,xmmreg,xmmrm32|sae AVX512 VCMPNEQ_UQPD     kreg|mask,xmmreg,xmmrm128|b64 AVX512VL VCMPNEQ_UQPD     kreg|mask,ymmreg,ymmrm256|b64 AVX512VL VCMPNEQ_UQPD     kreg|mask,zmmreg,zmmrm512|b64|sae AVX512 VCMPNEQ_UQPS     kreg|mask,xmmreg,xmmrm128|b32 AVX512VL VCMPNEQ_UQPS     kreg|mask,ymmreg,ymmrm256|b32 AVX512VL VCMPNEQ_UQPS     kreg|mask,zmmreg,zmmrm512|b32|sae AVX512 VCMPNEQ_UQSD     kreg|mask,xmmreg,xmmrm64|sae AVX512 VCMPNEQ_UQSS     kreg|mask,xmmreg,xmmrm32|sae AVX512 VCMPNLTPD        kreg|mask,xmmreg,xmmrm128|b64 AVX512VL VCMPNLTPD        kreg|mask,ymmreg,ymmrm256|b64 AVX512VL VCMPNLTPD        kreg|mask,zmmreg,zmmrm512|b64|sae AVX512 VCMPNLTPS        kreg|mask,xmmreg,xmmrm128|b32 AVX512VL VCMPNLTPS        kreg|mask,ymmreg,ymmrm256|b32 AVX512VL VCMPNLTPS        kreg|mask,zmmreg,zmmrm512|b32|sae AVX512 VCMPNLTSD        kreg|mask,xmmreg,xmmrm64|sae AVX512 VCMPNLTSS        kreg|mask,xmmreg,xmmrm32|sae AVX512 VCMPNLT_USPD     kreg|mask,xmmreg,xmmrm128|b64 AVX512VL VCMPNLT_USPD     kreg|mask,ymmreg,ymmrm256|b64 AVX512VL VCMPNLT_USPD     kreg|mask,zmmreg,zmmrm512|b64|sae AVX512 VCMPNLT_USPS     kreg|mask,xmmreg,xmmrm128|b32 AVX512VL VCMPNLT_USPS     kreg|mask,ymmreg,ymmrm256|b32 AVX512VL VCMPNLT_USPS     kreg|mask,zmmreg,zmmrm512|b32|sae AVX512 VCMPNLT_USSD     kreg|mask,xmmreg,xmmrm64|sae AVX512 VCMPNLT_USSS     kreg|mask,xmmreg,xmmrm32|sae AVX512 VCMPNLEPD        kreg|mask,xmmreg,xmmrm128|b64 AVX512VL VCMPNLEPD        kreg|mask,ymmreg,ymmrm256|b64 AVX512VL VCMPNLEPD        kreg|mask,zmmreg,zmmrm512|b64|sae AVX512 VCMPNLEPS        kreg|mask,xmmreg,xmmrm128|b32 AVX512VL VCMPNLEPS        kreg|mask,ymmreg,ymmrm256|b32 AVX512VL VCMPNLEPS        kreg|mask,zmmreg,zmmrm512|b32|sae AVX512 VCMPNLESD        kreg|mask,xmmreg,xmmrm64|sae AVX512 VCMPNLESS        kreg|mask,xmmreg,xmmrm32|sae AVX512 VCMPNLE_USPD     kreg|mask,xmmreg,xmmrm128|b64 AVX512VL VCMPNLE_USPD     kreg|mask,ymmreg,ymmrm256|b64 AVX512VL VCMPNLE_USPD     kreg|mask,zmmreg,zmmrm512|b64|sae AVX512 VCMPNLE_USPS     kreg|mask,xmmreg,xmmrm128|b32 AVX512VL VCMPNLE_USPS     kreg|mask,ymmreg,ymmrm256|b32 AVX512VL VCMPNLE_USPS     kreg|mask,zmmreg,zmmrm512|b32|sae AVX512 VCMPNLE_USSD     kreg|mask,xmmreg,xmmrm64|sae AVX512 VCMPNLE_USSS     kreg|mask,xmmreg,xmmrm32|sae AVX512 VCMPORDPD        kreg|mask,xmmreg,xmmrm128|b64 AVX512VL VCMPORDPD        kreg|mask,ymmreg,ymmrm256|b64 AVX512VL VCMPORDPD        kreg|mask,zmmreg,zmmrm512|b64|sae AVX512 VCMPORDPS        kreg|mask,xmmreg,xmmrm128|b32 AVX512VL VCMPORDPS        kreg|mask,ymmreg,ymmrm256|b32 AVX512VL VCMPORDPS        kreg|mask,zmmreg,zmmrm512|b32|sae AVX512 VCMPORDSD        kreg|mask,xmmreg,xmmrm64|sae AVX512 VCMPORDSS        kreg|mask,xmmreg,xmmrm32|sae AVX512 VCMPORD_QPD      kreg|mask,xmmreg,xmmrm128|b64 AVX512VL VCMPORD_QPD      kreg|mask,ymmreg,ymmrm256|b64 AVX512VL VCMPORD_QPD      kreg|mask,zmmreg,zmmrm512|b64|sae AVX512 VCMPORD_QPS      kreg|mask,xmmreg,xmmrm128|b32 AVX512VL VCMPORD_QPS      kreg|mask,ymmreg,ymmrm256|b32 AVX512VL VCMPORD_QPS      kreg|mask,zmmreg,zmmrm512|b32|sae AVX512 VCMPORD_QSD      kreg|mask,xmmreg,xmmrm64|sae AVX512 VCMPORD_QSS      kreg|mask,xmmreg,xmmrm32|sae AVX512 VCMPEQ_UQPD      kreg|mask,xmmreg,xmmrm128|b64 AVX512VL VCMPEQ_UQPD      kreg|mask,ymmreg,ymmrm256|b64 AVX512VL VCMPEQ_UQPD      kreg|mask,zmmreg,zmmrm512|b64|sae AVX512 VCMPEQ_UQPS      kreg|mask,xmmreg,xmmrm128|b32 AVX512VL VCMPEQ_UQPS      kreg|mask,ymmreg,ymmrm256|b32 AVX512VL VCMPEQ_UQPS      kreg|mask,zmmreg,zmmrm512|b32|sae AVX512 VCMPEQ_UQSD      kreg|mask,xmmreg,xmmrm64|sae AVX512 VCMPEQ_UQSS      kreg|mask,xmmreg,xmmrm32|sae AVX512 VCMPNGEPD        kreg|mask,xmmreg,xmmrm128|b64 AVX512VL VCMPNGEPD        kreg|mask,ymmreg,ymmrm256|b64 AVX512VL VCMPNGEPD        kreg|mask,zmmreg,zmmrm512|b64|sae AVX512 VCMPNGEPS        kreg|mask,xmmreg,xmmrm128|b32 AVX512VL VCMPNGEPS        kreg|mask,ymmreg,ymmrm256|b32 AVX512VL VCMPNGEPS        kreg|mask,zmmreg,zmmrm512|b32|sae AVX512 VCMPNGESD        kreg|mask,xmmreg,xmmrm64|sae AVX512 VCMPNGESS        kreg|mask,xmmreg,xmmrm32|sae AVX512 VCMPNGE_USPD     kreg|mask,xmmreg,xmmrm128|b64 AVX512VL VCMPNGE_USPD     kreg|mask,ymmreg,ymmrm256|b64 AVX512VL VCMPNGE_USPD     kreg|mask,zmmreg,zmmrm512|b64|sae AVX512 VCMPNGE_USPS     kreg|mask,xmmreg,xmmrm128|b32 AVX512VL VCMPNGE_USPS     kreg|mask,ymmreg,ymmrm256|b32 AVX512VL VCMPNGE_USPS     kreg|mask,zmmreg,zmmrm512|b32|sae AVX512 VCMPNGE_USSD     kreg|mask,xmmreg,xmmrm64|sae AVX512 VCMPNGE_USSS     kreg|mask,xmmreg,xmmrm32|sae AVX512 VCMPNGTPD        kreg|mask,xmmreg,xmmrm128|b64 AVX512VL VCMPNGTPD        kreg|mask,ymmreg,ymmrm256|b64 AVX512VL VCMPNGTPD        kreg|mask,zmmreg,zmmrm512|b64|sae AVX512 VCMPNGTPS        kreg|mask,xmmreg,xmmrm128|b32 AVX512VL VCMPNGTPS        kreg|mask,ymmreg,ymmrm256|b32 AVX512VL VCMPNGTPS        kreg|mask,zmmreg,zmmrm512|b32|sae AVX512 VCMPNGTSD        kreg|mask,xmmreg,xmmrm64|sae AVX512 VCMPNGTSS        kreg|mask,xmmreg,xmmrm32|sae AVX512 VCMPNGT_USPD     kreg|mask,xmmreg,xmmrm128|b64 AVX512VL VCMPNGT_USPD     kreg|mask,ymmreg,ymmrm256|b64 AVX512VL VCMPNGT_USPD     kreg|mask,zmmreg,zmmrm512|b64|sae AVX512 VCMPNGT_USPS     kreg|mask,xmmreg,xmmrm128|b32 AVX512VL VCMPNGT_USPS     kreg|mask,ymmreg,ymmrm256|b32 AVX512VL VCMPNGT_USPS     kreg|mask,zmmreg,zmmrm512|b32|sae AVX512 VCMPNGT_USSD     kreg|mask,xmmreg,xmmrm64|sae AVX512 VCMPNGT_USSS     kreg|mask,xmmreg,xmmrm32|sae AVX512 VCMPFALSEPD      kreg|mask,xmmreg,xmmrm128|b64 AVX512VL VCMPFALSEPD      kreg|mask,ymmreg,ymmrm256|b64 AVX512VL VCMPFALSEPD      kreg|mask,zmmreg,zmmrm512|b64|sae AVX512 VCMPFALSEPS      kreg|mask,xmmreg,xmmrm128|b32 AVX512VL VCMPFALSEPS      kreg|mask,ymmreg,ymmrm256|b32 AVX512VL VCMPFALSEPS      kreg|mask,zmmreg,zmmrm512|b32|sae AVX512 VCMPFALSESD      kreg|mask,xmmreg,xmmrm64|sae AVX512 VCMPFALSESS      kreg|mask,xmmreg,xmmrm32|sae AVX512 VCMPFALSE_OQPD   kreg|mask,xmmreg,xmmrm128|b64 AVX512VL VCMPFALSE_OQPD   kreg|mask,ymmreg,ymmrm256|b64 AVX512VL VCMPFALSE_OQPD   kreg|mask,zmmreg,zmmrm512|b64|sae AVX512 VCMPFALSE_OQPS   kreg|mask,xmmreg,xmmrm128|b32 AVX512VL VCMPFALSE_OQPS   kreg|mask,ymmreg,ymmrm256|b32 AVX512VL VCMPFALSE_OQPS   kreg|mask,zmmreg,zmmrm512|b32|sae AVX512 VCMPFALSE_OQSD   kreg|mask,xmmreg,xmmrm64|sae AVX512 VCMPFALSE_OQSS   kreg|mask,xmmreg,xmmrm32|sae AVX512 VCMPNEQ_OQPD     kreg|mask,xmmreg,xmmrm128|b64 AVX512VL VCMPNEQ_OQPD     kreg|mask,ymmreg,ymmrm256|b64 AVX512VL VCMPNEQ_OQPD     kreg|mask,zmmreg,zmmrm512|b64|sae AVX512 VCMPNEQ_OQPS     kreg|mask,xmmreg,xmmrm128|b32 AVX512VL VCMPNEQ_OQPS     kreg|mask,ymmreg,ymmrm256|b32 AVX512VL VCMPNEQ_OQPS     kreg|mask,zmmreg,zmmrm512|b32|sae AVX512 VCMPNEQ_OQSD     kreg|mask,xmmreg,xmmrm64|sae AVX512 VCMPNEQ_OQSS     kreg|mask,xmmreg,xmmrm32|sae AVX512 VCMPGEPD         kreg|mask,xmmreg,xmmrm128|b64 AVX512VL VCMPGEPD         kreg|mask,ymmreg,ymmrm256|b64 AVX512VL VCMPGEPD         kreg|mask,zmmreg,zmmrm512|b64|sae AVX512 VCMPGEPS         kreg|mask,xmmreg,xmmrm128|b32 AVX512VL VCMPGEPS         kreg|mask,ymmreg,ymmrm256|b32 AVX512VL VCMPGEPS         kreg|mask,zmmreg,zmmrm512|b32|sae AVX512 VCMPGESD         kreg|mask,xmmreg,xmmrm64|sae AVX512 VCMPGESS         kreg|mask,xmmreg,xmmrm32|sae AVX512 VCMPGE_OSPD      kreg|mask,xmmreg,xmmrm128|b64 AVX512VL VCMPGE_OSPD      kreg|mask,ymmreg,ymmrm256|b64 AVX512VL VCMPGE_OSPD      kreg|mask,zmmreg,zmmrm512|b64|sae AVX512 VCMPGE_OSPS      kreg|mask,xmmreg,xmmrm128|b32 AVX512VL VCMPGE_OSPS      kreg|mask,ymmreg,ymmrm256|b32 AVX512VL VCMPGE_OSPS      kreg|mask,zmmreg,zmmrm512|b32|sae AVX512 VCMPGE_OSSD      kreg|mask,xmmreg,xmmrm64|sae AVX512 VCMPGE_OSSS      kreg|mask,xmmreg,xmmrm32|sae AVX512 VCMPGTPD         kreg|mask,xmmreg,xmmrm128|b64 AVX512VL VCMPGTPD         kreg|mask,ymmreg,ymmrm256|b64 AVX512VL VCMPGTPD         kreg|mask,zmmreg,zmmrm512|b64|sae AVX512 VCMPGTPS         kreg|mask,xmmreg,xmmrm128|b32 AVX512VL VCMPGTPS         kreg|mask,ymmreg,ymmrm256|b32 AVX512VL VCMPGTPS         kreg|mask,zmmreg,zmmrm512|b32|sae AVX512 VCMPGTSD         kreg|mask,xmmreg,xmmrm64|sae AVX512 VCMPGTSS         kreg|mask,xmmreg,xmmrm32|sae AVX512 VCMPGT_OSPD      kreg|mask,xmmreg,xmmrm128|b64 AVX512VL VCMPGT_OSPD      kreg|mask,ymmreg,ymmrm256|b64 AVX512VL VCMPGT_OSPD      kreg|mask,zmmreg,zmmrm512|b64|sae AVX512 VCMPGT_OSPS      kreg|mask,xmmreg,xmmrm128|b32 AVX512VL VCMPGT_OSPS      kreg|mask,ymmreg,ymmrm256|b32 AVX512VL VCMPGT_OSPS      kreg|mask,zmmreg,zmmrm512|b32|sae AVX512 VCMPGT_OSSD      kreg|mask,xmmreg,xmmrm64|sae AVX512 VCMPGT_OSSS      kreg|mask,xmmreg,xmmrm32|sae AVX512 VCMPTRUEPD       kreg|mask,xmmreg,xmmrm128|b64 AVX512VL VCMPTRUEPD       kreg|mask,ymmreg,ymmrm256|b64 AVX512VL VCMPTRUEPD       kreg|mask,zmmreg,zmmrm512|b64|sae AVX512 VCMPTRUEPS       kreg|mask,xmmreg,xmmrm128|b32 AVX512VL VCMPTRUEPS       kreg|mask,ymmreg,ymmrm256|b32 AVX512VL VCMPTRUEPS       kreg|mask,zmmreg,zmmrm512|b32|sae AVX512 VCMPTRUESD       kreg|mask,xmmreg,xmmrm64|sae AVX512 VCMPTRUESS       kreg|mask,xmmreg,xmmrm32|sae AVX512 VCMPTRUE_UQPD    kreg|mask,xmmreg,xmmrm128|b64 AVX512VL VCMPTRUE_UQPD    kreg|mask,ymmreg,ymmrm256|b64 AVX512VL VCMPTRUE_UQPD    kreg|mask,zmmreg,zmmrm512|b64|sae AVX512 VCMPTRUE_UQPS    kreg|mask,xmmreg,xmmrm128|b32 AVX512VL VCMPTRUE_UQPS    kreg|mask,ymmreg,ymmrm256|b32 AVX512VL VCMPTRUE_UQPS    kreg|mask,zmmreg,zmmrm512|b32|sae AVX512 VCMPTRUE_UQSD    kreg|mask,xmmreg,xmmrm64|sae AVX512 VCMPTRUE_UQSS    kreg|mask,xmmreg,xmmrm32|sae AVX512 VCMPEQ_OSPD      kreg|mask,xmmreg,xmmrm128|b64 AVX512VL VCMPEQ_OSPD      kreg|mask,ymmreg,ymmrm256|b64 AVX512VL VCMPEQ_OSPD      kreg|mask,zmmreg,zmmrm512|b64|sae AVX512 VCMPEQ_OSPS      kreg|mask,xmmreg,xmmrm128|b32 AVX512VL VCMPEQ_OSPS      kreg|mask,ymmreg,ymmrm256|b32 AVX512VL VCMPEQ_OSPS      kreg|mask,zmmreg,zmmrm512|b32|sae AVX512 VCMPEQ_OSSD      kreg|mask,xmmreg,xmmrm64|sae AVX512 VCMPEQ_OSSS      kreg|mask,xmmreg,xmmrm32|sae AVX512 VCMPLT_OQPD      kreg|mask,xmmreg,xmmrm128|b64 AVX512VL VCMPLT_OQPD      kreg|mask,ymmreg,ymmrm256|b64 AVX512VL VCMPLT_OQPD      kreg|mask,zmmreg,zmmrm512|b64|sae AVX512 VCMPLT_OQPS      kreg|mask,xmmreg,xmmrm128|b32 AVX512VL VCMPLT_OQPS      kreg|mask,ymmreg,ymmrm256|b32 AVX512VL VCMPLT_OQPS      kreg|mask,zmmreg,zmmrm512|b32|sae AVX512 VCMPLT_OQSD      kreg|mask,xmmreg,xmmrm64|sae AVX512 VCMPLT_OQSS      kreg|mask,xmmreg,xmmrm32|sae AVX512 VCMPLE_OQPD      kreg|mask,xmmreg,xmmrm128|b64 AVX512VL VCMPLE_OQPD      kreg|mask,ymmreg,ymmrm256|b64 AVX512VL VCMPLE_OQPD      kreg|mask,zmmreg,zmmrm512|b64|sae AVX512 VCMPLE_OQPS      kreg|mask,xmmreg,xmmrm128|b32 AVX512VL VCMPLE_OQPS      kreg|mask,ymmreg,ymmrm256|b32 AVX512VL VCMPLE_OQPS      kreg|mask,zmmreg,zmmrm512|b32|sae AVX512 VCMPLE_OQSD      kreg|mask,xmmreg,xmmrm64|sae AVX512 VCMPLE_OQSS      kreg|mask,xmmreg,xmmrm32|sae AVX512 VCMPUNORD_SPD    kreg|mask,xmmreg,xmmrm128|b64 AVX512VL VCMPUNORD_SPD    kreg|mask,ymmreg,ymmrm256|b64 AVX512VL VCMPUNORD_SPD    kreg|mask,zmmreg,zmmrm512|b64|sae AVX512 VCMPUNORD_SPS    kreg|mask,xmmreg,xmmrm128|b32 AVX512VL VCMPUNORD_SPS    kreg|mask,ymmreg,ymmrm256|b32 AVX512VL VCMPUNORD_SPS    kreg|mask,zmmreg,zmmrm512|b32|sae AVX512 VCMPUNORD_SSD    kreg|mask,xmmreg,xmmrm64|sae AVX512 VCMPUNORD_SSS    kreg|mask,xmmreg,xmmrm32|sae AVX512 VCMPNEQ_USPD     kreg|mask,xmmreg,xmmrm128|b64 AVX512VL VCMPNEQ_USPD     kreg|mask,ymmreg,ymmrm256|b64 AVX512VL VCMPNEQ_USPD     kreg|mask,zmmreg,zmmrm512|b64|sae AVX512 VCMPNEQ_USPS     kreg|mask,xmmreg,xmmrm128|b32 AVX512VL VCMPNEQ_USPS     kreg|mask,ymmreg,ymmrm256|b32 AVX512VL VCMPNEQ_USPS     kreg|mask,zmmreg,zmmrm512|b32|sae AVX512 VCMPNEQ_USSD     kreg|mask,xmmreg,xmmrm64|sae AVX512 VCMPNEQ_USSS     kreg|mask,xmmreg,xmmrm32|sae AVX512 VCMPNLT_UQPD     kreg|mask,xmmreg,xmmrm128|b64 AVX512VL VCMPNLT_UQPD     kreg|mask,ymmreg,ymmrm256|b64 AVX512VL VCMPNLT_UQPD     kreg|mask,zmmreg,zmmrm512|b64|sae AVX512 VCMPNLT_UQPS     kreg|mask,xmmreg,xmmrm128|b32 AVX512VL VCMPNLT_UQPS     kreg|mask,ymmreg,ymmrm256|b32 AVX512VL VCMPNLT_UQPS     kreg|mask,zmmreg,zmmrm512|b32|sae AVX512 VCMPNLT_UQSD     kreg|mask,xmmreg,xmmrm64|sae AVX512 VCMPNLT_UQSS     kreg|mask,xmmreg,xmmrm32|sae AVX512 VCMPNLE_UQPD     kreg|mask,xmmreg,xmmrm128|b64 AVX512VL VCMPNLE_UQPD     kreg|mask,ymmreg,ymmrm256|b64 AVX512VL VCMPNLE_UQPD     kreg|mask,zmmreg,zmmrm512|b64|sae AVX512 VCMPNLE_UQPS     kreg|mask,xmmreg,xmmrm128|b32 AVX512VL VCMPNLE_UQPS     kreg|mask,ymmreg,ymmrm256|b32 AVX512VL VCMPNLE_UQPS     kreg|mask,zmmreg,zmmrm512|b32|sae AVX512 VCMPNLE_UQSD     kreg|mask,xmmreg,xmmrm64|sae AVX512 VCMPNLE_UQSS     kreg|mask,xmmreg,xmmrm32|sae AVX512 VCMPORD_SPD      kreg|mask,xmmreg,xmmrm128|b64 AVX512VL VCMPORD_SPD      kreg|mask,ymmreg,ymmrm256|b64 AVX512VL VCMPORD_SPD      kreg|mask,zmmreg,zmmrm512|b64|sae AVX512 VCMPORD_SPS      kreg|mask,xmmreg,xmmrm128|b32 AVX512VL VCMPORD_SPS      kreg|mask,ymmreg,ymmrm256|b32 AVX512VL VCMPORD_SPS      kreg|mask,zmmreg,zmmrm512|b32|sae AVX512 VCMPORD_SSD      kreg|mask,xmmreg,xmmrm64|sae AVX512 VCMPORD_SSS      kreg|mask,xmmreg,xmmrm32|sae AVX512 VCMPEQ_USPD      kreg|mask,xmmreg,xmmrm128|b64 AVX512VL VCMPEQ_USPD      kreg|mask,ymmreg,ymmrm256|b64 AVX512VL VCMPEQ_USPD      kreg|mask,zmmreg,zmmrm512|b64|sae AVX512 VCMPEQ_USPS      kreg|mask,xmmreg,xmmrm128|b32 AVX512VL VCMPEQ_USPS      kreg|mask,ymmreg,ymmrm256|b32 AVX512VL VCMPEQ_USPS      kreg|mask,zmmreg,zmmrm512|b32|sae AVX512 VCMPEQ_USSD      kreg|mask,xmmreg,xmmrm64|sae AVX512 VCMPEQ_USSS      kreg|mask,xmmreg,xmmrm32|sae AVX512 VCMPNGE_UQPD     kreg|mask,xmmreg,xmmrm128|b64 AVX512VL VCMPNGE_UQPD     kreg|mask,ymmreg,ymmrm256|b64 AVX512VL VCMPNGE_UQPD     kreg|mask,zmmreg,zmmrm512|b64|sae AVX512 VCMPNGE_UQPS     kreg|mask,xmmreg,xmmrm128|b32 AVX512VL VCMPNGE_UQPS     kreg|mask,ymmreg,ymmrm256|b32 AVX512VL VCMPNGE_UQPS     kreg|mask,zmmreg,zmmrm512|b32|sae AVX512 VCMPNGE_UQSD     kreg|mask,xmmreg,xmmrm64|sae AVX512 VCMPNGE_UQSS     kreg|mask,xmmreg,xmmrm32|sae AVX512 VCMPNGT_UQPD     kreg|mask,xmmreg,xmmrm128|b64 AVX512VL VCMPNGT_UQPD     kreg|mask,ymmreg,ymmrm256|b64 AVX512VL VCMPNGT_UQPD     kreg|mask,zmmreg,zmmrm512|b64|sae AVX512 VCMPNGT_UQPS     kreg|mask,xmmreg,xmmrm128|b32 AVX512VL VCMPNGT_UQPS     kreg|mask,ymmreg,ymmrm256|b32 AVX512VL VCMPNGT_UQPS     kreg|mask,zmmreg,zmmrm512|b32|sae AVX512 VCMPNGT_UQSD     kreg|mask,xmmreg,xmmrm64|sae AVX512 VCMPNGT_UQSS     kreg|mask,xmmreg,xmmrm32|sae AVX512 VCMPFALSE_OSPD   kreg|mask,xmmreg,xmmrm128|b64 AVX512VL VCMPFALSE_OSPD   kreg|mask,ymmreg,ymmrm256|b64 AVX512VL VCMPFALSE_OSPD   kreg|mask,zmmreg,zmmrm512|b64|sae AVX512 VCMPFALSE_OSPS   kreg|mask,xmmreg,xmmrm128|b32 AVX512VL VCMPFALSE_OSPS   kreg|mask,ymmreg,ymmrm256|b32 AVX512VL VCMPFALSE_OSPS   kreg|mask,zmmreg,zmmrm512|b32|sae AVX512 VCMPFALSE_OSSD   kreg|mask,xmmreg,xmmrm64|sae AVX512 VCMPFALSE_OSSS   kreg|mask,xmmreg,xmmrm32|sae AVX512 VCMPNEQ_OSPD     kreg|mask,xmmreg,xmmrm128|b64 AVX512VL VCMPNEQ_OSPD     kreg|mask,ymmreg,ymmrm256|b64 AVX512VL VCMPNEQ_OSPD     kreg|mask,zmmreg,zmmrm512|b64|sae AVX512 VCMPNEQ_OSPS     kreg|mask,xmmreg,xmmrm128|b32 AVX512VL VCMPNEQ_OSPS     kreg|mask,ymmreg,ymmrm256|b32 AVX512VL VCMPNEQ_OSPS     kreg|mask,zmmreg,zmmrm512|b32|sae AVX512 VCMPNEQ_OSSD     kreg|mask,xmmreg,xmmrm64|sae AVX512 VCMPNEQ_OSSS     kreg|mask,xmmreg,xmmrm32|sae AVX512 VCMPGE_OQPD      kreg|mask,xmmreg,xmmrm128|b64 AVX512VL VCMPGE_OQPD      kreg|mask,ymmreg,ymmrm256|b64 AVX512VL VCMPGE_OQPD      kreg|mask,zmmreg,zmmrm512|b64|sae AVX512 VCMPGE_OQPS      kreg|mask,xmmreg,xmmrm128|b32 AVX512VL VCMPGE_OQPS      kreg|mask,ymmreg,ymmrm256|b32 AVX512VL VCMPGE_OQPS      kreg|mask,zmmreg,zmmrm512|b32|sae AVX512 VCMPGE_OQSD      kreg|mask,xmmreg,xmmrm64|sae AVX512 VCMPGE_OQSS      kreg|mask,xmmreg,xmmrm32|sae AVX512 VCMPGT_OQPD      kreg|mask,xmmreg,xmmrm128|b64 AVX512VL VCMPGT_OQPD      kreg|mask,ymmreg,ymmrm256|b64 AVX512VL VCMPGT_OQPD      kreg|mask,zmmreg,zmmrm512|b64|sae AVX512 VCMPGT_OQPS      kreg|mask,xmmreg,xmmrm128|b32 AVX512VL VCMPGT_OQPS      kreg|mask,ymmreg,ymmrm256|b32 AVX512VL VCMPGT_OQPS      kreg|mask,zmmreg,zmmrm512|b32|sae AVX512 VCMPGT_OQSD      kreg|mask,xmmreg,xmmrm64|sae AVX512 VCMPGT_OQSS      kreg|mask,xmmreg,xmmrm32|sae AVX512 VCMPTRUE_USPD    kreg|mask,xmmreg,xmmrm128|b64 AVX512VL VCMPTRUE_USPD    kreg|mask,ymmreg,ymmrm256|b64 AVX512VL VCMPTRUE_USPD    kreg|mask,zmmreg,zmmrm512|b64|sae AVX512 VCMPTRUE_USPS    kreg|mask,xmmreg,xmmrm128|b32 AVX512VL VCMPTRUE_USPS    kreg|mask,ymmreg,ymmrm256|b32 AVX512VL VCMPTRUE_USPS    kreg|mask,zmmreg,zmmrm512|b32|sae AVX512 VCMPTRUE_USSD    kreg|mask,xmmreg,xmmrm64|sae AVX512 VCMPTRUE_USSS    kreg|mask,xmmreg,xmmrm32|sae AVX512 VCMPPD           kreg|mask,xmmreg,xmmrm128|b64,imm8 AVX512VL VCMPPD           kreg|mask,ymmreg,ymmrm256|b64,imm8 AVX512VL VCMPPD           kreg|mask,zmmreg,zmmrm512|b64|sae,imm8 AVX512 VCMPPS           kreg|mask,xmmreg,xmmrm128|b32,imm8 AVX512VL VCMPPS           kreg|mask,ymmreg,ymmrm256|b32,imm8 AVX512VL VCMPPS           kreg|mask,zmmreg,zmmrm512|b32|sae,imm8 AVX512 VCMPSD           kreg|mask,xmmreg,xmmrm64|sae,imm8 AVX512 VCMPSS           kreg|mask,xmmreg,xmmrm32|sae,imm8 AVX512 VCOMISD          xmmreg,xmmrm64|sae       AVX512 VCOMISS          xmmreg,xmmrm32|sae       AVX512 VCOMPRESSPD      mem128|mask,xmmreg       AVX512VL VCOMPRESSPD      mem256|mask,ymmreg       AVX512VL VCOMPRESSPD      mem512|mask,zmmreg       AVX512 VCOMPRESSPD      xmmreg|mask|z,xmmreg     AVX512VL VCOMPRESSPD      ymmreg|mask|z,ymmreg     AVX512VL VCOMPRESSPD      zmmreg|mask|z,zmmreg     AVX512 VCOMPRESSPS      mem128|mask,xmmreg       AVX512VL VCOMPRESSPS      mem256|mask,ymmreg       AVX512VL VCOMPRESSPS      mem512|mask,zmmreg       AVX512 VCOMPRESSPS      xmmreg|mask|z,xmmreg     AVX512VL VCOMPRESSPS      ymmreg|mask|z,ymmreg     AVX512VL VCOMPRESSPS      zmmreg|mask|z,zmmreg     AVX512 VCVTDQ2PD        xmmreg|mask|z,xmmrm64|b32 AVX512VL VCVTDQ2PD        ymmreg|mask|z,xmmrm128|b32 AVX512VL VCVTDQ2PD        zmmreg|mask|z,ymmrm256|b32|er AVX512 VCVTDQ2PS        xmmreg|mask|z,xmmrm128|b32 AVX512VL VCVTDQ2PS        ymmreg|mask|z,ymmrm256|b32 AVX512VL VCVTDQ2PS        zmmreg|mask|z,zmmrm512|b32|er AVX512 VCVTPD2DQ        xmmreg|mask|z,xmmrm128|b64 AVX512VL VCVTPD2DQ        xmmreg|mask|z,ymmrm256|b64 AVX512VL VCVTPD2DQ        ymmreg|mask|z,zmmrm512|b64|er AVX512 VCVTPD2PS        xmmreg|mask|z,xmmrm128|b64 AVX512VL VCVTPD2PS        xmmreg|mask|z,ymmrm256|b64 AVX512VL VCVTPD2PS        ymmreg|mask|z,zmmrm512|b64|er AVX512 VCVTPD2QQ        xmmreg|mask|z,xmmrm128|b64 AVX512VL/DQ VCVTPD2QQ        ymmreg|mask|z,ymmrm256|b64 AVX512VL/DQ VCVTPD2QQ        zmmreg|mask|z,zmmrm512|b64|er AVX512DQ VCVTPD2UDQ       xmmreg|mask|z,xmmrm128|b64 AVX512VL VCVTPD2UDQ       xmmreg|mask|z,ymmrm256|b64 AVX512VL VCVTPD2UDQ       ymmreg|mask|z,zmmrm512|b64|er AVX512 VCVTPD2UQQ       xmmreg|mask|z,xmmrm128|b64 AVX512VL/DQ VCVTPD2UQQ       ymmreg|mask|z,ymmrm256|b64 AVX512VL/DQ VCVTPD2UQQ       zmmreg|mask|z,zmmrm512|b64|er AVX512DQ VCVTPH2PS        xmmreg|mask|z,xmmrm64    AVX512VL VCVTPH2PS        ymmreg|mask|z,xmmrm128   AVX512VL VCVTPH2PS        zmmreg|mask|z,ymmrm256|sae AVX512 VCVTPS2DQ        xmmreg|mask|z,xmmrm128|b32 AVX512VL VCVTPS2DQ        ymmreg|mask|z,ymmrm256|b32 AVX512VL VCVTPS2DQ        zmmreg|mask|z,zmmrm512|b32|er AVX512 VCVTPS2PD        xmmreg|mask|z,xmmrm64|b32 AVX512VL VCVTPS2PD        ymmreg|mask|z,xmmrm128|b32 AVX512VL VCVTPS2PD        zmmreg|mask|z,ymmrm256|b32|sae AVX512 VCVTPS2PH        xmmreg|mask|z,xmmreg,imm8 AVX512VL VCVTPS2PH        xmmreg|mask|z,ymmreg,imm8 AVX512VL VCVTPS2PH        ymmreg|mask|z,zmmreg|sae,imm8 AVX512 VCVTPS2PH        mem64|mask,xmmreg,imm8   AVX512VL VCVTPS2PH        mem128|mask,ymmreg,imm8  AVX512VL VCVTPS2PH        mem256|mask,zmmreg|sae,imm8 AVX512 VCVTPS2QQ        xmmreg|mask|z,xmmrm64|b32 AVX512VL/DQ VCVTPS2QQ        ymmreg|mask|z,xmmrm128|b32 AVX512VL/DQ VCVTPS2QQ        zmmreg|mask|z,ymmrm256|b32|er AVX512DQ VCVTPS2UDQ       xmmreg|mask|z,xmmrm128|b32 AVX512VL VCVTPS2UDQ       ymmreg|mask|z,ymmrm256|b32 AVX512VL VCVTPS2UDQ       zmmreg|mask|z,zmmrm512|b32|er AVX512 VCVTPS2UQQ       xmmreg|mask|z,xmmrm64|b32 AVX512VL/DQ VCVTPS2UQQ       ymmreg|mask|z,xmmrm128|b32 AVX512VL/DQ VCVTPS2UQQ       zmmreg|mask|z,ymmrm256|b32|er AVX512DQ VCVTQQ2PD        xmmreg|mask|z,xmmrm128|b64 AVX512VL/DQ VCVTQQ2PD        ymmreg|mask|z,ymmrm256|b64 AVX512VL/DQ VCVTQQ2PD        zmmreg|mask|z,zmmrm512|b64|er AVX512DQ VCVTQQ2PS        xmmreg|mask|z,xmmrm128|b64 AVX512VL/DQ VCVTQQ2PS        xmmreg|mask|z,ymmrm256|b64 AVX512VL/DQ VCVTQQ2PS        ymmreg|mask|z,zmmrm512|b64|er AVX512DQ VCVTSD2SI        reg32,xmmrm64|er         AVX512 VCVTSD2SI        reg64,xmmrm64|er         AVX512 VCVTSD2SS        xmmreg|mask|z,xmmreg,xmmrm64|er AVX512 VCVTSD2USI       reg32,xmmrm64|er         AVX512 VCVTSD2USI       reg64,xmmrm64|er         AVX512 VCVTSI2SD        xmmreg,xmmreg|er,rm32    AVX512 VCVTSI2SD        xmmreg,xmmreg|er,rm64    AVX512 VCVTSI2SS        xmmreg,xmmreg|er,rm32    AVX512 VCVTSI2SS        xmmreg,xmmreg|er,rm64    AVX512 VCVTSS2SD        xmmreg|mask|z,xmmreg,xmmrm32|sae AVX512 VCVTSS2SI        reg32,xmmrm32|er         AVX512 VCVTSS2SI        reg64,xmmrm32|er         AVX512 VCVTSS2USI       reg32,xmmrm32|er         AVX512 VCVTSS2USI       reg64,xmmrm32|er         AVX512 VCVTTPD2DQ       xmmreg|mask|z,xmmrm128|b64 AVX512VL VCVTTPD2DQ       xmmreg|mask|z,ymmrm256|b64 AVX512VL VCVTTPD2DQ       ymmreg|mask|z,zmmrm512|b64|sae AVX512 VCVTTPD2QQ       xmmreg|mask|z,xmmrm128|b64 AVX512VL/DQ VCVTTPD2QQ       ymmreg|mask|z,ymmrm256|b64 AVX512VL/DQ VCVTTPD2QQ       zmmreg|mask|z,zmmrm512|b64|sae AVX512DQ VCVTTPD2UDQ      xmmreg|mask|z,xmmrm128|b64 AVX512VL VCVTTPD2UDQ      xmmreg|mask|z,ymmrm256|b64 AVX512VL VCVTTPD2UDQ      ymmreg|mask|z,zmmrm512|b64|sae AVX512 VCVTTPD2UQQ      xmmreg|mask|z,xmmrm128|b64 AVX512VL/DQ VCVTTPD2UQQ      ymmreg|mask|z,ymmrm256|b64 AVX512VL/DQ VCVTTPD2UQQ      zmmreg|mask|z,zmmrm512|b64|sae AVX512DQ VCVTTPS2DQ       xmmreg|mask|z,xmmrm128|b32 AVX512VL VCVTTPS2DQ       ymmreg|mask|z,ymmrm256|b32 AVX512VL VCVTTPS2DQ       zmmreg|mask|z,zmmrm512|b32|sae AVX512 VCVTTPS2QQ       xmmreg|mask|z,xmmrm64|b32 AVX512VL/DQ VCVTTPS2QQ       ymmreg|mask|z,xmmrm128|b32 AVX512VL/DQ VCVTTPS2QQ       zmmreg|mask|z,ymmrm256|b32|sae AVX512DQ VCVTTPS2UDQ      xmmreg|mask|z,xmmrm128|b32 AVX512VL VCVTTPS2UDQ      ymmreg|mask|z,ymmrm256|b32 AVX512VL VCVTTPS2UDQ      zmmreg|mask|z,zmmrm512|b32|sae AVX512 VCVTTPS2UQQ      xmmreg|mask|z,xmmrm64|b32 AVX512VL/DQ VCVTTPS2UQQ      ymmreg|mask|z,xmmrm128|b32 AVX512VL/DQ VCVTTPS2UQQ      zmmreg|mask|z,ymmrm256|b32|sae AVX512DQ VCVTTSD2SI       reg32,xmmrm64|sae        AVX512 VCVTTSD2SI       reg64,xmmrm64|sae        AVX512 VCVTTSD2USI      reg32,xmmrm64|sae        AVX512 VCVTTSD2USI      reg64,xmmrm64|sae        AVX512 VCVTTSS2SI       reg32,xmmrm32|sae        AVX512 VCVTTSS2SI       reg64,xmmrm32|sae        AVX512 VCVTTSS2USI      reg32,xmmrm32|sae        AVX512 VCVTTSS2USI      reg64,xmmrm32|sae        AVX512 VCVTUDQ2PD       xmmreg|mask|z,xmmrm64|b32 AVX512VL VCVTUDQ2PD       ymmreg|mask|z,xmmrm128|b32 AVX512VL VCVTUDQ2PD       zmmreg|mask|z,ymmrm256|b32|er AVX512 VCVTUDQ2PS       xmmreg|mask|z,xmmrm128|b32 AVX512VL VCVTUDQ2PS       ymmreg|mask|z,ymmrm256|b32 AVX512VL VCVTUDQ2PS       zmmreg|mask|z,zmmrm512|b32|er AVX512 VCVTUQQ2PD       xmmreg|mask|z,xmmrm128|b64 AVX512VL/DQ VCVTUQQ2PD       ymmreg|mask|z,ymmrm256|b64 AVX512VL/DQ VCVTUQQ2PD       zmmreg|mask|z,zmmrm512|b64|er AVX512DQ VCVTUQQ2PS       xmmreg|mask|z,xmmrm128|b64 AVX512VL/DQ VCVTUQQ2PS       xmmreg|mask|z,ymmrm256|b64 AVX512VL/DQ VCVTUQQ2PS       ymmreg|mask|z,zmmrm512|b64|er AVX512DQ VCVTUSI2SD       xmmreg,xmmreg|er,rm32    AVX512 VCVTUSI2SD       xmmreg,xmmreg|er,rm64    AVX512 VCVTUSI2SS       xmmreg,xmmreg|er,rm32    AVX512 VCVTUSI2SS       xmmreg,xmmreg|er,rm64    AVX512 VDBPSADBW        xmmreg|mask|z,xmmreg*,xmmrm128,imm8 AVX512VL/BW VDBPSADBW        ymmreg|mask|z,ymmreg*,ymmrm256,imm8 AVX512VL/BW VDBPSADBW        zmmreg|mask|z,zmmreg*,zmmrm512,imm8 AVX512BW VDIVPD           xmmreg|mask|z,xmmreg*,xmmrm128|b64 AVX512VL VDIVPD           ymmreg|mask|z,ymmreg*,ymmrm256|b64 AVX512VL VDIVPD           zmmreg|mask|z,zmmreg*,zmmrm512|b64|er AVX512 VDIVPS           xmmreg|mask|z,xmmreg*,xmmrm128|b32 AVX512VL VDIVPS           ymmreg|mask|z,ymmreg*,ymmrm256|b32 AVX512VL VDIVPS           zmmreg|mask|z,zmmreg*,zmmrm512|b32|er AVX512 VDIVSD           xmmreg|mask|z,xmmreg*,xmmrm64|er AVX512 VDIVSS           xmmreg|mask|z,xmmreg*,xmmrm32|er AVX512 VEXP2PD          zmmreg|mask|z,zmmrm512|b64|sae AVX512ER VEXP2PS          zmmreg|mask|z,zmmrm512|b32|sae AVX512ER VEXPANDPD        xmmreg|mask|z,mem128     AVX512VL VEXPANDPD        ymmreg|mask|z,mem256     AVX512VL VEXPANDPD        zmmreg|mask|z,mem512     AVX512 VEXPANDPD        xmmreg|mask|z,xmmreg     AVX512VL VEXPANDPD        ymmreg|mask|z,ymmreg     AVX512VL VEXPANDPD        zmmreg|mask|z,zmmreg     AVX512 VEXPANDPS        xmmreg|mask|z,mem128     AVX512VL VEXPANDPS        ymmreg|mask|z,mem256     AVX512VL VEXPANDPS        zmmreg|mask|z,mem512     AVX512 VEXPANDPS        xmmreg|mask|z,xmmreg     AVX512VL VEXPANDPS        ymmreg|mask|z,ymmreg     AVX512VL VEXPANDPS        zmmreg|mask|z,zmmreg     AVX512 VEXTRACTF32X4    xmmreg|mask|z,ymmreg,imm8 AVX512VL VEXTRACTF32X4    xmmreg|mask|z,zmmreg,imm8 AVX512 VEXTRACTF32X4    mem128|mask,ymmreg,imm8  AVX512VL VEXTRACTF32X4    mem128|mask,zmmreg,imm8  AVX512 VEXTRACTF32X8    ymmreg|mask|z,zmmreg,imm8 AVX512DQ VEXTRACTF32X8    mem256|mask,zmmreg,imm8  AVX512DQ VEXTRACTF64X2    xmmreg|mask|z,ymmreg,imm8 AVX512VL/DQ VEXTRACTF64X2    xmmreg|mask|z,zmmreg,imm8 AVX512DQ VEXTRACTF64X2    mem128|mask,ymmreg,imm8  AVX512VL/DQ VEXTRACTF64X2    mem128|mask,zmmreg,imm8  AVX512DQ VEXTRACTF64X4    ymmreg|mask|z,zmmreg,imm8 AVX512 VEXTRACTF64X4    mem256|mask,zmmreg,imm8  AVX512 VEXTRACTI32X4    xmmreg|mask|z,ymmreg,imm8 AVX512VL VEXTRACTI32X4    xmmreg|mask|z,zmmreg,imm8 AVX512 VEXTRACTI32X4    mem128|mask,ymmreg,imm8  AVX512VL VEXTRACTI32X4    mem128|mask,zmmreg,imm8  AVX512 VEXTRACTI32X8    ymmreg|mask|z,zmmreg,imm8 AVX512DQ VEXTRACTI32X8    mem256|mask,zmmreg,imm8  AVX512DQ VEXTRACTI64X2    xmmreg|mask|z,ymmreg,imm8 AVX512VL/DQ VEXTRACTI64X2    xmmreg|mask|z,zmmreg,imm8 AVX512DQ VEXTRACTI64X2    mem128|mask,ymmreg,imm8  AVX512VL/DQ VEXTRACTI64X2    mem128|mask,zmmreg,imm8  AVX512DQ VEXTRACTI64X4    ymmreg|mask|z,zmmreg,imm8 AVX512 VEXTRACTI64X4    mem256|mask,zmmreg,imm8  AVX512 VEXTRACTPS       reg32,xmmreg,imm8        AVX512 VEXTRACTPS       reg64,xmmreg,imm8        AVX512 VEXTRACTPS       mem32,xmmreg,imm8        AVX512 VFIXUPIMMPD      xmmreg|mask|z,xmmreg*,xmmrm128|b64,imm8 AVX512VL VFIXUPIMMPD      ymmreg|mask|z,ymmreg*,ymmrm256|b64,imm8 AVX512VL VFIXUPIMMPD      zmmreg|mask|z,zmmreg*,zmmrm512|b64|sae,imm8 AVX512 VFIXUPIMMPS      xmmreg|mask|z,xmmreg*,xmmrm128|b32,imm8 AVX512VL VFIXUPIMMPS      ymmreg|mask|z,ymmreg*,ymmrm256|b32,imm8 AVX512VL VFIXUPIMMPS      zmmreg|mask|z,zmmreg*,zmmrm512|b32|sae,imm8 AVX512 VFIXUPIMMSD      xmmreg|mask|z,xmmreg*,xmmrm64|sae,imm8 AVX512 VFIXUPIMMSS      xmmreg|mask|z,xmmreg*,xmmrm32|sae,imm8 AVX512 VFMADD132PD      xmmreg|mask|z,xmmreg,xmmrm128|b64 AVX512VL VFMADD132PD      ymmreg|mask|z,ymmreg,ymmrm256|b64 AVX512VL VFMADD132PD      zmmreg|mask|z,zmmreg,zmmrm512|b64|er AVX512 VFMADD132PS      xmmreg|mask|z,xmmreg,xmmrm128|b32 AVX512VL VFMADD132PS      ymmreg|mask|z,ymmreg,ymmrm256|b32 AVX512VL VFMADD132PS      zmmreg|mask|z,zmmreg,zmmrm512|b32|er AVX512 VFMADD132SD      xmmreg|mask|z,xmmreg,xmmrm64|er AVX512 VFMADD132SS      xmmreg|mask|z,xmmreg,xmmrm32|er AVX512 VFMADD213PD      xmmreg|mask|z,xmmreg,xmmrm128|b64 AVX512VL VFMADD213PD      ymmreg|mask|z,ymmreg,ymmrm256|b64 AVX512VL VFMADD213PD      zmmreg|mask|z,zmmreg,zmmrm512|b64|er AVX512 VFMADD213PS      xmmreg|mask|z,xmmreg,xmmrm128|b32 AVX512VL VFMADD213PS      ymmreg|mask|z,ymmreg,ymmrm256|b32 AVX512VL VFMADD213PS      zmmreg|mask|z,zmmreg,zmmrm512|b32|er AVX512 VFMADD213SD      xmmreg|mask|z,xmmreg,xmmrm64|er AVX512 VFMADD213SS      xmmreg|mask|z,xmmreg,xmmrm32|er AVX512 VFMADD231PD      xmmreg|mask|z,xmmreg,xmmrm128|b64 AVX512VL VFMADD231PD      ymmreg|mask|z,ymmreg,ymmrm256|b64 AVX512VL VFMADD231PD      zmmreg|mask|z,zmmreg,zmmrm512|b64|er AVX512 VFMADD231PS      xmmreg|mask|z,xmmreg,xmmrm128|b32 AVX512VL VFMADD231PS      ymmreg|mask|z,ymmreg,ymmrm256|b32 AVX512VL VFMADD231PS      zmmreg|mask|z,zmmreg,zmmrm512|b32|er AVX512 VFMADD231SD      xmmreg|mask|z,xmmreg,xmmrm64|er AVX512 VFMADD231SS      xmmreg|mask|z,xmmreg,xmmrm32|er AVX512 VFMADDSUB132PD   xmmreg|mask|z,xmmreg,xmmrm128|b64 AVX512VL VFMADDSUB132PD   ymmreg|mask|z,ymmreg,ymmrm256|b64 AVX512VL VFMADDSUB132PD   zmmreg|mask|z,zmmreg,zmmrm512|b64|er AVX512 VFMADDSUB132PS   xmmreg|mask|z,xmmreg,xmmrm128|b32 AVX512VL VFMADDSUB132PS   ymmreg|mask|z,ymmreg,ymmrm256|b32 AVX512VL VFMADDSUB132PS   zmmreg|mask|z,zmmreg,zmmrm512|b32|er AVX512 VFMADDSUB213PD   xmmreg|mask|z,xmmreg,xmmrm128|b64 AVX512VL VFMADDSUB213PD   ymmreg|mask|z,ymmreg,ymmrm256|b64 AVX512VL VFMADDSUB213PD   zmmreg|mask|z,zmmreg,zmmrm512|b64|er AVX512 VFMADDSUB213PS   xmmreg|mask|z,xmmreg,xmmrm128|b32 AVX512VL VFMADDSUB213PS   ymmreg|mask|z,ymmreg,ymmrm256|b32 AVX512VL VFMADDSUB213PS   zmmreg|mask|z,zmmreg,zmmrm512|b32|er AVX512 VFMADDSUB231PD   xmmreg|mask|z,xmmreg,xmmrm128|b64 AVX512VL VFMADDSUB231PD   ymmreg|mask|z,ymmreg,ymmrm256|b64 AVX512VL VFMADDSUB231PD   zmmreg|mask|z,zmmreg,zmmrm512|b64|er AVX512 VFMADDSUB231PS   xmmreg|mask|z,xmmreg,xmmrm128|b32 AVX512VL VFMADDSUB231PS   ymmreg|mask|z,ymmreg,ymmrm256|b32 AVX512VL VFMADDSUB231PS   zmmreg|mask|z,zmmreg,zmmrm512|b32|er AVX512 VFMSUB132PD      xmmreg|mask|z,xmmreg,xmmrm128|b64 AVX512VL VFMSUB132PD      ymmreg|mask|z,ymmreg,ymmrm256|b64 AVX512VL VFMSUB132PD      zmmreg|mask|z,zmmreg,zmmrm512|b64|er AVX512 VFMSUB132PS      xmmreg|mask|z,xmmreg,xmmrm128|b32 AVX512VL VFMSUB132PS      ymmreg|mask|z,ymmreg,ymmrm256|b32 AVX512VL VFMSUB132PS      zmmreg|mask|z,zmmreg,zmmrm512|b32|er AVX512 VFMSUB132SD      xmmreg|mask|z,xmmreg,xmmrm64|er AVX512 VFMSUB132SS      xmmreg|mask|z,xmmreg,xmmrm32|er AVX512 VFMSUB213PD      xmmreg|mask|z,xmmreg,xmmrm128|b64 AVX512VL VFMSUB213PD      ymmreg|mask|z,ymmreg,ymmrm256|b64 AVX512VL VFMSUB213PD      zmmreg|mask|z,zmmreg,zmmrm512|b64|er AVX512 VFMSUB213PS      xmmreg|mask|z,xmmreg,xmmrm128|b32 AVX512VL VFMSUB213PS      ymmreg|mask|z,ymmreg,ymmrm256|b32 AVX512VL VFMSUB213PS      zmmreg|mask|z,zmmreg,zmmrm512|b32|er AVX512 VFMSUB213SD      xmmreg|mask|z,xmmreg,xmmrm64|er AVX512 VFMSUB213SS      xmmreg|mask|z,xmmreg,xmmrm32|er AVX512 VFMSUB231PD      xmmreg|mask|z,xmmreg,xmmrm128|b64 AVX512VL VFMSUB231PD      ymmreg|mask|z,ymmreg,ymmrm256|b64 AVX512VL VFMSUB231PD      zmmreg|mask|z,zmmreg,zmmrm512|b64|er AVX512 VFMSUB231PS      xmmreg|mask|z,xmmreg,xmmrm128|b32 AVX512VL VFMSUB231PS      ymmreg|mask|z,ymmreg,ymmrm256|b32 AVX512VL VFMSUB231PS      zmmreg|mask|z,zmmreg,zmmrm512|b32|er AVX512 VFMSUB231SD      xmmreg|mask|z,xmmreg,xmmrm64|er AVX512 VFMSUB231SS      xmmreg|mask|z,xmmreg,xmmrm32|er AVX512 VFMSUBADD132PD   xmmreg|mask|z,xmmreg,xmmrm128|b64 AVX512VL VFMSUBADD132PD   ymmreg|mask|z,ymmreg,ymmrm256|b64 AVX512VL VFMSUBADD132PD   zmmreg|mask|z,zmmreg,zmmrm512|b64|er AVX512 VFMSUBADD132PS   xmmreg|mask|z,xmmreg,xmmrm128|b32 AVX512VL VFMSUBADD132PS   ymmreg|mask|z,ymmreg,ymmrm256|b32 AVX512VL VFMSUBADD132PS   zmmreg|mask|z,zmmreg,zmmrm512|b32|er AVX512 VFMSUBADD213PD   xmmreg|mask|z,xmmreg,xmmrm128|b64 AVX512VL VFMSUBADD213PD   ymmreg|mask|z,ymmreg,ymmrm256|b64 AVX512VL VFMSUBADD213PD   zmmreg|mask|z,zmmreg,zmmrm512|b64|er AVX512 VFMSUBADD213PS   xmmreg|mask|z,xmmreg,xmmrm128|b32 AVX512VL VFMSUBADD213PS   ymmreg|mask|z,ymmreg,ymmrm256|b32 AVX512VL VFMSUBADD213PS   zmmreg|mask|z,zmmreg,zmmrm512|b32|er AVX512 VFMSUBADD231PD   xmmreg|mask|z,xmmreg,xmmrm128|b64 AVX512VL VFMSUBADD231PD   ymmreg|mask|z,ymmreg,ymmrm256|b64 AVX512VL VFMSUBADD231PD   zmmreg|mask|z,zmmreg,zmmrm512|b64|er AVX512 VFMSUBADD231PS   xmmreg|mask|z,xmmreg,xmmrm128|b32 AVX512VL VFMSUBADD231PS   ymmreg|mask|z,ymmreg,ymmrm256|b32 AVX512VL VFMSUBADD231PS   zmmreg|mask|z,zmmreg,zmmrm512|b32|er AVX512 VFNMADD132PD     xmmreg|mask|z,xmmreg,xmmrm128|b64 AVX512VL VFNMADD132PD     ymmreg|mask|z,ymmreg,ymmrm256|b64 AVX512VL VFNMADD132PD     zmmreg|mask|z,zmmreg,zmmrm512|b64|er AVX512 VFNMADD132PS     xmmreg|mask|z,xmmreg,xmmrm128|b32 AVX512VL VFNMADD132PS     ymmreg|mask|z,ymmreg,ymmrm256|b32 AVX512VL VFNMADD132PS     zmmreg|mask|z,zmmreg,zmmrm512|b32|er AVX512 VFNMADD132SD     xmmreg|mask|z,xmmreg,xmmrm64|er AVX512 VFNMADD132SS     xmmreg|mask|z,xmmreg,xmmrm32|er AVX512 VFNMADD213PD     xmmreg|mask|z,xmmreg,xmmrm128|b64 AVX512VL VFNMADD213PD     ymmreg|mask|z,ymmreg,ymmrm256|b64 AVX512VL VFNMADD213PD     zmmreg|mask|z,zmmreg,zmmrm512|b64|er AVX512 VFNMADD213PS     xmmreg|mask|z,xmmreg,xmmrm128|b32 AVX512VL VFNMADD213PS     ymmreg|mask|z,ymmreg,ymmrm256|b32 AVX512VL VFNMADD213PS     zmmreg|mask|z,zmmreg,zmmrm512|b32|er AVX512 VFNMADD213SD     xmmreg|mask|z,xmmreg,xmmrm64|er AVX512 VFNMADD213SS     xmmreg|mask|z,xmmreg,xmmrm32|er AVX512 VFNMADD231PD     xmmreg|mask|z,xmmreg,xmmrm128|b64 AVX512VL VFNMADD231PD     ymmreg|mask|z,ymmreg,ymmrm256|b64 AVX512VL VFNMADD231PD     zmmreg|mask|z,zmmreg,zmmrm512|b64|er AVX512 VFNMADD231PS     xmmreg|mask|z,xmmreg,xmmrm128|b32 AVX512VL VFNMADD231PS     ymmreg|mask|z,ymmreg,ymmrm256|b32 AVX512VL VFNMADD231PS     zmmreg|mask|z,zmmreg,zmmrm512|b32|er AVX512 VFNMADD231SD     xmmreg|mask|z,xmmreg,xmmrm64|er AVX512 VFNMADD231SS     xmmreg|mask|z,xmmreg,xmmrm32|er AVX512 VFNMSUB132PD     xmmreg|mask|z,xmmreg,xmmrm128|b64 AVX512VL VFNMSUB132PD     ymmreg|mask|z,ymmreg,ymmrm256|b64 AVX512VL VFNMSUB132PD     zmmreg|mask|z,zmmreg,zmmrm512|b64|er AVX512 VFNMSUB132PS     xmmreg|mask|z,xmmreg,xmmrm128|b32 AVX512VL VFNMSUB132PS     ymmreg|mask|z,ymmreg,ymmrm256|b32 AVX512VL VFNMSUB132PS     zmmreg|mask|z,zmmreg,zmmrm512|b32|er AVX512 VFNMSUB132SD     xmmreg|mask|z,xmmreg,xmmrm64|er AVX512 VFNMSUB132SS     xmmreg|mask|z,xmmreg,xmmrm32|er AVX512 VFNMSUB213PD     xmmreg|mask|z,xmmreg,xmmrm128|b64 AVX512VL VFNMSUB213PD     ymmreg|mask|z,ymmreg,ymmrm256|b64 AVX512VL VFNMSUB213PD     zmmreg|mask|z,zmmreg,zmmrm512|b64|er AVX512 VFNMSUB213PS     xmmreg|mask|z,xmmreg,xmmrm128|b32 AVX512VL VFNMSUB213PS     ymmreg|mask|z,ymmreg,ymmrm256|b32 AVX512VL VFNMSUB213PS     zmmreg|mask|z,zmmreg,zmmrm512|b32|er AVX512 VFNMSUB213SD     xmmreg|mask|z,xmmreg,xmmrm64|er AVX512 VFNMSUB213SS     xmmreg|mask|z,xmmreg,xmmrm32|er AVX512 VFNMSUB231PD     xmmreg|mask|z,xmmreg,xmmrm128|b64 AVX512VL VFNMSUB231PD     ymmreg|mask|z,ymmreg,ymmrm256|b64 AVX512VL VFNMSUB231PD     zmmreg|mask|z,zmmreg,zmmrm512|b64|er AVX512 VFNMSUB231PS     xmmreg|mask|z,xmmreg,xmmrm128|b32 AVX512VL VFNMSUB231PS     ymmreg|mask|z,ymmreg,ymmrm256|b32 AVX512VL VFNMSUB231PS     zmmreg|mask|z,zmmreg,zmmrm512|b32|er AVX512 VFNMSUB231SD     xmmreg|mask|z,xmmreg,xmmrm64|er AVX512 VFNMSUB231SS     xmmreg|mask|z,xmmreg,xmmrm32|er AVX512 VFPCLASSPD       kreg|mask,xmmrm128|b64,imm8 AVX512VL/DQ VFPCLASSPD       kreg|mask,ymmrm256|b64,imm8 AVX512VL/DQ VFPCLASSPD       kreg|mask,zmmrm512|b64,imm8 AVX512DQ VFPCLASSPS       kreg|mask,xmmrm128|b32,imm8 AVX512VL/DQ VFPCLASSPS       kreg|mask,ymmrm256|b32,imm8 AVX512VL/DQ VFPCLASSPS       kreg|mask,zmmrm512|b32,imm8 AVX512DQ VFPCLASSSD       kreg|mask,xmmrm64,imm8   AVX512DQ VFPCLASSSS       kreg|mask,xmmrm32,imm8   AVX512DQ VGATHERDPD       xmmreg|mask,xmem64       AVX512VL VGATHERDPD       ymmreg|mask,xmem64       AVX512VL VGATHERDPD       zmmreg|mask,ymem64       AVX512 VGATHERDPS       xmmreg|mask,xmem32       AVX512VL VGATHERDPS       ymmreg|mask,ymem32       AVX512VL VGATHERDPS       zmmreg|mask,zmem32       AVX512 VGATHERPF0DPD    ymem64|mask              AVX512PF VGATHERPF0DPS    zmem32|mask              AVX512PF VGATHERPF0QPD    zmem64|mask              AVX512PF VGATHERPF0QPS    zmem32|mask              AVX512PF VGATHERPF1DPD    ymem64|mask              AVX512PF VGATHERPF1DPS    zmem32|mask              AVX512PF VGATHERPF1QPD    zmem64|mask              AVX512PF VGATHERPF1QPS    zmem32|mask              AVX512PF VGATHERQPD       xmmreg|mask,xmem64       AVX512VL VGATHERQPD       ymmreg|mask,ymem64       AVX512VL VGATHERQPD       zmmreg|mask,zmem64       AVX512 VGATHERQPS       xmmreg|mask,xmem32       AVX512VL VGATHERQPS       xmmreg|mask,ymem32       AVX512VL VGATHERQPS       ymmreg|mask,zmem32       AVX512 VGETEXPPD        xmmreg|mask|z,xmmrm128|b64 AVX512VL VGETEXPPD        ymmreg|mask|z,ymmrm256|b64 AVX512VL VGETEXPPD        zmmreg|mask|z,zmmrm512|b64|sae AVX512 VGETEXPPS        xmmreg|mask|z,xmmrm128|b32 AVX512VL VGETEXPPS        ymmreg|mask|z,ymmrm256|b32 AVX512VL VGETEXPPS        zmmreg|mask|z,zmmrm512|b32|sae AVX512 VGETEXPSD        xmmreg|mask|z,xmmreg,xmmrm64|sae AVX512 VGETEXPSS        xmmreg|mask|z,xmmreg,xmmrm32|sae AVX512 VGETMANTPD       xmmreg|mask|z,xmmrm128|b64,imm8 AVX512VL VGETMANTPD       ymmreg|mask|z,ymmrm256|b64,imm8 AVX512VL VGETMANTPD       zmmreg|mask|z,zmmrm512|b64|sae,imm8 AVX512 VGETMANTPS       xmmreg|mask|z,xmmrm128|b32,imm8 AVX512VL VGETMANTPS       ymmreg|mask|z,ymmrm256|b32,imm8 AVX512VL VGETMANTPS       zmmreg|mask|z,zmmrm512|b32|sae,imm8 AVX512 VGETMANTSD       xmmreg|mask|z,xmmreg,xmmrm64|sae,imm8 AVX512 VGETMANTSS       xmmreg|mask|z,xmmreg,xmmrm32|sae,imm8 AVX512 VINSERTF32X4     ymmreg|mask|z,ymmreg*,xmmrm128,imm8 AVX512VL VINSERTF32X4     zmmreg|mask|z,zmmreg*,xmmrm128,imm8 AVX512 VINSERTF32X8     zmmreg|mask|z,zmmreg*,ymmrm256,imm8 AVX512DQ VINSERTF64X2     ymmreg|mask|z,ymmreg*,xmmrm128,imm8 AVX512VL/DQ VINSERTF64X2     zmmreg|mask|z,zmmreg*,xmmrm128,imm8 AVX512DQ VINSERTF64X4     zmmreg|mask|z,zmmreg*,ymmrm256,imm8 AVX512 VINSERTI32X4     ymmreg|mask|z,ymmreg*,xmmrm128,imm8 AVX512VL VINSERTI32X4     zmmreg|mask|z,zmmreg*,xmmrm128,imm8 AVX512 VINSERTI32X8     zmmreg|mask|z,zmmreg*,ymmrm256,imm8 AVX512DQ VINSERTI64X2     ymmreg|mask|z,ymmreg*,xmmrm128,imm8 AVX512VL/DQ VINSERTI64X2     zmmreg|mask|z,zmmreg*,xmmrm128,imm8 AVX512DQ VINSERTI64X4     zmmreg|mask|z,zmmreg*,ymmrm256,imm8 AVX512 VINSERTPS        xmmreg,xmmreg*,xmmrm32,imm8 AVX512 VMAXPD           xmmreg|mask|z,xmmreg*,xmmrm128|b64 AVX512VL VMAXPD           ymmreg|mask|z,ymmreg*,ymmrm256|b64 AVX512VL VMAXPD           zmmreg|mask|z,zmmreg*,zmmrm512|b64|sae AVX512 VMAXPS           xmmreg|mask|z,xmmreg*,xmmrm128|b32 AVX512VL VMAXPS           ymmreg|mask|z,ymmreg*,ymmrm256|b32 AVX512VL VMAXPS           zmmreg|mask|z,zmmreg*,zmmrm512|b32|sae AVX512 VMAXSD           xmmreg|mask|z,xmmreg*,xmmrm64|sae AVX512 VMAXSS           xmmreg|mask|z,xmmreg*,xmmrm32|sae AVX512 VMINPD           xmmreg|mask|z,xmmreg*,xmmrm128|b64 AVX512VL VMINPD           ymmreg|mask|z,ymmreg*,ymmrm256|b64 AVX512VL VMINPD           zmmreg|mask|z,zmmreg*,zmmrm512|b64|sae AVX512 VMINPS           xmmreg|mask|z,xmmreg*,xmmrm128|b32 AVX512VL VMINPS           ymmreg|mask|z,ymmreg*,ymmrm256|b32 AVX512VL VMINPS           zmmreg|mask|z,zmmreg*,zmmrm512|b32|sae AVX512 VMINSD           xmmreg|mask|z,xmmreg*,xmmrm64|sae AVX512 VMINSS           xmmreg|mask|z,xmmreg*,xmmrm32|sae AVX512 VMOVAPD          xmmreg|mask|z,xmmrm128   AVX512VL VMOVAPD          ymmreg|mask|z,ymmrm256   AVX512VL VMOVAPD          zmmreg|mask|z,zmmrm512   AVX512 VMOVAPD          xmmreg|mask|z,xmmreg     AVX512VL VMOVAPD          ymmreg|mask|z,ymmreg     AVX512VL VMOVAPD          zmmreg|mask|z,zmmreg     AVX512 VMOVAPD          mem128|mask,xmmreg       AVX512VL VMOVAPD          mem256|mask,ymmreg       AVX512VL VMOVAPD          mem512|mask,zmmreg       AVX512 VMOVAPS          xmmreg|mask|z,xmmrm128   AVX512VL VMOVAPS          ymmreg|mask|z,ymmrm256   AVX512VL VMOVAPS          zmmreg|mask|z,zmmrm512   AVX512 VMOVAPS          xmmreg|mask|z,xmmreg     AVX512VL VMOVAPS          ymmreg|mask|z,ymmreg     AVX512VL VMOVAPS          zmmreg|mask|z,zmmreg     AVX512 VMOVAPS          mem128|mask,xmmreg       AVX512VL VMOVAPS          mem256|mask,ymmreg       AVX512VL VMOVAPS          mem512|mask,zmmreg       AVX512 VMOVD            xmmreg,rm32              AVX512 VMOVD            rm32,xmmreg              AVX512 VMOVDDUP         xmmreg|mask|z,xmmrm64    AVX512VL VMOVDDUP         ymmreg|mask|z,ymmrm256   AVX512VL VMOVDDUP         zmmreg|mask|z,zmmrm512   AVX512 VMOVDQA32        xmmreg|mask|z,xmmrm128   AVX512VL VMOVDQA32        ymmreg|mask|z,ymmrm256   AVX512VL VMOVDQA32        zmmreg|mask|z,zmmrm512   AVX512 VMOVDQA32        xmmrm128|mask|z,xmmreg   AVX512VL VMOVDQA32        ymmrm256|mask|z,ymmreg   AVX512VL VMOVDQA32        zmmrm512|mask|z,zmmreg   AVX512 VMOVDQA64        xmmreg|mask|z,xmmrm128   AVX512VL VMOVDQA64        ymmreg|mask|z,ymmrm256   AVX512VL VMOVDQA64        zmmreg|mask|z,zmmrm512   AVX512 VMOVDQA64        xmmrm128|mask|z,xmmreg   AVX512VL VMOVDQA64        ymmrm256|mask|z,ymmreg   AVX512VL VMOVDQA64        zmmrm512|mask|z,zmmreg   AVX512 VMOVDQU16        xmmreg|mask|z,xmmrm128   AVX512VL/BW VMOVDQU16        ymmreg|mask|z,ymmrm256   AVX512VL/BW VMOVDQU16        zmmreg|mask|z,zmmrm512   AVX512BW VMOVDQU16        xmmrm128|mask|z,xmmreg   AVX512VL/BW VMOVDQU16        ymmrm256|mask|z,ymmreg   AVX512VL/BW VMOVDQU16        zmmrm512|mask|z,zmmreg   AVX512BW VMOVDQU32        xmmreg|mask|z,xmmrm128   AVX512VL VMOVDQU32        ymmreg|mask|z,ymmrm256   AVX512VL VMOVDQU32        zmmreg|mask|z,zmmrm512   AVX512 VMOVDQU32        xmmrm128|mask|z,xmmreg   AVX512VL VMOVDQU32        ymmrm256|mask|z,ymmreg   AVX512VL VMOVDQU32        zmmrm512|mask|z,zmmreg   AVX512 VMOVDQU64        xmmreg|mask|z,xmmrm128   AVX512VL VMOVDQU64        ymmreg|mask|z,ymmrm256   AVX512VL VMOVDQU64        zmmreg|mask|z,zmmrm512   AVX512 VMOVDQU64        xmmrm128|mask|z,xmmreg   AVX512VL VMOVDQU64        ymmrm256|mask|z,ymmreg   AVX512VL VMOVDQU64        zmmrm512|mask|z,zmmreg   AVX512 VMOVDQU8         xmmreg|mask|z,xmmrm128   AVX512VL/BW VMOVDQU8         ymmreg|mask|z,ymmrm256   AVX512VL/BW VMOVDQU8         zmmreg|mask|z,zmmrm512   AVX512BW VMOVDQU8         xmmrm128|mask|z,xmmreg   AVX512VL/BW VMOVDQU8         ymmrm256|mask|z,ymmreg   AVX512VL/BW VMOVDQU8         zmmrm512|mask|z,zmmreg   AVX512BW VMOVHLPS         xmmreg,xmmreg*,xmmreg    AVX512 VMOVHPD          xmmreg,xmmreg*,mem64     AVX512 VMOVHPD          mem64,xmmreg             AVX512 VMOVHPS          xmmreg,xmmreg*,mem64     AVX512 VMOVHPS          mem64,xmmreg             AVX512 VMOVLHPS         xmmreg,xmmreg*,xmmreg    AVX512 VMOVLPD          xmmreg,xmmreg*,mem64     AVX512 VMOVLPD          mem64,xmmreg             AVX512 VMOVLPS          xmmreg,xmmreg*,mem64     AVX512 VMOVLPS          mem64,xmmreg             AVX512 VMOVNTDQ         mem128,xmmreg            AVX512VL VMOVNTDQ         mem256,ymmreg            AVX512VL VMOVNTDQ         mem512,zmmreg            AVX512 VMOVNTDQA        xmmreg,mem128            AVX512VL VMOVNTDQA        ymmreg,mem256            AVX512VL VMOVNTDQA        zmmreg,mem512            AVX512 VMOVNTPD         mem128,xmmreg            AVX512VL VMOVNTPD         mem256,ymmreg            AVX512VL VMOVNTPD         mem512,zmmreg            AVX512 VMOVNTPS         mem128,xmmreg            AVX512VL VMOVNTPS         mem256,ymmreg            AVX512VL VMOVNTPS         mem512,zmmreg            AVX512 VMOVQ            xmmreg,rm64              AVX512 VMOVQ            rm64,xmmreg              AVX512 VMOVQ            xmmreg,xmmrm64           AVX512 VMOVQ            xmmrm64,xmmreg           AVX512 VMOVSD           xmmreg|mask|z,mem64      AVX512 VMOVSD           mem64|mask,xmmreg        AVX512 VMOVSD           xmmreg|mask|z,xmmreg*,xmmreg AVX512 VMOVSD           xmmreg|mask|z,xmmreg*,xmmreg AVX512 VMOVSHDUP        xmmreg|mask|z,xmmrm128   AVX512VL VMOVSHDUP        ymmreg|mask|z,ymmrm256   AVX512VL VMOVSHDUP        zmmreg|mask|z,zmmrm512   AVX512 VMOVSLDUP        xmmreg|mask|z,xmmrm128   AVX512VL VMOVSLDUP        ymmreg|mask|z,ymmrm256   AVX512VL VMOVSLDUP        zmmreg|mask|z,zmmrm512   AVX512 VMOVSS           xmmreg|mask|z,mem32      AVX512 VMOVSS           mem32|mask,xmmreg        AVX512 VMOVSS           xmmreg|mask|z,xmmreg*,xmmreg AVX512 VMOVSS           xmmreg|mask|z,xmmreg*,xmmreg AVX512 VMOVUPD          xmmreg|mask|z,xmmrm128   AVX512VL VMOVUPD          ymmreg|mask|z,ymmrm256   AVX512VL VMOVUPD          zmmreg|mask|z,zmmrm512   AVX512 VMOVUPD          xmmreg|mask|z,xmmreg     AVX512VL VMOVUPD          ymmreg|mask|z,ymmreg     AVX512VL VMOVUPD          zmmreg|mask|z,zmmreg     AVX512 VMOVUPD          mem128|mask,xmmreg       AVX512VL VMOVUPD          mem256|mask,ymmreg       AVX512VL VMOVUPD          mem512|mask,zmmreg       AVX512 VMOVUPS          xmmreg|mask|z,xmmrm128   AVX512VL VMOVUPS          ymmreg|mask|z,ymmrm256   AVX512VL VMOVUPS          zmmreg|mask|z,zmmrm512   AVX512 VMOVUPS          xmmreg|mask|z,xmmreg     AVX512VL VMOVUPS          ymmreg|mask|z,ymmreg     AVX512VL VMOVUPS          zmmreg|mask|z,zmmreg     AVX512 VMOVUPS          mem128|mask,xmmreg       AVX512VL VMOVUPS          mem256|mask,ymmreg       AVX512VL VMOVUPS          mem512|mask,zmmreg       AVX512 VMULPD           xmmreg|mask|z,xmmreg*,xmmrm128|b64 AVX512VL VMULPD           ymmreg|mask|z,ymmreg*,ymmrm256|b64 AVX512VL VMULPD           zmmreg|mask|z,zmmreg*,zmmrm512|b64|er AVX512 VMULPS           xmmreg|mask|z,xmmreg*,xmmrm128|b32 AVX512VL VMULPS           ymmreg|mask|z,ymmreg*,ymmrm256|b32 AVX512VL VMULPS           zmmreg|mask|z,zmmreg*,zmmrm512|b32|er AVX512 VMULSD           xmmreg|mask|z,xmmreg*,xmmrm64|er AVX512 VMULSS           xmmreg|mask|z,xmmreg*,xmmrm32|er AVX512 VORPD            xmmreg|mask|z,xmmreg*,xmmrm128|b64 AVX512VL/DQ VORPD            ymmreg|mask|z,ymmreg*,ymmrm256|b64 AVX512VL/DQ VORPD            zmmreg|mask|z,zmmreg*,zmmrm512|b64 AVX512DQ VORPS            xmmreg|mask|z,xmmreg*,xmmrm128|b32 AVX512VL/DQ VORPS            ymmreg|mask|z,ymmreg*,ymmrm256|b32 AVX512VL/DQ VORPS            zmmreg|mask|z,zmmreg*,zmmrm512|b32 AVX512DQ VPABSB           xmmreg|mask|z,xmmrm128   AVX512VL/BW VPABSB           ymmreg|mask|z,ymmrm256   AVX512VL/BW VPABSB           zmmreg|mask|z,zmmrm512   AVX512BW VPABSD           xmmreg|mask|z,xmmrm128|b32 AVX512VL VPABSD           ymmreg|mask|z,ymmrm256|b32 AVX512VL VPABSD           zmmreg|mask|z,zmmrm512|b32 AVX512 VPABSQ           xmmreg|mask|z,xmmrm128|b64 AVX512VL VPABSQ           ymmreg|mask|z,ymmrm256|b64 AVX512VL VPABSQ           zmmreg|mask|z,zmmrm512|b64 AVX512 VPABSW           xmmreg|mask|z,xmmrm128   AVX512VL/BW VPABSW           ymmreg|mask|z,ymmrm256   AVX512VL/BW VPABSW           zmmreg|mask|z,zmmrm512   AVX512BW VPACKSSDW        xmmreg|mask|z,xmmreg*,xmmrm128|b32 AVX512VL/BW VPACKSSDW        ymmreg|mask|z,ymmreg*,ymmrm256|b32 AVX512VL/BW VPACKSSDW        zmmreg|mask|z,zmmreg*,zmmrm512|b32 AVX512BW VPACKSSWB        xmmreg|mask|z,xmmreg*,xmmrm128 AVX512VL/BW VPACKSSWB        ymmreg|mask|z,ymmreg*,ymmrm256 AVX512VL/BW VPACKSSWB        zmmreg|mask|z,zmmreg*,zmmrm512 AVX512BW VPACKUSDW        xmmreg|mask|z,xmmreg*,xmmrm128|b32 AVX512VL/BW VPACKUSDW        ymmreg|mask|z,ymmreg*,ymmrm256|b32 AVX512VL/BW VPACKUSDW        zmmreg|mask|z,zmmreg*,zmmrm512|b32 AVX512BW VPACKUSWB        xmmreg|mask|z,xmmreg*,xmmrm128 AVX512VL/BW VPACKUSWB        ymmreg|mask|z,ymmreg*,ymmrm256 AVX512VL/BW VPACKUSWB        zmmreg|mask|z,zmmreg*,zmmrm512 AVX512BW VPADDB           xmmreg|mask|z,xmmreg*,xmmrm128 AVX512VL/BW VPADDB           ymmreg|mask|z,ymmreg*,ymmrm256 AVX512VL/BW VPADDB           zmmreg|mask|z,zmmreg*,zmmrm512 AVX512BW VPADDD           xmmreg|mask|z,xmmreg*,xmmrm128|b32 AVX512VL VPADDD           ymmreg|mask|z,ymmreg*,ymmrm256|b32 AVX512VL VPADDD           zmmreg|mask|z,zmmreg*,zmmrm512|b32 AVX512 VPADDQ           xmmreg|mask|z,xmmreg*,xmmrm128|b64 AVX512VL VPADDQ           ymmreg|mask|z,ymmreg*,ymmrm256|b64 AVX512VL VPADDQ           zmmreg|mask|z,zmmreg*,zmmrm512|b64 AVX512 VPADDSB          xmmreg|mask|z,xmmreg*,xmmrm128 AVX512VL/BW VPADDSB          ymmreg|mask|z,ymmreg*,ymmrm256 AVX512VL/BW VPADDSB          zmmreg|mask|z,zmmreg*,zmmrm512 AVX512BW VPADDSW          xmmreg|mask|z,xmmreg*,xmmrm128 AVX512VL/BW VPADDSW          ymmreg|mask|z,ymmreg*,ymmrm256 AVX512VL/BW VPADDSW          zmmreg|mask|z,zmmreg*,zmmrm512 AVX512BW VPADDUSB         xmmreg|mask|z,xmmreg*,xmmrm128 AVX512VL/BW VPADDUSB         ymmreg|mask|z,ymmreg*,ymmrm256 AVX512VL/BW VPADDUSB         zmmreg|mask|z,zmmreg*,zmmrm512 AVX512BW VPADDUSW         xmmreg|mask|z,xmmreg*,xmmrm128 AVX512VL/BW VPADDUSW         ymmreg|mask|z,ymmreg*,ymmrm256 AVX512VL/BW VPADDUSW         zmmreg|mask|z,zmmreg*,zmmrm512 AVX512BW VPADDW           xmmreg|mask|z,xmmreg*,xmmrm128 AVX512VL/BW VPADDW           ymmreg|mask|z,ymmreg*,ymmrm256 AVX512VL/BW VPADDW           zmmreg|mask|z,zmmreg*,zmmrm512 AVX512BW VPALIGNR         xmmreg|mask|z,xmmreg*,xmmrm128,imm8 AVX512VL/BW VPALIGNR         ymmreg|mask|z,ymmreg*,ymmrm256,imm8 AVX512VL/BW VPALIGNR         zmmreg|mask|z,zmmreg*,zmmrm512,imm8 AVX512BW VPANDD           xmmreg|mask|z,xmmreg*,xmmrm128|b32 AVX512VL VPANDD           ymmreg|mask|z,ymmreg*,ymmrm256|b32 AVX512VL VPANDD           zmmreg|mask|z,zmmreg*,zmmrm512|b32 AVX512 VPANDND          xmmreg|mask|z,xmmreg*,xmmrm128|b32 AVX512VL VPANDND          ymmreg|mask|z,ymmreg*,ymmrm256|b32 AVX512VL VPANDND          zmmreg|mask|z,zmmreg*,zmmrm512|b32 AVX512 VPANDNQ          xmmreg|mask|z,xmmreg*,xmmrm128|b64 AVX512VL VPANDNQ          ymmreg|mask|z,ymmreg*,ymmrm256|b64 AVX512VL VPANDNQ          zmmreg|mask|z,zmmreg*,zmmrm512|b64 AVX512 VPANDQ           xmmreg|mask|z,xmmreg*,xmmrm128|b64 AVX512VL VPANDQ           ymmreg|mask|z,ymmreg*,ymmrm256|b64 AVX512VL VPANDQ           zmmreg|mask|z,zmmreg*,zmmrm512|b64 AVX512 VPAVGB           xmmreg|mask|z,xmmreg*,xmmrm128 AVX512VL/BW VPAVGB           ymmreg|mask|z,ymmreg*,ymmrm256 AVX512VL/BW VPAVGB           zmmreg|mask|z,zmmreg*,zmmrm512 AVX512BW VPAVGW           xmmreg|mask|z,xmmreg*,xmmrm128 AVX512VL/BW VPAVGW           ymmreg|mask|z,ymmreg*,ymmrm256 AVX512VL/BW VPAVGW           zmmreg|mask|z,zmmreg*,zmmrm512 AVX512BW VPBLENDMB        xmmreg|mask|z,xmmreg,xmmrm128 AVX512VL/BW VPBLENDMB        ymmreg|mask|z,ymmreg,ymmrm256 AVX512VL/BW VPBLENDMB        zmmreg|mask|z,zmmreg,zmmrm512 AVX512BW VPBLENDMD        xmmreg|mask|z,xmmreg,xmmrm128|b32 AVX512VL VPBLENDMD        ymmreg|mask|z,ymmreg,ymmrm256|b32 AVX512VL VPBLENDMD        zmmreg|mask|z,zmmreg,zmmrm512|b32 AVX512 VPBLENDMQ        xmmreg|mask|z,xmmreg,xmmrm128|b64 AVX512VL VPBLENDMQ        ymmreg|mask|z,ymmreg,ymmrm256|b64 AVX512VL VPBLENDMQ        zmmreg|mask|z,zmmreg,zmmrm512|b64 AVX512 VPBLENDMW        xmmreg|mask|z,xmmreg,xmmrm128 AVX512VL/BW VPBLENDMW        ymmreg|mask|z,ymmreg,ymmrm256 AVX512VL/BW VPBLENDMW        zmmreg|mask|z,zmmreg,zmmrm512 AVX512BW VPBROADCASTB     xmmreg|mask|z,xmmrm8     AVX512VL/BW VPBROADCASTB     ymmreg|mask|z,xmmrm8     AVX512VL/BW VPBROADCASTB     zmmreg|mask|z,xmmrm8     AVX512BW VPBROADCASTB     xmmreg|mask|z,reg8       AVX512VL/BW VPBROADCASTB     xmmreg|mask|z,reg16      AVX512VL/BW VPBROADCASTB     xmmreg|mask|z,reg32      AVX512VL/BW VPBROADCASTB     xmmreg|mask|z,reg64      AVX512VL/BW VPBROADCASTB     ymmreg|mask|z,reg8       AVX512VL/BW VPBROADCASTB     ymmreg|mask|z,reg16      AVX512VL/BW VPBROADCASTB     ymmreg|mask|z,reg32      AVX512VL/BW VPBROADCASTB     ymmreg|mask|z,reg64      AVX512VL/BW VPBROADCASTB     zmmreg|mask|z,reg8       AVX512BW VPBROADCASTB     zmmreg|mask|z,reg16      AVX512BW VPBROADCASTB     zmmreg|mask|z,reg32      AVX512BW VPBROADCASTB     zmmreg|mask|z,reg64      AVX512BW VPBROADCASTD     xmmreg|mask|z,mem32      AVX512VL VPBROADCASTD     ymmreg|mask|z,mem32      AVX512VL VPBROADCASTD     zmmreg|mask|z,mem32      AVX512 VPBROADCASTD     xmmreg|mask|z,xmmreg     AVX512VL VPBROADCASTD     ymmreg|mask|z,xmmreg     AVX512VL VPBROADCASTD     zmmreg|mask|z,xmmreg     AVX512 VPBROADCASTD     xmmreg|mask|z,reg32      AVX512VL VPBROADCASTD     ymmreg|mask|z,reg32      AVX512VL VPBROADCASTD     zmmreg|mask|z,reg32      AVX512 VPBROADCASTMB2Q  xmmreg,kreg              AVX512VL/CD VPBROADCASTMB2Q  ymmreg,kreg              AVX512VL/CD VPBROADCASTMB2Q  zmmreg,kreg              AVX512CD VPBROADCASTMW2D  xmmreg,kreg              AVX512VL/CD VPBROADCASTMW2D  ymmreg,kreg              AVX512VL/CD VPBROADCASTMW2D  zmmreg,kreg              AVX512CD VPBROADCASTQ     xmmreg|mask|z,mem64      AVX512VL VPBROADCASTQ     ymmreg|mask|z,mem64      AVX512VL VPBROADCASTQ     zmmreg|mask|z,mem64      AVX512 VPBROADCASTQ     xmmreg|mask|z,xmmreg     AVX512VL VPBROADCASTQ     ymmreg|mask|z,xmmreg     AVX512VL VPBROADCASTQ     zmmreg|mask|z,xmmreg     AVX512 VPBROADCASTQ     xmmreg|mask|z,reg64      AVX512VL VPBROADCASTQ     ymmreg|mask|z,reg64      AVX512VL VPBROADCASTQ     zmmreg|mask|z,reg64      AVX512 VPBROADCASTW     xmmreg|mask|z,xmmrm16    AVX512VL/BW VPBROADCASTW     ymmreg|mask|z,xmmrm16    AVX512VL/BW VPBROADCASTW     zmmreg|mask|z,xmmrm16    AVX512BW VPBROADCASTW     xmmreg|mask|z,reg16      AVX512VL/BW VPBROADCASTW     xmmreg|mask|z,reg32      AVX512VL/BW VPBROADCASTW     xmmreg|mask|z,reg64      AVX512VL/BW VPBROADCASTW     ymmreg|mask|z,reg16      AVX512VL/BW VPBROADCASTW     ymmreg|mask|z,reg32      AVX512VL/BW VPBROADCASTW     ymmreg|mask|z,reg64      AVX512VL/BW VPBROADCASTW     zmmreg|mask|z,reg16      AVX512BW VPBROADCASTW     zmmreg|mask|z,reg32      AVX512BW VPBROADCASTW     zmmreg|mask|z,reg64      AVX512BW VPCMPEQB         kreg|mask,xmmreg,xmmrm128 AVX512VL/BW VPCMPEQB         kreg|mask,ymmreg,ymmrm256 AVX512VL/BW VPCMPEQB         kreg|mask,zmmreg,zmmrm512 AVX512BW VPCMPEQD         kreg|mask,xmmreg,xmmrm128|b32 AVX512VL VPCMPEQD         kreg|mask,ymmreg,ymmrm256|b32 AVX512VL VPCMPEQD         kreg|mask,zmmreg,zmmrm512|b32 AVX512 VPCMPEQQ         kreg|mask,xmmreg,xmmrm128|b64 AVX512VL VPCMPEQQ         kreg|mask,ymmreg,ymmrm256|b64 AVX512VL VPCMPEQQ         kreg|mask,zmmreg,zmmrm512|b64 AVX512 VPCMPEQW         kreg|mask,xmmreg,xmmrm128 AVX512VL/BW VPCMPEQW         kreg|mask,ymmreg,ymmrm256 AVX512VL/BW VPCMPEQW         kreg|mask,zmmreg,zmmrm512 AVX512BW VPCMPGTB         kreg|mask,xmmreg,xmmrm128 AVX512VL/BW VPCMPGTB         kreg|mask,ymmreg,ymmrm256 AVX512VL/BW VPCMPGTB         kreg|mask,zmmreg,zmmrm512 AVX512BW VPCMPGTD         kreg|mask,xmmreg,xmmrm128|b32 AVX512VL VPCMPGTD         kreg|mask,ymmreg,ymmrm256|b32 AVX512VL VPCMPGTD         kreg|mask,zmmreg,zmmrm512|b32 AVX512 VPCMPGTQ         kreg|mask,xmmreg,xmmrm128|b64 AVX512VL VPCMPGTQ         kreg|mask,ymmreg,ymmrm256|b64 AVX512VL VPCMPGTQ         kreg|mask,zmmreg,zmmrm512|b64 AVX512 VPCMPGTW         kreg|mask,xmmreg,xmmrm128 AVX512VL/BW VPCMPGTW         kreg|mask,ymmreg,ymmrm256 AVX512VL/BW VPCMPGTW         kreg|mask,zmmreg,zmmrm512 AVX512BW VPCMPEQB         kreg|mask,xmmreg,xmmrm128 AVX512VL/BW VPCMPEQB         kreg|mask,ymmreg,ymmrm256 AVX512VL/BW VPCMPEQB         kreg|mask,zmmreg,zmmrm512 AVX512BW VPCMPEQD         kreg|mask,xmmreg,xmmrm128|b32 AVX512VL VPCMPEQD         kreg|mask,ymmreg,ymmrm256|b32 AVX512VL VPCMPEQD         kreg|mask,zmmreg,zmmrm512|b32 AVX512 VPCMPEQQ         kreg|mask,xmmreg,xmmrm128|b64 AVX512VL VPCMPEQQ         kreg|mask,ymmreg,ymmrm256|b64 AVX512VL VPCMPEQQ         kreg|mask,zmmreg,zmmrm512|b64 AVX512 VPCMPEQUB        kreg|mask,xmmreg,xmmrm128 AVX512VL/BW VPCMPEQUB        kreg|mask,ymmreg,ymmrm256 AVX512VL/BW VPCMPEQUB        kreg|mask,zmmreg,zmmrm512 AVX512BW VPCMPEQUD        kreg|mask,xmmreg,xmmrm128|b32 AVX512VL VPCMPEQUD        kreg|mask,ymmreg,ymmrm256|b32 AVX512VL VPCMPEQUD        kreg|mask,zmmreg,zmmrm512|b32 AVX512 VPCMPEQUQ        kreg|mask,xmmreg,xmmrm128|b64 AVX512VL VPCMPEQUQ        kreg|mask,ymmreg,ymmrm256|b64 AVX512VL VPCMPEQUQ        kreg|mask,zmmreg,zmmrm512|b64 AVX512 VPCMPEQUW        kreg|mask,xmmreg,xmmrm128 AVX512VL/BW VPCMPEQUW        kreg|mask,ymmreg,ymmrm256 AVX512VL/BW VPCMPEQUW        kreg|mask,zmmreg,zmmrm512 AVX512BW VPCMPEQW         kreg|mask,xmmreg,xmmrm128 AVX512VL/BW VPCMPEQW         kreg|mask,ymmreg,ymmrm256 AVX512VL/BW VPCMPEQW         kreg|mask,zmmreg,zmmrm512 AVX512BW VPCMPGEB         kreg|mask,xmmreg,xmmrm128 AVX512VL/BW VPCMPGEB         kreg|mask,ymmreg,ymmrm256 AVX512VL/BW VPCMPGEB         kreg|mask,zmmreg,zmmrm512 AVX512BW VPCMPGED         kreg|mask,xmmreg,xmmrm128|b32 AVX512VL VPCMPGED         kreg|mask,ymmreg,ymmrm256|b32 AVX512VL VPCMPGED         kreg|mask,zmmreg,zmmrm512|b32 AVX512 VPCMPGEQ         kreg|mask,xmmreg,xmmrm128|b64 AVX512VL VPCMPGEQ         kreg|mask,ymmreg,ymmrm256|b64 AVX512VL VPCMPGEQ         kreg|mask,zmmreg,zmmrm512|b64 AVX512 VPCMPGEUB        kreg|mask,xmmreg,xmmrm128 AVX512VL/BW VPCMPGEUB        kreg|mask,ymmreg,ymmrm256 AVX512VL/BW VPCMPGEUB        kreg|mask,zmmreg,zmmrm512 AVX512BW VPCMPGEUD        kreg|mask,xmmreg,xmmrm128|b32 AVX512VL VPCMPGEUD        kreg|mask,ymmreg,ymmrm256|b32 AVX512VL VPCMPGEUD        kreg|mask,zmmreg,zmmrm512|b32 AVX512 VPCMPGEUQ        kreg|mask,xmmreg,xmmrm128|b64 AVX512VL VPCMPGEUQ        kreg|mask,ymmreg,ymmrm256|b64 AVX512VL VPCMPGEUQ        kreg|mask,zmmreg,zmmrm512|b64 AVX512 VPCMPGEUW        kreg|mask,xmmreg,xmmrm128 AVX512VL/BW VPCMPGEUW        kreg|mask,ymmreg,ymmrm256 AVX512VL/BW VPCMPGEUW        kreg|mask,zmmreg,zmmrm512 AVX512BW VPCMPGEW         kreg|mask,xmmreg,xmmrm128 AVX512VL/BW VPCMPGEW         kreg|mask,ymmreg,ymmrm256 AVX512VL/BW VPCMPGEW         kreg|mask,zmmreg,zmmrm512 AVX512BW VPCMPGTB         kreg|mask,xmmreg,xmmrm128 AVX512VL/BW VPCMPGTB         kreg|mask,ymmreg,ymmrm256 AVX512VL/BW VPCMPGTB         kreg|mask,zmmreg,zmmrm512 AVX512BW VPCMPGTD         kreg|mask,xmmreg,xmmrm128|b32 AVX512VL VPCMPGTD         kreg|mask,ymmreg,ymmrm256|b32 AVX512VL VPCMPGTD         kreg|mask,zmmreg,zmmrm512|b32 AVX512 VPCMPGTQ         kreg|mask,xmmreg,xmmrm128|b64 AVX512VL VPCMPGTQ         kreg|mask,ymmreg,ymmrm256|b64 AVX512VL VPCMPGTQ         kreg|mask,zmmreg,zmmrm512|b64 AVX512 VPCMPGTUB        kreg|mask,xmmreg,xmmrm128 AVX512VL/BW VPCMPGTUB        kreg|mask,ymmreg,ymmrm256 AVX512VL/BW VPCMPGTUB        kreg|mask,zmmreg,zmmrm512 AVX512BW VPCMPGTUD        kreg|mask,xmmreg,xmmrm128|b32 AVX512VL VPCMPGTUD        kreg|mask,ymmreg,ymmrm256|b32 AVX512VL VPCMPGTUD        kreg|mask,zmmreg,zmmrm512|b32 AVX512 VPCMPGTUQ        kreg|mask,xmmreg,xmmrm128|b64 AVX512VL VPCMPGTUQ        kreg|mask,ymmreg,ymmrm256|b64 AVX512VL VPCMPGTUQ        kreg|mask,zmmreg,zmmrm512|b64 AVX512 VPCMPGTUW        kreg|mask,xmmreg,xmmrm128 AVX512VL/BW VPCMPGTUW        kreg|mask,ymmreg,ymmrm256 AVX512VL/BW VPCMPGTUW        kreg|mask,zmmreg,zmmrm512 AVX512BW VPCMPGTW         kreg|mask,xmmreg,xmmrm128 AVX512VL/BW VPCMPGTW         kreg|mask,ymmreg,ymmrm256 AVX512VL/BW VPCMPGTW         kreg|mask,zmmreg,zmmrm512 AVX512BW VPCMPLEB         kreg|mask,xmmreg,xmmrm128 AVX512VL/BW VPCMPLEB         kreg|mask,ymmreg,ymmrm256 AVX512VL/BW VPCMPLEB         kreg|mask,zmmreg,zmmrm512 AVX512BW VPCMPLED         kreg|mask,xmmreg,xmmrm128|b32 AVX512VL VPCMPLED         kreg|mask,ymmreg,ymmrm256|b32 AVX512VL VPCMPLED         kreg|mask,zmmreg,zmmrm512|b32 AVX512 VPCMPLEQ         kreg|mask,xmmreg,xmmrm128|b64 AVX512VL VPCMPLEQ         kreg|mask,ymmreg,ymmrm256|b64 AVX512VL VPCMPLEQ         kreg|mask,zmmreg,zmmrm512|b64 AVX512 VPCMPLEUB        kreg|mask,xmmreg,xmmrm128 AVX512VL/BW VPCMPLEUB        kreg|mask,ymmreg,ymmrm256 AVX512VL/BW VPCMPLEUB        kreg|mask,zmmreg,zmmrm512 AVX512BW VPCMPLEUD        kreg|mask,xmmreg,xmmrm128|b32 AVX512VL VPCMPLEUD        kreg|mask,ymmreg,ymmrm256|b32 AVX512VL VPCMPLEUD        kreg|mask,zmmreg,zmmrm512|b32 AVX512 VPCMPLEUQ        kreg|mask,xmmreg,xmmrm128|b64 AVX512VL VPCMPLEUQ        kreg|mask,ymmreg,ymmrm256|b64 AVX512VL VPCMPLEUQ        kreg|mask,zmmreg,zmmrm512|b64 AVX512 VPCMPLEUW        kreg|mask,xmmreg,xmmrm128 AVX512VL/BW VPCMPLEUW        kreg|mask,ymmreg,ymmrm256 AVX512VL/BW VPCMPLEUW        kreg|mask,zmmreg,zmmrm512 AVX512BW VPCMPLEW         kreg|mask,xmmreg,xmmrm128 AVX512VL/BW VPCMPLEW         kreg|mask,ymmreg,ymmrm256 AVX512VL/BW VPCMPLEW         kreg|mask,zmmreg,zmmrm512 AVX512BW VPCMPLTB         kreg|mask,xmmreg,xmmrm128 AVX512VL/BW VPCMPLTB         kreg|mask,ymmreg,ymmrm256 AVX512VL/BW VPCMPLTB         kreg|mask,zmmreg,zmmrm512 AVX512BW VPCMPLTD         kreg|mask,xmmreg,xmmrm128|b32 AVX512VL VPCMPLTD         kreg|mask,ymmreg,ymmrm256|b32 AVX512VL VPCMPLTD         kreg|mask,zmmreg,zmmrm512|b32 AVX512 VPCMPLTQ         kreg|mask,xmmreg,xmmrm128|b64 AVX512VL VPCMPLTQ         kreg|mask,ymmreg,ymmrm256|b64 AVX512VL VPCMPLTQ         kreg|mask,zmmreg,zmmrm512|b64 AVX512 VPCMPLTUB        kreg|mask,xmmreg,xmmrm128 AVX512VL/BW VPCMPLTUB        kreg|mask,ymmreg,ymmrm256 AVX512VL/BW VPCMPLTUB        kreg|mask,zmmreg,zmmrm512 AVX512BW VPCMPLTUD        kreg|mask,xmmreg,xmmrm128|b32 AVX512VL VPCMPLTUD        kreg|mask,ymmreg,ymmrm256|b32 AVX512VL VPCMPLTUD        kreg|mask,zmmreg,zmmrm512|b32 AVX512 VPCMPLTUQ        kreg|mask,xmmreg,xmmrm128|b64 AVX512VL VPCMPLTUQ        kreg|mask,ymmreg,ymmrm256|b64 AVX512VL VPCMPLTUQ        kreg|mask,zmmreg,zmmrm512|b64 AVX512 VPCMPLTUW        kreg|mask,xmmreg,xmmrm128 AVX512VL/BW VPCMPLTUW        kreg|mask,ymmreg,ymmrm256 AVX512VL/BW VPCMPLTUW        kreg|mask,zmmreg,zmmrm512 AVX512BW VPCMPLTW         kreg|mask,xmmreg,xmmrm128 AVX512VL/BW VPCMPLTW         kreg|mask,ymmreg,ymmrm256 AVX512VL/BW VPCMPLTW         kreg|mask,zmmreg,zmmrm512 AVX512BW VPCMPNEQB        kreg|mask,xmmreg,xmmrm128 AVX512VL/BW VPCMPNEQB        kreg|mask,ymmreg,ymmrm256 AVX512VL/BW VPCMPNEQB        kreg|mask,zmmreg,zmmrm512 AVX512BW VPCMPNEQD        kreg|mask,xmmreg,xmmrm128|b32 AVX512VL VPCMPNEQD        kreg|mask,ymmreg,ymmrm256|b32 AVX512VL VPCMPNEQD        kreg|mask,zmmreg,zmmrm512|b32 AVX512 VPCMPNEQQ        kreg|mask,xmmreg,xmmrm128|b64 AVX512VL VPCMPNEQQ        kreg|mask,ymmreg,ymmrm256|b64 AVX512VL VPCMPNEQQ        kreg|mask,zmmreg,zmmrm512|b64 AVX512 VPCMPNEQUB       kreg|mask,xmmreg,xmmrm128 AVX512VL/BW VPCMPNEQUB       kreg|mask,ymmreg,ymmrm256 AVX512VL/BW VPCMPNEQUB       kreg|mask,zmmreg,zmmrm512 AVX512BW VPCMPNEQUD       kreg|mask,xmmreg,xmmrm128|b32 AVX512VL VPCMPNEQUD       kreg|mask,ymmreg,ymmrm256|b32 AVX512VL VPCMPNEQUD       kreg|mask,zmmreg,zmmrm512|b32 AVX512 VPCMPNEQUQ       kreg|mask,xmmreg,xmmrm128|b64 AVX512VL VPCMPNEQUQ       kreg|mask,ymmreg,ymmrm256|b64 AVX512VL VPCMPNEQUQ       kreg|mask,zmmreg,zmmrm512|b64 AVX512 VPCMPNEQUW       kreg|mask,xmmreg,xmmrm128 AVX512VL/BW VPCMPNEQUW       kreg|mask,ymmreg,ymmrm256 AVX512VL/BW VPCMPNEQUW       kreg|mask,zmmreg,zmmrm512 AVX512BW VPCMPNEQW        kreg|mask,xmmreg,xmmrm128 AVX512VL/BW VPCMPNEQW        kreg|mask,ymmreg,ymmrm256 AVX512VL/BW VPCMPNEQW        kreg|mask,zmmreg,zmmrm512 AVX512BW VPCMPNGTB        kreg|mask,xmmreg,xmmrm128 AVX512VL/BW VPCMPNGTB        kreg|mask,ymmreg,ymmrm256 AVX512VL/BW VPCMPNGTB        kreg|mask,zmmreg,zmmrm512 AVX512BW VPCMPNGTD        kreg|mask,xmmreg,xmmrm128|b32 AVX512VL VPCMPNGTD        kreg|mask,ymmreg,ymmrm256|b32 AVX512VL VPCMPNGTD        kreg|mask,zmmreg,zmmrm512|b32 AVX512 VPCMPNGTQ        kreg|mask,xmmreg,xmmrm128|b64 AVX512VL VPCMPNGTQ        kreg|mask,ymmreg,ymmrm256|b64 AVX512VL VPCMPNGTQ        kreg|mask,zmmreg,zmmrm512|b64 AVX512 VPCMPNGTUB       kreg|mask,xmmreg,xmmrm128 AVX512VL/BW VPCMPNGTUB       kreg|mask,ymmreg,ymmrm256 AVX512VL/BW VPCMPNGTUB       kreg|mask,zmmreg,zmmrm512 AVX512BW VPCMPNGTUD       kreg|mask,xmmreg,xmmrm128|b32 AVX512VL VPCMPNGTUD       kreg|mask,ymmreg,ymmrm256|b32 AVX512VL VPCMPNGTUD       kreg|mask,zmmreg,zmmrm512|b32 AVX512 VPCMPNGTUQ       kreg|mask,xmmreg,xmmrm128|b64 AVX512VL VPCMPNGTUQ       kreg|mask,ymmreg,ymmrm256|b64 AVX512VL VPCMPNGTUQ       kreg|mask,zmmreg,zmmrm512|b64 AVX512 VPCMPNGTUW       kreg|mask,xmmreg,xmmrm128 AVX512VL/BW VPCMPNGTUW       kreg|mask,ymmreg,ymmrm256 AVX512VL/BW VPCMPNGTUW       kreg|mask,zmmreg,zmmrm512 AVX512BW VPCMPNGTW        kreg|mask,xmmreg,xmmrm128 AVX512VL/BW VPCMPNGTW        kreg|mask,ymmreg,ymmrm256 AVX512VL/BW VPCMPNGTW        kreg|mask,zmmreg,zmmrm512 AVX512BW VPCMPNLEB        kreg|mask,xmmreg,xmmrm128 AVX512VL/BW VPCMPNLEB        kreg|mask,ymmreg,ymmrm256 AVX512VL/BW VPCMPNLEB        kreg|mask,zmmreg,zmmrm512 AVX512BW VPCMPNLED        kreg|mask,xmmreg,xmmrm128|b32 AVX512VL VPCMPNLED        kreg|mask,ymmreg,ymmrm256|b32 AVX512VL VPCMPNLED        kreg|mask,zmmreg,zmmrm512|b32 AVX512 VPCMPNLEQ        kreg|mask,xmmreg,xmmrm128|b64 AVX512VL VPCMPNLEQ        kreg|mask,ymmreg,ymmrm256|b64 AVX512VL VPCMPNLEQ        kreg|mask,zmmreg,zmmrm512|b64 AVX512 VPCMPNLEUB       kreg|mask,xmmreg,xmmrm128 AVX512VL/BW VPCMPNLEUB       kreg|mask,ymmreg,ymmrm256 AVX512VL/BW VPCMPNLEUB       kreg|mask,zmmreg,zmmrm512 AVX512BW VPCMPNLEUD       kreg|mask,xmmreg,xmmrm128|b32 AVX512VL VPCMPNLEUD       kreg|mask,ymmreg,ymmrm256|b32 AVX512VL VPCMPNLEUD       kreg|mask,zmmreg,zmmrm512|b32 AVX512 VPCMPNLEUQ       kreg|mask,xmmreg,xmmrm128|b64 AVX512VL VPCMPNLEUQ       kreg|mask,ymmreg,ymmrm256|b64 AVX512VL VPCMPNLEUQ       kreg|mask,zmmreg,zmmrm512|b64 AVX512 VPCMPNLEUW       kreg|mask,xmmreg,xmmrm128 AVX512VL/BW VPCMPNLEUW       kreg|mask,ymmreg,ymmrm256 AVX512VL/BW VPCMPNLEUW       kreg|mask,zmmreg,zmmrm512 AVX512BW VPCMPNLEW        kreg|mask,xmmreg,xmmrm128 AVX512VL/BW VPCMPNLEW        kreg|mask,ymmreg,ymmrm256 AVX512VL/BW VPCMPNLEW        kreg|mask,zmmreg,zmmrm512 AVX512BW VPCMPNLTB        kreg|mask,xmmreg,xmmrm128 AVX512VL/BW VPCMPNLTB        kreg|mask,ymmreg,ymmrm256 AVX512VL/BW VPCMPNLTB        kreg|mask,zmmreg,zmmrm512 AVX512BW VPCMPNLTD        kreg|mask,xmmreg,xmmrm128|b32 AVX512VL VPCMPNLTD        kreg|mask,ymmreg,ymmrm256|b32 AVX512VL VPCMPNLTD        kreg|mask,zmmreg,zmmrm512|b32 AVX512 VPCMPNLTQ        kreg|mask,xmmreg,xmmrm128|b64 AVX512VL VPCMPNLTQ        kreg|mask,ymmreg,ymmrm256|b64 AVX512VL VPCMPNLTQ        kreg|mask,zmmreg,zmmrm512|b64 AVX512 VPCMPNLTUB       kreg|mask,xmmreg,xmmrm128 AVX512VL/BW VPCMPNLTUB       kreg|mask,ymmreg,ymmrm256 AVX512VL/BW VPCMPNLTUB       kreg|mask,zmmreg,zmmrm512 AVX512BW VPCMPNLTUD       kreg|mask,xmmreg,xmmrm128|b32 AVX512VL VPCMPNLTUD       kreg|mask,ymmreg,ymmrm256|b32 AVX512VL VPCMPNLTUD       kreg|mask,zmmreg,zmmrm512|b32 AVX512 VPCMPNLTUQ       kreg|mask,xmmreg,xmmrm128|b64 AVX512VL VPCMPNLTUQ       kreg|mask,ymmreg,ymmrm256|b64 AVX512VL VPCMPNLTUQ       kreg|mask,zmmreg,zmmrm512|b64 AVX512 VPCMPNLTUW       kreg|mask,xmmreg,xmmrm128 AVX512VL/BW VPCMPNLTUW       kreg|mask,ymmreg,ymmrm256 AVX512VL/BW VPCMPNLTUW       kreg|mask,zmmreg,zmmrm512 AVX512BW VPCMPNLTW        kreg|mask,xmmreg,xmmrm128 AVX512VL/BW VPCMPNLTW        kreg|mask,ymmreg,ymmrm256 AVX512VL/BW VPCMPNLTW        kreg|mask,zmmreg,zmmrm512 AVX512BW VPCMPB           kreg|mask,xmmreg,xmmrm128,imm8 AVX512VL/BW VPCMPB           kreg|mask,ymmreg,ymmrm256,imm8 AVX512VL/BW VPCMPB           kreg|mask,zmmreg,zmmrm512,imm8 AVX512BW VPCMPD           kreg|mask,xmmreg,xmmrm128|b32,imm8 AVX512VL VPCMPD           kreg|mask,ymmreg,ymmrm256|b32,imm8 AVX512VL VPCMPD           kreg|mask,zmmreg,zmmrm512|b32,imm8 AVX512 VPCMPQ           kreg|mask,xmmreg,xmmrm128|b64,imm8 AVX512VL VPCMPQ           kreg|mask,ymmreg,ymmrm256|b64,imm8 AVX512VL VPCMPQ           kreg|mask,zmmreg,zmmrm512|b64,imm8 AVX512 VPCMPUB          kreg|mask,xmmreg,xmmrm128,imm8 AVX512VL/BW VPCMPUB          kreg|mask,ymmreg,ymmrm256,imm8 AVX512VL/BW VPCMPUB          kreg|mask,zmmreg,zmmrm512,imm8 AVX512BW VPCMPUD          kreg|mask,xmmreg,xmmrm128|b32,imm8 AVX512VL VPCMPUD          kreg|mask,ymmreg,ymmrm256|b32,imm8 AVX512VL VPCMPUD          kreg|mask,zmmreg,zmmrm512|b32,imm8 AVX512 VPCMPUQ          kreg|mask,xmmreg,xmmrm128|b64,imm8 AVX512VL VPCMPUQ          kreg|mask,ymmreg,ymmrm256|b64,imm8 AVX512VL VPCMPUQ          kreg|mask,zmmreg,zmmrm512|b64,imm8 AVX512 VPCMPUW          kreg|mask,xmmreg,xmmrm128,imm8 AVX512VL/BW VPCMPUW          kreg|mask,ymmreg,ymmrm256,imm8 AVX512VL/BW VPCMPUW          kreg|mask,zmmreg,zmmrm512,imm8 AVX512BW VPCMPW           kreg|mask,xmmreg,xmmrm128,imm8 AVX512VL/BW VPCMPW           kreg|mask,ymmreg,ymmrm256,imm8 AVX512VL/BW VPCMPW           kreg|mask,zmmreg,zmmrm512,imm8 AVX512BW VPCOMPRESSD      mem128|mask,xmmreg       AVX512VL VPCOMPRESSD      mem256|mask,ymmreg       AVX512VL VPCOMPRESSD      mem512|mask,zmmreg       AVX512 VPCOMPRESSD      xmmreg|mask|z,xmmreg     AVX512VL VPCOMPRESSD      ymmreg|mask|z,ymmreg     AVX512VL VPCOMPRESSD      zmmreg|mask|z,zmmreg     AVX512 VPCOMPRESSQ      mem128|mask,xmmreg       AVX512VL VPCOMPRESSQ      mem256|mask,ymmreg       AVX512VL VPCOMPRESSQ      mem512|mask,zmmreg       AVX512 VPCOMPRESSQ      xmmreg|mask|z,xmmreg     AVX512VL VPCOMPRESSQ      ymmreg|mask|z,ymmreg     AVX512VL VPCOMPRESSQ      zmmreg|mask|z,zmmreg     AVX512 VPCONFLICTD      xmmreg|mask|z,xmmrm128|b32 AVX512VL/CD VPCONFLICTD      ymmreg|mask|z,ymmrm256|b32 AVX512VL/CD VPCONFLICTD      zmmreg|mask|z,zmmrm512|b32 AVX512CD VPCONFLICTQ      xmmreg|mask|z,xmmrm128|b64 AVX512VL/CD VPCONFLICTQ      ymmreg|mask|z,ymmrm256|b64 AVX512VL/CD VPCONFLICTQ      zmmreg|mask|z,zmmrm512|b64 AVX512CD VPERMB           xmmreg|mask|z,xmmreg*,xmmrm128 AVX512VL/VBMI VPERMB           ymmreg|mask|z,ymmreg*,ymmrm256 AVX512VL/VBMI VPERMB           zmmreg|mask|z,zmmreg*,zmmrm512 AVX512VBMI VPERMD           ymmreg|mask|z,ymmreg*,ymmrm256|b32 AVX512VL VPERMD           zmmreg|mask|z,zmmreg*,zmmrm512|b32 AVX512 VPERMI2B         xmmreg|mask|z,xmmreg,xmmrm128 AVX512VL/VBMI VPERMI2B         ymmreg|mask|z,ymmreg,ymmrm256 AVX512VL/VBMI VPERMI2B         zmmreg|mask|z,zmmreg,zmmrm512 AVX512VBMI VPERMI2D         xmmreg|mask|z,xmmreg,xmmrm128|b32 AVX512VL VPERMI2D         ymmreg|mask|z,ymmreg,ymmrm256|b32 AVX512VL VPERMI2D         zmmreg|mask|z,zmmreg,zmmrm512|b32 AVX512 VPERMI2PD        xmmreg|mask|z,xmmreg,xmmrm128|b64 AVX512VL VPERMI2PD        ymmreg|mask|z,ymmreg,ymmrm256|b64 AVX512VL VPERMI2PD        zmmreg|mask|z,zmmreg,zmmrm512|b64 AVX512 VPERMI2PS        xmmreg|mask|z,xmmreg,xmmrm128|b32 AVX512VL VPERMI2PS        ymmreg|mask|z,ymmreg,ymmrm256|b32 AVX512VL VPERMI2PS        zmmreg|mask|z,zmmreg,zmmrm512|b32 AVX512 VPERMI2Q         xmmreg|mask|z,xmmreg,xmmrm128|b64 AVX512VL VPERMI2Q         ymmreg|mask|z,ymmreg,ymmrm256|b64 AVX512VL VPERMI2Q         zmmreg|mask|z,zmmreg,zmmrm512|b64 AVX512 VPERMI2W         xmmreg|mask|z,xmmreg,xmmrm128 AVX512VL/BW VPERMI2W         ymmreg|mask|z,ymmreg,ymmrm256 AVX512VL/BW VPERMI2W         zmmreg|mask|z,zmmreg,zmmrm512 AVX512BW VPERMILPD        xmmreg|mask|z,xmmrm128|b64,imm8 AVX512VL VPERMILPD        ymmreg|mask|z,ymmrm256|b64,imm8 AVX512VL VPERMILPD        zmmreg|mask|z,zmmrm512|b64,imm8 AVX512 VPERMILPD        xmmreg|mask|z,xmmreg*,xmmrm128|b64 AVX512VL VPERMILPD        ymmreg|mask|z,ymmreg*,ymmrm256|b64 AVX512VL VPERMILPD        zmmreg|mask|z,zmmreg*,zmmrm512|b64 AVX512 VPERMILPS        xmmreg|mask|z,xmmrm128|b32,imm8 AVX512VL VPERMILPS        ymmreg|mask|z,ymmrm256|b32,imm8 AVX512VL VPERMILPS        zmmreg|mask|z,zmmrm512|b32,imm8 AVX512 VPERMILPS        xmmreg|mask|z,xmmreg*,xmmrm128|b32 AVX512VL VPERMILPS        ymmreg|mask|z,ymmreg*,ymmrm256|b32 AVX512VL VPERMILPS        zmmreg|mask|z,zmmreg*,zmmrm512|b32 AVX512 VPERMPD          ymmreg|mask|z,ymmrm256|b64,imm8 AVX512VL VPERMPD          zmmreg|mask|z,zmmrm512|b64,imm8 AVX512 VPERMPD          ymmreg|mask|z,ymmreg*,ymmrm256|b64 AVX512VL VPERMPD          zmmreg|mask|z,zmmreg*,zmmrm512|b64 AVX512 VPERMPS          ymmreg|mask|z,ymmreg*,ymmrm256|b32 AVX512VL VPERMPS          zmmreg|mask|z,zmmreg*,zmmrm512|b32 AVX512 VPERMQ           ymmreg|mask|z,ymmrm256|b64,imm8 AVX512VL VPERMQ           zmmreg|mask|z,zmmrm512|b64,imm8 AVX512 VPERMQ           ymmreg|mask|z,ymmreg*,ymmrm256|b64 AVX512VL VPERMQ           zmmreg|mask|z,zmmreg*,zmmrm512|b64 AVX512 VPERMT2B         xmmreg|mask|z,xmmreg,xmmrm128 AVX512VL/VBMI VPERMT2B         ymmreg|mask|z,ymmreg,ymmrm256 AVX512VL/VBMI VPERMT2B         zmmreg|mask|z,zmmreg,zmmrm512 AVX512VBMI VPERMT2D         xmmreg|mask|z,xmmreg,xmmrm128|b32 AVX512VL VPERMT2D         ymmreg|mask|z,ymmreg,ymmrm256|b32 AVX512VL VPERMT2D         zmmreg|mask|z,zmmreg,zmmrm512|b32 AVX512 VPERMT2PD        xmmreg|mask|z,xmmreg,xmmrm128|b64 AVX512VL VPERMT2PD        ymmreg|mask|z,ymmreg,ymmrm256|b64 AVX512VL VPERMT2PD        zmmreg|mask|z,zmmreg,zmmrm512|b64 AVX512 VPERMT2PS        xmmreg|mask|z,xmmreg,xmmrm128|b32 AVX512VL VPERMT2PS        ymmreg|mask|z,ymmreg,ymmrm256|b32 AVX512VL VPERMT2PS        zmmreg|mask|z,zmmreg,zmmrm512|b32 AVX512 VPERMT2Q         xmmreg|mask|z,xmmreg,xmmrm128|b64 AVX512VL VPERMT2Q         ymmreg|mask|z,ymmreg,ymmrm256|b64 AVX512VL VPERMT2Q         zmmreg|mask|z,zmmreg,zmmrm512|b64 AVX512 VPERMT2W         xmmreg|mask|z,xmmreg,xmmrm128 AVX512VL/BW VPERMT2W         ymmreg|mask|z,ymmreg,ymmrm256 AVX512VL/BW VPERMT2W         zmmreg|mask|z,zmmreg,zmmrm512 AVX512BW VPERMW           xmmreg|mask|z,xmmreg*,xmmrm128 AVX512VL/BW VPERMW           ymmreg|mask|z,ymmreg*,ymmrm256 AVX512VL/BW VPERMW           zmmreg|mask|z,zmmreg*,zmmrm512 AVX512BW VPEXPANDD        xmmreg|mask|z,mem128     AVX512VL VPEXPANDD        ymmreg|mask|z,mem256     AVX512VL VPEXPANDD        zmmreg|mask|z,mem512     AVX512 VPEXPANDD        xmmreg|mask|z,xmmreg     AVX512VL VPEXPANDD        ymmreg|mask|z,ymmreg     AVX512VL VPEXPANDD        zmmreg|mask|z,zmmreg     AVX512 VPEXPANDQ        xmmreg|mask|z,mem128     AVX512VL VPEXPANDQ        ymmreg|mask|z,mem256     AVX512VL VPEXPANDQ        zmmreg|mask|z,mem512     AVX512 VPEXPANDQ        xmmreg|mask|z,xmmreg     AVX512VL VPEXPANDQ        ymmreg|mask|z,ymmreg     AVX512VL VPEXPANDQ        zmmreg|mask|z,zmmreg     AVX512 VPEXTRB          reg8,xmmreg,imm8         AVX512BW VPEXTRB          reg16,xmmreg,imm8        AVX512BW VPEXTRB          reg32,xmmreg,imm8        AVX512BW VPEXTRB          reg64,xmmreg,imm8        AVX512BW VPEXTRB          mem8,xmmreg,imm8         AVX512BW VPEXTRD          rm32,xmmreg,imm8         AVX512DQ VPEXTRQ          rm64,xmmreg,imm8         AVX512DQ VPEXTRW          reg16,xmmreg,imm8        AVX512BW VPEXTRW          reg32,xmmreg,imm8        AVX512BW VPEXTRW          reg64,xmmreg,imm8        AVX512BW VPEXTRW          mem16,xmmreg,imm8        AVX512BW VPEXTRW          reg16,xmmreg,imm8        AVX512BW VPEXTRW          reg32,xmmreg,imm8        AVX512BW VPEXTRW          reg64,xmmreg,imm8        AVX512BW VPGATHERDD       xmmreg|mask,xmem32       AVX512VL VPGATHERDD       ymmreg|mask,ymem32       AVX512VL VPGATHERDD       zmmreg|mask,zmem32       AVX512 VPGATHERDQ       xmmreg|mask,xmem64       AVX512VL VPGATHERDQ       ymmreg|mask,xmem64       AVX512VL VPGATHERDQ       zmmreg|mask,ymem64       AVX512 VPGATHERQD       xmmreg|mask,xmem32       AVX512VL VPGATHERQD       xmmreg|mask,ymem32       AVX512VL VPGATHERQD       ymmreg|mask,zmem32       AVX512 VPGATHERQQ       xmmreg|mask,xmem64       AVX512VL VPGATHERQQ       ymmreg|mask,ymem64       AVX512VL VPGATHERQQ       zmmreg|mask,zmem64       AVX512 VPINSRB          xmmreg,xmmreg*,reg32,imm8 AVX512BW VPINSRB          xmmreg,xmmreg*,mem8,imm8 AVX512BW VPINSRD          xmmreg,xmmreg*,rm32,imm8 AVX512DQ VPINSRQ          xmmreg,xmmreg*,rm64,imm8 AVX512DQ VPINSRW          xmmreg,xmmreg*,reg32,imm8 AVX512BW VPINSRW          xmmreg,xmmreg*,mem16,imm8 AVX512BW VPLZCNTD         xmmreg|mask|z,xmmrm128|b32 AVX512VL/CD VPLZCNTD         ymmreg|mask|z,ymmrm256|b32 AVX512VL/CD VPLZCNTD         zmmreg|mask|z,zmmrm512|b32 AVX512CD VPLZCNTQ         xmmreg|mask|z,xmmrm128|b64 AVX512VL/CD VPLZCNTQ         ymmreg|mask|z,ymmrm256|b64 AVX512VL/CD VPLZCNTQ         zmmreg|mask|z,zmmrm512|b64 AVX512CD VPMADD52HUQ      xmmreg|mask|z,xmmreg,xmmrm128|b64 AVX512VL/IFMA VPMADD52HUQ      ymmreg|mask|z,ymmreg,ymmrm256|b64 AVX512VL/IFMA VPMADD52HUQ      zmmreg|mask|z,zmmreg,zmmrm512|b64 AVX512IFMA VPMADD52LUQ      xmmreg|mask|z,xmmreg,xmmrm128|b64 AVX512VL/IFMA VPMADD52LUQ      ymmreg|mask|z,ymmreg,ymmrm256|b64 AVX512VL/IFMA VPMADD52LUQ      zmmreg|mask|z,zmmreg,zmmrm512|b64 AVX512IFMA VPMADDUBSW       xmmreg|mask|z,xmmreg*,xmmrm128 AVX512VL/BW VPMADDUBSW       ymmreg|mask|z,ymmreg*,ymmrm256 AVX512VL/BW VPMADDUBSW       zmmreg|mask|z,zmmreg*,zmmrm512 AVX512BW VPMADDWD         xmmreg|mask|z,xmmreg*,xmmrm128 AVX512VL/BW VPMADDWD         ymmreg|mask|z,ymmreg*,ymmrm256 AVX512VL/BW VPMADDWD         zmmreg|mask|z,zmmreg*,zmmrm512 AVX512BW VPMAXSB          xmmreg|mask|z,xmmreg*,xmmrm128 AVX512VL/BW VPMAXSB          ymmreg|mask|z,ymmreg*,ymmrm256 AVX512VL/BW VPMAXSB          zmmreg|mask|z,zmmreg*,zmmrm512 AVX512BW VPMAXSD          xmmreg|mask|z,xmmreg*,xmmrm128|b32 AVX512VL VPMAXSD          ymmreg|mask|z,ymmreg*,ymmrm256|b32 AVX512VL VPMAXSD          zmmreg|mask|z,zmmreg*,zmmrm512|b32 AVX512 VPMAXSQ          xmmreg|mask|z,xmmreg*,xmmrm128|b64 AVX512VL VPMAXSQ          ymmreg|mask|z,ymmreg*,ymmrm256|b64 AVX512VL VPMAXSQ          zmmreg|mask|z,zmmreg*,zmmrm512|b64 AVX512 VPMAXSW          xmmreg|mask|z,xmmreg*,xmmrm128 AVX512VL/BW VPMAXSW          ymmreg|mask|z,ymmreg*,ymmrm256 AVX512VL/BW VPMAXSW          zmmreg|mask|z,zmmreg*,zmmrm512 AVX512BW VPMAXUB          xmmreg|mask|z,xmmreg*,xmmrm128 AVX512VL/BW VPMAXUB          ymmreg|mask|z,ymmreg*,ymmrm256 AVX512VL/BW VPMAXUB          zmmreg|mask|z,zmmreg*,zmmrm512 AVX512BW VPMAXUD          xmmreg|mask|z,xmmreg*,xmmrm128|b32 AVX512VL VPMAXUD          ymmreg|mask|z,ymmreg*,ymmrm256|b32 AVX512VL VPMAXUD          zmmreg|mask|z,zmmreg*,zmmrm512|b32 AVX512 VPMAXUQ          xmmreg|mask|z,xmmreg*,xmmrm128|b64 AVX512VL VPMAXUQ          ymmreg|mask|z,ymmreg*,ymmrm256|b64 AVX512VL VPMAXUQ          zmmreg|mask|z,zmmreg*,zmmrm512|b64 AVX512 VPMAXUW          xmmreg|mask|z,xmmreg*,xmmrm128 AVX512VL/BW VPMAXUW          ymmreg|mask|z,ymmreg*,ymmrm256 AVX512VL/BW VPMAXUW          zmmreg|mask|z,zmmreg*,zmmrm512 AVX512BW VPMINSB          xmmreg|mask|z,xmmreg*,xmmrm128 AVX512VL/BW VPMINSB          ymmreg|mask|z,ymmreg*,ymmrm256 AVX512VL/BW VPMINSB          zmmreg|mask|z,zmmreg*,zmmrm512 AVX512BW VPMINSD          xmmreg|mask|z,xmmreg*,xmmrm128|b32 AVX512VL VPMINSD          ymmreg|mask|z,ymmreg*,ymmrm256|b32 AVX512VL VPMINSD          zmmreg|mask|z,zmmreg*,zmmrm512|b32 AVX512 VPMINSQ          xmmreg|mask|z,xmmreg*,xmmrm128|b64 AVX512VL VPMINSQ          ymmreg|mask|z,ymmreg*,ymmrm256|b64 AVX512VL VPMINSQ          zmmreg|mask|z,zmmreg*,zmmrm512|b64 AVX512 VPMINSW          xmmreg|mask|z,xmmreg*,xmmrm128 AVX512VL/BW VPMINSW          ymmreg|mask|z,ymmreg*,ymmrm256 AVX512VL/BW VPMINSW          zmmreg|mask|z,zmmreg*,zmmrm512 AVX512BW VPMINUB          xmmreg|mask|z,xmmreg*,xmmrm128 AVX512VL/BW VPMINUB          ymmreg|mask|z,ymmreg*,ymmrm256 AVX512VL/BW VPMINUB          zmmreg|mask|z,zmmreg*,zmmrm512 AVX512BW VPMINUD          xmmreg|mask|z,xmmreg*,xmmrm128|b32 AVX512VL VPMINUD          ymmreg|mask|z,ymmreg*,ymmrm256|b32 AVX512VL VPMINUD          zmmreg|mask|z,zmmreg*,zmmrm512|b32 AVX512 VPMINUQ          xmmreg|mask|z,xmmreg*,xmmrm128|b64 AVX512VL VPMINUQ          ymmreg|mask|z,ymmreg*,ymmrm256|b64 AVX512VL VPMINUQ          zmmreg|mask|z,zmmreg*,zmmrm512|b64 AVX512 VPMINUW          xmmreg|mask|z,xmmreg*,xmmrm128 AVX512VL/BW VPMINUW          ymmreg|mask|z,ymmreg*,ymmrm256 AVX512VL/BW VPMINUW          zmmreg|mask|z,zmmreg*,zmmrm512 AVX512BW VPMOVB2M         kreg,xmmreg              AVX512VL/BW VPMOVB2M         kreg,ymmreg              AVX512VL/BW VPMOVB2M         kreg,zmmreg              AVX512BW VPMOVD2M         kreg,xmmreg              AVX512VL/DQ VPMOVD2M         kreg,ymmreg              AVX512VL/DQ VPMOVD2M         kreg,zmmreg              AVX512DQ VPMOVDB          xmmreg|mask|z,xmmreg     AVX512VL VPMOVDB          xmmreg|mask|z,ymmreg     AVX512VL VPMOVDB          xmmreg|mask|z,zmmreg     AVX512 VPMOVDB          mem32|mask,xmmreg        AVX512VL VPMOVDB          mem64|mask,ymmreg        AVX512VL VPMOVDB          mem128|mask,zmmreg       AVX512 VPMOVDW          xmmreg|mask|z,xmmreg     AVX512VL VPMOVDW          xmmreg|mask|z,ymmreg     AVX512VL VPMOVDW          ymmreg|mask|z,zmmreg     AVX512 VPMOVDW          mem64|mask,xmmreg        AVX512VL VPMOVDW          mem128|mask,ymmreg       AVX512VL VPMOVDW          mem256|mask,zmmreg       AVX512 VPMOVM2B         xmmreg,kreg              AVX512VL/BW VPMOVM2B         ymmreg,kreg              AVX512VL/BW VPMOVM2B         zmmreg,kreg              AVX512BW VPMOVM2D         xmmreg,kreg              AVX512VL/DQ VPMOVM2D         ymmreg,kreg              AVX512VL/DQ VPMOVM2D         zmmreg,kreg              AVX512DQ VPMOVM2Q         xmmreg,kreg              AVX512VL/DQ VPMOVM2Q         ymmreg,kreg              AVX512VL/DQ VPMOVM2Q         zmmreg,kreg              AVX512DQ VPMOVM2W         xmmreg,kreg              AVX512VL/BW VPMOVM2W         ymmreg,kreg              AVX512VL/BW VPMOVM2W         zmmreg,kreg              AVX512BW VPMOVQ2M         kreg,xmmreg              AVX512VL/DQ VPMOVQ2M         kreg,ymmreg              AVX512VL/DQ VPMOVQ2M         kreg,zmmreg              AVX512DQ VPMOVQB          xmmreg|mask|z,xmmreg     AVX512VL VPMOVQB          xmmreg|mask|z,ymmreg     AVX512VL VPMOVQB          xmmreg|mask|z,zmmreg     AVX512 VPMOVQB          mem16|mask,xmmreg        AVX512VL VPMOVQB          mem32|mask,ymmreg        AVX512VL VPMOVQB          mem64|mask,zmmreg        AVX512 VPMOVQD          xmmreg|mask|z,xmmreg     AVX512VL VPMOVQD          xmmreg|mask|z,ymmreg     AVX512VL VPMOVQD          ymmreg|mask|z,zmmreg     AVX512 VPMOVQD          mem64|mask,xmmreg        AVX512VL VPMOVQD          mem128|mask,ymmreg       AVX512VL VPMOVQD          mem256|mask,zmmreg       AVX512 VPMOVQW          xmmreg|mask|z,xmmreg     AVX512VL VPMOVQW          xmmreg|mask|z,ymmreg     AVX512VL VPMOVQW          xmmreg|mask|z,zmmreg     AVX512 VPMOVQW          mem32|mask,xmmreg        AVX512VL VPMOVQW          mem64|mask,ymmreg        AVX512VL VPMOVQW          mem128|mask,zmmreg       AVX512 VPMOVSDB         xmmreg|mask|z,xmmreg     AVX512VL VPMOVSDB         xmmreg|mask|z,ymmreg     AVX512VL VPMOVSDB         xmmreg|mask|z,zmmreg     AVX512 VPMOVSDB         mem32|mask,xmmreg        AVX512VL VPMOVSDB         mem64|mask,ymmreg        AVX512VL VPMOVSDB         mem128|mask,zmmreg       AVX512 VPMOVSDW         xmmreg|mask|z,xmmreg     AVX512VL VPMOVSDW         xmmreg|mask|z,ymmreg     AVX512VL VPMOVSDW         ymmreg|mask|z,zmmreg     AVX512 VPMOVSDW         mem64|mask,xmmreg        AVX512VL VPMOVSDW         mem128|mask,ymmreg       AVX512VL VPMOVSDW         mem256|mask,zmmreg       AVX512 VPMOVSQB         xmmreg|mask|z,xmmreg     AVX512VL VPMOVSQB         xmmreg|mask|z,ymmreg     AVX512VL VPMOVSQB         xmmreg|mask|z,zmmreg     AVX512 VPMOVSQB         mem16|mask,xmmreg        AVX512VL VPMOVSQB         mem32|mask,ymmreg        AVX512VL VPMOVSQB         mem64|mask,zmmreg        AVX512 VPMOVSQD         xmmreg|mask|z,xmmreg     AVX512VL VPMOVSQD         xmmreg|mask|z,ymmreg     AVX512VL VPMOVSQD         ymmreg|mask|z,zmmreg     AVX512 VPMOVSQD         mem64|mask,xmmreg        AVX512VL VPMOVSQD         mem128|mask,ymmreg       AVX512VL VPMOVSQD         mem256|mask,zmmreg       AVX512 VPMOVSQW         xmmreg|mask|z,xmmreg     AVX512VL VPMOVSQW         xmmreg|mask|z,ymmreg     AVX512VL VPMOVSQW         xmmreg|mask|z,zmmreg     AVX512 VPMOVSQW         mem32|mask,xmmreg        AVX512VL VPMOVSQW         mem64|mask,ymmreg        AVX512VL VPMOVSQW         mem128|mask,zmmreg       AVX512 VPMOVSWB         xmmreg|mask|z,xmmreg     AVX512VL/BW VPMOVSWB         xmmreg|mask|z,ymmreg     AVX512VL/BW VPMOVSWB         ymmreg|mask|z,zmmreg     AVX512BW VPMOVSWB         mem64|mask,xmmreg        AVX512VL/BW VPMOVSWB         mem128|mask,ymmreg       AVX512VL/BW VPMOVSWB         mem256|mask,zmmreg       AVX512BW VPMOVSXBD        xmmreg|mask|z,xmmrm32    AVX512VL VPMOVSXBD        ymmreg|mask|z,xmmrm64    AVX512VL VPMOVSXBD        zmmreg|mask|z,xmmrm128   AVX512 VPMOVSXBQ        xmmreg|mask|z,xmmrm16    AVX512VL VPMOVSXBQ        ymmreg|mask|z,xmmrm32    AVX512VL VPMOVSXBQ        zmmreg|mask|z,xmmrm64    AVX512 VPMOVSXBW        xmmreg|mask|z,xmmrm64    AVX512VL/BW VPMOVSXBW        ymmreg|mask|z,xmmrm128   AVX512VL/BW VPMOVSXBW        zmmreg|mask|z,ymmrm256   AVX512BW VPMOVSXDQ        xmmreg|mask|z,xmmrm64    AVX512VL VPMOVSXDQ        ymmreg|mask|z,xmmrm128   AVX512VL VPMOVSXDQ        zmmreg|mask|z,ymmrm256   AVX512 VPMOVSXWD        xmmreg|mask|z,xmmrm64    AVX512VL VPMOVSXWD        ymmreg|mask|z,xmmrm128   AVX512VL VPMOVSXWD        zmmreg|mask|z,ymmrm256   AVX512 VPMOVSXWQ        xmmreg|mask|z,xmmrm32    AVX512VL VPMOVSXWQ        ymmreg|mask|z,xmmrm64    AVX512VL VPMOVSXWQ        zmmreg|mask|z,xmmrm128   AVX512 VPMOVUSDB        xmmreg|mask|z,xmmreg     AVX512VL VPMOVUSDB        xmmreg|mask|z,ymmreg     AVX512VL VPMOVUSDB        xmmreg|mask|z,zmmreg     AVX512 VPMOVUSDB        mem32|mask,xmmreg        AVX512VL VPMOVUSDB        mem64|mask,ymmreg        AVX512VL VPMOVUSDB        mem128|mask,zmmreg       AVX512 VPMOVUSDW        xmmreg|mask|z,xmmreg     AVX512VL VPMOVUSDW        xmmreg|mask|z,ymmreg     AVX512VL VPMOVUSDW        ymmreg|mask|z,zmmreg     AVX512 VPMOVUSDW        mem64|mask,xmmreg        AVX512VL VPMOVUSDW        mem128|mask,ymmreg       AVX512VL VPMOVUSDW        mem256|mask,zmmreg       AVX512 VPMOVUSQB        xmmreg|mask|z,xmmreg     AVX512VL VPMOVUSQB        xmmreg|mask|z,ymmreg     AVX512VL VPMOVUSQB        xmmreg|mask|z,zmmreg     AVX512 VPMOVUSQB        mem16|mask,xmmreg        AVX512VL VPMOVUSQB        mem32|mask,ymmreg        AVX512VL VPMOVUSQB        mem64|mask,zmmreg        AVX512 VPMOVUSQD        xmmreg|mask|z,xmmreg     AVX512VL VPMOVUSQD        xmmreg|mask|z,ymmreg     AVX512VL VPMOVUSQD        ymmreg|mask|z,zmmreg     AVX512 VPMOVUSQD        mem64|mask,xmmreg        AVX512VL VPMOVUSQD        mem128|mask,ymmreg       AVX512VL VPMOVUSQD        mem256|mask,zmmreg       AVX512 VPMOVUSQW        xmmreg|mask|z,xmmreg     AVX512VL VPMOVUSQW        xmmreg|mask|z,ymmreg     AVX512VL VPMOVUSQW        xmmreg|mask|z,zmmreg     AVX512 VPMOVUSQW        mem32|mask,xmmreg        AVX512VL VPMOVUSQW        mem64|mask,ymmreg        AVX512VL VPMOVUSQW        mem128|mask,zmmreg       AVX512 VPMOVUSWB        xmmreg|mask|z,xmmreg     AVX512VL/BW VPMOVUSWB        xmmreg|mask|z,ymmreg     AVX512VL/BW VPMOVUSWB        ymmreg|mask|z,zmmreg     AVX512BW VPMOVUSWB        mem64|mask,xmmreg        AVX512VL/BW VPMOVUSWB        mem128|mask,ymmreg       AVX512VL/BW VPMOVUSWB        mem256|mask,zmmreg       AVX512BW VPMOVW2M         kreg,xmmreg              AVX512VL/BW VPMOVW2M         kreg,ymmreg              AVX512VL/BW VPMOVW2M         kreg,zmmreg              AVX512BW VPMOVWB          xmmreg|mask|z,xmmreg     AVX512VL/BW VPMOVWB          xmmreg|mask|z,ymmreg     AVX512VL/BW VPMOVWB          ymmreg|mask|z,zmmreg     AVX512BW VPMOVWB          mem64|mask,xmmreg        AVX512VL/BW VPMOVWB          mem128|mask,ymmreg       AVX512VL/BW VPMOVWB          mem256|mask,zmmreg       AVX512BW VPMOVZXBD        xmmreg|mask|z,xmmrm32    AVX512VL VPMOVZXBD        ymmreg|mask|z,xmmrm64    AVX512VL VPMOVZXBD        zmmreg|mask|z,xmmrm128   AVX512 VPMOVZXBQ        xmmreg|mask|z,xmmrm16    AVX512VL VPMOVZXBQ        ymmreg|mask|z,xmmrm32    AVX512VL VPMOVZXBQ        zmmreg|mask|z,xmmrm64    AVX512 VPMOVZXBW        xmmreg|mask|z,xmmrm64    AVX512VL/BW VPMOVZXBW        ymmreg|mask|z,xmmrm128   AVX512VL/BW VPMOVZXBW        zmmreg|mask|z,ymmrm256   AVX512BW VPMOVZXDQ        xmmreg|mask|z,xmmrm64    AVX512VL VPMOVZXDQ        ymmreg|mask|z,xmmrm128   AVX512VL VPMOVZXDQ        zmmreg|mask|z,ymmrm256   AVX512 VPMOVZXWD        xmmreg|mask|z,xmmrm64    AVX512VL VPMOVZXWD        ymmreg|mask|z,xmmrm128   AVX512VL VPMOVZXWD        zmmreg|mask|z,ymmrm256   AVX512 VPMOVZXWQ        xmmreg|mask|z,xmmrm32    AVX512VL VPMOVZXWQ        ymmreg|mask|z,xmmrm64    AVX512VL VPMOVZXWQ        zmmreg|mask|z,xmmrm128   AVX512 VPMULDQ          xmmreg|mask|z,xmmreg*,xmmrm128|b64 AVX512VL VPMULDQ          ymmreg|mask|z,ymmreg*,ymmrm256|b64 AVX512VL VPMULDQ          zmmreg|mask|z,zmmreg*,zmmrm512|b64 AVX512 VPMULHRSW        xmmreg|mask|z,xmmreg*,xmmrm128 AVX512VL/BW VPMULHRSW        ymmreg|mask|z,ymmreg*,ymmrm256 AVX512VL/BW VPMULHRSW        zmmreg|mask|z,zmmreg*,zmmrm512 AVX512BW VPMULHUW         xmmreg|mask|z,xmmreg*,xmmrm128 AVX512VL/BW VPMULHUW         ymmreg|mask|z,ymmreg*,ymmrm256 AVX512VL/BW VPMULHUW         zmmreg|mask|z,zmmreg*,zmmrm512 AVX512BW VPMULHW          xmmreg|mask|z,xmmreg*,xmmrm128 AVX512VL/BW VPMULHW          ymmreg|mask|z,ymmreg*,ymmrm256 AVX512VL/BW VPMULHW          zmmreg|mask|z,zmmreg*,zmmrm512 AVX512BW VPMULLD          xmmreg|mask|z,xmmreg*,xmmrm128|b32 AVX512VL VPMULLD          ymmreg|mask|z,ymmreg*,ymmrm256|b32 AVX512VL VPMULLD          zmmreg|mask|z,zmmreg*,zmmrm512|b32 AVX512 VPMULLQ          xmmreg|mask|z,xmmreg*,xmmrm128|b64 AVX512VL/DQ VPMULLQ          ymmreg|mask|z,ymmreg*,ymmrm256|b64 AVX512VL/DQ VPMULLQ          zmmreg|mask|z,zmmreg*,zmmrm512|b64 AVX512DQ VPMULLW          xmmreg|mask|z,xmmreg*,xmmrm128 AVX512VL/BW VPMULLW          ymmreg|mask|z,ymmreg*,ymmrm256 AVX512VL/BW VPMULLW          zmmreg|mask|z,zmmreg*,zmmrm512 AVX512BW VPMULTISHIFTQB   xmmreg|mask|z,xmmreg*,xmmrm128|b64 AVX512VL/VBMI VPMULTISHIFTQB   ymmreg|mask|z,ymmreg*,ymmrm256|b64 AVX512VL/VBMI VPMULTISHIFTQB   zmmreg|mask|z,zmmreg*,zmmrm512|b64 AVX512VBMI VPMULUDQ         xmmreg|mask|z,xmmreg*,xmmrm128|b64 AVX512VL VPMULUDQ         ymmreg|mask|z,ymmreg*,ymmrm256|b64 AVX512VL VPMULUDQ         zmmreg|mask|z,zmmreg*,zmmrm512|b64 AVX512 VPORD            xmmreg|mask|z,xmmreg*,xmmrm128|b32 AVX512VL VPORD            ymmreg|mask|z,ymmreg*,ymmrm256|b32 AVX512VL VPORD            zmmreg|mask|z,zmmreg*,zmmrm512|b32 AVX512 VPORQ            xmmreg|mask|z,xmmreg*,xmmrm128|b64 AVX512VL VPORQ            ymmreg|mask|z,ymmreg*,ymmrm256|b64 AVX512VL VPORQ            zmmreg|mask|z,zmmreg*,zmmrm512|b64 AVX512 VPROLD           xmmreg|mask|z,xmmrm128|b32*,imm8 AVX512VL VPROLD           ymmreg|mask|z,ymmrm256|b32*,imm8 AVX512VL VPROLD           zmmreg|mask|z,zmmrm512|b32*,imm8 AVX512 VPROLQ           xmmreg|mask|z,xmmrm128|b64*,imm8 AVX512VL VPROLQ           ymmreg|mask|z,ymmrm256|b64*,imm8 AVX512VL VPROLQ           zmmreg|mask|z,zmmrm512|b64*,imm8 AVX512 VPROLVD          xmmreg|mask|z,xmmreg*,xmmrm128|b32 AVX512VL VPROLVD          ymmreg|mask|z,ymmreg*,ymmrm256|b32 AVX512VL VPROLVD          zmmreg|mask|z,zmmreg*,zmmrm512|b32 AVX512 VPROLVQ          xmmreg|mask|z,xmmreg*,xmmrm128|b64 AVX512VL VPROLVQ          ymmreg|mask|z,ymmreg*,ymmrm256|b64 AVX512VL VPROLVQ          zmmreg|mask|z,zmmreg*,zmmrm512|b64 AVX512 VPRORD           xmmreg|mask|z,xmmrm128|b32*,imm8 AVX512VL VPRORD           ymmreg|mask|z,ymmrm256|b32*,imm8 AVX512VL VPRORD           zmmreg|mask|z,zmmrm512|b32*,imm8 AVX512 VPRORQ           xmmreg|mask|z,xmmrm128|b64*,imm8 AVX512VL VPRORQ           ymmreg|mask|z,ymmrm256|b64*,imm8 AVX512VL VPRORQ           zmmreg|mask|z,zmmrm512|b64*,imm8 AVX512 VPRORVD          xmmreg|mask|z,xmmreg*,xmmrm128|b32 AVX512VL VPRORVD          ymmreg|mask|z,ymmreg*,ymmrm256|b32 AVX512VL VPRORVD          zmmreg|mask|z,zmmreg*,zmmrm512|b32 AVX512 VPRORVQ          xmmreg|mask|z,xmmreg*,xmmrm128|b64 AVX512VL VPRORVQ          ymmreg|mask|z,ymmreg*,ymmrm256|b64 AVX512VL VPRORVQ          zmmreg|mask|z,zmmreg*,zmmrm512|b64 AVX512 VPSADBW          xmmreg,xmmreg*,xmmrm128  AVX512VL/BW VPSADBW          ymmreg,ymmreg*,ymmrm256  AVX512VL/BW VPSADBW          zmmreg,zmmreg*,zmmrm512  AVX512BW VPSCATTERDD      xmem32|mask,xmmreg       AVX512VL VPSCATTERDD      ymem32|mask,ymmreg       AVX512VL VPSCATTERDD      zmem32|mask,zmmreg       AVX512 VPSCATTERDQ      xmem64|mask,xmmreg       AVX512VL VPSCATTERDQ      xmem64|mask,ymmreg       AVX512VL VPSCATTERDQ      ymem64|mask,zmmreg       AVX512 VPSCATTERQD      xmem32|mask,xmmreg       AVX512VL VPSCATTERQD      ymem32|mask,xmmreg       AVX512VL VPSCATTERQD      zmem32|mask,ymmreg       AVX512 VPSCATTERQQ      xmem64|mask,xmmreg       AVX512VL VPSCATTERQQ      ymem64|mask,ymmreg       AVX512VL VPSCATTERQQ      zmem64|mask,zmmreg       AVX512 VPSHUFB          xmmreg|mask|z,xmmreg*,xmmrm128 AVX512VL/BW VPSHUFB          ymmreg|mask|z,ymmreg*,ymmrm256 AVX512VL/BW VPSHUFB          zmmreg|mask|z,zmmreg*,zmmrm512 AVX512BW VPSHUFD          xmmreg|mask|z,xmmrm128|b32,imm8 AVX512VL VPSHUFD          ymmreg|mask|z,ymmrm256|b32,imm8 AVX512VL VPSHUFD          zmmreg|mask|z,zmmrm512|b32,imm8 AVX512 VPSHUFHW         xmmreg|mask|z,xmmrm128,imm8 AVX512VL/BW VPSHUFHW         ymmreg|mask|z,ymmrm256,imm8 AVX512VL/BW VPSHUFHW         zmmreg|mask|z,zmmrm512,imm8 AVX512BW VPSHUFLW         xmmreg|mask|z,xmmrm128,imm8 AVX512VL/BW VPSHUFLW         ymmreg|mask|z,ymmrm256,imm8 AVX512VL/BW VPSHUFLW         zmmreg|mask|z,zmmrm512,imm8 AVX512BW VPSLLD           xmmreg|mask|z,xmmreg*,xmmrm128 AVX512VL VPSLLD           ymmreg|mask|z,ymmreg*,xmmrm128 AVX512VL VPSLLD           zmmreg|mask|z,zmmreg*,xmmrm128 AVX512 VPSLLD           xmmreg|mask|z,xmmrm128|b32*,imm8 AVX512VL VPSLLD           ymmreg|mask|z,ymmrm256|b32*,imm8 AVX512VL VPSLLD           zmmreg|mask|z,zmmrm512|b32*,imm8 AVX512 VPSLLDQ          xmmreg,xmmrm128*,imm8    AVX512VL/BW VPSLLDQ          ymmreg,ymmrm256*,imm8    AVX512VL/BW VPSLLDQ          zmmreg,zmmrm512*,imm8    AVX512BW VPSLLQ           xmmreg|mask|z,xmmreg*,xmmrm128 AVX512VL VPSLLQ           ymmreg|mask|z,ymmreg*,xmmrm128 AVX512VL VPSLLQ           zmmreg|mask|z,zmmreg*,xmmrm128 AVX512 VPSLLQ           xmmreg|mask|z,xmmrm128|b64*,imm8 AVX512VL VPSLLQ           ymmreg|mask|z,ymmrm256|b64*,imm8 AVX512VL VPSLLQ           zmmreg|mask|z,zmmrm512|b64*,imm8 AVX512 VPSLLVD          xmmreg|mask|z,xmmreg*,xmmrm128|b32 AVX512VL VPSLLVD          ymmreg|mask|z,ymmreg*,ymmrm256|b32 AVX512VL VPSLLVD          zmmreg|mask|z,zmmreg*,zmmrm512|b32 AVX512 VPSLLVQ          xmmreg|mask|z,xmmreg*,xmmrm128|b64 AVX512VL VPSLLVQ          ymmreg|mask|z,ymmreg*,ymmrm256|b64 AVX512VL VPSLLVQ          zmmreg|mask|z,zmmreg*,zmmrm512|b64 AVX512 VPSLLVW          xmmreg|mask|z,xmmreg*,xmmrm128 AVX512VL/BW VPSLLVW          ymmreg|mask|z,ymmreg*,ymmrm256 AVX512VL/BW VPSLLVW          zmmreg|mask|z,zmmreg*,zmmrm512 AVX512BW VPSLLW           xmmreg|mask|z,xmmreg*,xmmrm128 AVX512VL/BW VPSLLW           ymmreg|mask|z,ymmreg*,xmmrm128 AVX512VL/BW VPSLLW           zmmreg|mask|z,zmmreg*,xmmrm128 AVX512BW VPSLLW           xmmreg|mask|z,xmmrm128*,imm8 AVX512VL/BW VPSLLW           ymmreg|mask|z,ymmrm256*,imm8 AVX512VL/BW VPSLLW           zmmreg|mask|z,zmmrm512*,imm8 AVX512BW VPSRAD           xmmreg|mask|z,xmmreg*,xmmrm128 AVX512VL VPSRAD           ymmreg|mask|z,ymmreg*,xmmrm128 AVX512VL VPSRAD           zmmreg|mask|z,zmmreg*,xmmrm128 AVX512 VPSRAD           xmmreg|mask|z,xmmrm128|b32*,imm8 AVX512VL VPSRAD           ymmreg|mask|z,ymmrm256|b32*,imm8 AVX512VL VPSRAD           zmmreg|mask|z,zmmrm512|b32*,imm8 AVX512 VPSRAQ           xmmreg|mask|z,xmmreg*,xmmrm128 AVX512VL VPSRAQ           ymmreg|mask|z,ymmreg*,xmmrm128 AVX512VL VPSRAQ           zmmreg|mask|z,zmmreg*,xmmrm128 AVX512 VPSRAQ           xmmreg|mask|z,xmmrm128|b64*,imm8 AVX512VL VPSRAQ           ymmreg|mask|z,ymmrm256|b64*,imm8 AVX512VL VPSRAQ           zmmreg|mask|z,zmmrm512|b64*,imm8 AVX512 VPSRAVD          xmmreg|mask|z,xmmreg*,xmmrm128|b32 AVX512VL VPSRAVD          ymmreg|mask|z,ymmreg*,ymmrm256|b32 AVX512VL VPSRAVD          zmmreg|mask|z,zmmreg*,zmmrm512|b32 AVX512 VPSRAVQ          xmmreg|mask|z,xmmreg*,xmmrm128|b64 AVX512VL VPSRAVQ          ymmreg|mask|z,ymmreg*,ymmrm256|b64 AVX512VL VPSRAVQ          zmmreg|mask|z,zmmreg*,zmmrm512|b64 AVX512 VPSRAVW          xmmreg|mask|z,xmmreg*,xmmrm128 AVX512VL/BW VPSRAVW          ymmreg|mask|z,ymmreg*,ymmrm256 AVX512VL/BW VPSRAVW          zmmreg|mask|z,zmmreg*,zmmrm512 AVX512BW VPSRAW           xmmreg|mask|z,xmmreg*,xmmrm128 AVX512VL/BW VPSRAW           ymmreg|mask|z,ymmreg*,xmmrm128 AVX512VL/BW VPSRAW           zmmreg|mask|z,zmmreg*,xmmrm128 AVX512BW VPSRAW           xmmreg|mask|z,xmmrm128*,imm8 AVX512VL/BW VPSRAW           ymmreg|mask|z,ymmrm256*,imm8 AVX512VL/BW VPSRAW           zmmreg|mask|z,zmmrm512*,imm8 AVX512BW VPSRLD           xmmreg|mask|z,xmmreg*,xmmrm128 AVX512VL VPSRLD           ymmreg|mask|z,ymmreg*,xmmrm128 AVX512VL VPSRLD           zmmreg|mask|z,zmmreg*,xmmrm128 AVX512 VPSRLD           xmmreg|mask|z,xmmrm128|b32*,imm8 AVX512VL VPSRLD           ymmreg|mask|z,ymmrm256|b32*,imm8 AVX512VL VPSRLD           zmmreg|mask|z,zmmrm512|b32*,imm8 AVX512 VPSRLDQ          xmmreg,xmmrm128*,imm8    AVX512VL/BW VPSRLDQ          ymmreg,ymmrm256*,imm8    AVX512VL/BW VPSRLDQ          zmmreg,zmmrm512*,imm8    AVX512BW VPSRLQ           xmmreg|mask|z,xmmreg*,xmmrm128 AVX512VL VPSRLQ           ymmreg|mask|z,ymmreg*,xmmrm128 AVX512VL VPSRLQ           zmmreg|mask|z,zmmreg*,xmmrm128 AVX512 VPSRLQ           xmmreg|mask|z,xmmrm128|b64*,imm8 AVX512VL VPSRLQ           ymmreg|mask|z,ymmrm256|b64*,imm8 AVX512VL VPSRLQ           zmmreg|mask|z,zmmrm512|b64*,imm8 AVX512 VPSRLVD          xmmreg|mask|z,xmmreg*,xmmrm128|b32 AVX512VL VPSRLVD          ymmreg|mask|z,ymmreg*,ymmrm256|b32 AVX512VL VPSRLVD          zmmreg|mask|z,zmmreg*,zmmrm512|b32 AVX512 VPSRLVQ          xmmreg|mask|z,xmmreg*,xmmrm128|b64 AVX512VL VPSRLVQ          ymmreg|mask|z,ymmreg*,ymmrm256|b64 AVX512VL VPSRLVQ          zmmreg|mask|z,zmmreg*,zmmrm512|b64 AVX512 VPSRLVW          xmmreg|mask|z,xmmreg*,xmmrm128 AVX512VL/BW VPSRLVW          ymmreg|mask|z,ymmreg*,ymmrm256 AVX512VL/BW VPSRLVW          zmmreg|mask|z,zmmreg*,zmmrm512 AVX512BW VPSRLW           xmmreg|mask|z,xmmreg*,xmmrm128 AVX512VL/BW VPSRLW           ymmreg|mask|z,ymmreg*,xmmrm128 AVX512VL/BW VPSRLW           zmmreg|mask|z,zmmreg*,xmmrm128 AVX512BW VPSRLW           xmmreg|mask|z,xmmrm128*,imm8 AVX512VL/BW VPSRLW           ymmreg|mask|z,ymmrm256*,imm8 AVX512VL/BW VPSRLW           zmmreg|mask|z,zmmrm512*,imm8 AVX512BW VPSUBB           xmmreg|mask|z,xmmreg*,xmmrm128 AVX512VL/BW VPSUBB           ymmreg|mask|z,ymmreg*,ymmrm256 AVX512VL/BW VPSUBB           zmmreg|mask|z,zmmreg*,zmmrm512 AVX512BW VPSUBD           xmmreg|mask|z,xmmreg*,xmmrm128|b32 AVX512VL VPSUBD           ymmreg|mask|z,ymmreg*,ymmrm256|b32 AVX512VL VPSUBD           zmmreg|mask|z,zmmreg*,zmmrm512|b32 AVX512 VPSUBQ           xmmreg|mask|z,xmmreg*,xmmrm128|b64 AVX512VL VPSUBQ           ymmreg|mask|z,ymmreg*,ymmrm256|b64 AVX512VL VPSUBQ           zmmreg|mask|z,zmmreg*,zmmrm512|b64 AVX512 VPSUBSB          xmmreg|mask|z,xmmreg*,xmmrm128 AVX512VL/BW VPSUBSB          ymmreg|mask|z,ymmreg*,ymmrm256 AVX512VL/BW VPSUBSB          zmmreg|mask|z,zmmreg*,zmmrm512 AVX512BW VPSUBSW          xmmreg|mask|z,xmmreg*,xmmrm128 AVX512VL/BW VPSUBSW          ymmreg|mask|z,ymmreg*,ymmrm256 AVX512VL/BW VPSUBSW          zmmreg|mask|z,zmmreg*,zmmrm512 AVX512BW VPSUBUSB         xmmreg|mask|z,xmmreg*,xmmrm128 AVX512VL/BW VPSUBUSB         ymmreg|mask|z,ymmreg*,ymmrm256 AVX512VL/BW VPSUBUSB         zmmreg|mask|z,zmmreg*,zmmrm512 AVX512BW VPSUBUSW         xmmreg|mask|z,xmmreg*,xmmrm128 AVX512VL/BW VPSUBUSW         ymmreg|mask|z,ymmreg*,ymmrm256 AVX512VL/BW VPSUBUSW         zmmreg|mask|z,zmmreg*,zmmrm512 AVX512BW VPSUBW           xmmreg|mask|z,xmmreg*,xmmrm128 AVX512VL/BW VPSUBW           ymmreg|mask|z,ymmreg*,ymmrm256 AVX512VL/BW VPSUBW           zmmreg|mask|z,zmmreg*,zmmrm512 AVX512BW VPTERNLOGD       xmmreg|mask|z,xmmreg,xmmrm128|b32,imm8 AVX512VL VPTERNLOGD       ymmreg|mask|z,ymmreg,ymmrm256|b32,imm8 AVX512VL VPTERNLOGD       zmmreg|mask|z,zmmreg,zmmrm512|b32,imm8 AVX512 VPTERNLOGQ       xmmreg|mask|z,xmmreg,xmmrm128|b64,imm8 AVX512VL VPTERNLOGQ       ymmreg|mask|z,ymmreg,ymmrm256|b64,imm8 AVX512VL VPTERNLOGQ       zmmreg|mask|z,zmmreg,zmmrm512|b64,imm8 AVX512 VPTESTMB         kreg|mask,xmmreg,xmmrm128 AVX512VL/BW VPTESTMB         kreg|mask,ymmreg,ymmrm256 AVX512VL/BW VPTESTMB         kreg|mask,zmmreg,zmmrm512 AVX512BW VPTESTMD         kreg|mask,xmmreg,xmmrm128|b32 AVX512VL VPTESTMD         kreg|mask,ymmreg,ymmrm256|b32 AVX512VL VPTESTMD         kreg|mask,zmmreg,zmmrm512|b32 AVX512 VPTESTMQ         kreg|mask,xmmreg,xmmrm128|b64 AVX512VL VPTESTMQ         kreg|mask,ymmreg,ymmrm256|b64 AVX512VL VPTESTMQ         kreg|mask,zmmreg,zmmrm512|b64 AVX512 VPTESTMW         kreg|mask,xmmreg,xmmrm128 AVX512VL/BW VPTESTMW         kreg|mask,ymmreg,ymmrm256 AVX512VL/BW VPTESTMW         kreg|mask,zmmreg,zmmrm512 AVX512BW VPTESTNMB        kreg|mask,xmmreg,xmmrm128 AVX512VL/BW VPTESTNMB        kreg|mask,ymmreg,ymmrm256 AVX512VL/BW VPTESTNMB        kreg|mask,zmmreg,zmmrm512 AVX512BW VPTESTNMD        kreg|mask,xmmreg,xmmrm128|b32 AVX512VL VPTESTNMD        kreg|mask,ymmreg,ymmrm256|b32 AVX512VL VPTESTNMD        kreg|mask,zmmreg,zmmrm512|b32 AVX512 VPTESTNMQ        kreg|mask,xmmreg,xmmrm128|b64 AVX512VL VPTESTNMQ        kreg|mask,ymmreg,ymmrm256|b64 AVX512VL VPTESTNMQ        kreg|mask,zmmreg,zmmrm512|b64 AVX512 VPTESTNMW        kreg|mask,xmmreg,xmmrm128 AVX512VL/BW VPTESTNMW        kreg|mask,ymmreg,ymmrm256 AVX512VL/BW VPTESTNMW        kreg|mask,zmmreg,zmmrm512 AVX512BW VPUNPCKHBW       xmmreg|mask|z,xmmreg*,xmmrm128 AVX512VL/BW VPUNPCKHBW       ymmreg|mask|z,ymmreg*,ymmrm256 AVX512VL/BW VPUNPCKHBW       zmmreg|mask|z,zmmreg*,zmmrm512 AVX512BW VPUNPCKHDQ       xmmreg|mask|z,xmmreg*,xmmrm128|b32 AVX512VL VPUNPCKHDQ       ymmreg|mask|z,ymmreg*,ymmrm256|b32 AVX512VL VPUNPCKHDQ       zmmreg|mask|z,zmmreg*,zmmrm512|b32 AVX512 VPUNPCKHQDQ      xmmreg|mask|z,xmmreg*,xmmrm128|b64 AVX512VL VPUNPCKHQDQ      ymmreg|mask|z,ymmreg*,ymmrm256|b64 AVX512VL VPUNPCKHQDQ      zmmreg|mask|z,zmmreg*,zmmrm512|b64 AVX512 VPUNPCKHWD       xmmreg|mask|z,xmmreg*,xmmrm128 AVX512VL/BW VPUNPCKHWD       ymmreg|mask|z,ymmreg*,ymmrm256 AVX512VL/BW VPUNPCKHWD       zmmreg|mask|z,zmmreg*,zmmrm512 AVX512BW VPUNPCKLBW       xmmreg|mask|z,xmmreg*,xmmrm128 AVX512VL/BW VPUNPCKLBW       ymmreg|mask|z,ymmreg*,ymmrm256 AVX512VL/BW VPUNPCKLBW       zmmreg|mask|z,zmmreg*,zmmrm512 AVX512BW VPUNPCKLDQ       xmmreg|mask|z,xmmreg*,xmmrm128|b32 AVX512VL VPUNPCKLDQ       ymmreg|mask|z,ymmreg*,ymmrm256|b32 AVX512VL VPUNPCKLDQ       zmmreg|mask|z,zmmreg*,zmmrm512|b32 AVX512 VPUNPCKLQDQ      xmmreg|mask|z,xmmreg*,xmmrm128|b64 AVX512VL VPUNPCKLQDQ      ymmreg|mask|z,ymmreg*,ymmrm256|b64 AVX512VL VPUNPCKLQDQ      zmmreg|mask|z,zmmreg*,zmmrm512|b64 AVX512 VPUNPCKLWD       xmmreg|mask|z,xmmreg*,xmmrm128 AVX512VL/BW VPUNPCKLWD       ymmreg|mask|z,ymmreg*,ymmrm256 AVX512VL/BW VPUNPCKLWD       zmmreg|mask|z,zmmreg*,zmmrm512 AVX512BW VPXORD           xmmreg|mask|z,xmmreg*,xmmrm128|b32 AVX512VL VPXORD           ymmreg|mask|z,ymmreg*,ymmrm256|b32 AVX512VL VPXORD           zmmreg|mask|z,zmmreg*,zmmrm512|b32 AVX512 VPXORQ           xmmreg|mask|z,xmmreg*,xmmrm128|b64 AVX512VL VPXORQ           ymmreg|mask|z,ymmreg*,ymmrm256|b64 AVX512VL VPXORQ           zmmreg|mask|z,zmmreg*,zmmrm512|b64 AVX512 VRANGEPD         xmmreg|mask|z,xmmreg*,xmmrm128|b64,imm8 AVX512VL/DQ VRANGEPD         ymmreg|mask|z,ymmreg*,ymmrm256|b64,imm8 AVX512VL/DQ VRANGEPD         zmmreg|mask|z,zmmreg*,zmmrm512|b64|sae,imm8 AVX512DQ VRANGEPS         xmmreg|mask|z,xmmreg*,xmmrm128|b32,imm8 AVX512VL/DQ VRANGEPS         ymmreg|mask|z,ymmreg*,ymmrm256|b32,imm8 AVX512VL/DQ VRANGEPS         zmmreg|mask|z,zmmreg*,zmmrm512|b32|sae,imm8 AVX512DQ VRANGESD         xmmreg|mask|z,xmmreg*,xmmrm64|sae,imm8 AVX512DQ VRANGESS         xmmreg|mask|z,xmmreg*,xmmrm32|sae,imm8 AVX512DQ VRCP14PD         xmmreg|mask|z,xmmrm128|b64 AVX512VL VRCP14PD         ymmreg|mask|z,ymmrm256|b64 AVX512VL VRCP14PD         zmmreg|mask|z,zmmrm512|b64 AVX512 VRCP14PS         xmmreg|mask|z,xmmrm128|b32 AVX512VL VRCP14PS         ymmreg|mask|z,ymmrm256|b32 AVX512VL VRCP14PS         zmmreg|mask|z,zmmrm512|b32 AVX512 VRCP14SD         xmmreg|mask|z,xmmreg*,xmmrm64 AVX512 VRCP14SS         xmmreg|mask|z,xmmreg*,xmmrm32 AVX512 VRCP28PD         zmmreg|mask|z,zmmrm512|b64|sae AVX512ER VRCP28PS         zmmreg|mask|z,zmmrm512|b32|sae AVX512ER VRCP28SD         xmmreg|mask|z,xmmreg*,xmmrm64|sae AVX512ER VRCP28SS         xmmreg|mask|z,xmmreg*,xmmrm32|sae AVX512ER VREDUCEPD        xmmreg|mask|z,xmmrm128|b64,imm8 AVX512VL/DQ VREDUCEPD        ymmreg|mask|z,ymmrm256|b64,imm8 AVX512VL/DQ VREDUCEPD        zmmreg|mask|z,zmmrm512|b64|sae,imm8 AVX512DQ VREDUCEPS        xmmreg|mask|z,xmmrm128|b32,imm8 AVX512VL/DQ VREDUCEPS        ymmreg|mask|z,ymmrm256|b32,imm8 AVX512VL/DQ VREDUCEPS        zmmreg|mask|z,zmmrm512|b32|sae,imm8 AVX512DQ VREDUCESD        xmmreg|mask|z,xmmreg*,xmmrm64|sae,imm8 AVX512DQ VREDUCESS        xmmreg|mask|z,xmmreg*,xmmrm32|sae,imm8 AVX512DQ VRNDSCALEPD      xmmreg|mask|z,xmmrm128|b64,imm8 AVX512VL VRNDSCALEPD      ymmreg|mask|z,ymmrm256|b64,imm8 AVX512VL VRNDSCALEPD      zmmreg|mask|z,zmmrm512|b64|sae,imm8 AVX512 VRNDSCALEPS      xmmreg|mask|z,xmmrm128|b32,imm8 AVX512VL VRNDSCALEPS      ymmreg|mask|z,ymmrm256|b32,imm8 AVX512VL VRNDSCALEPS      zmmreg|mask|z,zmmrm512|b32|sae,imm8 AVX512 VRNDSCALESD      xmmreg|mask|z,xmmreg*,xmmrm64|sae,imm8 AVX512 VRNDSCALESS      xmmreg|mask|z,xmmreg*,xmmrm32|sae,imm8 AVX512 VRSQRT14PD       xmmreg|mask|z,xmmrm128|b64 AVX512VL VRSQRT14PD       ymmreg|mask|z,ymmrm256|b64 AVX512VL VRSQRT14PD       zmmreg|mask|z,zmmrm512|b64 AVX512 VRSQRT14PS       xmmreg|mask|z,xmmrm128|b32 AVX512VL VRSQRT14PS       ymmreg|mask|z,ymmrm256|b32 AVX512VL VRSQRT14PS       zmmreg|mask|z,zmmrm512|b32 AVX512 VRSQRT14SD       xmmreg|mask|z,xmmreg*,xmmrm64 AVX512 VRSQRT14SS       xmmreg|mask|z,xmmreg*,xmmrm32 AVX512 VRSQRT28PD       zmmreg|mask|z,zmmrm512|b64|sae AVX512ER VRSQRT28PS       zmmreg|mask|z,zmmrm512|b32|sae AVX512ER VRSQRT28SD       xmmreg|mask|z,xmmreg*,xmmrm64|sae AVX512ER VRSQRT28SS       xmmreg|mask|z,xmmreg*,xmmrm32|sae AVX512ER VSCALEFPD        xmmreg|mask|z,xmmreg*,xmmrm128|b64 AVX512VL VSCALEFPD        ymmreg|mask|z,ymmreg*,ymmrm256|b64 AVX512VL VSCALEFPD        zmmreg|mask|z,zmmreg*,zmmrm512|b64|er AVX512 VSCALEFPS        xmmreg|mask|z,xmmreg*,xmmrm128|b32 AVX512VL VSCALEFPS        ymmreg|mask|z,ymmreg*,ymmrm256|b32 AVX512VL VSCALEFPS        zmmreg|mask|z,zmmreg*,zmmrm512|b32|er AVX512 VSCALEFSD        xmmreg|mask|z,xmmreg*,xmmrm64|er AVX512 VSCALEFSS        xmmreg|mask|z,xmmreg*,xmmrm32|er AVX512 VSCATTERDPD      xmem64|mask,xmmreg       AVX512VL VSCATTERDPD      xmem64|mask,ymmreg       AVX512VL VSCATTERDPD      ymem64|mask,zmmreg       AVX512 VSCATTERDPS      xmem32|mask,xmmreg       AVX512VL VSCATTERDPS      ymem32|mask,ymmreg       AVX512VL VSCATTERDPS      zmem32|mask,zmmreg       AVX512 VSCATTERPF0DPD   ymem64|mask              AVX512PF VSCATTERPF0DPS   zmem32|mask              AVX512PF VSCATTERPF0QPD   zmem64|mask              AVX512PF VSCATTERPF0QPS   zmem32|mask              AVX512PF VSCATTERPF1DPD   ymem64|mask              AVX512PF VSCATTERPF1DPS   zmem32|mask              AVX512PF VSCATTERPF1QPD   zmem64|mask              AVX512PF VSCATTERPF1QPS   zmem32|mask              AVX512PF VSCATTERQPD      xmem64|mask,xmmreg       AVX512VL VSCATTERQPD      ymem64|mask,ymmreg       AVX512VL VSCATTERQPD      zmem64|mask,zmmreg       AVX512 VSCATTERQPS      xmem32|mask,xmmreg       AVX512VL VSCATTERQPS      ymem32|mask,xmmreg       AVX512VL VSCATTERQPS      zmem32|mask,ymmreg       AVX512 VSHUFF32X4       ymmreg|mask|z,ymmreg*,ymmrm256|b32,imm8 AVX512VL VSHUFF32X4       zmmreg|mask|z,zmmreg*,zmmrm512|b32,imm8 AVX512 VSHUFF64X2       ymmreg|mask|z,ymmreg*,ymmrm256|b64,imm8 AVX512VL VSHUFF64X2       zmmreg|mask|z,zmmreg*,zmmrm512|b64,imm8 AVX512 VSHUFI32X4       ymmreg|mask|z,ymmreg*,ymmrm256|b32,imm8 AVX512VL VSHUFI32X4       zmmreg|mask|z,zmmreg*,zmmrm512|b32,imm8 AVX512 VSHUFI64X2       ymmreg|mask|z,ymmreg*,ymmrm256|b64,imm8 AVX512VL VSHUFI64X2       zmmreg|mask|z,zmmreg*,zmmrm512|b64,imm8 AVX512 VSHUFPD          xmmreg|mask|z,xmmreg*,xmmrm128|b64,imm8 AVX512VL VSHUFPD          ymmreg|mask|z,ymmreg*,ymmrm256|b64,imm8 AVX512VL VSHUFPD          zmmreg|mask|z,zmmreg*,zmmrm512|b64,imm8 AVX512 VSHUFPS          xmmreg|mask|z,xmmreg*,xmmrm128|b32,imm8 AVX512VL VSHUFPS          ymmreg|mask|z,ymmreg*,ymmrm256|b32,imm8 AVX512VL VSHUFPS          zmmreg|mask|z,zmmreg*,zmmrm512|b32,imm8 AVX512 VSQRTPD          xmmreg|mask|z,xmmrm128|b64 AVX512VL VSQRTPD          ymmreg|mask|z,ymmrm256|b64 AVX512VL VSQRTPD          zmmreg|mask|z,zmmrm512|b64|er AVX512 VSQRTPS          xmmreg|mask|z,xmmrm128|b32 AVX512VL VSQRTPS          ymmreg|mask|z,ymmrm256|b32 AVX512VL VSQRTPS          zmmreg|mask|z,zmmrm512|b32|er AVX512 VSQRTSD          xmmreg|mask|z,xmmreg*,xmmrm64|er AVX512 VSQRTSS          xmmreg|mask|z,xmmreg*,xmmrm32|er AVX512 VSUBPD           xmmreg|mask|z,xmmreg*,xmmrm128|b64 AVX512VL VSUBPD           ymmreg|mask|z,ymmreg*,ymmrm256|b64 AVX512VL VSUBPD           zmmreg|mask|z,zmmreg*,zmmrm512|b64|er AVX512 VSUBPS           xmmreg|mask|z,xmmreg*,xmmrm128|b32 AVX512VL VSUBPS           ymmreg|mask|z,ymmreg*,ymmrm256|b32 AVX512VL VSUBPS           zmmreg|mask|z,zmmreg*,zmmrm512|b32|er AVX512 VSUBSD           xmmreg|mask|z,xmmreg*,xmmrm64|er AVX512 VSUBSS           xmmreg|mask|z,xmmreg*,xmmrm32|er AVX512 VUCOMISD         xmmreg,xmmrm64|sae       AVX512 VUCOMISS         xmmreg,xmmrm32|sae       AVX512 VUNPCKHPD        xmmreg|mask|z,xmmreg*,xmmrm128|b64 AVX512VL VUNPCKHPD        ymmreg|mask|z,ymmreg*,ymmrm256|b64 AVX512VL VUNPCKHPD        zmmreg|mask|z,zmmreg*,zmmrm512|b64 AVX512 VUNPCKHPS        xmmreg|mask|z,xmmreg*,xmmrm128|b32 AVX512VL VUNPCKHPS        ymmreg|mask|z,ymmreg*,ymmrm256|b32 AVX512VL VUNPCKHPS        zmmreg|mask|z,zmmreg*,zmmrm512|b32 AVX512 VUNPCKLPD        xmmreg|mask|z,xmmreg*,xmmrm128|b64 AVX512VL VUNPCKLPD        ymmreg|mask|z,ymmreg*,ymmrm256|b64 AVX512VL VUNPCKLPD        zmmreg|mask|z,zmmreg*,zmmrm512|b64 AVX512 VUNPCKLPS        xmmreg|mask|z,xmmreg*,xmmrm128|b32 AVX512VL VUNPCKLPS        ymmreg|mask|z,ymmreg*,ymmrm256|b32 AVX512VL VUNPCKLPS        zmmreg|mask|z,zmmreg*,zmmrm512|b32 AVX512 VXORPD           xmmreg|mask|z,xmmreg*,xmmrm128|b64 AVX512VL/DQ VXORPD           ymmreg|mask|z,ymmreg*,ymmrm256|b64 AVX512VL/DQ VXORPD           zmmreg|mask|z,zmmreg*,zmmrm512|b64 AVX512DQ VXORPS           xmmreg|mask|z,xmmreg*,xmmrm128|b32 AVX512VL/DQ VXORPS           ymmreg|mask|z,ymmreg*,ymmrm256|b32 AVX512VL/DQ VXORPS           zmmreg|mask|z,zmmreg*,zmmrm512|b32 AVX512DQ
subh B.1.42 :section-B.1.42
n Intelspn memoryspn protectionspn keysspn forspn userspacespn (PKUspn akaspn PKEYs)
code
RDPKRU                                    LONG WRPKRU                                    LONG
subh B.1.43 :section-B.1.43
n Readspn Processorspn ID
code
RDPID            reg32                    NOLONG RDPID            reg64                    LONG RDPID            reg32                    LONG,UNDOC
subh B.1.44 :section-B.1.44
n Newspn memoryspn instructions
code
CLFLUSHOPT       mem                       CLWB             mem                       PCOMMIT                                   NEVER,NOP CLZERO                                    AMD CLZERO           reg_ax                   AMD,ND,NOLONG CLZERO           reg_eax                  AMD,ND CLZERO           reg_rax                  AMD,ND,LONG
subh B.1.45 :section-B.1.45
n Processorspn tracespn write
code
PTWRITE          rm32                      PTWRITE          rm64                     LONG
subh B.1.46 :section-B.1.46
n Instructionsspn fromspn thespn Intelspn Instructionspn Setspn Extensions,
subh B.1.47 :section-B.1.47
n docspn 319433-n 034spn Mayspn 2018
code
CLDEMOTE         mem                       MOVDIRI          mem32,reg32              SD MOVDIRI          mem64,reg64              LONG MOVDIR64B        reg16,mem512             NOLONG MOVDIR64B        reg32,mem512              MOVDIR64B        reg64,mem512             LONG PCONFIG                                    TPAUSE           reg32                     TPAUSE           reg32,reg_edx,reg_eax    ND UMONITOR         reg16                    NOLONG UMONITOR         reg32                     UMONITOR         reg64                    LONG UMWAIT           reg32                     UMWAIT           reg32,reg_edx,reg_eax    ND WBNOINVD                                  
subh B.1.48 :section-B.1.48
n Galoisspn fieldspn operationsspn (GFNI)
code
GF2P8AFFINEINVQB xmmreg,xmmrm128,imm8     GFNI,SSE VGF2P8AFFINEINVQB xmmreg,xmmreg*,xmmrm128,imm8 GFNI,AVX VGF2P8AFFINEINVQB ymmreg,ymmreg*,ymmrm256,imm8 GFNI,AVX VGF2P8AFFINEINVQB xmmreg|mask|z,xmmreg*,xmmrm128|b64,imm8 AVX512VL,GFNI VGF2P8AFFINEINVQB ymmreg|mask|z,ymmreg*,ymmrm256|b64,imm8 AVX512VL,GFNI VGF2P8AFFINEINVQB zmmreg|mask|z,zmmreg*,zmmrm512|b64,imm8 AVX512,GFNI GF2P8AFFINEQB    xmmreg,xmmrm128,imm8     GFNI,SSE VGF2P8AFFINEQB   xmmreg,xmmreg*,xmmrm128,imm8 GFNI,AVX VGF2P8AFFINEQB   ymmreg,ymmreg*,ymmrm256,imm8 GFNI,AVX VGF2P8AFFINEQB   xmmreg|mask|z,xmmreg*,xmmrm128|b64,imm8 AVX512VL,GFNI VGF2P8AFFINEQB   ymmreg|mask|z,ymmreg*,ymmrm256|b64,imm8 AVX512VL,GFNI VGF2P8AFFINEQB   zmmreg|mask|z,zmmreg*,zmmrm512|b64,imm8 AVX512,GFNI GF2P8MULB        xmmreg,xmmrm128          GFNI,SSE VGF2P8MULB       xmmreg,xmmreg*,xmmrm128  GFNI,AVX VGF2P8MULB       ymmreg,ymmreg*,ymmrm256  GFNI,AVX VGF2P8MULB       xmmreg|mask|z,xmmreg*,xmmrm128 AVX512VL,GFNI VGF2P8MULB       ymmreg|mask|z,ymmreg*,ymmrm256 AVX512VL,GFNI VGF2P8MULB       zmmreg|mask|z,zmmreg*,zmmrm512 AVX512,GFNI
subh B.1.49 :section-B.1.49
n AVX512spn Vectorspn Bitspn Manipulationspn Instructionsspn 2
code
VPCOMPRESSB      mem128|mask,xmmreg       AVX512VBMI2/VL VPCOMPRESSB      mem256|mask,ymmreg       AVX512VBMI2/VL VPCOMPRESSB      mem512|mask,zmmreg       AVX512VBMI2 VPCOMPRESSB      xmmreg|mask|z,xmmreg     AVX512VBMI2/VL VPCOMPRESSB      ymmreg|mask|z,ymmreg     AVX512VBMI2/VL VPCOMPRESSB      zmmreg|mask|z,zmmreg     AVX512VBMI2 VPCOMPRESSW      mem128|mask,xmmreg       AVX512VBMI2/VL VPCOMPRESSW      mem256|mask,ymmreg       AVX512VBMI2/VL VPCOMPRESSW      mem512|mask,zmmreg       AVX512VBMI2 VPCOMPRESSW      xmmreg|mask|z,xmmreg     AVX512VBMI2/VL VPCOMPRESSW      ymmreg|mask|z,ymmreg     AVX512VBMI2/VL VPCOMPRESSW      zmmreg|mask|z,zmmreg     AVX512VBMI2 VPEXPANDB        mem128|mask,xmmreg       AVX512VBMI2/VL VPEXPANDB        mem256|mask,ymmreg       AVX512VBMI2/VL VPEXPANDB        mem512|mask,zmmreg       AVX512VBMI2 VPEXPANDB        xmmreg|mask|z,xmmreg     AVX512VBMI2/VL VPEXPANDB        ymmreg|mask|z,ymmreg     AVX512VBMI2/VL VPEXPANDB        zmmreg|mask|z,zmmreg     AVX512VBMI2 VPEXPANDW        mem128|mask,xmmreg       AVX512VBMI2/VL VPEXPANDW        mem256|mask,ymmreg       AVX512VBMI2/VL VPEXPANDW        mem512|mask,zmmreg       AVX512VBMI2 VPEXPANDW        xmmreg|mask|z,xmmreg     AVX512VBMI2/VL VPEXPANDW        ymmreg|mask|z,ymmreg     AVX512VBMI2/VL VPEXPANDW        zmmreg|mask|z,zmmreg     AVX512VBMI2 VPSHLDW          xmmreg|mask|z,xmmreg*,xmmrm128,imm8 AVX512VBMI2/VL VPSHLDW          ymmreg|mask|z,ymmreg*,ymmrm256,imm8 AVX512VBMI2/VL VPSHLDW          zmmreg|mask|z,zmmreg*,zmmrm512,imm8 AVX512VBMI2 VPSHLDD          xmmreg|mask|z,xmmreg*,xmmrm128|b32,imm8 AVX512VBMI2/VL VPSHLDD          ymmreg|mask|z,ymmreg*,ymmrm256|b32,imm8 AVX512VBMI2/VL VPSHLDD          zmmreg|mask|z,zmmreg*,zmmrm512|b32,imm8 AVX512VBMI2 VPSHLDQ          xmmreg|mask|z,xmmreg*,xmmrm128|b64,imm8 AVX512VBMI2/VL VPSHLDQ          ymmreg|mask|z,ymmreg*,ymmrm256|b64,imm8 AVX512VBMI2/VL VPSHLDQ          zmmreg|mask|z,zmmreg*,zmmrm512|b64,imm8 AVX512VBMI2 VPSHLDVW         xmmreg|mask|z,xmmreg*,xmmrm128 AVX512VBMI2/VL VPSHLDVW         ymmreg|mask|z,ymmreg*,ymmrm256 AVX512VBMI2/VL VPSHLDVW         zmmreg|mask|z,zmmreg*,zmmrm512 AVX512VBMI2 VPSHLDVD         xmmreg|mask|z,xmmreg*,xmmrm128|b32 AVX512VBMI2/VL VPSHLDVD         ymmreg|mask|z,ymmreg*,ymmrm256|b32 AVX512VBMI2/VL VPSHLDVD         zmmreg|mask|z,zmmreg*,zmmrm512|b32 AVX512VBMI2 VPSHLDVQ         xmmreg|mask|z,xmmreg*,xmmrm128|b64 AVX512VBMI2/VL VPSHLDVQ         ymmreg|mask|z,ymmreg*,ymmrm256|b64 AVX512VBMI2/VL VPSHLDVQ         zmmreg|mask|z,zmmreg*,zmmrm512|b64 AVX512VBMI2 VPSHRDW          xmmreg|mask|z,xmmreg*,xmmrm128,imm8 AVX512VBMI2/VL VPSHRDW          ymmreg|mask|z,ymmreg*,ymmrm256,imm8 AVX512VBMI2/VL VPSHRDW          zmmreg|mask|z,zmmreg*,zmmrm512,imm8 AVX512VBMI2 VPSHRDD          xmmreg|mask|z,xmmreg*,xmmrm128|b32,imm8 AVX512VBMI2/VL VPSHRDD          ymmreg|mask|z,ymmreg*,ymmrm256|b32,imm8 AVX512VBMI2/VL VPSHRDD          zmmreg|mask|z,zmmreg*,zmmrm512|b32,imm8 AVX512VBMI2 VPSHRDQ          xmmreg|mask|z,xmmreg*,xmmrm128|b64,imm8 AVX512VBMI2/VL VPSHRDQ          ymmreg|mask|z,ymmreg*,ymmrm256|b64,imm8 AVX512VBMI2/VL VPSHRDQ          zmmreg|mask|z,zmmreg*,zmmrm512|b64,imm8 AVX512VBMI2 VPSHRDVW         xmmreg|mask|z,xmmreg*,xmmrm128 AVX512VBMI2/VL VPSHRDVW         ymmreg|mask|z,ymmreg*,ymmrm256 AVX512VBMI2/VL VPSHRDVW         zmmreg|mask|z,zmmreg*,zmmrm512 AVX512VBMI2 VPSHRDVD         xmmreg|mask|z,xmmreg*,xmmrm128|b32 AVX512VBMI2/VL VPSHRDVD         ymmreg|mask|z,ymmreg*,ymmrm256|b32 AVX512VBMI2/VL VPSHRDVD         zmmreg|mask|z,zmmreg*,zmmrm512|b32 AVX512VBMI2 VPSHRDVQ         xmmreg|mask|z,xmmreg*,xmmrm128|b64 AVX512VBMI2/VL VPSHRDVQ         ymmreg|mask|z,ymmreg*,ymmrm256|b64 AVX512VBMI2/VL VPSHRDVQ         zmmreg|mask|z,zmmreg*,zmmrm512|b64 AVX512VBMI2
subh B.1.50 :section-B.1.50
n AVX512spn VNNI
code
VPDPBUSD         xmmreg|mask|z,xmmreg*,xmmrm128|b32 AVX512VNNI/VL VPDPBUSD         ymmreg|mask|z,ymmreg*,ymmrm256|b32 AVX512VNNI/VL VPDPBUSD         zmmreg|mask|z,zmmreg*,zmmrm512|b32 AVX512VNNI VPDPBUSDS        xmmreg|mask|z,xmmreg*,xmmrm128|b32 AVX512VNNI/VL VPDPBUSDS        ymmreg|mask|z,ymmreg*,ymmrm256|b32 AVX512VNNI/VL VPDPBUSDS        zmmreg|mask|z,zmmreg*,zmmrm512|b32 AVX512VNNI VPDPWSSD         xmmreg|mask|z,xmmreg*,xmmrm128|b32 AVX512VNNI/VL VPDPWSSD         ymmreg|mask|z,ymmreg*,ymmrm256|b32 AVX512VNNI/VL VPDPWSSD         zmmreg|mask|z,zmmreg*,zmmrm512|b32 AVX512VNNI VPDPWSSDS        xmmreg|mask|z,xmmreg*,xmmrm128|b32 AVX512VNNI/VL VPDPWSSDS        ymmreg|mask|z,ymmreg*,ymmrm256|b32 AVX512VNNI/VL VPDPWSSDS        zmmreg|mask|z,zmmreg*,zmmrm512|b32 AVX512VNNI
subh B.1.51 :section-B.1.51
n AVX512spn Bitspn Algorithms
code
VPOPCNTB         xmmreg|mask|z,xmmrm128   AVX512BITALG/VL VPOPCNTB         ymmreg|mask|z,ymmrm256   AVX512BITALG/VL VPOPCNTB         zmmreg|mask|z,zmmrm512   AVX512BITALG VPOPCNTW         xmmreg|mask|z,xmmrm128   AVX512BITALG/VL VPOPCNTW         ymmreg|mask|z,ymmrm256   AVX512BITALG/VL VPOPCNTW         zmmreg|mask|z,zmmrm512   AVX512BITALG VPOPCNTD         xmmreg|mask|z,xmmrm128   AVX512VPOPCNTDQ/VL VPOPCNTD         ymmreg|mask|z,ymmrm256   AVX512VPOPCNTDQ/VL VPOPCNTD         zmmreg|mask|z,zmmrm512   AVX512VPOPCNTDQ VPOPCNTQ         xmmreg|mask|z,xmmrm128   AVX512VPOPCNTDQ/VL VPOPCNTQ         ymmreg|mask|z,ymmrm256   AVX512VPOPCNTDQ/VL VPOPCNTQ         zmmreg|mask|z,zmmrm512   AVX512VPOPCNTDQ VPSHUFBITQMB     kreg|mask,xmmreg,xmmrm128 AVX512BITALG/VL VPSHUFBITQMB     kreg|mask,ymmreg,ymmrm256 AVX512BITALG/VL VPSHUFBITQMB     kreg|mask,zmmreg,zmmrm512 AVX512BITALG
subh B.1.52 :section-B.1.52
n AVX512spn 4-n iterationspn Multiply-n Add
code
V4FMADDPS        zmmreg|mask|z,zmmreg|rs4,mem AVX5124FMAPS,SO V4FNMADDPS       zmmreg|mask|z,zmmreg|rs4,mem AVX5124FMAPS,SO V4FMADDSS        zmmreg|mask|z,zmmreg|rs4,mem AVX5124FMAPS,SO V4FNMADDSS       zmmreg|mask|z,zmmreg|rs4,mem AVX5124FMAPS,SO
subh B.1.53 :section-B.1.53
n AVX512spn 4-n iterationspn Dotspn Product
code
V4DPWSSDS        zmmreg|mask|z,zmmreg|rs4,mem AVX5124VNNIW,SO V4DPWSSD         zmmreg|mask|z,zmmreg|rs4,mem AVX5124VNNIW,SO
subh B.1.54 :section-B.1.54
n Intelspn Softwarespn Guardspn Extensionsspn (SGX)
code
ENCLS                                     SGX ENCLU                                     SGX ENCLV                                     SGX
subh B.1.55 :section-B.1.55
n Intelspn Control-n Flowspn Enforcementspn Technologyspn (CET)
code
CLRSSBSY         mem64                    CET ENDBR32                                   CET ENDBR64                                   CET INCSSPD          reg32                    CET INCSSPQ          reg64                    CET,LONG RDSSPD           reg32                    CET RDSSPQ           reg64                    CET,LONG RSTORSSP         mem64                    CET SAVEPREVSSP                               CET SETSSBSY                                  CET WRUSSD           mem32,reg32              CET WRUSSQ           mem64,reg64              CET,LONG WRSSD            mem32,reg32              CET WRSSQ            mem64,reg64              CET,LONG
subh B.1.56 :section-B.1.56
n Instructionsspn fromspn ISEspn docspn 319433-n 040,spn Junespn 2020
code
ENQCMD           reg16,mem512             ENQCMD ENQCMD           reg32,mem512             ENQCMD,ND ENQCMD           reg32,mem512             ENQCMD ENQCMD           reg64,mem512             ENQCMD,LONG ENQCMDS          reg16,mem512             ENQCMD,PRIV ENQCMDS          reg32,mem512             ENQCMD,PRIV,ND ENQCMDS          reg32,mem512             ENQCMD,PRIV ENQCMDS          reg64,mem512             ENQCMD,PRIV,LONG PCONFIG                                   PCONFIG,PRIV SERIALIZE                                 SERIALIZE WBNOINVD                                  WBNOINVD,PRIV XRESLDTRK                                 TSXLDTRK XSUSLDTRK                                 TSXLDTRK
subh B.1.57 :section-B.1.57
n AVX512spn Bfloat16spn instructions
code
VCVTNE2PS2BF16   xmmreg|mask|z,xmmreg*,xmmrm128|b32 AVX512BF16 VCVTNE2PS2BF16   ymmreg|mask|z,ymmreg*,ymmrm256|b32 AVX512BF16 VCVTNE2PS2BF16   zmmreg|mask|z,zmmreg*,zmmrm512|b32 AVX512BF16 VCVTNE2PS2BF16   xmmreg|mask|z,xmmreg*,xmmrm128|b32 AVX512BF16 VCVTNE2PS2BF16   ymmreg|mask|z,ymmreg*,ymmrm256|b32 AVX512BF16 VCVTNE2PS2BF16   zmmreg|mask|z,zmmreg*,zmmrm512|b32 AVX512BF16 VDPBF16PS        xmmreg|mask|z,xmmreg*,xmmrm128|b32 AVX512BF16 VDPBF16PS        ymmreg|mask|z,ymmreg*,ymmrm128|b32 AVX512BF16 VDPBF16PS        zmmreg|mask|z,zmmreg*,zmmrm128|b32 AVX512BF16
subh B.1.58 :section-B.1.58
n AVX512spn maskspn intersectspn instructions
code
VP2INTERSECTD    kreg|rs2,xmmreg,xmmrm128|b32 AVX512BF16 VP2INTERSECTD    kreg|rs2,ymmreg,ymmrm128|b32 AVX512BF16 VP2INTERSECTD    kreg|rs2,zmmreg,zmmrm128|b32 AVX512BF16
subh B.1.59 :section-B.1.59
n Intelspn Advancedspn Matrixspn Extensionsspn (AMX)
code
LDTILECFG        mem512                   AMXTILE,SZ,LONG STTILECFG        mem512                   AMXTILE,SZ,LONG TDPBF16PS        tmmreg,tmmreg,tmmreg     AMXBF16,LONG TDPBSSD          tmmreg,tmmreg,tmmreg     AMXINT8,LONG TDPBSUD          tmmreg,tmmreg,tmmreg     AMXINT8,LONG TDPBUSD          tmmreg,tmmreg,tmmreg     AMXINT8,LONG TDPBUUD          tmmreg,tmmreg,tmmreg     AMXINT8,LONG TILELOADD        tmmreg,mem               AMXTILE,MIB,SIB,SX,LONG TILELOADDT1      tmmreg,mem               AMXTILE,MIB,SIB,SX,LONG TILERELEASE                               AMXTILE,LONG TILESTORED       mem,tmmreg               AMXTILE,MIB,SIB,SX,LONG TILEZERO         tmmreg                   AMXTILE,LONG
subh B.1.60 :section-B.1.60
n Systematicspn namesspn forspn thespn hintingspn nopspn instructions
code
HINT_NOP0        rm16                     P6,UNDOC HINT_NOP0        rm32                     P6,UNDOC HINT_NOP0        rm64                     X86_64,LONG,UNDOC HINT_NOP1        rm16                     P6,UNDOC HINT_NOP1        rm32                     P6,UNDOC HINT_NOP1        rm64                     X86_64,LONG,UNDOC HINT_NOP2        rm16                     P6,UNDOC HINT_NOP2        rm32                     P6,UNDOC HINT_NOP2        rm64                     X86_64,LONG,UNDOC HINT_NOP3        rm16                     P6,UNDOC HINT_NOP3        rm32                     P6,UNDOC HINT_NOP3        rm64                     X86_64,LONG,UNDOC HINT_NOP4        rm16                     P6,UNDOC HINT_NOP4        rm32                     P6,UNDOC HINT_NOP4        rm64                     X86_64,LONG,UNDOC HINT_NOP5        rm16                     P6,UNDOC HINT_NOP5        rm32                     P6,UNDOC HINT_NOP5        rm64                     X86_64,LONG,UNDOC HINT_NOP6        rm16                     P6,UNDOC HINT_NOP6        rm32                     P6,UNDOC HINT_NOP6        rm64                     X86_64,LONG,UNDOC HINT_NOP7        rm16                     P6,UNDOC HINT_NOP7        rm32                     P6,UNDOC HINT_NOP7        rm64                     X86_64,LONG,UNDOC HINT_NOP8        rm16                     P6,UNDOC HINT_NOP8        rm32                     P6,UNDOC HINT_NOP8        rm64                     X86_64,LONG,UNDOC HINT_NOP9        rm16                     P6,UNDOC HINT_NOP9        rm32                     P6,UNDOC HINT_NOP9        rm64                     X86_64,LONG,UNDOC HINT_NOP10       rm16                     P6,UNDOC HINT_NOP10       rm32                     P6,UNDOC HINT_NOP10       rm64                     X86_64,LONG,UNDOC HINT_NOP11       rm16                     P6,UNDOC HINT_NOP11       rm32                     P6,UNDOC HINT_NOP11       rm64                     X86_64,LONG,UNDOC HINT_NOP12       rm16                     P6,UNDOC HINT_NOP12       rm32                     P6,UNDOC HINT_NOP12       rm64                     X86_64,LONG,UNDOC HINT_NOP13       rm16                     P6,UNDOC HINT_NOP13       rm32                     P6,UNDOC HINT_NOP13       rm64                     X86_64,LONG,UNDOC HINT_NOP14       rm16                     P6,UNDOC HINT_NOP14       rm32                     P6,UNDOC HINT_NOP14       rm64                     X86_64,LONG,UNDOC HINT_NOP15       rm16                     P6,UNDOC HINT_NOP15       rm32                     P6,UNDOC HINT_NOP15       rm64                     X86_64,LONG,UNDOC HINT_NOP16       rm16                     P6,UNDOC HINT_NOP16       rm32                     P6,UNDOC HINT_NOP16       rm64                     X86_64,LONG,UNDOC HINT_NOP17       rm16                     P6,UNDOC HINT_NOP17       rm32                     P6,UNDOC HINT_NOP17       rm64                     X86_64,LONG,UNDOC HINT_NOP18       rm16                     P6,UNDOC HINT_NOP18       rm32                     P6,UNDOC HINT_NOP18       rm64                     X86_64,LONG,UNDOC HINT_NOP19       rm16                     P6,UNDOC HINT_NOP19       rm32                     P6,UNDOC HINT_NOP19       rm64                     X86_64,LONG,UNDOC HINT_NOP20       rm16                     P6,UNDOC HINT_NOP20       rm32                     P6,UNDOC HINT_NOP20       rm64                     X86_64,LONG,UNDOC HINT_NOP21       rm16                     P6,UNDOC HINT_NOP21       rm32                     P6,UNDOC HINT_NOP21       rm64                     X86_64,LONG,UNDOC HINT_NOP22       rm16                     P6,UNDOC HINT_NOP22       rm32                     P6,UNDOC HINT_NOP22       rm64                     X86_64,LONG,UNDOC HINT_NOP23       rm16                     P6,UNDOC HINT_NOP23       rm32                     P6,UNDOC HINT_NOP23       rm64                     X86_64,LONG,UNDOC HINT_NOP24       rm16                     P6,UNDOC HINT_NOP24       rm32                     P6,UNDOC HINT_NOP24       rm64                     X86_64,LONG,UNDOC HINT_NOP25       rm16                     P6,UNDOC HINT_NOP25       rm32                     P6,UNDOC HINT_NOP25       rm64                     X86_64,LONG,UNDOC HINT_NOP26       rm16                     P6,UNDOC HINT_NOP26       rm32                     P6,UNDOC HINT_NOP26       rm64                     X86_64,LONG,UNDOC HINT_NOP27       rm16                     P6,UNDOC HINT_NOP27       rm32                     P6,UNDOC HINT_NOP27       rm64                     X86_64,LONG,UNDOC HINT_NOP28       rm16                     P6,UNDOC HINT_NOP28       rm32                     P6,UNDOC HINT_NOP28       rm64                     X86_64,LONG,UNDOC HINT_NOP29       rm16                     P6,UNDOC HINT_NOP29       rm32                     P6,UNDOC HINT_NOP29       rm64                     X86_64,LONG,UNDOC HINT_NOP30       rm16                     P6,UNDOC HINT_NOP30       rm32                     P6,UNDOC HINT_NOP30       rm64                     X86_64,LONG,UNDOC HINT_NOP31       rm16                     P6,UNDOC HINT_NOP31       rm32                     P6,UNDOC HINT_NOP31       rm64                     X86_64,LONG,UNDOC HINT_NOP32       rm16                     P6,UNDOC HINT_NOP32       rm32                     P6,UNDOC HINT_NOP32       rm64                     X86_64,LONG,UNDOC HINT_NOP33       rm16                     P6,UNDOC HINT_NOP33       rm32                     P6,UNDOC HINT_NOP33       rm64                     X86_64,LONG,UNDOC HINT_NOP34       rm16                     P6,UNDOC HINT_NOP34       rm32                     P6,UNDOC HINT_NOP34       rm64                     X86_64,LONG,UNDOC HINT_NOP35       rm16                     P6,UNDOC HINT_NOP35       rm32                     P6,UNDOC HINT_NOP35       rm64                     X86_64,LONG,UNDOC HINT_NOP36       rm16                     P6,UNDOC HINT_NOP36       rm32                     P6,UNDOC HINT_NOP36       rm64                     X86_64,LONG,UNDOC HINT_NOP37       rm16                     P6,UNDOC HINT_NOP37       rm32                     P6,UNDOC HINT_NOP37       rm64                     X86_64,LONG,UNDOC HINT_NOP38       rm16                     P6,UNDOC HINT_NOP38       rm32                     P6,UNDOC HINT_NOP38       rm64                     X86_64,LONG,UNDOC HINT_NOP39       rm16                     P6,UNDOC HINT_NOP39       rm32                     P6,UNDOC HINT_NOP39       rm64                     X86_64,LONG,UNDOC HINT_NOP40       rm16                     P6,UNDOC HINT_NOP40       rm32                     P6,UNDOC HINT_NOP40       rm64                     X86_64,LONG,UNDOC HINT_NOP41       rm16                     P6,UNDOC HINT_NOP41       rm32                     P6,UNDOC HINT_NOP41       rm64                     X86_64,LONG,UNDOC HINT_NOP42       rm16                     P6,UNDOC HINT_NOP42       rm32                     P6,UNDOC HINT_NOP42       rm64                     X86_64,LONG,UNDOC HINT_NOP43       rm16                     P6,UNDOC HINT_NOP43       rm32                     P6,UNDOC HINT_NOP43       rm64                     X86_64,LONG,UNDOC HINT_NOP44       rm16                     P6,UNDOC HINT_NOP44       rm32                     P6,UNDOC HINT_NOP44       rm64                     X86_64,LONG,UNDOC HINT_NOP45       rm16                     P6,UNDOC HINT_NOP45       rm32                     P6,UNDOC HINT_NOP45       rm64                     X86_64,LONG,UNDOC HINT_NOP46       rm16                     P6,UNDOC HINT_NOP46       rm32                     P6,UNDOC HINT_NOP46       rm64                     X86_64,LONG,UNDOC HINT_NOP47       rm16                     P6,UNDOC HINT_NOP47       rm32                     P6,UNDOC HINT_NOP47       rm64                     X86_64,LONG,UNDOC HINT_NOP48       rm16                     P6,UNDOC HINT_NOP48       rm32                     P6,UNDOC HINT_NOP48       rm64                     X86_64,LONG,UNDOC HINT_NOP49       rm16                     P6,UNDOC HINT_NOP49       rm32                     P6,UNDOC HINT_NOP49       rm64                     X86_64,LONG,UNDOC HINT_NOP50       rm16                     P6,UNDOC HINT_NOP50       rm32                     P6,UNDOC HINT_NOP50       rm64                     X86_64,LONG,UNDOC HINT_NOP51       rm16                     P6,UNDOC HINT_NOP51       rm32                     P6,UNDOC HINT_NOP51       rm64                     X86_64,LONG,UNDOC HINT_NOP52       rm16                     P6,UNDOC HINT_NOP52       rm32                     P6,UNDOC HINT_NOP52       rm64                     X86_64,LONG,UNDOC HINT_NOP53       rm16                     P6,UNDOC HINT_NOP53       rm32                     P6,UNDOC HINT_NOP53       rm64                     X86_64,LONG,UNDOC HINT_NOP54       rm16                     P6,UNDOC HINT_NOP54       rm32                     P6,UNDOC HINT_NOP54       rm64                     X86_64,LONG,UNDOC HINT_NOP55       rm16                     P6,UNDOC HINT_NOP55       rm32                     P6,UNDOC HINT_NOP55       rm64                     X86_64,LONG,UNDOC HINT_NOP56       rm16                     P6,UNDOC HINT_NOP56       rm32                     P6,UNDOC HINT_NOP56       rm64                     X86_64,LONG,UNDOC HINT_NOP57       rm16                     P6,UNDOC HINT_NOP57       rm32                     P6,UNDOC HINT_NOP57       rm64                     X86_64,LONG,UNDOC HINT_NOP58       rm16                     P6,UNDOC HINT_NOP58       rm32                     P6,UNDOC HINT_NOP58       rm64                     X86_64,LONG,UNDOC HINT_NOP59       rm16                     P6,UNDOC HINT_NOP59       rm32                     P6,UNDOC HINT_NOP59       rm64                     X86_64,LONG,UNDOC HINT_NOP60       rm16                     P6,UNDOC HINT_NOP60       rm32                     P6,UNDOC HINT_NOP60       rm64                     X86_64,LONG,UNDOC HINT_NOP61       rm16                     P6,UNDOC HINT_NOP61       rm32                     P6,UNDOC HINT_NOP61       rm64                     X86_64,LONG,UNDOC HINT_NOP62       rm16                     P6,UNDOC HINT_NOP62       rm32                     P6,UNDOC HINT_NOP62       rm64                     X86_64,LONG,UNDOC HINT_NOP63       rm16                     P6,UNDOC HINT_NOP63       rm32                     P6,UNDOC HINT_NOP63       rm64                     X86_64,LONG,UNDOC
appn C :appendix-C
i nasm version historyn NASMspn Versionspn History
head C.1 :section-C.1
n NASMspn 2spn Series
norm
n Thespn NASMspn 2spn seriesspn supportsspn x86-n 64,spn andspn isspn thespn productionspn versionspn ofspn NASMspn sincespn 2007.
subh C.1.1 :section-C.1.1
n Versionspn 2.15.05
bull
n Correctspc %ifid $spn andspc %ifid $$spn beingspn treatedspn asspn true.spn Seespx section-4.4.6n sectionspn 4.4.6xesection-4.4.6n .
bull
n Addspc --reproduciblespn optionspn tospn suppressspn NASMspn versionspn numbersspn andspn timestampsspn inspn outputspn files.spn Seespx section-2.1.34n sectionspn 2.1.34xesection-2.1.34n .
subh C.1.2 :section-C.1.2
n Versionspn 2.15.04
bull
n Morespn sensiblespn handlingspn ofspn thespn casespn wherespn onespn single-n linespn macrospn definitionspn willspn shadowspn another.spn Aspn warningspn willspn bespn issued,spn butspn thespn additionalspn definitionspn willspn bespn allowed.spn Forspn thespn existingspn errorspn casespn wherespn bothspn aspn parameterlessspn andspn parameteredspn macrospn arespn created,spn thatspn warningspn isspn promotedspn tospn anspn errorspn byspn default.
bull
n Addspn specialspn preprocessorspn tokensspc %*?spn andspc %*??spn thatspn expandspn likespc %?spn andspc %??spn inspn single-n linespn macrosspn only.spn Seespx section-4.1.6n sectionspn 4.1.6xesection-4.1.6n .
bull
n Correctspn thespn encodingspn ofspn thespc ENQCMDSspn andspc TILELOADT1spn instructions.
bull
n Fixspn casespn wherespn thespn COFFspn backendspn (thespc coffn ,spc win32spn andspc win64spn outputspn formats)spn wouldspn addspn paddingspn bytesspn inspn thespn middlespn ofspn aspn sectionspn ifspn aspc SECTIONn /c SEGMENTspn directivespn wasspn providedspn whichspn repeatedspn anspc ALIGN=spn attribute.spn Thisspn neitherspn matchedspn legacyspn behavior,spn otherspn backends,spn orspn userspn expectations.
bull
n Fixspn SSEspn instructionsspn notspn beingspn recognizedspn withspn anspn explicitspn memoryspn operationspn sizespn (e.g.spc movsd qword [eax],xmm0n ).
bull
n Thespc -L+spn optionspn nospn longerspn enablesspc -Lwn ,spn whichspn isspn mainlyspn usefulspn tospn debugspn NASMspn crashes.spn Seespx section-2.1.4n sectionspn 2.1.4xesection-2.1.4n .
bull
n Documentspn long-n standingspn hazardsspn inspn thespn usespn ofspc $spn inspc Dxspn statements,spn seespx section-3.2.1n sectionspn 3.2.1xesection-3.2.1n .
bull
n Thespn NASM-n onlyspn RDOFFspn outputspn formatspn backend,spn whichspn hasspn beenspn brokenspn sincespn atspn leastspn NASMspn 2.14,spn hasspn beenspn disabled.spn Thespn RDOFFspn toolsspn arespn scheduledspn tospn bespn removedspn fromspn thespn NASMspn distributionspn inspn NASMspn 2.16.spn Ifspn youspn havespn aspn concretespn usespn casespn forspn RDOFF,spn pleasespn filespn aspn NASMspn bugspn reportspn atspwc<https://bugs.nasm.us/>https://bugs.nasm.us/spn asspn soonspn asspn possible.spn Seespx section-8.13n sectionspn 8.13xesection-8.13n .
subh C.1.3 :section-C.1.3
n Versionspn 2.15.03
bull
n Addspn instructionsspn fromspn thespn Intelspn Instructionspn Setspn Extensionsspn andspn Futurespn Featuresspn Programmingspn Reference,spn Junespn 2020.spn Thisspn includesspn AVX5512spc bfloat16n ,spn AVX512spn maskspn intersect,spn andspn Intelspn Advancedspn Matrixspn Extensionsspn (AMX).
bull
n Supportspn forspc bfloat16spn floating-n pointspn constants.spn Seespx section-3.4.6n sectionspn 3.4.6xesection-3.4.6spn andspx section-6.3n sectionspn 6.3xesection-6.3n .
bull
n Properlyspn displayspn warningsspn inspn preprocess-n onlyspn mode.
bull
n Fixspn copy-n and-n pastespn ofspn examplesspn fromspn thespn PDFspn documentation.
bull
n Debugspn informationspn nowspn properlyspn reflectspn thespn linespn numbersspn ofspn macrospn invocationsspn (unlessspn declaredspc .nolistn ).
bull
n Fixspn excessivespn alignmentspn ofspn sectionsspn inspn thespc coffn /c win32n /c win64spn outputspn formatsspn whenspn thespn user-n specifiedspn alignmentspn isspn lessspn thanspn thespn defaultspn alignmentspn forspn thespn sectionspn orspn sectionspn type.
bull
n Fixspn explicitspn tokenspn pastingspn (c %+n ,spx section-4.1.4n sectionspn 4.1.4xesection-4.1.4n )spn forspn thespn casesspn wherespn onespn orspn morespn partsspn resultspn fromspn emptyspn tokenspn expansion,spn resultingspn inspc %+spn tokensspn atspn thespn beginningspn orspn end,spn orspn multiplespn onesspn inspn aspn row.
bull
n Fixspn macrospn labelspn capturespn (c %00n ,spx section-4.3.7n sectionspn 4.3.7xesection-4.3.7n ).
bull
n Muchspn betterspn documentationspn forspn thespn MASMspn compatiblityspn package,spc %use masmspn (seespx section-6.5n sectionspn 6.5xesection-6.5n ).
bull
n Fixspc LEAspn withoutspn squarespn brackets,spn forspn MASMspn compatibility.
bull
n Portabilityspn fixes.
subh C.1.4 :section-C.1.4
n Versionspn 2.15.02
bull
n Fixspn miscompilationspn whenspn buildingspn withspc clangn .
bull
n Addspc db-emptyspn warningspn class,spn seespx section-2.1.26n sectionspn 2.1.26xesection-2.1.26n .
bull
n Fixspn thespn dependenciesspn inspn thespn MSVCspn NMAKEspn makefilespn (c Mkfiles/msvc.makn ).
bull
n Somespn documentationspn improvementsspn andspn cleanups.
bull
n Fixspn thespn handlingspn ofspn macrospn parameterspn rangesspn (c %{:}n ),spn includingspn withspn brace-n enclosedspn originalspn arguments.
subh C.1.5 :section-C.1.5
n Versionspn 2.15.01
bull
n Fixspn buildingspn thespn documentationspn fromspn thespn releasespn archive.spn Forspn 2.15,spn thespn userspn hasspn tospn dospc make warningsspn manuallyspn inspn thespn mainspn directoryspn inspn orderspn tospn bespn ablespn tospn buildspn thespn documentation,spn whichspn meansspn Perlspn needsspn tospn bespn installedspn onspn thespn system.
bull
n Addspn instructionsspn forspn Intelspn Controlspn Flowspn Enforcementspn Technologyspn (CET).
subh C.1.6 :section-C.1.6
n Versionspn 2.15
bull
n Thespn comparisonspn andspn booleanizingspn operatorsspn canspn nowspn bespn usedspn inspn anyspn expressionspn context,spn notspn justspc %ifn .spn Seespx section-3.5n sectionspn 3.5xesection-3.5n .
bull
n Newspn operatorspc ?spn ...spc :n .spn Seespx section-3.5.1n sectionspn 3.5.1xesection-3.5.1n .
bull
n Signedspn shiftspn operatorsspc <<<spn andspc >>>n .spn Seespx section-3.5.9n sectionspn 3.5.9xesection-3.5.9n .
bull
n Thespn MASMspc DUPspn syntaxspn forspn dataspn definitionsspn isspn nowspn supported,spn inspn aspn somewhatspn enhancedspn form.spn Seespx section-3.2.1n sectionspn 3.2.1xesection-3.2.1n .
bull
n Warnspn forspn strangespn legacyspn behaviorspn regardingspn emptyspn argumentsspn inspn multi-n linespn macrospn expansion,spn butspn tryspn tospn matchspn legacyspn behaviorspn inspn mostspn cases.spn Legacyspn behaviorspn canspn bespn disabledspn withspn thespn directivespc %pragma preproc sane_empty_expansionn ,spn seespx section-4.3n sectionspn 4.3xesection-4.3spn andspx section-4.10.1n sectionspn 4.10.1xesection-4.10.1n .
bull
n Aspn muchspn morespn sensiblespn limitspn tospn expressionspn evaluationspn depth.spn Thespn previouslyspn definedspn limitspn wouldspn rarelyspn triggerspn beforespn NASMspn diedspn withspn aspn stackspn overrunspn errorspn onspn mostspn systems.spn Seespx section-2.1.31n sectionspn 2.1.31xesection-2.1.31n .
bull
n Thespn statespn ofspn warningsspn canspn nowspn bespn savedspn andspn restoredspn viaspn thespc [WARNING PUSH]spn andspc [WARNING POP]spn directives.spn Seespx section-7.13n sectionspn 7.13xesection-7.13n .
bull
n Thespc sectalign on|offspn switchspn doesspn notspn affectspn anspn explicitspn directive.spn Seespx section-5.10.2n sectionspn 5.10.2xesection-5.10.2n .
bull
n Addedspc configurespn optionspn tospn enablespn buildingspn withspn profilingspn (c --enable-profilingn ).
bull
n Attemptspn tospn supportspn ofspn longspn pathspn names,spn upspn tospn 32767spn ofspn UTF-n 16spn characters,spn onspn Windows.
bull
n Fixedspn 'mismatchspn inspn operandspn sizes'spn errorspn inspn thespc MOVDDUPn ,spc CMPXCHG8Bspn andspc CMPXCHG16Bspn instructions.
bull
n Improvedspn errorspn messagesspn inspn thespn stringspn transformationspn routine.
bull
n Removedspn obsoletespc gnu-elf-extensionsspn warningspn aboutspn 8-spn andspn 16-n bitspn relocationspn generation.spn Seespx section-8.9.8n sectionspn 8.9.8xesection-8.9.8
bull
n Addedspn groupspn aliasesspn forspn allspn prefixedspn warnings.spn Seespx section-2.1.26n sectionspn 2.1.26xesection-2.1.26n .
bull
n Allowedspn buildingspn withspn MSVCspn versionsspn olderspn thanspn 1700.
bull
n Addedspn implicitlyspn sizedspn versionsspn ofspn thespc K...spn instructions,spn whichspn allowsspn thespc K...spn instructionsspn tospn bespn specifiedspn withoutspn aspn sizespn suffixspn asspn longspn asspn thespn operandsspn arespn sized.
bull
n Addedspc -Lspn optionspn forspn additionalspn listingspn information.spn Seespx section-2.1.4n sectionspn 2.1.4xesection-2.1.4n .
bull
n Addedspn somespn warningsspn forspn obsoletespn instructionsspn forspn aspn specifiedspn CPU.
bull
n Deprecatedspc -hfspn andspc -yspn options.spn Usespc -hspn instead.
bull
n Madespn DWARFspn asspn thespn defaultspn debugspn formatspn forspn ELF.
bull
n Addedspc %pragma listspeooptions...spn tospn setspn orspn clearspn listingspn optionsspn (seespc opt-Ln ).
bull
n Allowedspn immediatespn syntaxspn forspc LEAspn instructionspn (ignorespn operandspn sizespn completely).
bull
n Addedspn limitedspn functionalityspn MASMspn compatibilityspn package.spn Seespx section-6.5n sectionspn 6.5xesection-6.5n .
bull
n Addspn single-n linespn macrosspn aliasesspn usingspc %defaliasspn orspc %idefaliasn .spn Thesespn behavespn likespn aspn kindspn ofspn "symbolicspn links"spn forspn single-n linespn macros.spn Seespx section-4.1.11n sectionspn 4.1.11xesection-4.1.11spn andspc clearn .
bull
n Addedspn supportspn forspn stringify,spn nostrip,spn evaluating,spn andspn greedyspn single-n linespn macrospn arguments.spn Seespx section-4.1.1n sectionspn 4.1.1xesection-4.1.1n .
bull
n Unusedspn single-n linespn macrospn argumentsspn nospn longerspn needspn tospn havespn aspn specifiedspn name.spn Seespx section-4.1.1n sectionspn 4.1.1xesection-4.1.1n .
bull
n Addedspn conditionalspn commaspn operatorspc %,n .spn Seespx section-4.1.12n sectionspn 4.1.12xesection-4.1.12n .
bull
n Changedspn privatespn namespacespn fromspc __foo__spn tospc __?foo?__n ,spn sospn aspn userspn namespacespn startingspn fromspn underscorespn isspn nowspn cleanspn fromspn symbols.spn Forspn backwardsspn compatibility,spn thespn previousspn namesspn arespn definedspn asspn aliases;spn seespx section-4.1.11n sectionspn 4.1.11xesection-4.1.11n ,spx section-4.11.3n sectionspn 4.11.3xesection-4.11.3spn andspx chapter-5n chapterspn 5xechapter-5n .
bull
n Addedspn supportspn ofspn ELFspn weakspn symbolsspn andspn externalspn references.spn Seespx section-8.9.5n sectionspn 8.9.5xesection-8.9.5n .
bull
n Changedspn thespn behaviorspn ofspn thespn EXTERNspn keywordspn andspn introducedspn REQUIREDspn keyword.spn Seespx section-7.6n sectionspn 7.6xesection-7.6n .
bull
n Addedspc %ifusablespn andspc %ifusingspn directives.spn Seespx chapter-6n chapterspn 6xechapter-6n .
bull
n Madespn variousspn performancespn improvementsspn andspn stabilityspn fixesspn inspn macrospn preprocessorspn engine.
bull
n Improvedspn NASMspn errorspn handlingspn andspn cleanedspn upspn errorspn messages.
bull
n Many,spn manyspn bugspn fixes.
subh C.1.7 :section-C.1.7
n Versionspn 2.14.03
bull
n Suppressspn nuisancespn "c label changed during code generationn "spn messagesspn afterspn aspn realspn error.
bull
n Addspn supportspn forspn thespc mergespn andspc stringsspn attributesspn onspn ELFspn sections.spn Seespx section-8.9.2n sectionspn 8.9.2xesection-8.9.2n .
bull
n Addspn supportspn forspn thespc noten ,spc preinit_arrayn ,spc init_arrayn ,spn andspc fini_arrayspn sectionsspn typespn inspn ELF.spn Seespx section-8.9.2n sectionspn 8.9.2xesection-8.9.2n .
bull
n Handlespn morespn thanspn 32,633spn sectionsspn inspn ELF.
subh C.1.8 :section-C.1.8
n Versionspn 2.14.02
bull
n Fixspn crashspn duespn tospn multiplespn errorsspn orspn warningsspn duringspn thespn codespn generationspn passspn ifspn aspn listspn filespn isspn specified.
subh C.1.9 :section-C.1.9
n Versionspn 2.14.01
bull
n Createspn allspn system-n definedspn macrosspn deforespn processingspn command-n linespn givenspn preprocessingspn directivesspn (c -pn ,spc -dn ,spc -un ,spc --pragman ,spc --beforen ).
bull
n Ifspn debuggingspn isspn enabled,spn definespn aspc __DEBUG_FORMAT__spn predefinedspn macro.spn Seespx section-5.5n sectionspn 5.5xesection-5.5n .
bull
n Fixspn anspn assertspn forspn thespn casespn inspn thespc objspn formatspn whenspn aspc SEGspn operatorspn refersspn tospn anspc EXTERNspn symbolspn declaredspn furtherspn downspn inspn thespn code.
bull
n Fixspn aspn cornerspn casespn inspn thespn floating-n pointspn codespn wherespn aspn binary,spn octalspn orspn hexadecimalspn floating-n pointspn havingspn atspn leastspn 32,spn 11,spn orspn 8spn mantissaspn digitsspn couldspn producespn slightlyspn incorrectspn resultsspn underspn veryspn specificspn conditions.
bull
n Supportspc -MDspn withoutspn aspn filename,spn forspc gccspn compatibility.spc -MFspn canspn bespn usedspn tospn setspn thespn dependenciesspn outputspn filename.spn Seespx section-2.1.8n sectionspn 2.1.8xesection-2.1.8n .
bull
n Fixspc -Espn inspn combinationspn withspc -MDn .spn Seespx section-2.1.22n sectionspn 2.1.22xesection-2.1.22n .
bull
n Fixspn missingspn errorsspn onspn redefinedspn labels;spn wouldspn causespn convergencespn failurespn insteadspn whichspn isspn veryspn slowspn andspn notspn easyspn tospn debug.
bull
n Duplicatespn definitionsspn ofspn thespn samespn labelspeswithspe thespe samespeevaluespn isspn nowspn explicitlyspn permittedspn (2.14spn wouldspn allowspn itspn inspn somespn circumstances.)
bull
n Addspn thespn optionspc --no-linespn tospn ignorespc %linespn directivesspn inspn thespn source.spn Seespx section-2.1.33n sectionspn 2.1.33xesection-2.1.33spn andspx section-4.11.1n sectionspn 4.11.1xesection-4.11.1n .
subh C.1.10 :section-C.1.10
n Versionspn 2.14
bull
n Changedspc -Ispn optionspn semanticsspn byspn addingspn aspn trailingspn pathspn separatorspn unconditionally.
bull
n Fixedspn nullspn dereferencespn inspn corruptedspn invalidspn singlespn linespn macros.
bull
n Fixedspn divisionspn byspn zerospn whichspn mayspn happenspn ifspn sourcespn codespn isspn malformed.
bull
n Fixedspn outspn ofspn boundspn accessspn inspn processingspn ofspn malformedspn segmentspn override.
bull
n Fixedspn outspn ofspn boundspn accessspn inspn certainspc EQUspn parsing.
bull
n Fixedspn bufferspn underflowspn inspn floatspn parsing.
bull
n Addedspc SGXspn (Intelspn Softwarespn Guardspn Extensions)spn instructions.
bull
n Addedspc +nspn syntaxspn forspn multiplespn contiguousspn registers.
bull
n Fixedspc subsections_via_symbolsspn forspc machospn objectspn format.
bull
n Addedspn thespc --gprefixn ,spc --gpostfixn ,spc --lprefixn ,spn andspc --lpostfixspn commandspn linespn options,spn tospn allowspn commandspn linespn basespn symbolspn renaming.spn Seespx section-2.1.28n sectionspn 2.1.28xesection-2.1.28n .
bull
n Allowspn labelspn renamingspn tospn bespn specifiedspn byspc %pragmaspn inspn additionspn tospn fromspn thespn commandspn line.spn Seespx section-7.10n sectionspn 7.10xesection-7.10n .
bull
n Supportedspn genericspc %pragmaspn namespaces,spc outputspn andspc debugn .spn Seespx section-4.10n sectionspn 4.10xesection-4.10n .
bull
n Addedspn thespc --pragmaspn commandspn linespn optionspn tospn injectspn aspc %pragmaspn directive.spn Seespx section-2.1.29n sectionspn 2.1.29xesection-2.1.29n .
bull
n Addedspn thespc --beforespn commandspn linespn optionspn tospn acceptspn preprocessspn statementspn beforespn input.spn Seespx section-2.1.30n sectionspn 2.1.30xesection-2.1.30n .
bull
n Addedspc AVX512spc VBMI2spn (Additionalspn Bitspn Manipulation),spc VNNIspn (Vectorspn Neuralspn Network),spc BITALGspn (Bitspn Algorithm),spn andspc GFNIspn (Galoisspn Fieldspn Newspn Instruction)spn instructions.
bull
n Addedspn thespc STATICspn directivespn forspn localspn symbolsspn thatspn shouldspn bespn renamedspn usingspn global-n symbolspn rules.spn Seespx section-7.9n sectionspn 7.9xesection-7.9n .
bull
n Allowspn aspn symbolspn tospn bespn definedspn asspc EXTERNspn andspn thenspn laterspn overriddenspn asspc GLOBALspn orspc COMMONn .spn Furthermore,spn aspn symbolspn declaredspc EXTERNspn andspn thenspn definedspn willspn bespn treatedspn asspc GLOBALn .spn Seespx section-7.5n sectionspn 7.5xesection-7.5n .
bull
n Thespc GLOBALspn directivespn nospn longerspn isspn requiredspn tospn precedespn thespn definitionspn ofspn thespn symbol.
bull
n Supportspc private_externspn asspc machospn specificspn extensionspn tospn thespc GLOBALspn directive.spn Seespx section-8.8.5n sectionspn 8.8.5xesection-8.8.5n .
bull
n Updatedspc UD0spn encodingspn tospn matchspn withspn thespn specification
bull
n Addedspn thespc --limit-Xspn commandspn linespn optionspn tospn setspn executionspn limits.spn Seespx section-2.1.31n sectionspn 2.1.31xesection-2.1.31n .
bull
n Updatedspn thespc Codeviewspn versionspn numberspn tospn bespn alignedspn withspc MASMn .
bull
n Addedspn thespc --keep-allspn commandspn linespn optionspn tospn preservespn outputspn files.spn Seespx section-2.1.32n sectionspn 2.1.32xesection-2.1.32n .
bull
n Addedspn thespc --includespn commandspn linespn option,spn anspn aliasspn tospc -Pspn (x section-2.1.19n sectionspn 2.1.19xesection-2.1.19n ).
bull
n Addedspn thespc --helpspn commandspn linespn optionspn asspn anspn aliasspn tospc -hspn (x section-3.1n sectionspn 3.1xesection-3.1n ).
bull
n Addedspc -Wn ,spc -Dn ,spn andspc -Qspn suffixspn aliasesspn forspc RETspn instructionsspn sospn thespn operandspn sizesspn ofspn thesespn instructionsspn canspn bespn encodedspn withoutspn usingspc o16n ,spc o32spn orspc o64n .
subh C.1.11 :section-C.1.11
n Versionspn 2.13.03
bull
n Addedspn AVXspn andspn AVX512spc VAES*spn andspc VPCLMULQDQspn instructions.
bull
n Fixedspn missingspn dwarfspn recordspn inspn x32spn ELFspn outputspn format.
subh C.1.12 :section-C.1.12
n Versionspn 2.13.02
bull
n Fixspn falsespn positivespn inspn testingspn ofspn numericspn overflows.
bull
n Fixspn generationspn ofspc PEXTRWspn instruction.
bull
n Fixspc smartalignspn packagespn whichspn couldspn triggerspn anspn errorspn duringspn optimizationspn ifspn thespn alignmentspn codespn expandedspn toospn muchspn duespn tospn optimizationspn ofspn thespn previousspn code.
bull
n Fixspn aspn casespn wherespn negativespn valuespn inspc TIMESspn directivespn causesspn panicspn insteadspn ofspn anspn error.
bull
n Alwaysspn finalizespc .debug_abbrevspn sectionspn withspn aspn nullspn inspc dwarfspn outputspn format.
bull
n Supportspc debugspn flagspn inspn sectionspn attributesspn forspc machospn outputspn format.spn Seespx section-8.8.1n sectionspn 8.8.1xesection-8.8.1n .
bull
n Supportspn upspn tospn 16spn charactersspn inspn sectionspn namesspn forspc machospn outputspn format.
bull
n Fixspn missingspn updatespn ofspn globalspc BITSspn settingspn ifspc SECTIONspn directivespn specifiedspn aspn bitspn sizespn usingspn outputspn format-n specificspn extensionsspn (e.g.spc USE32spn forspn thespc objspn outputspn format.)
bull
n Fixspn thespn incorrectspn generationspn ofspn VEX-n encodedspn instructionspn whenspn staticspn modespn decoratorsspn arespn specifiedspn onspn scalarspn instructions,spn losingspn thespn decoratorsspn asspn theyspn requirespn EVEXspn encoding.
bull
n Optionspc -MWspn tospn quotespn dependencyspn outputsspn accordingspn tospn Watcomspn Makespn conventionsspn insteadspn ofspn POSIXspn Makespn conventions.spn Seespx section-2.1.12n sectionspn 2.1.12xesection-2.1.12n .
bull
n Thespc objspn outputspn formatspn nowspn containsspn embeddedspn dependencyspn filespn information,spn unlessspn disabledspn withspc %pragma obj nodependn .spn Seespx section-8.4.9n sectionspn 8.4.9xesection-8.4.9n .
bull
n Fixspn generationspn ofspn dependencyspn lists.
bull
n Fixspn aspn numberspn ofspn nullspn pointerspn referencespn andspn memoryspn allocationspn errors.
bull
n Alwaysspn generatespn symbol-n relativespn relocationsspn forspn thespc macho64spn outputspn format;spn atspn leastspn somespn versionsspn ofspn thespn XCode/LLVMspn linkerspn failsspn forspn section-n relativespn relocations.
subh C.1.13 :section-C.1.13
n Versionspn 2.13.01
bull
n Fixspn incorrectspn outputspn forspn somespn typesspn ofspc FARspn orspc SEGspn referencesspn inspn thespc objspn outputspn format,spn andspn possiblyspn otherspn 16-n bitspn outputspn formats.
bull
n Fixspn thespn addressspn inspn thespn listspn filespn forspn anspn instructionspn containingspn aspc TIMESspn directive.
bull
n Fixspn errorspn withspc TIMESspn usedspn togetherspn withspn anspn instructionspn whichspn canspn varyspn inspn size,spn e.g.spc JMPn .
bull
n Fixspn breakagespn onspn somespn usesspn ofspn thespc DZspn pseudo-n op.
subh C.1.14 :section-C.1.14
n Versionspn 2.13
bull
n Supportspn thespn officialspn formsspn ofspn thespc UD0spn andspc UD1spn instructions.
bull
n Allowspn self-n segment-n relativespn expressionsspn inspn immediatesspn andspn displacements,spn evenspn whenspn combinedspn withspn anspn externalspn orspn otherwisespn out-n of-n segmentspn specialspn symbol,spn e.g.:
code
     extern foo      mov eax,[foo - $ + ebx]               ; Now legal
bull
n Handlespn aspn 64-n bitspn originspn inspn NDISASM.
bull
n NASMspn canspn nowspn generatespn sparsespn outputspn filesspn forspn relevantspn outputspn formats,spn ifspn thespn underlyingspn operatingspn systemspn supportsspn them.
bull
n Thespc machospn objectspn formatspn nowspn supportsspn thespc subsections_via_symbolsspn andspc no_dead_stripspn directives,spn seespx section-8.8.4n sectionspn 8.8.4xesection-8.8.4n .
bull
n Thespc machospn objectspn formatspn nowspn supportsspn thespc no_dead_stripn ,spc live_supportspn andspc strip_static_symsspn sectionspn flags,spn seespx section-8.8.1n sectionspn 8.8.1xesection-8.8.1n .
bull
n Thespc machospn objectspn formatspn nowspn supportsspn thespc dwarfspn debuggingspn format,spn asspn requiredspn byspn newerspn toolchains.
bull
n Allspn warningsspn canspn nowspn bespn suppressedspn ifspn desired;spn warningsspn notspn otherwisespn partspn ofspn anyspn warningspn classspn arespn nowspn consideredspn itsspn ownspn warningspn classspn calledspc otherspn (e.g.spc -w-othern ).spn Furthermore,spn warning-n as-n errorspn canspn nowspn bespn controlledspn onspn aspn perspn warningspn classspn basis,spn usingspn thespn syntaxspc -w+error=eowarning-classspn andspn itsspn equivalentspn forspn allspn otherspn warningspn controlspn options.spn Seespx section-2.1.26n sectionspn 2.1.26xesection-2.1.26spn forspn thespn command-n linespn optionsspn andspn warningspn classesspn andspx section-7.13n sectionspn 7.13xesection-7.13spn forspn thespc [WARNING]spn directive.
bull
n Fixspn aspn numberspn ofspn bugsspn relatedspn tospn AVX-n 512spn decorators.
bull
n Significantspn improvementsspn tospn buildingspn NASMspn withspn Microsoftspn Visualspn Studiospn viaspc Mkfiles/msvc.makn .spn Itspn isspn nowspn possiblespn tospn buildspn thespn fullspn Windowsspn installerspn binaryspn asspn longspn asspn thespn necessaryspn prerequisitesspn arespn installed;spn seespc Mkfiles/README
bull
n Tospn buildspn NASMspn withspn customspn modificationsspn (tablespn changes)spn orspn fromspn thespn gitspn treespn nowspn requiresspn Perlspn 5.8spn atspn thespn veryspn minimum,spn quitespn possiblyspn aspn higherspn versionspn (Perlspn 5.24.1spn tested.)spn Therespn isspn nospn requirementspn tospn havespn Perlspn onspn yourspn systemspn atspn allspn ifspn allspn youspn wantspn tospn dospn isspn buildspn unmodifiedspn NASMspn fromspn sourcespn archives.
bull
n Fixspn thespc {z}spn decoratorspn onspn AVX-n 512spc VMOVDQ*spn instructions.
bull
n Addspn newspn warningsspn forspn certainspn dangerousspn constructsspn whichspn neverspn oughtspn tospn havespn beenspn allowed.spn Inspn particular,spn thespc RESBspn familyspn ofspn instructionsspn shouldspn havespn beenspn takingspn aspn criticalspn expressionspn allspn along.
bull
n Fixspn thespn EVEXspn (AVX-n 512)spn versionsspn ofspn thespc VPBROADCASTn ,spc VPEXTRn ,spn andspc VPINSRspn instructions.
bull
n Supportspn contractedspn formsspn ofspn additionalspn instructions.spn Asspn aspn generalspn rule,spn ifspn anspn instructionspn hasspn aspn non-n destructivespn sourcespn immediatelyspn afterspn aspn destinationspn registerspn thatspn isn'tspn usedspn asspn anspn input,spn NASMspn supportsspn omittingspn thatspn sourcespn register,spn usingspn thespn destinationspn registerspn asspn thatspn value.spn Thisspn amongspn otherspn thingsspn makesspn itspn easierspn tospn convertspn SSEspn codespn tospn thespn equivalentspn AVXspn code:
code
     addps xmm1,xmm0                       ; SSE instruction      vaddps ymm1,ymm1,ymm0                 ; AVX official long form      vaddps ymm1,ymm0                      ; AVX contracted form
bull
n Fixspn Codeviewspn malformedspn compilerspn versionspn record.
bull
n Addspn thespc CLWBspn andspc PCOMMITspn instructions.spn Notespn thatspn thespc PCOMMITspn instructionspn hasspn beenspn deprecatedspn andspn willspn neverspn bespn includedspn inspn aspn shippingspn product;spn itspn isspn includedspn forspn completenessspn only.
bull
n Addspn thespc %pragmaspn preprocessorspn directivespn forspn soft-n errorspn directives.
bull
n Addspn thespc RDPIDspn instruction.
subh C.1.15 :section-C.1.15
n Versionspn 2.12.02
bull
n Fixspn preprocessorspn errors,spn especiallyspc %errorspn andspc %warningn ,spn insidespc %ifspn statements.
bull
n Fixspn relativespn relocationsspn inspn 32-n bitspn Mach-n O.
bull
n Morespn Codeviewspn debugspn formatspn fixes.
bull
n Ifspn thespn MASMspc PTRspn keywordspn isspn encountered,spn issuespn aspn warning.spn Thisspn isspn muchspn morespn likelyspn tospn indicatespn aspn MASM-n ismspn encounteredspn inspn NASMspn thanspn itspn isspn aspn validspn label.spn Thisspn warningspn canspn bespn suppressedspn withspc -w-ptrn ,spn thespc [warning]spn directivespn (seespx section-2.1.26n sectionspn 2.1.26xesection-2.1.26n )spn orspn byspn thespn macrospn definitionspc %idefine ptr $%?spn (seespx section-4.1.5n sectionspn 4.1.5xesection-4.1.5n ).
bull
n Whenspn anspn errorspn orspn aspn warningspn comesspn fromspn thespn expansionspn ofspn aspn multi-n linespn macro,spn displayspn thespn filespn andspn linespn numbersspn forspn thespn expandedspn macros.spn Macrosspn definedspn withspc .nolistspn dospn notspn getspn displayed.
bull
n Addspn macrosspc ilog2fw()spn andspc ilog2cw()spn tospn thespc ifuncspn macrospn package.spn Seespx section-6.4.1n sectionspn 6.4.1xesection-6.4.1n .
subh C.1.16 :section-C.1.16
n Versionspn 2.12.01
bull
n Portabilityspn fixesspn forspn somespn platforms.
bull
n Fixspn errorspn whenspn notspn specifyingspn aspn listspn file.
bull
n Correctspn thespn handlingspn ofspn macro-n localspn labelsspn inspn thespn Codeviewspn debuggingspn format.
bull
n Addspc CLZEROn ,spc MONITORXspn andspc MWAITXspn instructions.
subh C.1.17 :section-C.1.17
n Versionspn 2.12
bull
n Majorspn fixesspn tospn thespc machospn backendspn (x section-8.8n sectionspn 8.8xesection-8.8n );spn earlierspn versionsspn wouldspn producespn invalidspn symbolsspn andspn relocationsspn onspn aspn regularspn basis.
bull
n Supportspn forspn thread-n localspn storagespn inspn Mach-n O.
bull
n Supportspn forspn arbitraryspn sectionsspn inspn Mach-n O.
bull
n Fixspn wrongspn negativespn sizespn treatedspn asspn aspn bigspn positivespn valuespn passedspn intospn backendspn causingspn NASMspn tospn crash.
bull
n Fixspn handlingspn ofspn zero-n extendingspn unsignedspn relocations,spn wespn havespn beenspn printingspn wrongspn messagespn andspn forgotspn tospn assignspn segmentspn withspn predefinedspn valuespn beforespn passingspn itspn intospn outputspn format.
bull
n Fixspn potentialspn writespn ofspn oversizedspn (withspn sizespn greaterspn thanspn allowedspn inspn outputspn format)spn relativespn relocations.
bull
n Portabilityspn fixesspn forspn buildingspn NASMspn withspn thespn LLVMspn compiler.
bull
n Addspn supportspn ofspn Codeviewspn versionspn 8spn (c cv8n )spn debugspn formatspn forspc win32spn andspc win64spn formatsspn inspn thespc COFFspn backend,spn seespx section-8.5.3n sectionspn 8.5.3xesection-8.5.3n .
bull
n Allowspn 64-n bitspn outputsspn inspn 16/32-n bitspn onlyspn backends.spn Unsignedspn 64-n bitspn relocationsspn arespn zero-n extendedspn fromspn 32-n bitsspn withspn aspn warningspn (suppressiblespn viaspc -w-zext-relocn );spn signedspn 64-n bitspn relocationsspn arespn anspn error.
bull
n Linespn numbersspn inspn listspn filesspn nowspn correspondspn tospn thespn linesspn inspn thespn sourcespn files,spn insteadspn ofspn simplyspn beingspn sequential.
bull
n Therespn isspn nowspn anspn officialspn 64-n bitspn (x64spn a.k.a.spn x86-n 64)spn buildspn forspn Windows.
subh C.1.18 :section-C.1.18
n Versionspn 2.11.09
bull
n Fixspn potentialspn stackspn overwritespn inspc macho32spn backend.
bull
n Fixspn relocationspn recordsspn inspc macho64spn backend.
bull
n Fixspn symbolspn lookupspn computationspn inspc macho64spn backend.
bull
n Adjustspc .symtabspn andspc .rela.textspn sectionsspn alignmentsspn tospn 8spn bytesspn inspc elf64spn backed.
bull
n Fixspn sectionspn lengthspn computationspn inspc binspn backendspn whichspn leadedspn inspn incorrectspn relocationspn records.
subh C.1.19 :section-C.1.19
n Versionspn 2.11.08
bull
n Fixspn sectionspn lengthspn computationspn inspc binspn backendspn whichspn leadedspn inspn incorrectspn relocationspn records.
bull
n Addspn aspn warningspn forspn numericspn preprocessorspn definitionsspn passedspn viaspn commandspn linespn whichspn mightspn havespn unexpectedspn resultsspn otherwise.
bull
n Addspn abilityspn tospn specifyspn aspn modulespn namespn recordspn inspc rdoffspn linkerspn withspc -mnspn option.
bull
n Increasespn labelspn lengthspn capacityspn upspn tospn 256spn bytesspn inspc rdoffspn backendspn forspn FreePascalspn sake,spn whichspn tendsspn tospn generatespn veryspn longspn labelsspn forspn procedures.
bull
n Fixspn segmentationspn failurespn whenspn ripspn addressingspn isspn usedspn inspc macho64spn backend.
bull
n Fixspn accessspn onspn outspn ofspn memoryspn whenspn handlingspn stringsspn withspn aspn singlespn grave.spn Wespn havespn sixedspn similarspn problemspn inspn previousspn releasespn butspn notspn allspn casesspn werespn covered.
bull
n Fixspn NULLspn dereferencespn inspn disassembledspn onspc BNDspn instruction.
subh C.1.20 :section-C.1.20
n Versionspn 2.11.07
bull
n Fixspn 256spn bitspc VMOVNTPSspn instruction.
bull
n Fixspc -MDspn optionspn handling,spn whichspn wasspn ratherspn brokenspn inspn previousspn releasespn changingspn commandspn linespn api.
bull
n Fixspn accessspn tospn unitializedspn spacespn whenspn handlingspn stringsspn withspn aspn singlespn grave.
bull
n Fixspn nilspn dereferencespn inspn handlingspn memoryspn referencespn parsing.
subh C.1.21 :section-C.1.21
n Versionspn 2.11.06
bull
n Updatespn AVX512spn instructionsspn basedspn onspn thespn Extensionspn Referencespn (319433-n 021spn Septspn 2014).
bull
n Fixspn thespn behaviorspn ofspc -MFspn andspc -MDspn optionsspn (Bugzillaspn 3392280)
bull
n Updatedspn Win32spn Makefilespn tospn fixspn issuespn withspn build
subh C.1.22 :section-C.1.22
n Versionspn 2.11.05
bull
n Addspc --vspn asspn anspn aliasspn forspc -vspn (seespx section-2.1.27n sectionspn 2.1.27xesection-2.1.27n ),spn forspn command-n linespn compatibilityspn withspn Yasm.
bull
n Fixspn aspn bugspn introducedspn inspn 2.11.03spn wherebyspn certainspn instructionsspn wouldspn containspn multiplespn REXspn prefixes,spn andspn thusspn bespn corrupt.
subh C.1.23 :section-C.1.23
n Versionspn 2.11.04
bull
n Removedspn anspn invalidspn errorspn checkingspn code.spn Sometimesspn aspn memrefspn onlyspn withspn aspn displacementspn canspn alsospn setspn anspn evexspn flag.spn Forspn example:
code
      vmovdqu32 [0xabcd]{k1}, zmm0
bull
n Fixedspn aspn bugspn inspn disassemblerspn thatspn EVEX.L'Lspn vectorspn lengthspn wasspn notspn matchedspn whenspn EVEX.bspn wasspn setspn becausespn itspn wasspn simplyspn consideredspn asspn EVEC.RC.spn Separatedspn EVEX.L'Lspn casespn fromspn EVEX.RCspn whichspn isspn ignoredspn inspn matching.
subh C.1.24 :section-C.1.24
n Versionspn 2.11.03
bull
n Fixspn aspn bugspn therespn REXspn prefixesspn werespn missingspn onspn instructionsspn insidespn aspc TIMESspn statement.
subh C.1.25 :section-C.1.25
n Versionspn 2.11.02
bull
n Addspn thespc XSAVECn ,spc XSAVESspn andspc XRSTORSspn familyspn instructions.
bull
n Addspn thespc CLFLUSHOPTspn instruction.
subh C.1.26 :section-C.1.26
n Versionspn 2.11.01
bull
n Allowspn instructionsspn whichspn implicitlyspn usesspc XMM0spn (c VBLENDVPDn ,spc VBLENDVPSn ,spc PBLENDVBspn andspc SHA256RNDS2n )spn tospn bespn specifiedspn withoutspn anspn explicitspc xmm0spn onspn thespn assemblyspn line.spn Inspn otherspn words,spn thespn followingspn twospn linesspn producespn thespn samespn output:
code
     vblendvpd xmm2,xmm1,xmm0      ; Last operand is fixed xmm0      vblendvpd xmm2,xmm1           ; Implicit xmm0 omitted
bull
n Inspn thespn ELFspn backends,spn don'tspn crashspn thespn assemblerspn ifspc section alignspn isspn specifiedspn withoutspn aspn value.
subh C.1.27 :section-C.1.27
n Versionspn 2.11
bull
n Addspn supportspn forspn thespn Intelspn AVX-n 512spn instructionspn set:
bull
n 16spn new,spn 512-n bitspn SIMDspn registers.spn Totalspn 32spc (ZMM0 ~ ZMM31)
bull
n 8spn newspn opmaskspn registersspc (K0 ~ K7)n .spn Onespn ofspn 7spn registersspc (K1 ~ K7)spn canspn bespn usedspn asspn anspn opmaskspn forspn conditionalspn execution.
bull
n Aspn newspn EVEXspn encodingspn prefix.spn EVEXspn isspn basedspn onspn VEXspn andspn providesspn morespn capabilities:spn opmasks,spn broadcasting,spn embeddedspn roundingspn andspn compressedspn displacements.
code
 - opmask      VDIVPD zmm0{k1}{z}, zmm1, zmm3  ; conditional vector operation                                      ; using opmask k1.                                      ; {z} is for zero-masking  - broadcasting      VDIVPS zmm4, zmm5, [rbx]{1to16} ; load single-precision float and                                      ; replicate it 16 times. 32 * 16 = 512  - embedded rounding      VCVTSI2SD xmm6, xmm7, {rz-sae}, rax ; round toward zero. note that it                                       ; is used as if a separate operand.                                       ; it comes after the last SIMD operand
bull
n Addspn supportspn forspc ZWORDspn (512spn bits),spc DZspn andspc RESZn .
bull
n Addspn supportspn forspn thespn MPXspn andspn SHAspn instructionspn sets.
bull
n Betterspn handlingspn ofspn sectionspn redefinition.
bull
n Generatespn manpagesspn whenspn runningspc 'make dist'n .
bull
n Handlespn allspn tokenspn chainsspn inspn mmacrospn paramsspn range.
bull
n Supportspn splitspn [base,index]spn effectivespn address:
code
     mov eax,[eax+8,ecx*4]   ; eax=base, ecx=index, 4=scale, 8=disp
norm
n Thisspn isspn expectedspn tospn bespn mostspn usefulspn forspn thespn MPXspn instructions.
bull
n Supportspc BNDspn prefixspn forspn branchspn instructionsspn (forspn MPX).
bull
n Thespc DEFAULTspn directivespn canspn nowspn takespc BNDspn andspc NOBNDspn optionsspn tospn indicatespn whetherspn allspn relevantspn branchesspn shouldspn bespn gettingspc BNDspn prefixes.spn Thisspn isspn expectedspn tospn bespn thespn normalspn forspn usespn inspn MPXspn code.
bull
n Addspc {evexn },spc {vex3n }spn andspc {vex2n }spn instructionspn prefixesspn tospn havespn NASMspn encodespn thespn correspondingspn instruction,spn ifspn possible,spn withspn anspn EVEX,spn 3-n bytespn VEX,spn orspn 2-n bytespn VEXspn prefix,spn respectively.
bull
n Supportspn forspn sectionspn namesspn longerspn thanspn 8spn bytesspn inspn Win32/Win64spn COFF.
bull
n Thespc NOSPLITspn directivespn byspn itselfspn nospn longerspn forcesspn aspn singlespn registerspn tospn becomespn anspn indexspn register,spn unlessspn itspn hasspn anspn explicitspn multiplier.
code
     mov eax,[nosplit eax]       ; eax as base register      mov eax,[nosplit eax*1]     ; eax as index register
subh C.1.28 :section-C.1.28
n Versionspn 2.10.09
bull
n Pregeneratespn manspn pages.
subh C.1.29 :section-C.1.29
n Versionspn 2.10.08
bull
n Fixspc VMOVNTDQAn ,spc MOVNTDQAspn andspc MOVLPDspn instructions.
bull
n Fixspn collisionspn forspc VGATHERQPSn ,spc VPGATHERQDspn instructions.
bull
n Fixspc VPMOVSXBQn ,spc VGATHERQPDn ,spc VSPLLWspn instructions.
bull
n Addspn aspn bunchspn ofspn AMDspn TBMspn instructions.
bull
n Fixspn potentialspn stackspn overwritespn inspn numbersspn conversion.
bull
n Allowspn bytespn sizespn inspc PREFETCHTxspn instructions.
bull
n Makespn manualspn pagesspn upspn tospn date.
bull
n Makespc F3spn andspc F2spn SSEspn prefixesspn tospn overridespc 66n .
bull
n Supportspn ofspn AMDspn SVMspn instructionsspn inspn 32spn bitspn mode.
bull
n Fixspn nearspn offsetsspn codespn generationspn forspc JMPn ,spc CALLspn instrictionsspn inspn longspn mode.
bull
n Fixspn preprocessorspn parsespn regressionspn whenspn idspn isspn expandingspn tospn aspn whitespace.
subh C.1.30 :section-C.1.30
n Versionspn 2.10.07
bull
n Fixspn linespn continuationspn parsingspn beingspn brokenspn inspn previousspn version.
subh C.1.31 :section-C.1.31
n Versionspn 2.10.06
bull
n Alwaysspn quotespn thespn dependencyspn sourcespn namesspn whenspn usingspn thespn automaticspn dependencyspn generationspn options.
bull
n Ifspn nospn dependencyspn targetspn namespn isspn specifiedspn viaspn thespc -MTspn orspc -MQspn options,spn quotespn thespn defaultspn outputspn name.
bull
n Fixspn assemblyspn ofspn shiftspn operationsspn inspc CPU 8086spn mode.
bull
n Fixspn incorrectspn generationspn ofspn explicitspn immediatespn bytespn forspn shiftspn byspn 1spn underspn certainspn circumstances.
bull
n Fixspn assemblyspn ofspn thespc VPCMPGTQspn instruction.
bull
n Fixspn RIP-n relativespn relocationsspn inspn thespc macho64spn backend.
subh C.1.32 :section-C.1.32
n Versionspn 2.10.05
bull
n Addspn thespc CLACspn andspc STACspn instructions.
subh C.1.33 :section-C.1.33
n Versionspn 2.10.04
bull
n Addspn backspn thespn inadvertentlyspn deletedspn 256-n bitspn versionspn ofspn thespc VORPDspn instruction.
bull
n Correctspn disassemblyspn ofspn instructionsspn startingspn withspn bytespc 82spn hex.
bull
n Fixspn cornerspn casesspn inspn tokenspn pasting,spn forspn example:
code
   %define N 1e%++%+ 5            dd N, 1e+5
subh C.1.34 :section-C.1.34
n Versionspn 2.10.03
bull
n Correctspn thespn assemblyspn ofspn thespn instruction:
code
XRELEASE MOV [absolute],AL
indt
n Previousspn versionsspn wouldspn incorrectlyspn generatespc F3 A2spn forspn thisspn instructionspn andspn issuespn aspn warning;spn correctspn behaviorspn isspn tospn emitspc F3 88 05n .
subh C.1.35 :section-C.1.35
n Versionspn 2.10.02
bull
n Addspn thespc ifuncspn macrospn packagespn withspn integerspn functions,spn currentlyspn onlyspn integerspn logarithms.spn Seespx section-6.4n sectionspn 6.4xesection-6.4n .
bull
n Addspn thespc RDSEEDn ,spc ADCXspn andspc ADOXspn instructions.
subh C.1.36 :section-C.1.36
n Versionspn 2.10.01
bull
n Addspn missingspn VPMOVMSKBspn instructionspn withspn reg32,spn ymmregspn operands.
subh C.1.37 :section-C.1.37
n Versionspn 2.10
bull
n Whenspn optimizationspn isspn enabled,spc mov r64,immspn nowspn optimizesspn tospn thespn shortestspn formspn possiblespn between:
code
     mov r32,imm32                   ;  5 bytes      mov r64,imm32                   ;  7 bytes      mov r64,imm64                   ; 10 bytes
indt
n Tospn forcespn aspn specificspn form,spn usespn thespc STRICTspn keyword,spn seespx section-3.7n sectionspn 3.7xesection-3.7n .
bull
n Addspn supportspn forspn thespn Intelspn AVX2spn instructionspn set.
bull
n Addspn supportspn forspn Bitspn Manipulationspn Instructionsspn 1spn andspn 2.
bull
n Addspn supportspn forspn Intelspn Transactionalspn Synchronizationspn Extensionsspn (TSX).
bull
n Addspn supportspn forspn x32spn ELFspn (32-n bitspn ELFspn withspn thespn CPUspn inspn 64-n bitspn mode.)spn Seespx section-8.9n sectionspn 8.9xesection-8.9n .
bull
n Addspn supportspn forspn bigendianspn UTF-n 16spn andspn UTF-n 32.spn Seespx section-3.4.5n sectionspn 3.4.5xesection-3.4.5n .
subh C.1.38 :section-C.1.38
n Versionspn 2.09.10
bull
n Fixspn upspn NSISspn scriptspn tospn protectspn uninstallerspn againstspn registryspn keysspn absencespn orspn corruption.spn Itspn bringsspn inspn aspn fewspn additionalspn questionsspn tospn aspn userspn duringspn deinstallationspn procedurespn butspn stillspn itspn isspn betterspn thanspn unpredictablespn filespn removal.
subh C.1.39 :section-C.1.39
n Versionspn 2.09.09
bull
n Fixspn initializationspn ofspn sectionspn attributesspn ofspc binspn outputspn format.
bull
n Fixspc mach64spn outputspn formatspn bugspn thatspn crashesspn NASMspn duespn tospn NULLspn symbols.
subh C.1.40 :section-C.1.40
n Versionspn 2.09.08
bull
n Fixspc __OUTPUT_FORMAT__spn assignmentspn whenspn outputspn driverspn aliasspn isspn used.spn Forspn examplespn whenspc -f elfspn isspn usedspc __OUTPUT_FORMAT__spn mustspn bespn setspn tospc elfn ,spn ifspc -f elf32spn isspn usedspc __OUTPUT_FORMAT__spn mustspn bespn assignedspn accordingly,spn i.e.spn tospc elf32n .spn Thespn rulespn appliesspn tospn allspn outputspn driverspn aliases.spn Seespx section-5.4n sectionspn 5.4xesection-5.4n .
subh C.1.41 :section-C.1.41
n Versionspn 2.09.07
bull
n Fixspn attemptsspn tospn closespn samespn filespn severalspn timesspn whenspc -aspn optionspn isspn used.
bull
n Fixesspn forspn VEXTRACTF128,spn VMASKMOVPSspn encoding.
subh C.1.42 :section-C.1.42
n Versionspn 2.09.06
bull
n Fixspn missedspn sectionspn attributespn initializationspn inspc binspn outputspn target.
subh C.1.43 :section-C.1.43
n Versionspn 2.09.05
bull
n Fixspn argumentsspn encodingspn forspn VPEXTRWspn instruction.
bull
n Removespn invalidspn formspn ofspn VPEXTRWspn instruction.
bull
n Addspc VLDDQUspn asspn aliasspn forspc VLDQQUspn tospn matchspn specification.
subh C.1.44 :section-C.1.44
n Versionspn 2.09.04
bull
n Fixspn incorrectspn labelsspn offsetspn forspn VEXspn intructions.
bull
n Eliminatespn bogusspn warningspn onspn implicitspn operandspn sizespn override.
bull
c %ifspn termspn couldspn notspn handlespn 64spn bitspn numbers.
bull
n Thespn COFFspn backendspn wasspn limitingspn relocationsspn numberspn tospn 16spn bitsspn evenspn ifspn inspn realspn therespn werespn aspn wayspn morespn relocations.
subh C.1.45 :section-C.1.45
n Versionspn 2.09.03
bull
n Printspc %macrospn namespn insidespc %repspn blocksspn onspn error.
bull
n Fixspn preprocessorspn expansionspn behaviour.spn Itspn happenedspn sometimespn toospn earlyspn andspn sometimespn simplyspn wrong.spn Movespn behaviourspn backspn tospn thespn originsspn (downspn tospn NASMspn 2.05.01).
bull
n Fixspn unitializedspn dataspn dereferencespn onspn OMFspn outputspn format.
bull
n Issuespn warningspn onspn unterminatedspc %{spn construct.
bull
n Fixspn forspn documentationspn typo.
subh C.1.46 :section-C.1.46
n Versionspn 2.09.02
bull
n Fixspn reversedspn tokensspn whenspc %deftokspn producesspn morespn thanspn onespn outputspn token.
bull
n Fixspn segmentationspn faultspn onspn disassemblingspn somespn VEXspn instructions.
bull
n Missingspc %endifspn didspn notspn alwaysspn causespn error.
bull
n Fixspn typospn inspn documentation.
bull
n Compoundspn contextspn localspn preprocessorspn singlespn linespn macrospn identifiersspn werespn notspn expandedspn earlyspn enoughspn andspn asspn resultspn leadspn tospn unresolvedspn symbols.
subh C.1.47 :section-C.1.47
n Versionspn 2.09.01
bull
n Fixspn NULLspn dereferencespn onspn missedspn %deftokspn secondspn parameter.
bull
n Fixspn NULLspn dereferencespn onspn invalidspn %substrspn parameters.
subh C.1.48 :section-C.1.48
n Versionspn 2.09
bull
n Fixedspn assignmentspn thespn magnitudespn ofspc %repspn counter.spn Itspn isspn limitedspn tospn 62spn bitsspn now.
bull
n Fixedspn NULLspn dereferencespn ifspn argumentspn ofspc %strlenspn resolvesspn tospn whitespace.spn Forspn examplespn ifspn nonexistentspn macrospn parameterspn isspn used.
bull
c %ifenvn ,spc %elifenvn ,spc %ifnenvn ,spn andspc %elifnenvspn directivesspn introduced.spn Seespx section-4.4.9n sectionspn 4.4.9xesection-4.4.9n .
bull
n Fixedspn NULLspn dereferencespn ifspn environmentspn variablespn isspn missed.
bull
n Updatesspn ofspn newspn AVXspn v7spn Intelspn instructions.
bull
c PUSH imm32spn isspn nowspn officiallyspn documented.
bull
n Fixspn forspn encodingspn thespn LFS,spn LGSspn andspn LSSspn inspn 64-n bitspn mode.
bull
n Fixesspn forspn compatibilityspn withspn OpenWatcomspn compilerspn andspn DOSspn 8.3spn filespn formatspn limitation.
bull
n Macrosspn parametersspn rangespn expansionspn introduced.spn Seespx section-4.3.4n sectionspn 4.3.4xesection-4.3.4n .
bull
n Backwardspn compatibilityspn onspn expangingspn ofspn localspn siglespn macrosspn restored.
bull
n 8spn bitspn relocationsspn forspc elfspn andspc binspn outputspn formatsspn arespn introduced.
bull
n Shortspn intersegmentspn jumpsspn arespn permittedspn now.
bull
n Anspn alignmentspn morespn thanspn 64spn bytesspn arespn allowedspn forspc win32n ,spc win64spn outputspn formats.
bull
c SECTALIGNspn directivespn introduced.spn Seespx section-5.10.2n sectionspn 5.10.2xesection-5.10.2n .
bull
c nojmpspn optionspn introducedspn inspc smartalignspn package.spn Seespx section-6.2n sectionspn 6.2xesection-6.2n .
bull
n Shortspn aliasesspc winn ,spc elfspn andspc machospn forspn outputspn formatsspn arespn introduced.spn Eachspn standsspn forspc win32n ,spc elf32spn andspc macho32spn accordingly.
bull
n Fasterspn handlingspn ofspn missingspn directivesspn implemented.
bull
n Variousspn smallspn improvementsspn inspn documentation.
bull
n Nospn hangspn anymorespn ifspn unablespn tospn openspn malloc.logspn file.
bull
n Thespn environmentsspn withoutspn vsnprintfspn functionspn arespn ablespn tospn buildspn nasmspn again.
bull
n AMDspn LWPspn instructionsspn updated.
bull
n Tightenspn EAspn checks.spn Wespn warnspn aspn userspn ifspn therespn overflowspn inspn EAspn addressing.
bull
n Makespc -Oxspn thespn defaultspn optimizationspn level.spn Forspn thespn legacyspn behavior,spn specifyspc -O0spn explicitly.spn Seespx section-2.1.24n sectionspn 2.1.24xesection-2.1.24n .
bull
n Environmentspn variablesspn readspn withspc %!spn orspn testedspn withspc %ifenvspn canspn nowspn containspn non-n identifierspn charactersspn ifspn surroundedspn byspn quotes.spn Seespx section-4.11.2n sectionspn 4.11.2xesection-4.11.2n .
bull
n Addspn aspn newspn standardspn macrospn packagespc %use fpspn forspn floating-n pointspn conveniencespn macros.spn Seespx section-6.3n sectionspn 6.3xesection-6.3n .
subh C.1.49 :section-C.1.49
n Versionspn 2.08.02
bull
n Fixspn crashspn underspn certainspn circumstancesspn whenspn usingspn thespc %+spn operator.
subh C.1.50 :section-C.1.50
n Versionspn 2.08.01
bull
n Fixspn thespc %usespn statement,spn whichspn wasspn brokenspn inspn 2.08.
subh C.1.51 :section-C.1.51
n Versionspn 2.08
bull
n Aspn numberspn ofspn enhancements/fixesspn inspn macrosspn area.
bull
n Supportspn forspn convertingspn stringsspn tospn tokens.spn Seespx section-4.1.10n sectionspn 4.1.10xesection-4.1.10n .
bull
n Fuzzyspn operandspn sizespn logicspn introduced.
bull
n Fixspn COFFspn stackspn overrunspn onspn toospn longspn exportspn identifiers.
bull
n Fixspn Macho-n Ospn alignmentspn bug.
bull
n Fixspn crashesspn withspdan fwin32spn onspn filespn withspn manyspn exports.
bull
n Fixspn stackspn overrunspn forspn toospn longspn [DEBUGspn id].
bull
n Fixspn incorrectspn sbytespn usagespn inspn IMULspn (hitspn onlyspn ifspn optimizationspn flagspn passed).
bull
n Appendspn endingspn tokenspn forspc .stabsspn recordsspn inspn thespn ELFspn outputspn format.
bull
n Newspn NSISspn scriptspn whichspn usesspn ModernUIspn andspn MultiUserspn approach.
bull
n Visualspn Studiospn 2008spn NASMspn integrationspn (rulesspn file).
bull
n Warnspn aspn userspn ifspn aspn constantspn isspn toospn longspn (andspn asspn resultspn willspn bespn stripped).
bull
n Thespn obsoletedspn pre-n XOPspn AMDspn SSE5spn instructionspn setspn whichspn wasspn neverspn actualizedspn wasspn removed.
bull
n Fixspn stackspn overrunspn onspn toospn longspn errorspn filespn namespn passedspn fromspn thespn commandspn line.
bull
n Bindspn symbolsspn tospn thespn .textspn sectionspn byspn defaultspn (iespn inspn casespn ifspn SECTIONspn directivespn wasspn omitted)spn inspn thespn ELFspn outputspn format.
bull
n Fixspn syncspn pointsspn arrayspn indexspn wrapping.
bull
n Aspn fewspn fixesspn forspn FMA4spn andspn XOPspn instructionspn templates.
bull
n Addspn AMDspn Lightweightspn Profilingspn (LWP)spn instructions.
bull
n Fixspn thespn offsetspn forspc %argspn inspn 64-n bitspn mode.
bull
n Anspn undefinedspn localspn macrospn (c %$n )spn nospn longerspn matchesspn aspn globalspn macrospn withspn thespn samespn name.
bull
n Fixspn NULLspn dereferencespn onspn toospn longspn localspn labels.
subh C.1.52 :section-C.1.52
n Versionspn 2.07
bull
n NASMspn isspn nowspn underspn thespn 2-n clausespn BSDspn license.spn Seespx section-1.1.1n sectionspn 1.1.1xesection-1.1.1n .
bull
n Fixspn thespn sectionspn typespn forspn thespc .strtabspn sectionspn inspn thespc elf64spn outputspn format.
bull
n Fixspn thespn handlingspn ofspc COMMONspn directivesspn inspn thespc objspn outputspn format.
bull
n Newspc ithspn andspc srecspn outputspn formats;spn thesespn arespn variantsspn ofspn thespc binspn outputspn formatspn whichspn outputspn Intelspn hexspn andspn Motorolaspn S-n records,spn respectively.spn Seespx section-8.2n sectionspn 8.2xesection-8.2spn andspx section-8.3n sectionspn 8.3xesection-8.3n .
bull
c rdf2ihxspn replacedspn withspn anspn enhancedspc rdf2binn ,spn whichspn canspn outputspn binary,spn COM,spn Intelspn hexspn orspn Motorolaspn S-n records.
bull
n Thespn Windowsspn installerspn nowspn putsspn thespn NASMspn directoryspn firstspn inspn thespc PATHspn ofspn thespn "NASMspn Shell".
bull
n Revertspn thespn earlyspn expansionspn behaviorspn ofspc %+spn tospn pre-n 2.06spn behavior:spc %+spn isspn onlyspn expandedspn late.
bull
n Yetspn anotherspn Mach-n Ospn alignmentspn fix.
bull
n Don'tspn deletespn thespn listspn filespn onspn errors.spn Also,spn includespn errorspn andspn warningspn informationspn inspn thespn listspn file.
bull
n Supportspn forspn 64-n bitspn Mach-n Ospn output,spn seespx section-8.8n sectionspn 8.8xesection-8.8n .
bull
n Fixspn assertspn failurespn onspn certainspn operationsspn thatspn involvespn stringsspn withspn high-n bitspn bytes.
subh C.1.53 :section-C.1.53
n Versionspn 2.06
bull
n Thisspn releasespn isspn dedicatedspn tospn thespn memoryspn ofspn Charlesspn A.spn Crayne,spn longspn timespn NASMspn developerspn asspn wellspn asspn moderatorspn ofspc comp.lang.asm.x86spn andspn authorspn ofspn thespn bookspesSeriousspeeAssemblern .spn Wespn missspn you,spn Chuck.
bull
n Supportspn forspn indirectspn macrospn expansionspn (c %[...]n ).spn Seespx section-4.1.3n sectionspn 4.1.3xesection-4.1.3n .
bull
c %popspn canspn nowspn takespn anspn argument,spn seespx section-4.7.1n sectionspn 4.7.1xesection-4.7.1n .
bull
n Thespn argumentspn tospc %usespn isspn nospn longerspn macro-n expanded.spn Usespc %[...]spn ifspn macrospn expansionspn isspn desired.
bull
n Supportspn forspn thread-n localspn storagespn inspn ELF32spn andspn ELF64.spn Seespx section-8.9.4n sectionspn 8.9.4xesection-8.9.4n .
bull
n Fixspn crashspn onspc %ifmacrospn withoutspn anspn argument.
bull
n Correctspn thespn argumentsspn tospn thespc POPCNTspn instruction.
bull
n Fixspn sectionspn alignmentspn inspn thespn Mach-n Ospn format.
bull
n Updatespn AVXspn supportspn tospn versionspn 5spn ofspn thespn Intelspn specification.
bull
n Fixspn thespn handlingspn ofspn accessesspn tospn context-n localspn macrosspn fromspn higherspn levelsspn inspn thespn contextspn stack.
bull
n Treatspc WAITspn asspn aspn prefixspn ratherspn thanspn asspn anspn instruction,spn therebyspn allowingspn constructsspn likespc O16 FSAVEspn tospn workspn correctly.
bull
n Supportspn forspn structuresspn withspn aspn non-n zerospn basespn offset.spn Seespx section-5.9.1n sectionspn 5.9.1xesection-5.9.1n .
bull
n Correctlyspn handlespn preprocessorspn tokenspn concatenationspn (seespx section-4.3.9n sectionspn 4.3.9xesection-4.3.9n )spn involvingspn floating-n pointspn numbers.
bull
n Thespc PINSRspn seriesspn ofspn instructionsspn havespn beenspn correctedspn andspn rationalized.
bull
n Removedspn AMDspn SSE5,spn replacedspn withspn thespn newspn XOP/FMA4/CVT16spn (revspn 3.03)spn spec.
bull
n Thespn ELFspn backendsspn nospn longerspn automaticallyspn generatespn aspc .commentspn section.
bull
n Addspn additionalspn "well-n known"spn ELFspn sectionsspn withspn defaultspn attributes.spn Seespx section-8.9.2n sectionspn 8.9.2xesection-8.9.2n .
subh C.1.54 :section-C.1.54
n Versionspn 2.05.01
bull
n Fixspn thespc -wn /c -Wspn optionspn parsing,spn whichspn wasspn brokenspn inspn NASMspn 2.05.
subh C.1.55 :section-C.1.55
n Versionspn 2.05
bull
n Fixspn redundantspn REX.Wspn prefixspn onspc JMP reg64n .
bull
n Makespn thespn behaviourspn ofspc -O0spn matchspn NASMspn 0.98spn legacyspn behavior.spn Seespx section-2.1.24n sectionspn 2.1.24xesection-2.1.24n .
bull
c -w-userspn canspn bespn usedspn tospn suppressspn thespn outputspn ofspc %warningspn directives.spn Seespx section-2.1.26n sectionspn 2.1.26xesection-2.1.26n .
bull
n Fixspn bugspn wherespc ALIGNspn wouldspn issuespn aspn fullspn alignmentspn datumspn insteadspn ofspn zerospn bytes.
bull
n Fixspn offsetsspn inspn listspn files.
bull
n Fixspc %includespn insidespn multi-n linespn macrosspn orspn loops.
bull
n Fixspn errorspn wherespn NASMspn wouldspn generatespn aspn spuriousspn warningspn onspn validspn optimizationsspn ofspn immediatespn values.
bull
n Fixspn argumentsspn tospn aspn numberspn ofspn thespc CVTspn SSEspn instructions.
bull
n Fixspn RIP-n relativespn offsetsspn whenspn thespn instructionspn carriesspn anspn immediate.
bull
n Massivespn overhaulspn ofspn thespn ELF64spn backendspn forspn specspn compliance.
bull
n Fixspn thespn Geodespc PFRCPVspn andspc PFRSQRTVspn instruction.
bull
n Fixspn thespn SSEspn 4.2spc CRC32spn instruction.
subh C.1.56 :section-C.1.56
n Versionspn 2.04
bull
n Sanitizespn macrospn handingspn inspn thespc %errorspn directive.
bull
n Newspc %warningspn directivespn tospn issuespn user-n controlledspn warnings.
bull
c %errorspn directivesspn arespn nowspn deferredspn tospn thespn finalspn assemblyspn phase.
bull
n Newspc %fatalspn directivespn tospn immediatelyspn terminatespn assembly.
bull
n Newspc %strcatspn directivespn tospn joinspn quotedspn stringsspn together.
bull
n Newspc %usespn macrospn directivespn tospn supportspn standardspn macrospn directives.spn Seespx section-4.6.4n sectionspn 4.6.4xesection-4.6.4n .
bull
n Excessspn defaultspn parametersspn tospc %macrospn nowspn issuesspn aspn warningspn byspn default.spn Seespx section-4.3n sectionspn 4.3xesection-4.3n .
bull
n Fixspc %ifnspn andspc %elifnn .
bull
n Fixspn nestedspc %elsespn clauses.
bull
n Correctspn thespn handlingspn ofspn nestedspc %repn s.
bull
n Newspc %unmacrospn directivespn tospn undeclarespn aspn multi-n linespn macro.spn Seespx section-4.3.12n sectionspn 4.3.12xesection-4.3.12n .
bull
n Builtinspn macrospc __PASS__spn whichspn expandsspn tospn thespn currentspn assemblyspn pass.spn Seespx section-5.8n sectionspn 5.8xesection-5.8n .
bull
c __utf16__spn andspc __utf32__spn operatorsspn tospn generatespn UTF-n 16spn andspn UTF-n 32spn strings.spn Seespx section-3.4.5n sectionspn 3.4.5xesection-3.4.5n .
bull
n Fixspn bugspn inspn case-n insensitivespn matchingspn whenspn compiledspn onspn platformsspn thatspn don'tspn usespn thespc configurespn script.spn Ofspn thespn officialspn releasespn binaries,spn thatspn onlyspn affectedspn thespn OS/2spn binary.
bull
n Supportspn forspn x87spn packedspn BCDspn constants.spn Seespx section-3.4.7n sectionspn 3.4.7xesection-3.4.7n .
bull
n Correctspn thespc LTRspn andspc SLDTspn instructionsspn inspn 64-n bitspn mode.
bull
n Fixspn unnecessaryspn REX.Wspn prefixspn onspn indirectspn jumpsspn inspn 64-n bitspn mode.
bull
n Addspn AVXspn versionsspn ofspn thespn AESspn instructionsspn (c VAESn ...).
bull
n Fixspn thespn 256-n bitspn FMAspn instructions.
bull
n Addspn 256-n bitspn AVXspn storesspn perspn thespn latestspn AVXspn spec.
bull
n VIAspn XCRYPTspn instructionsspn canspn nowspn bespn writtenspn eitherspn withspn orspn withoutspc REPn ,spn apparentlyspn differentspn versionsspn ofspn thespn VIAspn specspn wrotespn themspn differently.
bull
n Addspn missingspn 64-n bitspc MOVNTIspn instruction.
bull
n Fixspn thespn operandspn sizespn ofspc VMREADspn andspc VMWRITEn .
bull
n Numerousspn bugspn fixes,spn especiallyspn tospn thespn AES,spn AVXspn andspn VTXspn instructions.
bull
n Thespn optimizerspn nowspn alwaysspn runsspn untilspn itspn converges.spn Itspn alsospn runsspn evenspn whenspn disabled,spn butspn doesn'tspn optimize.spn Thisspn allowsspn mostspn forwardspn referencesspn tospn bespn resolvedspn properly.
bull
c %pushspn nospn longerspn needsspn aspn contextspn identifier;spn omittingspn thespn contextspn identifierspn resultsspn inspn anspn anonymousspn context.
subh C.1.57 :section-C.1.57
n Versionspn 2.03.01
bull
n Fixspn bufferspn overflowspn inspn thespn listingspn module.
bull
n Fixspn thespn handlingspn ofspn hexadecimalspn escapespn codesspn inspn `...`spn strings.
bull
n Thespn Postscript/PDFspn documentationspn hasspn beenspn reformatted.
bull
n Thespc -Fspn optionspn nowspn impliesspc -gn .
subh C.1.58 :section-C.1.58
n Versionspn 2.03
bull
n Addspn supportspn forspn Intelspn AVX,spn CLMULspn andspn FMAspn instructions,spn includingspn YMMspn registers.
bull
c dyn ,spc resyspn andspc ywordspn forspn 32-n bytespn operands.
bull
n Fixspn somespn SSE5spn instructions.
bull
n Intelspc INVEPTn ,spc INVVPIDspn andspc MOVBEspn instructions.
bull
n Fixspn checkingspn forspn criticalspn expressionsspn whenspn thespn optimizerspn isspn enabled.
bull
n Supportspn thespn DWARFspn debuggingspn formatspn forspn ELFspn targets.
bull
n Fixspn optimizationsspn ofspn signedspn bytes.
bull
n Fixspn operationspn onspn bigendianspn machines.
bull
n Fixspn bufferspn overflowspn inspn thespn preprocessor.
bull
c SAFESEHspn supportspn forspn Win32,spc IMAGERELspn forspn Win64spn (SEH).
bull
c %?spn andspc %??spn tospn referspn tospn thespn namespn ofspn aspn macrospn itself.spn Inspn particular,spc %idefine keyword $%?spn canspn bespn usedspn tospn makespn aspn keywordspn "disappear".
bull
n Newspn optionsspn forspn dependencyspn generation:spc -MDn ,spc -MFn ,spc -MPn ,spc -MTn ,spc -MQn .
bull
n Newspn preprocessorspn directivesspc %pathsearchspn andspc %dependn ;spn INCBINspn reimplementedspn asspn aspn macro.
bull
c %includespn nowspn resolvesspn macrosspn inspn aspn sanespn manner.
bull
c %substrspn canspn nowspn bespn usedspn tospn getspn otherspn thanspn one-n characterspn substrings.
bull
n Newspn typespn ofspn character/stringspn constants,spn usingspn backquotesspn (c `...`n ),spn whichspn supportspn C-n stylespn escapespn sequences.
bull
c %defstrspn andspc %idefstrspn tospn stringizespn macrospn definitionsspn beforespn creation.
bull
n Fixspn forwardspn referencesspn usedspn inspc EQUspn statements.
subh C.1.59 :section-C.1.59
n Versionspn 2.02
bull
n Additionalspn fixesspn forspn MMXspn operandsspn withspn explicitspc qwordn ,spn asspn wellspn asspn (hopefully)spn SSEspn operandsspn withspc owordn .
bull
n Fixspn handlingspn ofspn truncatedspn stringsspn withspc DOn .
bull
n Fixspn segfaultsspn duespn tospn memoryspn overwritesspn whenspn floating-n pointspn constantsspn werespn used.
bull
n Fixspn segfaultsspn duespn tospn missingspn includespn files.
bull
n Fixspn OpenWatcomspn Makefilesspn forspn DOSspn andspn OS/2.
bull
n Addspn autogeneratedspn instructionspn listspn backspn intospn thespn documentation.
bull
n ELF:spn Fixspn segfaultspn whenspn generatingspn stabs,spn andspn nospn symbolsspn havespn beenspn defined.
bull
n ELF:spn Experimentalspn supportspn forspn DWARFspn debuggingspn information.
bull
n Newspn compilespn datespn andspn timespn standardspn macros.
bull
c %ifnumspn nowspn returnsspn truespn forspn negativespn numbers.
bull
n Newspc %iftokenspn testspn forspn aspn singlespn token.
bull
n Newspc %ifemptyspn testspn forspn emptyspn expansion.
bull
n Addspn supportspn forspn thespc XSAVEspn instructionspn group.
bull
n Makefilespn forspn Netware/gcc.
bull
n Fixspn issuespn withspn somespn warningsspn gettingspn emittedspn wayspn toospn manyspn times.
bull
n Autogeneratedspn instructionspn listspn addedspn tospn thespn documentation.
subh C.1.60 :section-C.1.60
n Versionspn 2.01
bull
n Fixspn thespn handlingspn ofspn MMXspn registersspn withspn explicitspc qwordspn tagsspn onspn memoryspn (brokenspn inspn 2.00spn duespn tospn 64-n bitspn changes.)
bull
n Fixspn thespn PREFETCHspn instructions.
bull
n Fixspn thespn documentation.
bull
n Fixspn debuggingspn infospn whenspn usingspc -f elfspn (backwardsspn compatibilityspn aliasspn forspc -f elf32n ).
bull
n Manspn pagesspn forspn rdoffspn toolsspn (fromspn thespn Debianspn project.)
bull
n ELF:spn handlespn largespn numbersspn ofspn sections.
bull
n Fixspn corruptspn outputspn whenspn thespn optimizerspn runsspn outspn ofspn passes.
subh C.1.61 :section-C.1.61
n Versionspn 2.00
bull
n Addedspn c99spn data-n typespn compliance.
bull
n Addedspn generalspn x86-n 64spn support.
bull
n Addedspn win64spn (x86-n 64spn COFF)spn outputspn format.
bull
n Addedspc __BITS__spn standardspn macro.
bull
n Renamedspn thespc elfspn outputspn formatspn tospc elf32spn forspn clarity.
bull
n Addedspc elf64spn andspc machospn (MacOSspn X)spn outputspn formats.
bull
n Addedspn Numericspn constantsspn inspc dqspn directive.
bull
n Addedspc owordn ,spc dospn andspc resospn pseudospn operands.
bull
n Allowspn underscoresspn inspn numbers.
bull
n Addedspn 8-n ,spn 16-spn andspn 128-n bitspn floating-n pointspn formats.
bull
n Addedspn binary,spn octalspn andspn hexadecimalspn floating-n point.
bull
n Correctspn thespn generationspn ofspn floating-n pointspn constants.
bull
n Addedspn floating-n pointspn optionspn control.
bull
n Addedspn Infinityspn andspn NaNspn floatingspn pointspn support.
bull
n Addedspn ELFspn Symbolspn Visibilityspn support.
bull
n Addedspn settingspn OSABIspn valuespn inspn ELFspn headerspn directive.
bull
n Addedspn Generatespn Makefilespn Dependenciesspn option.
bull
n Addedspn Unlimitedspn Optimizationspn Passesspn option.
bull
n Addedspc %IFNspn andspc %ELIFNspn support.
bull
n Addedspn Logicalspn Negationspn Operator.
bull
n Enhancedspn Stackspn Relativespn Preprocessorspn Directives.
bull
n Enhancedspn ELFspn Debugspn Formats.
bull
n Enhancedspn Sendspn Errorsspn tospn aspn Filespn option.
bull
n Addedspn SSSE3,spn SSE4.1,spn SSE4.2,spn SSE5spn support.
bull
n Addedspn aspn largespn numberspn ofspn additionalspn instructions.
bull
n Significantspn performancespn improvements.
bull
c -w+warningspn andspc -w-warningspn canspn nowspn bespn writtenspn asspdan Wwarningspn andspdan Wno-n warning,spn respectively.spn Seespx section-2.1.26n sectionspn 2.1.26xesection-2.1.26n .
bull
n Addspc -w+errorspn tospn treatspn warningsspn asspn errors.spn Seespx section-2.1.26n sectionspn 2.1.26xesection-2.1.26n .
bull
n Addspc -w+allspn andspc -w-allspn tospn enablespn orspn disablespn allspn suppressiblespn warnings.spn Seespx section-2.1.26n sectionspn 2.1.26xesection-2.1.26n .
head C.2 :section-C.2
n NASMspn 0.98spn Series
norm
n Thespn 0.98spn seriesspn wasspn thespn productionspn versionsspn ofspn NASMspn fromspn 1999spn tospn 2007.
subh C.2.1 :section-C.2.1
n Versionspn 0.98.39
bull
n fixspn bufferspn overflow
bull
n fixspn outas86'sspc .bssspn handling
bull
n "makespn spotless"spn nospn longerspn deletesspn config.h.in.
bull
c %(el)if(n)idnspn insensitivityspn tospn stringspn quotesspn differencespn (#809300).
bull
n (nasm.c)c __OUTPUT_FORMAT__spn changedspn tospn stringspn valuespn insteadspn ofspn symbol.
subh C.2.2 :section-C.2.2
n Versionspn 0.98.38
bull
n Addspn Makefilespn forspn 16-n bitspn DOSspn binariesspn underspn OpenWatcom,spn andspn modifyspc mkdep.plspn tospn bespn ablespn tospn generatespn completelyspn pathlessspn dependencies,spn asspn requiredspn byspn OpenWatcomspn wmakespn (itspn supportsspn pathspn searches,spn butspn notspn explicitspn paths.)
bull
n Fixspn thespc STRspn instruction.
bull
n Fixspn thespn ELFspn outputspn format,spn whichspn wasspn brokenspn underspn certainspn circumstancesspn duespn tospn thespn additionspn ofspn stabsspn support.
bull
n Quick-n fixspn Borlandspn formatspn debug-n infospn forspc -f obj
bull
n Fixspn forspc %repspn withspn nospn argumentsspn (#560568)
bull
n Fixspn concatenationspn ofspn preprocessorspn functionspn callspn (#794686)
bull
n Fixspn longspn labelspn causesspn coredumpspn (#677841)
bull
n Usespn autoheaderspn asspn wellspn asspn autoconfspn tospn keepspn configurespn fromspn generatingspn ridiculouslyspn longspn commandspn lines.
bull
n Makespn surespn thatspn allspn ofspn thespn formatsspn whichspn supportspn debuggingspn outputspn actuallyspn willspn suppressspn debuggingspn outputspn whenspc -gspn notspn specified.
subh C.2.3 :section-C.2.3
n Versionspn 0.98.37
bull
n Pathsspn givenspn inspc -Ispn switchspn searchedspn forspc incbindan edspn asspn wellspn asspc %includedan edspn files.
bull
n Addedspn stabsspn debuggingspn forspn thespn ELFspn outputspn format,spn patchspn fromspn Martinspn Wawro.
bull
n Fixspc output/outbin.cspn tospn allowspn originspn >spn 80000000h.
bull
n Makespc -Uspn switchspn work.
bull
n Fixspn thespn usespn ofspn relativespn offsetsspn withspn explicitspn prefixes,spn e.g.spc a32 loop foon .
bull
n Removespc backslash()n .
bull
n Fixspn thespc SMSWspn andspc SLDTspn instructions.
bull
c -O2spn andspc -O3spn arespn nospn longerspn aliasesspn forspc -O10spn andspc -O15n .spn Ifspn youspn meanspn thespn latter,spn pleasespn sayspn so!spn :)
subh C.2.4 :section-C.2.4
n Versionspn 0.98.36
bull
n Updatespn rdoffspdaspn librarian/archiverspdaspn commonspn recspdaspn docs!
bull
n Fixspn signed/unsignedspn problems.
bull
n Fixspc JMP FAR labelspn andspc CALL FAR labeln .
bull
n Addspn newspn multisectionspn supportspdaspn mapspn filesspdaspn fixspn alignspn bug
bull
n Fixspn sysexit,spn movhps/movlpsspn reg,regspn bugsspn inspn insns.dat
bull
c Qspn orspc Ospn suffixesspn indicatespn octal
bull
n Supportspn Prescottspn newspn instructionsspn (PNI).
bull
n Cyrixspc XSTOREspn instruction.
subh C.2.5 :section-C.2.5
n Versionspn 0.98.35
bull
n Fixspn buildspn failurespn onspn 16-n bitspn DOSspn (Makefile.bc3spn workaroundspn forspn compilerspn bug.)
bull
n Fixspn dependenciesspn andspn compilerspn warnings.
bull
n Addspn "const"spn inspn aspn numberspn ofspn places.
bull
n Addspdan Xspn optionspn tospn specifyspn errorspn reportingspn formatspn (usespdan Xvcspn tospn integratespn withspn Microsoftspn Visualspn Studio.)
bull
n Minorspn changesspn forspn codespn legibility.
bull
n Dropspn usespn ofspn tmpnam()spn inspn rdoffspn (securityspn fix.)
subh C.2.6 :section-C.2.6
n Versionspn 0.98.34
bull
n Correctspn additionalspn address-n sizespn vs.spn operand-n sizespn confusions.
bull
n Generatespn dependenciesspn forspn allspn Makefilesspn automatically.
bull
n Addspn supportspn forspn unimplementedspn (butspn theoreticallyspn available)spn registersspn suchspn asspn tr0spn andspn cr5.spn Segmentspn registersspn 6spn andspn 7spn arespn calledspn segr6spn andspn segr7spn forspn thespn operationsspn whichspn theyspn canspn bespn represented.
bull
n Correctspn somespn disassemblerspn bugsspn relatedspn tospn redundantspn address-n sizespn prefixes.spn Somespn workspn stillspn remainsspn inspn thisspn area.
bull
n Correctlyspn generatespn anspn errorspn forspn thingsspn likespn "SEGspn eax".
bull
n Addspn thespn JMPEspn instruction,spn enabledspn byspn "CPUspn IA64".
bull
n Correctspn compilationspn onspn newerspn gcc/glibcspn platforms.
bull
n Issuespn anspn errorspn onspn thingsspn likespn "jmpspn farspn eax".
subh C.2.7 :section-C.2.7
n Versionspn 0.98.33
bull
n Newspn __NASM_PATCHLEVEL__spn andspn __NASM_VERSION_ID__spn standardspn macrosspn tospn roundspn outspn thespn version-n queryspn macros.spn version.plspn nowspn understandsspn X.YYplWWspn orspn X.YY.ZZplWWspn asspn aspn versionspn number,spn equivalentspn tospn X.YY.ZZ.WWspn (orspn X.YY.0.WW,spn asspn appropriate).
bull
n Newspn keywordspn "strict"spn tospn disablespn thespn optimizationspn ofspn specificspn operands.
bull
n Fixspn thespn handingspn ofspn sizespn overridesspn withspn JMPspn instructionsspn (instructionsspn suchspn asspn "jmpspn dwordspn foo".)
bull
n Fixspn thespn handlingspn ofspn "ABSOLUTEspn label",spn wherespn "label"spn pointsspn intospn aspn relocatablespn segment.
bull
n Fixspn OBJspn outputspn formatspn withspn lotsspn ofspn externs.
bull
n Morespn documentationspn updates.
bull
n Addspdan Ovspn optionspn tospn getspn verbosespn informationspn aboutspn optimizations.
bull
n Undospn aspn braindeadspn changespn whichspn brokespc %elifspn directives.
bull
n Makefilespn updates.
subh C.2.8 :section-C.2.8
n Versionspn 0.98.32
bull
n Fixspn NASMspn crashingspn whenspc %macrospn directivesspn werespn leftspn unterminated.
bull
n Lotsspn ofspn documentationspn updates.
bull
n Completespn rewritespn ofspn thespn PostScript/PDFspn documentationspn generator.
bull
n Thespn MSspn Visualspn C++spn Makefilespn wasspn updatedspn andspn corrected.
bull
n Recognizespn .rodataspn asspn aspn standardspn sectionspn namespn inspn ELF.
bull
n Fixspn somespn obsoletespn Perl4-n ismsspn inspn Perlspn scripts.
bull
n Fixspn configure.inspn tospn workspn withspn autoconfspn 2.5x.
bull
n Fixspn aspn couplespn ofspn "makespn cleaner"spn misses.
bull
n Makespn thespn normalspn "./configurespn &&spn make"spn workspn withspn Cygwin.
subh C.2.9 :section-C.2.9
n Versionspn 0.98.31
bull
n Correctlyspn buildspn inspn aspn separatespn objectspn directoryspn again.
bull
n Derivespn allspn referencesspn tospn thespn versionspn numberspn fromspn thespn versionspn file.
bull
n Newspn standardspn macrosspn __NASM_SUBMINOR__spn andspn __NASM_VER__spn macros.
bull
n Lotsspn ofspn Makefilespn updatesspn andspn bugspn fixes.
bull
n Newspc %ifmacrospn directivespn tospn testspn forspn multilinespn macros.
bull
n Documentationspn updates.
bull
n Fixesspn forspn 16-n bitspn OBJspn formatspn output.
bull
n Changedspn thespn NASMspn environmentspn variablespn tospn NASMENV.
subh C.2.10 :section-C.2.10
n Versionspn 0.98.30
bull
n Changedspn docspn filesspn aspn lot:spn completelyspn removedspn oldspn READMExxspn andspn Wishlistspn files,spn incorporatingspn allspn informationspn inspn CHANGESspn andspn TODO.
bull
n Ispn waitedspn aspn longspn timespn tospn renamespn zoutieee.cspn tospn (original)spn outieee.c
bull
n movedspn allspn outputspn modulesspn tospn output/spn subdirectory.
bull
n Addedspn 'makespn strip'spn targetspn tospn stripspn debugspn infospn fromspn nasmspn &spn ndisasm.
bull
n Addedspn INSTALLspn filespn withspn installationspn instructions.
bull
n Addedspdan vspn optionspn descriptionspn tospn nasmspn man.
bull
n Addedspn distspn makefilespn targetspn tospn producespn sourcespn distributions.
bull
n 16-n bitspn supportspn forspn ELFspn outputspn formatspn (GNUspn extension,spn butspn useful.)
subh C.2.11 :section-C.2.11
n Versionspn 0.98.28
bull
n Fastcookedspn thisspn forspn Debian'sspn Woodyspn release:spn Frankspn appliedspn thespn INCBINspn bugspn patchspn tospn 0.98.25altspn andspn calledspn itspn 0.98.28spn tospn notspn confusespn poorspn littlespn apt-n get.
subh C.2.12 :section-C.2.12
n Versionspn 0.98.26
bull
n Reorganisedspn filesspn evenspn betterspn fromspn 0.98.25alt
subh C.2.13 :section-C.2.13
n Versionspn 0.98.25alt
bull
n Prettifiedspn thespn sourcespn tree.spn Movedspn filesspn tospn morespn reasonablespn places.
bull
n Addedspn findleak.plspn scriptspn tospn misc/spn directory.
bull
n Attemptedspn tospn fixspn doc.
subh C.2.14 :section-C.2.14
n Versionspn 0.98.25
bull
n Linespn continuationspn characterspc \n .
bull
n Docsspn inadvertantlyspn revertedspdaspn "dosspn packaging".
subh C.2.15 :section-C.2.15
n Versionspn 0.98.24p1
bull
n FIXME:spn Someone,spn documentspn thisspn please.
subh C.2.16 :section-C.2.16
n Versionspn 0.98.24
bull
n Documentationspdaspn Ndisasmspn docspn addedspn tospn Nasm.doc.
subh C.2.17 :section-C.2.17
n Versionspn 0.98.23
bull
n Attemptedspn tospn removespn rdoffspn version1
bull
n Linospn Mastrodomenico'sspn patchesspn tospn preproc.cspn (%$$spn bug?).
subh C.2.18 :section-C.2.18
n Versionspn 0.98.22
bull
n Updatespn rdoff2spdaspn attemptspn tospn removespn v1.
subh C.2.19 :section-C.2.19
n Versionspn 0.98.21
bull
n Optimizationspn fixes.
subh C.2.20 :section-C.2.20
n Versionspn 0.98.20
bull
n Optimizationspn fixes.
subh C.2.21 :section-C.2.21
n Versionspn 0.98.19
bull
n H.spn J.spn Lu'sspn patchspn backspn out.
subh C.2.22 :section-C.2.22
n Versionspn 0.98.18
bull
n Addedspn ".rdata"spn tospn "-n fspn win32".
subh C.2.23 :section-C.2.23
n Versionspn 0.98.17
bull
n H.spn J.spn Lu'sspn "bogusspn elf"spn patch.spn (Redspn Hatspn problem?)
subh C.2.24 :section-C.2.24
n Versionspn 0.98.16
bull
n Fixspn whitespacespn beforespn "[sectionspn ..."spn bug.
subh C.2.25 :section-C.2.25
n Versionspn 0.98.15
bull
n Rdoffspn changesspn (?).
bull
n Fixspn fixesspn tospn memoryspn leaks.
subh C.2.26 :section-C.2.26
n Versionspn 0.98.14
bull
n Fixspn memoryspn leaks.
subh C.2.27 :section-C.2.27
n Versionspn 0.98.13
bull
n Therespn wasspn nospn 0.98.13
subh C.2.28 :section-C.2.28
n Versionspn 0.98.12
bull
n Updatespn optimizationspn (newspn functionspn ofspn "-n O1")
bull
n Changesspn tospn test/bintest.asmspn (?).
subh C.2.29 :section-C.2.29
n Versionspn 0.98.11
bull
n Optimizationspn changes.
bull
n Ndisasmspn fixed.
subh C.2.30 :section-C.2.30
n Versionspn 0.98.10
bull
n Therespn wasspn nospn 0.98.10
subh C.2.31 :section-C.2.31
n Versionspn 0.98.09
bull
n Addspn multiplespn sectionsspn supportspn tospn "-n fspn bin".
bull
n Changedspn GLOBAL_TEMP_BASEspn inspn outelf.cspn fromspn 6spn tospn 15.
bull
n Addspn "-n v"spn asspn anspn aliasspn tospn thespn "-n r"spn switch.
bull
n Removespn "#ifdef"spn fromspn Tasmspn compatibilityspn options.
bull
n Removespn redundantspn size-n overridesspn onspn "movspn ds,spn ex",spn etc.
bull
n Fixesspn tospn SSE2,spn otherspn insns.datspn (?).
bull
n Enablespn uppercasespn "I"spn andspn "P"spn switches.
bull
n Casespn insinsitivespn "seg"spn andspn "wrt".
bull
n Updatespn install.shspn (?).
bull
n Allocatespn tokensspn inspn blocks.
bull
n Improvespn "invalidspn effectivespn address"spn messages.
subh C.2.32 :section-C.2.32
n Versionspn 0.98.08
bull
n Addspn "c %strlenn "spn andspn "c %substrn "spn macrospn operators
bull
n Fixedspn brokenspn c16.mac.
bull
n Unterminatedspn stringspn errorspn reported.
bull
n Fixedspn bugsspn asspn perspn 0.98bf
subh C.2.33 :section-C.2.33
n Versionspn 0.98.09bspn withspn Johnspn Coffmanspn patchesspn releasedspn 28-n Oct-n 2001
norm
n Changesspn fromspn 0.98.07spn releasespn tospn 98.09bspn asspn ofspn 28-n Oct-n 2001
bull
n Morespn closelyspn compatiblespn withspn 0.98spn whenspdan O0spn isspn impliedspn orspn specified.spn Notspn strictlyspn identical,spn sincespn backwardspn branchesspn inspn rangespn ofspn shortspn offsetsspn arespn recognized,spn andspn signedspn bytespn valuesspn withspn nospn explicitspn sizespn specificationspn willspn bespn assembledspn asspn aspn singlespn byte.
bull
n Morespn forgivingspn withspn thespn PUSHspn instruction.spn 0.98spn requiresspn aspn sizespn tospn bespn specifiedspn always.spn 0.98.09bspn willspn implyspn thespn sizespn fromspn thespn currentspn BITSspn settingspn (16spn orspn 32).
bull
n Changedspn definitionspn ofspn thespn optimizationspn flag:
code
   -O0     strict two-pass assembly, JMP and Jcc are            handled more like 0.98, except that back-            ward JMPs are short, if possible.    -O1     strict two-pass assembly, but forward            branches are assembled with code guaranteed            to reach; may produce larger code than            -O0, but will produce successful assembly            more often if branch offset sizes are not            specified.    -O2     multi-pass optimization, minimize branch            offsets; also will minimize signed immed-            iate bytes, overriding size specification.    -O3     like -O2, but more passes taken, if needed
subh C.2.34 :section-C.2.34
n Versionspn 0.98.07spn releasedspn 01/28/01
bull
n Addedspn Stepanespn Denis'spn SSE2spn instructionsspn tospn aspn *working*spn versionspn ofspn thespn codespdaspn somespn earlierspn versionsspn werespn basedspn onspn brokenspn codespdaspn sorryspn 'boutspn that.spn versionspn "0.98.07"
bull
n Cosmeticspn modificationsspn tospn nasm.c,spn nasm.h,spn AUTHORS,spn MODIFIED
subh C.2.35 :section-C.2.35
n Versionspn 0.98.06fspn releasedspn 01/18/01
bull
n Addspn "metalbrain"sspn jecxzspn bugspn fixspn inspn insns.dat
bull
n Alterspn nasmdoc.srcspn tospn matchspdaspn versionspn "0.98.06f"
subh C.2.36 :section-C.2.36
n Versionspn 0.98.06espn releasedspn 01/09/01
bull
n Removedspn thespn "outforms.h"spn filespdaspn itspn appearsspn tospn bespn someone'sspn oldspn backupspn ofspn "outform.h".spn versionspn "0.98.06e"
bull
n fbkspdaspn finallyspn addedspn thespn fixspn forspn thespn "multiplespn %includesspn bug",spn knownspn sincespn 7/27/99spdaspn reportedspn originallyspn (?)spn andspn sentspn tospn usspn byspn Austinspn Lunnenspdaspn hespn reportsspn thatspn Johnspn Finespn hadspn aspn fixspn withinspn thespn day.spn Herespn itspn is...
bull
n Nelsonspn Rushspn resignsspn fromspn thespn group.spn Bigspn thanksspn tospn Nelsonspn forspn hisspn leadershipspn andspn enthusiasmspn inspn gettingspn thesespn changesspn incorporatedspn intospn Nasm!
bull
n fbkspdaspn [listspn +],spn [listspdan ]spn directivesspdaspn ineptlyspn implemented,spn shouldspn bespn re-n writtenspn orspn removed,spn perhaps.
bull
n Brianspn Raiterspn /spn fbkspdaspn "elfsospn bug"spn fixspdaspn appliedspn tospn aoutbspn formatspn asspn wellspdaspn testingspn mightspn bespn desirable...
bull
n Jamesspn Seterspdaspdan postfix,spdan prefixspn commandspn linespn switches.
bull
n Yurispn Zaporozhetsspdaspn rdoffspn utilityspn changes.
subh C.2.37 :section-C.2.37
n Versionspn 0.98p1
bull
n GAS-n likespn palignspn (Panosspn Minos)
bull
n FIXME:spn Someone,spn fillspn thisspn inspn withspn details
subh C.2.38 :section-C.2.38
n Versionspn 0.98bfspn (bug-n fixed)
bull
n Fixedspdaspn elfspn andspn aoutbspn bugspdaspn sharedspn librariesspdaspn multiplespn "%include"spn bugspn inspn "-n fspn obj"spdaspn jcxz,spn jecxzspn bugspdaspn unrecognizedspn optionspn bugspn inspn ndisasm
subh C.2.39 :section-C.2.39
n Versionspn 0.98.03spn withspn Johnspn Coffman'sspn changesspn releasedspn 27-n Jul-n 2000
bull
n Addedspn signedspn bytespn optimizationsspn forspn thespn 0x81/0x83spn classspn ofspn instructions:spn ADC,spn ADD,spn AND,spn CMP,spn OR,spn SBB,spn SUB,spn XOR:spn whenspn usedspn asspn 'ADDspn reg16,imm'spn orspn 'ADDspn reg32,imm.'spn Alsospn optimizationspn ofspn signedspn bytespn formspn ofspn 'PUSHspn imm'spn andspn 'IMULspn reg,imm'/'IMULspn reg,reg,imm.'spn Nospn sizespn specificationspn isspn needed.
bull
n Addedspn multi-n passspn JMPspn andspn Jccspn offsetspn optimization.spn Offsetsspn onspn forwardspn referencesspn willspn preferentiallyspn usespn thespn shortspn form,spn withoutspn thespn needspn tospn codespn aspn specificspn sizespn (shortspn orspn near)spn forspn thespn branch.spn Addedspn instructionsspn forspn 'Jccspn label'spn tospn usespn thespn formspn 'Jnotccspn $+3/JMPspn label',spn inspn casesspn wherespn aspn shortspn offsetspn isspn outspn ofspn bounds.spn Ifspn compilingspn forspn aspn 386spn orspn higherspn CPU,spn thenspn thespn 386spn formspn ofspn Jccspn willspn bespn usedspn instead.
indt
n Thisspn featurespn isspn controlledspn byspn aspn newspn command-n linespn switch:spn "O",spn (upperspn casespn letterspn O).spn "-n O0"spn revertsspn thespn assemblerspn tospn nospn extraspn optimizationspn passes,spn "-n O1"spn allowsspn upspn tospn 5spn extraspn passes,spn andspn "-n O2"(default),spn allowsspn upspn tospn 10spn extraspn optimizationspn passes.
bull
n Addedspn aspn newspn directive:spn 'cpuspn XXX',spn wherespn XXXspn isspn anyspn of:spn 8086,spn 186,spn 286,spn 386,spn 486,spn 586,spn pentium,spn 686,spn PPro,spn P2,spn P3spn orspn Katmai.spn Allspn arespn casespn insensitive.spn Allspn instructionsspn willspn bespn selectedspn onlyspn ifspn theyspn applyspn tospn thespn selectedspn cpuspn orspn lower.spn Correctedspn aspn couplespn ofspn bugsspn inspn cpu-n dependencespn inspn 'insns.dat'.
bull
n Addedspn tospn 'standard.mac',spn thespn "use16"spn andspn "use32"spn formsspn ofspn thespn "bitsspn 16/32"spn directive.spn Thisspn isspn nothingspn new,spn justspn conformsspn tospn aspn lotspn ofspn otherspn assemblers.spn (minor)
bull
n Changedspn labelspn allocationspn fromspn 320/32spn (10000spn labelsspn @spn 200K+)spn tospn 32/37spn (1000spn labels);spn makesspn runningspn underspn DOSspn muchspn easier.spn Sincespn additionalspn labelspn spacespn isspn allocatedspn dynamically,spn thisspn shouldspn havespn nospn effectspn onspn largespn programsspn withspn lotsspn ofspn labels.spn Thespn 37spn isspn aspn prime,spn believedspn tospn bespn betterspn forspn hashing.spn (minor)
subh C.2.40 :section-C.2.40
n Versionspn 0.98.03
norm
n "Integratedspn patchfilespn 0.98-n 0.98.01.spn Ispn callspn thisspn versionspn 0.98.03spn forspn historicalspn reasons:spn 0.98.02spn wasspn trashed."spdadan Johnspn Coffmanspn <johninsd@san.rr.com>,spn 27-n Jul-n 2000
bull
n Kendallspn Bennett'sspn SciTechspn MGLspn changes
bull
n Notespn thatspn youspn mustspn definespn "TASM_COMPAT"spn atspn compile-n timespn tospn getspn thespn Tasmspn Idealspn Modespn compatibility.
bull
n Allspn changesspn canspn bespn compiledspn inspn andspn outspn usingspn thespn TASM_COMPATspn macros,spn andspn whenspn compiledspn withoutspn TASM_COMPATspn definedspn wespn getspn thespn exactspn samespn binaryspn asspn thespn unmodifiedspn 0.98spn sources.
bull
n standard.mac,spn macros.c:spn Addedspn macrosspn tospn ignorespn TASMspn directivesspn beforespn firstspn include
bull
n nasm.h:spn Addedspn externspn declarationspn forspn tasm_compatible_mode
bull
n nasm.c:spn Addedspn globalspn variablespn tasm_compatible_mode
bull
n Addedspn commandspn linespn switchspn forspn TASMspn compatiblespn modespn (-n t)
bull
n Changedspn versionspn commandspn linespn tospn reflectspn whenspn compiledspn withspn TASMspn additions
bull
n Addedspn responsespn filespn processingspn tospn allowspn allspn argumentsspn onspn aspn singlespn linespn (responsespn filespn isspn @respspn ratherspn thanspdan @respspn forspn NASMspn format).
bull
n labels.c:spn Changesspn islocal()spn macrospn tospn supportspn TASMspn stylespn @@localspn labels.
bull
n Addedspn islocalchar()spn macrospn tospn supportspn TASMspn stylespn @@localspn labels.
bull
n parser.c:spn Addedspn supportspn forspn TASMspn stylespn memoryspn referencesspn (ie:spn movspn [DWORDspn eax],10spn ratherspn thanspn thespn NASMspn stylespn movspn DWORDspn [eax],10).
bull
n preproc.c:spn Addedspn newspn directives,spc %argn ,spc %localn ,spc %stacksizespn tospn directivesspn table
bull
n Addedspn supportspn forspn TASMspn stylespn directivesspn withoutspn aspn leadingspn %spn symbol.
bull
n Integratedspn aspn blockspn ofspn changesspn fromspn Andrewspn Zabolotnyspn <bit@eltech.ru>:
bull
n Aspn newspn keywordspc %xdefinespn andspn itsspn case-n insensitivespn counterpartspc %ixdefinen .spn Theyspn workspn almostspn thespn samespn wayspn asspc %definespn andspc %idefinespn butspn expandspn thespn definitionspn immediately,spn notspn onspn thespn invocation.spn Somethingspn likespn aspn crossspn betweenspc %definespn andspc %assignn .spn Thespn "x"spn suffixspn standsspn forspn "eXpand",spn sospn "xdefine"spn canspn bespn decipheredspn asspn "expand-n and-n define".spn Thusspn youspn canspn dospn thingsspn likespn this:
code
     %assign ofs     0      %macro  arg     1              %xdefine %1 dword [esp+ofs]              %assign ofs ofs+4      %endmacro
bull
n Changedspn thespn placespn wherespn thespn expansionspn ofspn %$namespn macrosspn arespn expanded.spn Nowspn theyspn arespn convertedspn intospn ..@ctxnum.namespn formspn whenspn detokenizing,spn sospn therespn arespn nospn quirksspn asspn beforespn whenspn usingspn %$namespn argumentsspn tospn macros,spn inspn macrosspn etc.spn Forspn example:
code
     %macro  abc     1              %define %1 hello      %endm      abc     %$here      %$here
indt
n Nowspn lastspn linespn willspn bespn expandedspn intospn "hello"spn asspn expected.spn Thisspn alsospn allowsspn forspn lotsspn ofspn goodies,spn aspn goodspn examplespn arespn extendedspn "proc"spn macrosspn includedspn inspn thisspn archive.
bull
n Addedspn aspn checkspn forspn "cstk"spn inspn smacro_defined()spn beforespn callingspn get_ctx()spdaspn thisspn allowsspn forspn thingsspn like:
code
     %ifdef %$abc      %endif
indt
n tospn workspn withoutspn warningsspn evenspn inspn nospn context.
bull
n Addedspn aspn checkspn forspn "cstk"spn inspn %if*ctxspn andspn %elif*ctxspn directivesspdaspn thisspn allowsspn tospn usespc %ifctxspn withoutspn excessivespn warnings.spn Ifspn therespn isspn nospn activespn context,spc %ifctxspn goesspn throughspn "false"spn branch.
bull
n Removedspn "userspn error:spn "spn prefixspn withspc %errorspn directive:spn itspn justspn clobbersspn thespn outputspn andspn hasspn absolutelyspn nospn functionality.spn Besides,spn thisspn allowsspn tospn writespn macrosspn thatspn doesspn notspn differspn fromspn built-n inspn functionsspn inspn anyspn way.
bull
n Addedspn expansionspn ofspn stringspn thatspn isspn outputspn byspc %errorspn directive.spn Nowspn youspn canspn dospn thingsspn like:
code
     %define hello(x) Hello, x!      %define %$name andy      %error "hello(%$name)"
indt
n Samespn happenedspn withspc %includespn directive.
bull
n Nowspn allspn directivesspn thatspn expectspn anspn identifierspn willspn tryspn tospn expandspn andspn concatenatespn everythingspn withoutspn whitespacesspn inspn betweenspn beforespn usage.spn Forspn example,spn withspn "unfixed"spn nasmspn thespn commands
code
     %define %$abc hello      %define __%$abc goodbye      __%$abc
indt
n wouldspn producespn "incorrect"spn output:spn lastspn linespn willspn expandspn to
code
     hello goodbyehello
indt
n Notspn quitespn whatspn youspn expected,spn eh?spn :-n )spn Thespn answerspn isspn thatspn preprocessorspn treatsspn thespc %definespn constructspn asspn ifspn itspn wouldspn be
code
     %define __ %$abc goodbye
indt
n (notespn thespn whitespn spacespn betweenspn __spn andspn %$abc).spn Afterspn myspn "fix"spn itspn willspn "correctly"spn expandspn into
code
     goodbye
indt
n asspn expected.spn Notespn thatspn Ispn usespn quotesspn aroundspn wordsspn "correct",spn "incorrect"spn etcspn becausespn thisspn isspn ratherspn aspn featurespn notspn aspn bug;spn howeverspn currentspn behaviourspn isspn morespn logicalspn (andspn allowsspn morespn advancedspn macrospn usagespn :-n ).
norm
n Samespn changespn wasspn appliedspn to:spc %pushn ,c %macron ,c %imacron ,c %definen ,c %idefinen ,c %xdefinen ,c %ixdefinen ,spc %assignn ,c %iassignn ,c %undef
bull
n Aspn newspn directivespn [WARNINGspn {+|-n }warning-n id]spn havespn beenspn added.spn Itspn worksspn onlyspn ifspn thespn assemblyspn phasespn isspn enabledspn (i.e.spn itspn doesn'tspn workspn withspn nasmspdan e).
bull
n Aspn newspn warningspn type:spn macro-n selfref.spn Byspn defaultspn thisspn warningspn isspn disabled;spn whenspn enabledspn NASMspn warnsspn whenspn aspn macrospn self-n referencesspn itself;spn forspn examplespn thespn followingspn source:
code
       [WARNING macro-selfref]        %macro          push    1-*                %rep    %0                        push    %1                        %rotate 1                %endrep        %endmacro                        push    eax,ebx,ecx
indt
n willspn producespn aspn warning,spn butspn ifspn wespn removespn thespn firstspn linespn wespn won'tspn seespn itspn anymorespn (whichspn isspn Thespn Rightspn Thingspn Tospn Dospn {tm}spn IMHOspn sincespn Cspn preprocessorspn eatsspn suchspn constructsspn withoutspn warningsspn atspn all).
bull
n Addedspn aspn "error"spn routinespn tospn preprocessorspn whichspn alwaysspn willspn setspn ERR_PASS1spn bitspn inspn severity_code.spn Thisspn removesspn annoyingspn repeatedspn errorsspn onspn firstspn andspn secondspn passesspn fromspn preprocessor.
bull
n Addedspn thespn %+spn operatorspn inspn single-n linespn macrosspn forspn concatenatingspn twospn identifiers.spn Usagespn example:
code
       %define _myfunc _otherfunc        %define cextern(x) _ %+ x        cextern (myfunc)
indt
n Afterspn firstspn expansion,spn thirdspn linespn willspn becomespn "_myfunc".spn Afterspn thisspn expansionspn isspn performedspn againspn sospn itspn becomesspn "_otherunc".
bull
n Nowspn ifspn preprocessorspn isspn inspn aspn non-n emittingspn state,spn nospn warningspn orspn errorspn willspn bespn emitted.spn Example:
code
       %if 1                mov     eax,ebx        %else                put anything you want between these two brackets,                even macro-parameter references %1 or local                labels %$zz or macro-local labels %%zz - no                warning will be emitted.        %endif
bull
n Context-n localspn variablesspn onspn expansionspn asspn aspn lastspn resortspn arespn lookedspn upspn inspn outerspn contexts.spn Forspn example,spn thespn followingspn piece:
code
       %push   outer        %define %$a [esp]                %push   inner                %$a                %pop        %pop
indt
n willspn expandspn correctlyspn thespn fourthspn linespn tospn [esp];spn ifspn we'llspn definespn anotherspn %$aspn insidespn thespn "inner"spn context,spn itspn willspn takespn precedencespn overspn outerspn definition.spn However,spn thisspn modificationspn hasspn beenspn appliedspn onlyspn tospn expand_smacrospn andspn notspn tospn smacro_define:spn asspn aspn consequencespn expansionspn looksspn inspn outerspn contexts,spn butspc %ifdefspn won'tspn lookspn inspn outerspn contexts.
indt
n Thisspn behaviourspn isspn neededspn becausespn wespn don'tspn wantspn nestedspn contextsspn tospn actspn onspn alreadyspn definedspn localspn macros.spn Example:
code
       %define %$arg1  [esp+4]        test    eax,eax        if      nz                mov     eax,%$arg1        endif
indt
n Inspn thisspn examplespn thespn "if"spn mmacrospn entersspn intospn thespn "if"spn context,spn sospn %$arg1spn isspn notspn validspn anymorespn insidespn "if".spn Ofspn coursespn itspn couldspn bespn workedspn aroundspn byspn usingspn explicitelyspn %$$arg1spn butspn thisspn isspn uglyspn IMHO.
bull
n Fixedspn memoryspn leakspn inspc %undefn .spn Thespn origlinespn wasn'tspn freedspn beforespn exitingspn onspn success.
bull
n Fixedspn trapspn inspn preprocessorspn whenspn linespn expandedspn tospn emptyspn setspn ofspn tokens.spn Thisspn happens,spn forspn example,spn inspn thespn followingspn case:
code
       #define SOMETHING        SOMETHING
subh C.2.41 :section-C.2.41
n Versionspn 0.98
norm
n Allspn changesspn sincespn NASMspn 0.98p3spn havespn beenspn producedspn byspn H.spn Peterspn Anvinspn <hpa@zytor.com>.
bull
n Thespn documentationspn commentspn delimiterspn is
bull
n Allowspn EQUspn definitionsspn tospn referspn tospn externalspn labels;spn reportedspn byspn Pedrospn Gimeno.
bull
n Re-n enablespn supportspn forspn RDOFFspn v1;spn reportedspn byspn Pedrospn Gimeno.
bull
n Updatedspn Licensespn filespn perspn OKspn fromspn Simonspn andspn Julian.
subh C.2.42 :section-C.2.42
n Versionspn 0.98p9
bull
n Updatespn documentationspn (althoughspn thespn instructionspn setspn referencespn willspn havespn tospn wait;spn Ispn don'tspn wantspn tospn holdspn upspn thespn 0.98spn releasespn forspn it.)
bull
n Verifiedspn thatspn thespn NASMspn implementationspn ofspn thespn PEXTRWspn andspn PMOVMSKBspn instructionsspn isspn correct.spn Thespn encodingspn differsspn fromspn whatspn thespn Intelspn manualsspn document,spn butspn thespn Pentiumspn IIIspn behaviourspn matchesspn NASM,spn notspn thespn Intelspn manuals.
bull
n Fixspn handlingspn ofspn implicitspn sizesspn inspn PSHUFWspn andspn PINSRW,spn reportedspn byspn Stefanspn Hoffmeister.
bull
n Resurrectspn thespdan sspn option,spn whichspn wasspn removedspn whenspn changingspn thespn diagnosticspn outputspn tospn stdout.
subh C.2.43 :section-C.2.43
n Versionspn 0.98p8
bull
n Fixspn forspn "DB"spn whenspn NASMspn isspn runningspn onspn aspn bigendianspn machine.
bull
n Invokespn insns.plspn oncespn forspn eachspn outputspn script,spn makingspn Makefile.inspn legalspn forspn "makespdan j".
bull
n Improvespn thespn Unixspn configure-n basedspn makefilesspn tospn makespn packagespn creationspn easier.
bull
n Includedspn anspn RPMspn .specspn filespn forspn buildingspn RPMspn (RedHatspn Packagespn Manager)spn packagesspn onspn Linuxspn orspn Unixspn systems.
bull
n Fixspn Makefilespn dependencyspn problems.
bull
n Changespn src/rdsrc.plspn tospn includespn sectioningspn informationspn inspn infospn output;spn requiredspn forspn install-n infospn tospn work.
bull
n Updatedspn thespn RDOFFspn distributionspn tospn versionspn 2spn fromspn Jules;spn minorspn massagingspn tospn makespn itspn compilespn inspn myspn environment.
bull
n Splitspn docspn filesspn thatspn canspn bespn builtspn byspn anyonespn withspn aspn Perlspn interpreterspn offspn intospn aspn separatespn archive.
bull
n "Dressspn rehearsal"spn release!
subh C.2.44 :section-C.2.44
n Versionspn 0.98p7
bull
n Fixedspn opcodesspn withspn aspn thirdspn byte-n sizedspn immediatespn argumentspn tospn notspn complainspn ifspn givenspn "byte"spn onspn thespn immediate.
bull
n Allowspc %undefspn tospn removespn single-n linespn macrosspn withspn arguments.spn Thisspn matchesspn thespn behaviourspn ofspn #undefspn inspn thespn Cspn preprocessor.
bull
n Allowspdan d,spdan u,spdan ispn andspdan pspn tospn bespn specifiedspn asspdan D,spdan U,spdan Ispn andspdan Pspn forspn compatibilityspn withspn mostspn Cspn compilersspn andspn preprocessors.spn Thisspn allowsspn Makefilespn optionsspn tospn bespn sharedspn betweenspn ccspn andspn nasm,spn forspn example.
bull
n Minorspn cleanups.
bull
n Wentspn throughspn thespn listspn ofspn Katmaispn instructionsspn andspn hopefullyspn fixedspn thespn (ratherspn few)spn mistakesspn inspn it.
bull
n (Hopefully)spn fixedspn aspn numberspn ofspn disassemblerspn bugsspn relatedspn tospn ambiguousspn instructionsspn (disambiguatedspn byspdan p)spn andspn SSEspn instructionsspn withspn REP.
bull
n Fixspn forspn bugspn reportedspn byspn Markspn Junger:spn "callspn dwordspn 0x12345678"spn shouldspn workspn andspn mayspn addspn anspn OSPspn (affectedspn CALL,spn JMP,spn Jcc).
bull
n Fixspn forspn environmentsspn whenspn "stderr"spn isn'tspn aspn compile-n timespn constant.
subh C.2.45 :section-C.2.45
n Versionspn 0.98p6
bull
n Tookspn officiallyspn overspn coordinationspn ofspn thespn 0.98spn release;spn sospn dropspn thespn p3.xspn notation.spn Skippedspn p4spn andspn p5spn tospn avoidspn confusionspn withspn Johnspn Fine'sspn J4spn andspn J5spn releases.
bull
n Updatespn thespn documentation;spn however,spn itspn stillspn doesn'tspn includespn documentationspn forspn thespn variousspn newspn instructions.spn Ispn somehowspn wonderspn ifspn itspn makesspn sensespn tospn havespn anspn instructionspn setspn referencespn inspn thespn assemblerspn manualspn whenspn Intelspn etspn alspn havespn PDFspn versionsspn ofspn theirspn manualsspn online.
bull
n Recognizespn "idt"spn orspn "centaur"spn forspn thespdan pspn optionspn tospn ndisasm.
bull
n Changedspn errorspn messagesspn backspn tospn stderrspn wherespn theyspn belong,spn butspn addspn anspdan Espn optionspn tospn redirectspn themspn elsewherespn (thespn DOSspn shellspn cannotspn redirectspn stderr.)
bull
dan Mspn optionspn tospn generatespn Makefilespn dependenciesspn (basedspn onspn codespn fromspn Alexspn Verstak.)
bull
c %undefspn preprocessorspn directive,spn andspdan uspn option,spn thatspn undefinesspn aspn single-n linespn macro.
bull
n OS/2spn Makefilespn (Mkfiles/Makefile.os2)spn forspn Borlandspn underspn OS/2;spn fromspn Chuckspn Crayne.
bull
n Variousspn minorspn bugfixesspn (reportedspn by):spdaspn Danglingspc %sspn inspn preproc.cspn (Martinspn Junker)
bull
n THEREspn AREspn KNOWNspn BUGSspn INspn SSEspn ANDspn THEspn OTHERspn KATMAIspn INSTRUCTIONS.spn Ispn amspn onspn aspn tripspn andspn didn'tspn bringspn thespn Katmaispn instructionspn reference,spn sospn Ispn can'tspn workspn onspn themspn rightspn now.
bull
n Updatedspn thespn Licensespn filespn perspn agreementspn withspn Simonspn andspn Julesspn tospn includespn aspn GPLspn distributionspn clause.
subh C.2.46 :section-C.2.46
n Versionspn 0.98p3.7
bull
n (Hopefully)spn fixedspn thespn cannedspn Makefilesspn tospn includespn thespn outrdf2spn andspn zoutieeespn modules.
bull
n Renamedspn changes.asmspn tospn changed.asm.
subh C.2.47 :section-C.2.47
n Versionspn 0.98p3.6
bull
n Fixedspn aspn bunchspn ofspn instructionsspn thatspn werespn addedspn inspn 0.98p3.5spn whichspn hadspn memoryspn operands,spn andspn thespn address-n sizespn prefixspn wasspn missingspn fromspn thespn instructionspn pattern.
subh C.2.48 :section-C.2.48
n Versionspn 0.98p3.5
bull
n Mergedspn inspn changesspn fromspn Johnspn S.spn Fine'sspn 0.98-n J5spn release.spn John'sspn basedspn 0.98-n J5spn onspn myspn 0.98p3.3spn release;spn thisspn mergesspn thespn changes.
bull
n Expandedspn thespn instructionsspn flagspn fieldspn tospn aspn longspn sospn wespn canspn fitspn morespn flags;spn markspn SSEspn (KNI)spn andspn AMDspn orspn Katmai-n specificspn instructionsspn asspn such.
bull
n Fixspn thespn "PRIV"spn flagspn onspn aspn bunchspn ofspn instructions,spn andspn createspn newspn "PROT"spn flagspn forspn protected-n mode-n onlyspn instructionsspn (orthogonalspn tospn ifspn thespn instructionspn isspn privileged!)spn andspn newspn "SMM"spn flagspn forspn SMM-n onlyspn instructions.
bull
n Addedspn AMD-n onlyspn SYSCALLspn andspn SYSRETspn instructions.
bull
n Makespn SSEspn actuallyspn work,spn andspn addspn newspn Katmaispn MMXspn instructions.
bull
n Addedspn aspdan pspn (preferredspn vendor)spn optionspn tospn ndisasmspn sospn thatspn itspn canspn distinguishspn e.g.spn Cyrixspn opcodesspn alsospn usedspn inspn SSE.spn Forspn example:
code
     ndisasm -p cyrix aliased.bin      00000000  670F514310        paddsiw mm0,[ebx+0x10]      00000005  670F514320        paddsiw mm0,[ebx+0x20]      ndisasm -p intel aliased.bin      00000000  670F514310        sqrtps xmm0,[ebx+0x10]      00000005  670F514320        sqrtps xmm0,[ebx+0x20]
bull
n Addedspn aspn bunchspn ofspn Cyrix-n specificspn instructions.
subh C.2.49 :section-C.2.49
n Versionspn 0.98p3.4
bull
n Madespn atspn leastspn anspn attemptspn tospn modifyspn allspn thespn additionalspn Makefilesspn (inspn thespn Mkfilesspn directory).spn Ispn can'tspn testspn it,spn butspn thisspn wasspn thespn bestspn Ispn couldspn do.
bull
n DOSspn DJGPP+"Opusspn Make"spn Makefilespn fromspn Johnspn S.spn Fine.
bull
n changes.asmspn changesspn fromspn Johnspn S.spn Fine.
subh C.2.50 :section-C.2.50
n Versionspn 0.98p3.3
bull
n Patchspn fromspn Conanspn Brinkspn tospn allowspn nestingspn ofspc %repspn directives.
bull
n Ifspn we'respn goingspn tospn allowspn INT01spn asspn anspn aliasspn forspn INT1/ICEBPspn (onespn ofspn Julesspn 0.98p3spn changes),spn thenspn wespn shouldspn allowspn INT03spn asspn anspn aliasspn forspn INT3spn asspn well.
bull
n Updatedspn changes.asmspn tospn includespn thespn latestspn changes.
bull
n Triedspn tospn cleanspn upspn thespn <CR>sspn thatspn hadspn snuckspn inspn fromspn aspn DOS/Windowsspn environmentspn intospn myspn Unixspn environment,spn andspn tryspn tospn makespn surespn thanspn DOS/Windowsspn usersspn getspn themspn back.
bull
n Wespn wouldspn silentlyspn generatespn brokenspn toolsspn ifspn insns.datspn wasn'tspn sortedspn properly.spn Changespn insns.plspn sospn thatspn thespn orderspn doesn'tspn matter.
bull
n Fixspn bugspn inspn insns.plspn (introducedspn byspn me)spn whichspn wouldspn causespn conditionalspn instructionsspn tospn havespn anspn extraspn "cc"spn inspn disassembly,spn e.g.spn "jnz"spn disassembledspn asspn "jccnz".
subh C.2.51 :section-C.2.51
n Versionspn 0.98p3.2
bull
n Mergedspn inspn Johnspn S.spn Fine'sspn changesspn fromspn hisspn 0.98-n J4spn prerelease;spn seespn http://www.csoft.net/cz/johnfine/
bull
n Changedspn previousspn "spotless"spn Makefilespn targetspn (appropriatespn forspn distribution)spn tospn "distclean",spn andspn addedspn "cleaner"spn targetspn whichspn isspn samespn asspn "clean"spn exceptspn deletesspn filesspn generatedspn byspn Perlspn scripts;spn "spotless"spn isspn union.
bull
n Removedspn BASICspn programsspn fromspn distribution.spn Getspn aspn Perlspn interpreterspn insteadspn (seespn below.)
bull
n Callingspn thisspn "pre-n releasespn 3.2"spn ratherspn thanspn "p3-n hpa2"spn becausespn ofspn John'sspn contributions.
bull
n Actuallyspn linkspn inspn thespn IEEEspn outputspn formatspn (zoutieee.c);spn fixspn aspn bunchspn ofspn compilerspn warningsspn inspn thatspn file.spn Notespn Ispn don'tspn knowspn whatspn IEEEspn outputspn isspn supposedspn tospn lookspn like,spn sospn thesespn changesspn werespn madespn "blind".
subh C.2.52 :section-C.2.52
n Versionspn 0.98p3-n hpa
bull
n Mergedspn nasm098p3.zipspn withspn nasm-n 0.97.tar.gzspn tospn createspn aspn fullyspn buildablespn versionspn forspn Unixspn systemsspn (Makefile.inspn updates,spn etc.)
bull
n Changedspn insns.plspn tospn createspn thespn instructionspn tablesspn inspn nasm.hspn andspn names.c,spn sospn thatspn aspn newspn instructionspn canspn bespn addedspn byspn addingspn itspn *only*spn tospn insns.dat.
bull
n Addedspn thespn followingspn newspn instructions:spn SYSENTER,spn SYSEXIT,spn FXSAVE,spn FXRSTOR,spn UD1,spn UD2spn (thespn latterspn twospn arespn twospn opcodesspn thatspn Intelspn guaranteespn willspn neverspn bespn used;spn onespn ofspn themspn isspn documentedspn asspn UD2spn inspn Intelspn documentation,spn thespn otherspn onespn justspn asspn "Undefinedspn Opcode"spdadaspn callingspn itspn UD1spn seemedspn tospn makespn sense.)
bull
n MAX_SYMBOLspn wasspn definedspn tospn bespn 9,spn butspn LOADALL286spn andspn LOADALL386spn arespn 10spn charactersspn long.spn Nowspn MAX_SYMBOLspn isspn derivedspn fromspn insns.dat.
bull
n Aspn notespn onspn thespn BASICspn programsspn included:spn forgetspn them.spn insns.basspn isspn alreadyspn outspn ofspn date.spn Getspn yourselfspn aspn Perlspn interpreterspn forspn yourspn platformspn ofspn choicespn atspw <http://www.cpan.org/ports/index.html>http://www.cpan.org/ports/index.htmln .
subh C.2.53 :section-C.2.53
n Versionspn 0.98spn pre-n releasespn 3
bull
n addedspn responsespn filespn support,spn improvedspn commandspn linespn handling,spn newspn layoutspn helpspn screen
bull
n fixedspn limitspn checkingspn bug,spn 'OUTspn bytespn nn,spn reg'spn bug,spn andspn aspn couplespn ofspn rdoffspn relatedspn bugs,spn updatedspn Wishlist;spn 0.98spn Prereleasespn 3.
subh C.2.54 :section-C.2.54
n Versionspn 0.98spn pre-n releasespn 2
bull
n fixedspn bugspn inspn outcoff.cspn tospn dospn withspn truncatingspn sectionspn namesspn longerspn thanspn 8spn characters,spn referencingspn beyondspn endspn ofspn string;spn 0.98spn pre-n releasespn 2
subh C.2.55 :section-C.2.55
n Versionspn 0.98spn pre-n releasespn 1
bull
n Fixedspn aspn bugspn wherebyspn STRUCspn didn'tspn workspn atspn allspn inspn RDF.
bull
n Fixedspn aspn problemspn withspn groupspn specificationspn inspn PUBDEFsspn inspn OBJ.
bull
n Improvedspn easespn ofspn addingspn newspn outputspn formats.spn Contributionspn duespn tospn Foxspn Cutter.
bull
n Fixedspn aspn bugspn inspn relocationsspn inspn thespn `bin'spn format:spn wasspn showingspn upspn whenspn aspn relocatablespn referencespn crossedspn anspn 8192-n bytespn boundaryspn inspn anyspn outputspn section.
bull
n Fixedspn aspn bugspn inspn localspn labels:spn local-n labelspn lookupsspn werespn inconsistentspn betweenspn passesspn onespn andspn twospn ifspn anspn EQUspn occurredspn betweenspn thespn definitionspn ofspn aspn globalspn labelspn andspn thespn subsequentspn usespn ofspn aspn localspn labelspn localspn tospn thatspn global.
bull
n Fixedspn aspn seg-n faultspn inspn thespn preprocessorspn (again)spn whichspn happenedspn whenspn youspn usespn aspn blankspn linespn asspn thespn firstspn linespn ofspn aspn multi-n linespn macrospn definitionspn andspn thenspn definedspn aspn labelspn onspn thespn samespn linespn asspn aspn callspn tospn thatspn macro.
bull
n Fixedspn aspn stale-n pointerspn bugspn inspn thespn handlingspn ofspn thespn NASMspn environmentspn variable.spn Thanksspn tospn Thomasspn McWilliams.
bull
n ELFspn hadspn aspn hardspn limitspn onspn thespn numberspn ofspn sectionsspn whichspn causedspn segfaultsspn whenspn transgressed.spn Fixed.
bull
n Addedspn abilityspn forspn ndisasmspn tospn readspn fromspn stdinspn byspn usingspn `-n 'spn asspn thespn filename.
bull
n ndisasmspn wasn'tspn outputtingspn thespn TOspn keyword.spn Fixed.
bull
n Fixedspn errorspn cascadespn onspn bogusspn expressionspn inspc %ifspdaspn anspn errorspn inspn evaluationspn wasspn causingspn thespn entirespc %ifspn tospn bespn discarded,spn thusspn creatingspn troublespn laterspn whenspn thespc %elsespn orspc %endifspn wasspn encountered.
bull
n Forwardspn referencespn trackingspn wasspn instruction-n granularspn notspn operand-spn granular,spn whichspn wasspn causingspn 286-n specificspn codespn tospn bespn generatedspn needlesslyspn onspn codespn ofspn thespn formspn `shrspn wordspn [forwardref],1'.spn Thanksspn tospn Jimspn Haguespn forspn sendingspn aspn patch.
bull
n Allspn messagesspn nowspn appearspn onspn stdout,spn asspn sendingspn themspn tospn stderrspn servesspn nospn usefulspn purposespn otherspn thanspn tospn makespn redirectionspn difficult.
bull
n Fixedspn thespn problemspn withspn EQUsspn pointingspn tospn anspn externalspn symbolspdaspn thisspn nowspn generatesspn anspn errorspn message.
bull
n Allowedspn multiplespn sizespn prefixesspn tospn anspn operand,spn ofspn whichspn onlyspn thespn firstspn isspn takenspn intospn account.
bull
n Incorporatedspn Johnspn Fine'sspn changes,spn includingspn fixesspn ofspn aspn largespn numberspn ofspn preprocessorspn bugs,spn somespn smallspn problemsspn inspn OBJ,spn andspn aspn reworkingspn ofspn labelspn handlingspn tospn definespn labelsspn beforespn theirspn linespn isspn assembled,spn ratherspn thanspn after.
bull
n Reformattedspn aspn lotspn ofspn thespn sourcespn codespn tospn bespn morespn readable.spn Includedspn 'coding.txt'spn asspn aspn guidelinespn forspn howspn tospn formatspn codespn forspn contributors.
bull
n Stoppedspn nestedspc %repsspn causingspn aspn panicspdaspn theyspn nowspn causespn aspn slightlyspn morespn friendlyspn errorspn messagespn instead.
bull
n Fixedspn floatingspn pointspn constantspn problemsspn (patchspn byspn Pedrospn Gimeno)
bull
n Fixedspn thespn returnspn valuespn ofspn insn_size()spn notspn beingspn checkedspn forspdan 1,spn indicatingspn anspn error.
bull
n Incorporatedspn 3Dnow!spn instructions.
bull
n Fixedspn thespn 'movspn eax,spn eaxspn +spn ebx'spn bug.
bull
n Fixedspn thespn GLOBALspn EQUspn bugspn inspn ELF.spn Releasedspn developersspn releasespn 3.
bull
n Incorporatedspn Johnspn Fine'sspn commandspn linespn parsingspn changes
bull
n Incorporatedspn Davidspn Lindauer'sspn OMFspn debugspn support
bull
n Madespn changesspn forspn LCCspn 4.0spn supportspn (c __NASM_CDecl__n ,spn removedspn registerspn sizespn specificationspn warningspn whenspn sizesspn agree).
head C.3 :section-C.3
n NASMspn 0.9spn Series
norm
n Revisionsspn beforespn 0.98.
subh C.3.1 :section-C.3.1
n Versionspn 0.97spn releasedspn Decemberspn 1997
bull
n Thisspn wasspn entirelyspn aspn bug-n fixspn releasespn tospn 0.96,spn whichspn seemsspn tospn havespn gotspn cursed.spn Sillyspn me.
bull
n Fixedspn stupidspn mistakespn inspn OBJspn whichspn causedspn `MOVspn EAX,<constant>'spn tospn fail.spn Causedspn byspn anspn errorspn inspn thespn `MOVspn EAX,<segment>'spn support.
bull
n ndisasmspn hungspn atspn EOFspn whenspn compiledspn withspn lccspn onspn Linuxspn becausespn lccspn onspn Linuxspn somehowspn breaksspn feof().spn ndisasmspn nowspn doesspn notspn relyspn onspn feof().
bull
n Aspn headingspn inspn thespn documentationspn wasspn missingspn duespn tospn aspn markupspn errorspn inspn thespn indexing.spn Fixed.
bull
n Fixedspn failurespn tospn updatespn allspn pointersspn onspn realloc()spn withinspn extended-spn operandspn codespn inspn parser.c.spn Wasspn causingspn wrongspn behaviourspn andspn segspn faultsspn onspn linesspn suchspn asspn `ddspn 0.0,0.0,0.0,0.0,...'
bull
n Fixedspn aspn subtlespn preprocessorspn bugspn wherebyspn invokingspn onespn multi-n linespn macrospn onspn thespn firstspn linespn ofspn thespn expansionspn ofspn another,spn whenspn thespn secondspn hadspn beenspn invokedspn withspn aspn labelspn definedspn beforespn it,spn didn'tspn expandspn thespn innerspn macro.
bull
n Addedspn internal.docspn backspn inspn tospn thespn distributionspn archivesspdaspn itspn wasspn missingspn inspn 0.96spn *blush*
bull
n Fixedspn bugspn causingspn 0.96spn tospn bespn unablespn tospn assemblespn itsspn ownspn testspn files,spn specificallyspn objtest.asm.spn *blushspn again*
bull
n Fixedspn seg-n faultsspn andspn bogusspn errorspn messagesspn causedspn byspn mismatchingspc %repspn andspc %endrepspn withinspn multi-n linespn macrospn definitions.
bull
n Fixedspn aspn problemspn withspn bufferspn overrunspn inspn OBJ,spn whichspn wasspn causingspn corruptionspn atspn endsspn ofspn longspn PUBDEFspn records.
bull
n Separatedspn DOSspn archivesspn intospn main-n programspn andspn documentationspn tospn reducespn downloadspn size.
subh C.3.2 :section-C.3.2
n Versionspn 0.96spn releasedspn Novemberspn 1997
bull
n Fixedspn aspn bugspn whereby,spn ifspn `nasmspn sourcefile'spn wouldspn causespn aspn filenamespn collisionspn warningspn andspn putspn outputspn intospn `nasm.out',spn thenspn `nasmspn sourcefilespdan ospn outputfile'spn stillspn gavespn thespn warningspn evenspn thoughspn thespn `-n o'spn wasspn honoured.spn Fixedspn namespn pollutionspn underspn Digitalspn UNIX:spn onespn ofspn itsspn headerspn filesspn definedspn R_SP,spn whichspn brokespn thespn enumspn inspn nasm.h.
bull
n Fixedspn minorspn instructionspn tablespn problems:spn FUCOMspn andspn FUCOMPspn didn'tspn havespn two-n operandspn forms;spn NDISASMspn didn'tspn recognisespn thespn longerspn registerspn formsspn ofspn PUSHspn andspn POPspn (egspn FFspn F3spn forspn PUSHspn BX);spn TESTspn mem,imm32spn wasspn flaggedspn asspn undocumented;spn thespn 32-n bitspn formsspn ofspn CMOVspn hadspn 16-n bitspn operandspn sizespn prefixes;spn `AADspn imm'spn andspn `AAMspn imm'spn arespn nospn longerspn flaggedspn asspn undocumentedspn becausespn thespn Intelspn Architecturespn referencespn documentsspn them.
bull
n Fixedspn aspn problemspn withspn thespn local-n labelspn mechanism,spn wherebyspn strangespn typesspn ofspn symbolspn (EQUs,spn auto-n definedspn OBJspn segmentspn basespn symbols)spn interferedspn withspn thespn `previousspn globalspn label'spn valuespn andspn screwedspn upspn localspn labels.
bull
n Fixedspn aspn bugspn wherebyspn thespn stubspn preprocessorspn didn'tspn communicatespn withspn thespn listingspn filespn generator,spn sospn thatspn thespdan aspn andspdan lspn optionsspn inspn conjunctionspn wouldspn producespn aspn uselessspn listingspn file.
bull
n Mergedspn `os2'spn objectspn filespn formatspn backspn intospn `obj',spn afterspn discoveringspn thatspn `obj'spn _also_spn shouldn'tspn havespn aspn linkspn passspn separatorspn inspn aspn modulespn containingspn aspn non-n trivialspn MODEND.spn Flatspn segmentsspn arespn nowspn declaredspn usingspn thespn FLATspn attribute.spn `os2'spn isspn nospn longerspn aspn validspn objectspn formatspn name:spn usespn `obj'.
bull
n Removedspn thespn fixed-n sizespn temporaryspn storagespn inspn thespn evaluator.spn Veryspn veryspn longspn expressionsspn (likespn `movspn ax,1+1+1+1+...'spn forspn twospn hundredspn 1sspn orspn so)spn shouldspn nowspn nospn longerspn crashspn NASM.
bull
n Fixedspn aspn bugspn involvingspn segfaultsspn onspn disassemblyspn ofspn MMXspn instructions,spn byspn changingspn thespn meaningspn ofspn onespn ofspn thespn operand-n typespn flagsspn inspn nasm.h.spn Thisspn mayspn causespn otherspn apparentlyspn unrelatedspn MMXspn problems;spn itspn needsspn tospn bespn testedspn thoroughly.
bull
n Fixedspn somespn bufferspn overrunspn problemsspn withspn largespn OBJspn outputspn files.spn Thanksspn tospn DJspn Deloriespn forspn thespn bugspn reportspn andspn fix.
bull
n Madespn preprocess-n onlyspn modespn actuallyspn listenspn tospn thespc %linespn markersspn asspn itspn printsspn them,spn sospn thatspn itspn canspn reportspn errorsspn morespn sanely.
bull
n Re-n designedspn thespn evaluatorspn tospn keepspn morespn sensiblespn trackspn ofspn expressionsspn involvingspn forwardspn references:spn canspn nowspn copespn withspn previously-n nightmarespn situationsspn suchspn as:
code
  mov ax,foo | bar   foo equ 1   bar equ 2
bull
n Addedspn thespn ALIGNspn andspn ALIGNBspn standardspn macros.
bull
n Addedspn PICspn supportspn inspn ELF:spn usespn ofspn WRTspn tospn obtainspn thespn fourspn extraspn relocationspn typesspn needed.
bull
n Addedspn thespn abilityspn forspn outputspn filespn formatsspn tospn definespn theirspn ownspn extensionsspn tospn thespn GLOBAL,spn COMMONspn andspn EXTERNspn directives.
bull
n Implementedspn common-n variablespn alignment,spn andspn global-n symbolspn typespn andspn sizespn declarations,spn inspn ELF.
bull
n Implementedspn NEARspn andspn FARspn keywordsspn forspn commonspn variables,spn plusspn far-n commonspn elementspn sizespn specification,spn inspn OBJ.
bull
n Addedspn aspn featurespn wherebyspn EXTERNsspn andspn COMMONsspn inspn OBJspn canspn bespn givenspn aspn defaultspn WRTspn specificationspn (eitherspn aspn segmentspn orspn aspn group).
bull
n Transformedspn thespn Unixspn NASMspn archivespn intospn anspn auto-n configuringspn package.
bull
n Addedspn aspn sanity-n checkspn forspn peoplespn applyingspn SEGspn tospn thingsspn whichspn arespn alreadyspn segmentspn bases:spn thisspn previouslyspn wentspn unnoticedspn byspn thespn SEGspn processingspn andspn causedspn OBJ-n driverspn panicsspn later.
bull
n Addedspn thespn ability,spn inspn OBJspn format,spn tospn dealspn withspn `MOVspn EAX,<segment>'spn typespn references:spn OBJspn doesn'tspn directlyspn supportspn dword-n sizespn segmentspn basespn fixups,spn butspn asspn longspn asspn thespn lowspn twospn bytesspn ofspn thespn constantspn termspn arespn zero,spn aspn word-n sizespn fixupspn canspn bespn generatedspn insteadspn andspn itspn willspn work.
bull
n Addedspn thespn abilityspn tospn specifyspn sections'spn alignmentspn requirementsspn inspn Win32spn objectspn filesspn andspn purespn binaryspn files.
bull
n Addedspn preprocess-n timespn expressionspn evaluation:spn thespc %assignspn (andspc %iassignn )spn directivespn andspn thespn barespc %ifspn (andspc %elifn )spn conditional.spn Addedspn relationalspn operatorsspn tospn thespn evaluator,spn forspn usespn onlyspn inspc %ifspn constructs:spn thespn standardspn relationalsspn =spn <spn >spn <=spn >=spn <>spn (andspn C-n likespn synonymsspn ==spn andspn !=)spn plusspn low-n precedencespn logicalspn operatorsspn &&,spn ^^spn andspn ||.
bull
n Addedspn aspn preprocessorspn repeatspn construct:spc %repspn /spc %exitrepspn /spc %endrepn .
bull
n Addedspn thespn __FILE__spn andspn __LINE__spn standardspn macros.
bull
n Addedspn aspn sanityspn checkspn forspn numberspn constantsspn beingspn greaterspn thanspn 0xFFFFFFFF.spn Thespn warningspn canspn bespn disabled.
bull
n Addedspn thespn %0spn tokenspn wherebyspn aspn variadicspn multi-n linespn macrospn canspn tellspn howspn manyspn parametersspn it'sspn beenspn givenspn inspn aspn specificspn invocation.
bull
n Addedspc %rotaten ,spn allowingspn multi-n linespn macrospn parametersspn tospn bespn cycled.
bull
n Addedspn thespn `*'spn optionspn forspn thespn maximumspn parameterspn countspn onspn multi-n linespn macros,spn allowingspn themspn tospn takespn arbitrarilyspn manyspn parameters.
bull
n Addedspn thespn abilityspn forspn thespn user-n levelspn formsspn ofspn EXTERN,spn GLOBALspn andspn COMMONspn tospn takespn morespn thanspn onespn argument.
bull
n Addedspn thespn IMPORTspn andspn EXPORTspn directivesspn inspn OBJspn format,spn tospn dealspn withspn Windowsspn DLLs.
bull
n Addedspn somespn morespn preprocessorspc %ifspn constructs:spc %ifidnspn /spc %ifidnispn (exactspn textualspn identity),spn andspc %ifidspn /spc %ifnumspn /spc %ifstrspn (tokenspn typespn testing).
bull
n Addedspn thespn abilityspn tospn distinguishspn SHLspn AX,1spn (thespn 8086spn version)spn fromspn SHLspn AX,BYTEspn 1spn (thespn 286-n and-n upwardsspn versionspn whosespn constantspn happensspn tospn bespn 1).
bull
n Addedspn NetBSD/FreeBSD/OpenBSD'sspn variantspn ofspn a.outspn format,spn completespn withspn PICspn sharedspn libraryspn features.
bull
n Changedspn NASM'sspn idiosyncraticspn handlingspn ofspn FCLEX,spn FDISI,spn FENI,spn FINIT,spn FSAVE,spn FSTCW,spn FSTENV,spn andspn FSTSWspn tospn bringspn itspn intospn linespn withspn thespn otherwisespn acceptedspn standard.spn Thespn previousspn behaviour,spn thoughspn itspn wasspn aspn deliberatespn feature,spn wasspn aspn deliberatespn featurespn basedspn onspn aspn misunderstanding.spn Apologiesspn forspn thespn inconvenience.
bull
n Improvedspn thespn flexibilityspn ofspn ABSOLUTE:spn youspn canspn nowspn givespn itspn anspn expressionspn ratherspn thanspn beingspn restrictedspn tospn aspn constant,spn andspn itspn canspn takespn relocatablespn argumentsspn asspn well.
bull
n Addedspn thespn abilityspn forspn aspn variablespn tospn bespn declaredspn asspn EXTERNspn multiplespn times,spn andspn thespn subsequentspn definitionsspn arespn justspn ignored.
bull
n Wespn nowspn allowspn instructionspn prefixesspn (CS,spn DS,spn LOCK,spn REPZspn etc)spn tospn bespn alonespn onspn aspn linespn (withoutspn aspn followingspn instruction).
bull
n Improvedspn sanityspn checksspn onspn whetherspn thespn argumentsspn tospn EXTERN,spn GLOBALspn andspn COMMONspn arespn validspn identifiers.
bull
n Addedspn misc/exebin.macspn tospn allowspn directspn generationspn ofspn .EXEspn filesspn byspn hackingspn upspn anspn EXEspn headerspn usingspn DBspn andspn DW;spn alsospn addedspn test/binexe.asmspn tospn demonstratespn thespn usespn ofspn this.spn Thanksspn tospn Yannspn Guidonspn forspn contributingspn thespn EXEspn headerspn code.
bull
n ndisasmspn forgotspn tospn checkspn whetherspn thespn inputspn filespn hadspn beenspn successfullyspn opened.spn Nowspn itspn does.spn Doh!
bull
n Addedspn thespn Cyrixspn extensionsspn tospn thespn MMXspn instructionspn set.
bull
n Addedspn aspn hintingspn mechanismspn tospn allowspn [EAX+EBX]spn andspn [EBX+EAX]spn tospn bespn assembledspn differently.spn Thisspn isspn importantspn sincespn [ESI+EBP]spn andspn [EBP+ESI]spn havespn differentspn defaultspn basespn segmentspn registers.
bull
n Addedspn supportspn forspn thespn PharLapspn OMFspn extensionspn forspn 4096-n bytespn segmentspn alignment.
subh C.3.3 :section-C.3.3
n Versionspn 0.95spn releasedspn Julyspn 1997
bull
n Fixedspn yetspn anotherspn ELFspn bug.spn Thisspn onespn manifestedspn ifspn thespn userspn reliedspn onspn thespn defaultspn segment,spn andspn attemptedspn tospn definespn globalspn symbolsspn withoutspn firstspn explicitlyspn declaringspn thespn targetspn segment.
bull
n Addedspn makefilesspn (forspn NASMspn andspn thespn RDFspn tools)spn tospn buildspn Win32spn consolespn appsspn underspn Symantecspn C++.spn Donatedspn byspn Markspn Junker.
bull
n Addedspn `macros.bas'spn andspn `insns.bas',spn QBasicspn versionsspn ofspn thespn Perlspn scriptsspn thatspn convertspn `standard.mac'spn tospn `macros.c'spn andspn convertspn `insns.dat'spn tospn `insnsa.c'spn andspn `insnsd.c'.spn Alsospn thanksspn tospn Markspn Junker.
bull
n Changedspn thespn diassembledspn formsspn ofspn thespn conditionalspn instructionsspn sospn thatspn JBspn isspn nowspn emittedspn asspn JC,spn andspn otherspn similarspn changes.spn Suggestedspn listspn byspn Ulrichspn Doewich.
bull
n Addedspn `@'spn tospn thespn listspn ofspn validspn charactersspn tospn beginspn anspn identifierspn with.
bull
n Documentaryspn changes,spn notablyspn thespn additionspn ofspn thespn `Commonspn Problems'spn sectionspn inspn nasm.doc.
bull
n Fixedspn aspn bugspn relatingspn tospn 32-n bitspn PC-n relativespn fixupsspn inspn OBJ.
bull
n Fixedspn aspn bugspn inspn perm_copy()spn inspn labels.cspn whichspn wasspn causingspn exceptionsspn inspn cleanup_labels()spn onspn somespn systems.
bull
n Positivityspn sanityspn checkspn inspn TIMESspn argumentspn changedspn fromspn aspn warningspn tospn anspn errorspn followingspn aspn furtherspn complaint.
bull
n Changedspn thespn acceptablespn limitsspn onspn bytespn andspn wordspn operandsspn tospn allowspn thingsspn likespn `~10111001b'spn tospn work.
bull
n Fixedspn aspn majorspn problemspn inspn thespn preprocessorspn whichspn causedspn seg-n faultsspn ifspn macrospn definitionsspn containedspn blankspn linesspn orspn comment-n onlyspn lines.
bull
n Fixedspn inadequatespn errorspn checkingspn onspn thespn commasspn separatingspn thespn argumentsspn tospn `db',spn `dw'spn etc.
bull
n Fixedspn aspn cripplingspn bugspn inspn thespn handlingspn ofspn macrosspn withspn operandspn countsspn definedspn withspn aspn `+'spn modifier.
bull
n Fixedspn aspn bugspn wherebyspn objectspn filespn formatsspn whichspn storedspn thespn inputspn filespn namespn inspn thespn outputspn filespn (suchspn asspn OBJspn andspn COFF)spn weren'tspn doingspn sospn correctlyspn whenspn thespn outputspn filespn namespn wasspn specifiedspn onspn thespn commandspn line.
bull
n Removedspn [INC]spn andspn [INCLUDE]spn supportspn forspn good,spn sincespn theyspn werespn obsoletespn anyway.
bull
n Fixedspn aspn bugspn inspn OBJspn whichspn causedspn allspn fixupsspn tospn bespn outputspn inspn 16-n bitspn (old-n format)spn FIXUPPspn records,spn ratherspn thanspn puttingspn thespn 32-n bitspn onesspn inspn FIXUPP32spn (new-n format)spn records.
bull
n Added,spn tentatively,spn OS/2spn objectspn filespn supportspn (asspn aspn minorspn variantspn onspn OBJ).
bull
n Updatesspn tospn Foxspn Cutter'sspn Borlandspn Cspn makefile,spn Makefile.bc2.
bull
n Removedspn aspn spuriousspn secondspn fclose()spn onspn thespn outputspn file.
bull
n Addedspn thespn `-n s'spn commandspn linespn optionspn tospn redirectspn allspn messagesspn whichspn wouldspn gospn tospn stderrspn (errors,spn helpspn text)spn tospn stdoutspn instead.
bull
n Addedspn thespn `-n w'spn commandspn linespn optionspn tospn selectivelyspn suppressspn somespn classesspn ofspn assemblyspn warningspn messages.
bull
n Addedspn thespn `-n p'spn pre-n includespn andspn `-n d'spn pre-n definespn command-n linespn options.
bull
n Addedspn anspn includespn filespn searchspn path:spn thespn `-n i'spn commandspn linespn option.
bull
n Fixedspn aspn sillyspn littlespn preprocessorspn bugspn wherebyspn startingspn aspn linespn withspn aspn `%!'spn environment-n variablespn referencespn causedspn anspn `unknownspn directive'spn error.
bull
n Addedspn thespn long-n awaitedspn listingspn filespn support:spn thespn `-n l'spn commandspn linespn option.
bull
n Fixedspn aspn problemspn withspn OBJspn formatspn whereby,spn inspn thespn absencespn ofspn anyspn explicitspn segmentspn definition,spn non-n globalspn symbolsspn declaredspn inspn thespn implicitspn defaultspn segmentspn generatedspn spuriousspn EXTDEFspn recordsspn inspn thespn output.
bull
n Addedspn thespn NASMspn environmentspn variable.
bull
n Fromspn thisspn versionspn forward,spn Win32spn console-n modespn binariesspn willspn bespn includedspn inspn thespn DOSspn distributionspn inspn additionspn tospn thespn 16-n bitspn binaries.spn Addedspn Makefile.vcspn forspn thisspn purpose.
bull
n Addedspn `returnspn 0;'spn tospn test/objlink.cspn tospn preventspn compilerspn warnings.
bull
n Addedspn thespn __NASM_MAJOR__spn andspn __NASM_MINOR__spn standardspn defines.
bull
n Addedspn anspn alternativespn memory-n referencespn syntaxspn inspn whichspn prefixingspn anspn operandspn withspn `&'spn isspn equivalentspn tospn enclosingspn itspn inspn squarespn brackets,spn atspn thespn requestspn ofspn Foxspn Cutter.
bull
n Errorsspn inspn passspn twospn nowspn causespn thespn programspn tospn returnspn aspn non-n zerospn errorspn code,spn whichspn theyspn didn'tspn before.
bull
n Fixedspn thespn single-n linespn macrospn cyclespn detection,spn whichspn didn'tspn workspn atspn allspn onspn macrosspn withspn nospn parametersspn (causedspn anspn infinitespn loop).spn Alsospn changedspn thespn behaviourspn ofspn single-n linespn macrospn cyclespn detectionspn tospn workspn likespn cpp,spn sospn thatspn macrosspn likespn `extrn'spn asspn givenspn inspn thespn documentationspn canspn bespn implemented.
bull
n Fixedspn thespn implementationspn ofspn WRT,spn whichspn wasspn toospn restrictivespn inspn thatspn youspn couldn'tspn dospn `movspn ax,[di+abcspn wrtspn dgroup]'spn becausespn (di+abc)spn wasn'tspn aspn relocatablespn reference.
subh C.3.4 :section-C.3.4
n Versionspn 0.94spn releasedspn Aprilspn 1997
bull
n Majorspn item:spn addedspn thespn macrospn processor.
bull
n Addedspn undocumentedspn instructionsspn SMI,spn IBTS,spn XBTSspn andspn LOADALL286.spn Alsospn reorganisedspn CMPXCHGspn instructionspn intospn early-n 486spn andspn Pentiumspn forms.spn Thanksspn tospn Thobiasspn Jonesspn forspn thespn information.
bull
n Fixedspn twospn morespn stupidspn bugsspn inspn ELF,spn whichspn werespn causingspn `ld'spn tospn continuespn tospn seg-n faultspn inspn aspn lotspn ofspn non-n trivialspn cases.
bull
n Fixedspn aspn seg-n faultspn inspn thespn labelspn manager.
bull
n Stoppedspn FBLDspn andspn FBSTPspn fromspn _requiring_spn thespn TWORDspn keyword,spn whichspn isspn thespn onlyspn optionspn forspn BCDspn loads/storesspn inspn anyspn case.
bull
n Ensuredspn FLDCW,spn FSTCWspn andspn FSTSWspn canspn copespn withspn thespn WORDspn keyword,spn ifspn anyonespn bothersspn tospn providespn it.spn Previouslyspn theyspn complainedspn unlessspn nospn keywordspn atspn allspn wasspn present.
bull
n Somespn formsspn ofspn FDIV/FDIVRspn andspn FSUB/FSUBRspn werespn stillspn inverted:spn aspn vestigespn ofspn aspn bugspn thatspn Ispn thoughtspn hadspn beenspn fixedspn inspn 0.92.spn Thisspn wasspn fixed,spn hopefullyspn forspn goodspn thisspn time...
bull
n Anotherspn minorspn phasespn errorspn (insofarspn asspn aspn phasespn errorspn canspn _ever_spn bespn minor)spn fixed,spn thisspn onespn occurringspn inspn codespn ofspn thespn form
code
  rol ax,forward_reference   forward_reference equ 1
bull
n Thespn numberspn suppliedspn tospn TIMESspn isspn nowspn sanity-n checkedspn forspn positivity,spn andspn alsospn mayspn bespn greaterspn thanspn 64Kspn (whichspn previouslyspn didn'tspn workspn onspn 16-n bitspn systems).
bull
n Addedspn Watcomspn Cspn makefiles,spn andspn misc/pmw.bat,spn donatedspn byspn Dominikspn Behr.
bull
n Addedspn thespn INCBINspn pseudo-n opcode.
bull
n Duespn tospn thespn adventspn ofspn thespn preprocessor,spn thespn [INCLUDE]spn andspn [INC]spn directivesspn havespn becomespn obsolete.spn Theyspn arespn stillspn supportedspn inspn thisspn version,spn withspn aspn warning,spn butspn won'tspn bespn inspn thespn next.
bull
n Fixedspn aspn bugspn inspn OBJspn format,spn whichspn causedspn incorrectspn objectspn recordsspn tospn bespn outputspn whenspn absolutespn labelsspn werespn madespn global.
bull
n Updatesspn tospn RDOFFspn subdirectory,spn andspn changesspn tospn outrdf.c.
subh C.3.5 :section-C.3.5
n Versionspn 0.93spn releasedspn Januaryspn 1997
norm
n Thisspn releasespn wentspn outspn inspn aspn greatspn hurryspn afterspn semi-n cripplingspn bugsspn werespn foundspn inspn 0.92.
bull
n Reallyspeodidspn fixspn thespn stackspn overflowsspn thisspn time.spn *blush*
bull
n Hadspn problemsspn withspn EAspn instructionspn sizesspn changingspn betweenspn passes,spn whenspn anspn offsetspn containedspn aspn forwardspn referencespn andspn sospn 4spn bytesspn werespn allocatedspn forspn thespn offsetspn inspn passspn one;spn byspn passspn twospn thespn symbolspn hadspn beenspn definedspn andspn happenedspn tospn bespn aspn smallspn absolutespn value,spn sospn onlyspn 1spn bytespn gotspn allocated,spn causingspn instructionspn sizespn mismatchspn betweenspn passesspn andspn hencespn incorrectspn addressspn calculations.spn Fixed.
bull
n Stupidspn bugspn inspn thespn revisedspn ELFspn sectionspn generationspn fixedspn (associatedspn string-n tablespn sectionspn forspn .symtabspn wasspn hard-n codedspn asspn 7,spn evenspn whenspn thisspn didn'tspn fitspn withspn thespn realspn sectionspn table).spn Wasspn causingspn `ld'spn tospn seg-n faultspn underspn Linux.
bull
n Includedspn aspn newspn Borlandspn Cspn makefile,spn Makefile.bc2,spn donatedspn byspn Foxspn Cutterspn <lmb@comtch.iea.com>.
subh C.3.6 :section-C.3.6
n Versionspn 0.92spn releasedspn Januaryspn 1997
bull
n Thespn FDIVP/FDIVRPspn andspn FSUBP/FSUBRPspn pairsspn hadspn beenspn inverted:spn thisspn wasspn fixed.spn Thisspn alsospn affectedspn thespn LCCspn driver.
bull
n Fixedspn aspn bugspn regardingspn 32-n bitspn effectivespn addressesspn ofspn thespn formspc [other_register+ESP]n .
bull
n Documentaryspn changes,spn notablyspn documentationspn ofspn thespn factspn thatspn Borlandspn Win32spn compilersspn usespn `obj'spn ratherspn thanspn `win32'spn objectspn format.
bull
n Fixedspn thespn COMENTspn recordspn inspn OBJspn files,spn whichspn wasspn formattedspn incorrectly.
bull
n Fixedspn aspn bugspn causingspn segfaultsspn inspn largespn RDFspn files.
bull
n OBJspn formatspn nowspn stripsspn initialspn periodsspn fromspn segmentspn andspn groupspn definitions,spn inspn orderspn tospn avoidspn complicationsspn withspn thespn localspn labelspn syntax.
bull
n Fixedspn aspn bugspn inspn disassemblingspn farspn callsspn andspn jumpsspn inspn NDISASM.
bull
n Addedspn supportspn forspn user-n definedspn sectionsspn inspn COFFspn andspn ELFspn files.
bull
n Compiledspn thespn DOSspn binariesspn withspn aspn sensiblespn amountspn ofspn stack,spn tospn preventspn stackspn overflowsspn onspn anyspn arithmeticspn expressionspn containingspn parentheses.
bull
n Fixedspn aspn bugspn inspn handlingspn ofspn filesspn thatspn dospn notspn terminatespn inspn aspn newline.
subh C.3.7 :section-C.3.7
n Versionspn 0.91spn releasedspn Novemberspn 1996
bull
n Loadsspn ofspn bugspn fixes.
bull
n Supportspn forspn RDFspn added.
bull
n Supportspn forspn DBGspn debuggingspn formatspn added.
bull
n Supportspn forspn 32-n bitspn extensionsspn tospn Microsoftspn OBJspn formatspn added.
bull
n Revisedspn forspn Borlandspn C:spn somespn variablespn namesspn changed,spn makefilespn added.
bull
n LCCspn supportspn revisedspn tospn actuallyspn work.
bull
n JMP/CALLspn NEAR/FARspn notationspn added.
bull
n `a16',spn `o16',spn `a32'spn andspn `o32'spn prefixesspn added.
bull
n Rangespn checkingspn onspn shortspn jumpsspn implemented.
bull
n MMXspn instructionspn supportspn added.
bull
n Negativespn floatingspn pointspn constantspn supportspn added.
bull
n Memoryspn handlingspn improvedspn tospn bypassspn 64Kspn barrierspn underspn DOS.
bull
c $spn prefixspn tospn forcespn treatmentspn ofspn reservedspn wordsspn asspn identifiersspn added.
bull
n Default-n sizespn mechanismspn forspn objectspn formatsspn added.
bull
n Compile-n timespn configurabilityspn added.
bull
c #n ,spc @n ,spc ~spn andspn c{?}spn arespn nowspn validspn charactersspn inspn labels.
bull
c -espn andspc -kspn optionsspn inspn NDISASMspn added.
subh C.3.8 :section-C.3.8
n Versionspn 0.90spn releasedspn Octoberspn 1996
norm
n Firstspn releasespn version.spn Firstspn supportspn forspn objectspn filespn output.spn Otherspn changesspn fromspn previousspn versionspn (0.3x)spn toospn numerousspn tospn document.
appn D :appendix-D
n Buildingspn NASMspn fromspn Source
norm
n Thespn sourcespn codespn forspn NASMspn isspn availablespn fromspn ourspn website,spw <http://www.nasm.us/>http://wwww.nasm.us/n ,spn seespx section-E.1n sectionspn E.1xesection-E.1n .
head D.1 :section-D.1
n Buildingspn fromspn aspn Sourcespn Archive
norm
n Thespn sourcespn archivesspn availablespn onspn thespn webspn sitespn shouldspn bespn capablespn ofspn buildingspn onspn aspn numberspn ofspn platforms.spn Thisspn isspn thespn recommendedspn methodspn forspn buildingspn NASMspn tospn supportspn platformsspn forspn whichspn executablesspn arespn notspn available.
norm
n Onspn aspn systemspn whichspn hasspn Unixspn shellspn (c shn ),spn run:
code
     sh configure      make everything
norm
n Aspn numberspn ofspn optionsspn canspn bespn passedspn tospc configuren ;spn seespc sh configure --helpn .
norm
n Aspn setspn ofspn Makefilesspn forspn somespn otherspn environmentsspn arespn alsospn available;spn pleasespn seespn thespn filespc Mkfiles/READMEn .
norm
n Tospn buildspn thespn installerspn forspn thespn Windowsspn platform,spn youspn willspn needspn thespi nullsoft scriptable installeresNullsoftspe ScriptablespeeInstallern ,spi nsisn NSISn ,spn installed.
norm
n Tospn buildspn thespn documentation,spn youspn willspn needspn aspn setspn ofspn additionalspn tools.spn Thespn documentationspn isspn notspn likelyspn tospn bespn ablespn tospn buildspn onspn non-n Unixspn systems.
head D.2 :section-D.2
n Buildingspn fromspn thespi gitc gitspn Repository
norm
n Thespn NASMspn developmentspn treespn isspn keptspn inspn aspn sourcespn codespn repositoryspn usingspn thespc gitspn distributedspn sourcespn controlspn system.spn Thespn linkspn isspn availablespn onspn thespn website.spn Thisspn isspn recommendedspn onlyspn tospn participatespn inspn thespn developmentspn ofspn NASMspn orspn tospn assistspn withspn testingspn thespn developmentspn code.
norm
n Tospn buildspn NASMspn fromspn thespc gitspn repositoryspn youspn willspn needspn aspn Perlspn interpreterspn and,spn ifspn buildingspn onspn aspn Unixspn system,spn GNUspn autoconfspn installedspn onspn yourspn system.
norm
n Tospn buildspn onspn aspn Unixspn system,spn run:
code
     sh autogen.sh
norm
n tospn createspn thespc configurespn scriptspn andspn thenspn buildspn asspn listedspn above.
head D.3 :section-D.3
n Buildingspn thespn documentation
norm
n Tospn buildspn thespn documentation,spn youspn willspn needspn aspn Perlspn interpreter,spn aspn Postscriptspn tospn PDFspn converterspn suchspn asspn Ghostscript,spn andspn suitablespn fontsspn installedspn onspn yourspn system.spn Thespn recommendedspn (andspn default)spn fontsspn arespn Adobe'sspn Sourcespn Sansspn andspn Sourcespn Codespn fonts,spn whichspn arespn freelyspn availablespn underspn thespn SILspn Openspn Fontspn License.
appn E :appendix-E
n Contactspn Information
head E.1 :section-E.1
n Website
norm
n NASMspn hasspn aspi websiten websitespn atspwc<http://www.nasm.us/>http://www.nasm.us/n .
norm
i new releasesn Newspn releasesn ,spi release candidatesn releasespn candidatesn ,spn andspi snapshots, daily developmenti daily development snapshotsn dailyspn developmentspn snapshotsspn ofspn NASMspn arespn availablespn fromspn thespn officialspn webspn sitespn inspn sourcespn formspn asspn wellspn asspn binariesspn forspn aspn numberspn ofspn commonspn platforms.
subh E.1.1 :section-E.1.1
n Userspn Forums
norm
n Usersspn ofspn NASMspn mayspn findspn thespn Forumsspn onspn thespn websitespn useful.spn Thesespn are,spn however,spn notspn frequentedspn muchspn byspn thespn developersspn ofspn NASM,spn sospn theyspn arespn notspn suitablespn forspn reportingspn bugs.
subh E.1.2 :section-E.1.2
n Developmentspn Community
norm
n Thespn developmentspn ofspn NASMspn isspn coordinatedspn primarilyspn thoughspn thespi nasm-develc nasm-develspn mailingspn list.spn Ifspn youspn wishspn tospn participatespn inspn developmentspn ofspn NASM,spn pleasespn joinspn thisspn mailingspn list.spn Subscriptionspn linksspn andspn archivesspn ofspn pastspn postsspn arespn availablespn onspn thespn website.
head E.2 :section-E.2
i reporting bugsn Reportingspn Bugsi bugs
norm
n Tospn reportspn bugsspn inspn NASM,spn pleasespn usespn thespi bug trackern bugspn trackerspn atspwc<http://www.nasm.us/>http://www.nasm.us/spn (clickspn onspn "Bugspn Tracker"),spn orspn ifspn thatspn failsspn thenspn throughspn onespn ofspn thespn contactsspn inspx section-E.1n sectionspn E.1xesection-E.1n .
norm
n Pleasespn readspx section-2.2n sectionspn 2.2xesection-2.2spn first,spn andspn don'tspn reportspn thespn bugspn ifspn it'sspn listedspn inspn therespn asspn aspn deliberatespn feature.spn (Ifspn youspn thinkspn thespn featurespn isspn badlyspn thoughtspn out,spn feelspn freespn tospn sendspn usspn reasonsspn whyspn youspn thinkspn itspn shouldspn bespn changed,spn butspn don'tspn justspn sendspn usspn mailspn sayingspn `Thisspn isspn aspn bug'spn ifspn thespn documentationspn saysspn wespn didspn itspn onspn purpose.)spn Thenspn readspx section-13.1n sectionspn 13.1xesection-13.1n ,spn andspn don'tspn botherspn reportingspn thespn bugspn ifspn it'sspn listedspn there.
norm
n Ifspn youspn dospn reportspn aspn bug,speopleasespn makespn surespn yourspn bugspn reportspn includesspn thespn followingspn information:
bull
n Whatspn operatingspn systemspn you'respn runningspn NASMspn under.spn Linux,spn FreeBSD,spn NetBSD,spn MacOSspn X,spn Win16,spn Win32,spn Win64,spn MS-n DOS,spn OS/2,spn VMS,spn whatever.
bull
n Ifspn youspn compiledspn yourspn ownspn executablespn fromspn aspn sourcespn archive,spn compiledspn yourspn ownspn executablespn fromspc gitn ,spn usedspn thespn standardspn distributionspn binariesspn fromspn thespn website,spn orspn gotspn anspn executablespn fromspn somewherespn elsespn (e.g.spn aspn Linuxspn distribution.)spn Ifspn youspn werespn usingspn aspn locallyspn builtspn executable,spn tryspn tospn reproducespn thespn problemspn usingspn onespn ofspn thespn standardspn binaries,spn asspn thisspn willspn makespn itspn easierspn forspn usspn tospn reproducespn yourspn problemspn priorspn tospn fixingspn it.
bull
n Whichspn versionspn ofspn NASMspn you'respn using,spn andspn exactlyspn howspn youspn invokedspn it.spn Givespn usspn thespn precisespn commandspn line,spn andspn thespn contentsspn ofspn thespc NASMENVspn environmentspn variablespn ifspn any.
bull
n Whichspn versionsspn ofspn anyspn supplementaryspn programsspn you'respn using,spn andspn howspn youspn invokedspn them.spn Ifspn thespn problemspn onlyspn becomesspn visiblespn atspn linkspn time,spn tellspn usspn whatspn linkerspn you'respn using,spn whatspn versionspn ofspn itspn you'vespn got,spn andspn thespn exactspn linkerspn commandspn line.spn Ifspn thespn problemspn involvesspn linkingspn againstspn objectspn filesspn generatedspn byspn aspn compiler,spn tellspn usspn whatspn compiler,spn whatspn version,spn andspn whatspn commandspn linespn orspn optionsspn youspn used.spn (Ifspn you'respn compilingspn inspn anspn IDE,spn pleasespn tryspn tospn reproducespn thespn problemspn withspn thespn command-n linespn versionspn ofspn thespn compiler.)
bull
n Ifspn atspn allspn possible,spn sendspn usspn aspn NASMspn sourcespn filespn whichspn exhibitsspn thespn problem.spn Ifspn thisspn causesspn copyrightspn problemsspn (e.g.spn youspn canspn onlyspn reproducespn thespn bugspn inspn restricted-n distributionspn code)spn thenspn bearspn inspn mindspn thespn followingspn twospn points:spn firstly,spn wespn guaranteespn thatspn anyspn sourcespn codespn sentspn tospn usspn forspn thespn purposesspn ofspn debuggingspn NASMspn willspn bespn usedspeoonlyspn forspn thespn purposesspn ofspn debuggingspn NASM,spn andspn thatspn wespn willspn deletespn allspn ourspn copiesspn ofspn itspn asspn soonspn asspn wespn havespn foundspn andspn fixedspn thespn bugspn orspn bugsspn inspn question;spn andspn secondly,spn wespn wouldspn preferspeonotspn tospn bespn mailedspn largespn chunksspn ofspn codespn anyway.spn Thespn smallerspn thespn file,spn thespn better.spn Aspn three-n linespn samplespn filespn thatspn doesspn nothingspn usefulspeoexceptspn demonstratespn thespn problemspn isspn muchspn easierspn tospn workspn withspn thanspn aspn fullyspn fledgedspn ten-n thousand-n linespn program.spn (Ofspn course,spn somespn errorsspeodospn onlyspn cropspn upspn inspn largespn files,spn sospn thisspn mayspn notspn bespn possible.)
bull
n Aspn descriptionspn ofspn whatspn thespn problemspn actuallyspeoisn .spn `Itspn doesn'tspn work'spn isspeonotspn aspn helpfulspn description!spn Pleasespn describespn exactlyspn whatspn isspn happeningspn thatspn shouldn'tspn be,spn orspn whatspn isn'tspn happeningspn thatspn should.spn Examplesspn mightspn be:spn `NASMspn generatesspn anspn errorspn messagespn sayingspn Linespn 3spn forspn anspn errorspn that'sspn actuallyspn onspn Linespn 5';spn `NASMspn generatesspn anspn errorspn messagespn thatspn Ispn believespn itspn shouldn'tspn bespn generatingspn atspn all';spn `NASMspn failsspn tospn generatespn anspn errorspn messagespn thatspn Ispn believespn itspeoshouldspn bespn generating';spn `thespn objectspn filespn producedspn fromspn thisspn sourcespn codespn crashesspn myspn linker';spn `thespn ninthspn bytespn ofspn thespn outputspn filespn isspn 66spn andspn Ispn thinkspn itspn shouldspn bespn 77spn instead'.
bull
n Ifspn youspn believespn thespn outputspn filespn fromspn NASMspn tospn bespn faulty,spn sendspn itspn tospn us.spn Thatspn allowsspn usspn tospn determinespn whetherspn ourspn ownspn copyspn ofspn NASMspn generatesspn thespn samespn file,spn orspn whetherspn thespn problemspn isspn relatedspn tospn portabilityspn issuesspn betweenspn ourspn developmentspn platformsspn andspn yours.spn Wespn canspn handlespn binaryspn filesspn mailedspn tospn usspn asspn MIMEspn attachments,spn uuencoded,spn andspn evenspn BinHex.spn Alternatively,spn wespn mayspn bespn ablespn tospn providespn anspn FTPspn sitespn youspn canspn uploadspn thespn suspectspn filesspn to;spn butspn mailingspn themspn isspn easierspn forspn us.
bull
n Anyspn otherspn informationspn orspn dataspn filesspn thatspn mightspn bespn helpful.spn If,spn forspn example,spn thespn problemspn involvesspn NASMspn failingspn tospn generatespn anspn objectspn filespn whilespn TASMspn canspn generatespn anspn equivalentspn filespn withoutspn trouble,spn thenspn sendspn usspeobothspn objectspn files,spn sospn wespn canspn seespn whatspn TASMspn isspn doingspn differentlyspn fromspn us.
indx :! opunary
c !spn operator
indx :!=
c !=spn operator
indx :$$
c $$spn token
indx :$, here
c $n ,spn Herespn token
indx :$, prefix
c $n ,spn prefix
indx :%
c %spn operator
indx :%!
c %!
indx :%$
c %$spn andspc %$$spn prefixes
indx :%%
c %%spn operator
indx :%*?
c %*?
indx :%*??
c %*??
indx :%+
c %+
indx :%,
c %,
indx :%?
c %?
indx :%??
c %??
indx :%[
c %[
indx :%db
c %spn prefixspn tospc DBspn lists
indx :&
c &spn operator
indx :&&
c &&spn operator
indx :*
c *spn operator
indx :+ modifier
c +spn modifier
indx :+ opaddition
c +spn operator,spn binary
indx :+ opunary
c +spn operator,spn unary
indx :- opsubtraction
c -spn operator,spn binary
indx :- opunary
c -spn operator,spn unary
indx :..@
c ..@spn symbolspn prefix
indx :/
c /spn operator
indx ://
c //spn operator
indx :<
c <spn operator
indx :<<
c <<spn operator
indx :<<<
c <<<spn operator
indx :<=
c <=spn operator
indx :<=>
c <=>spn operator
indx :<>
c <>spn operator
indx :=
c =spn operator
indx :==
c ==spn operator
indx :>
c >spn operator
indx :>=
c >=spn operator
indx :>>
c >>spn operator
indx :>>>
c >>>spn operator
indx :?db
c ?n ,spn dataspn syntax
indx :?op
c ?n ,spn operator
indx :^
c ^spn operator
indx :^^
c ^^spn operator
indx :|
c |spn operator
indx :||
c ||spn operator
indx :~
c ~spn operator
indx :~ opunary
n ~spn opunary
indx :%0
c %0spn parameterspn count
indx :%00
c %00
indx :%+1
c %+1spn andspc %-1spn syntax
indx :16-bit mode, versus 32-bit mode
n 16-bitspn mode,spn versusspn 32-bitspn mode
indx :1's complement
n 1'sspn complement
indx :2's complement
n 2'sspn complement
indx :64-bit displacement
n 64-bitspn displacement
indx :64-bit immediate
n 64-bitspn immediate
indx :-a
c -aspn option
indx :a16
c A16
indx :a32
c A32
indx :a64
c A64
indx :a86
c a86
indx :ABS
c ABS
indx :ABSOLUTE
c ABSOLUTE
indx :addition
n addition
indx :addressing, mixed-size
n addressing,spn mixed-size
indx :address-size prefixes
n address-sizespn prefixes
indx :algebra
n algebra
indx :ALIGN
c ALIGN
indx :align, smart
c ALIGNn ,spn smart
indx :align, elf attribute
n align,spn elfspn attribute
indx :ALIGNB
c ALIGNB
indx :alignment
n alignment
indx :alignment, in bin sections
n alignment,spn inspc binspn sections
indx :alignment, in elf sections
n alignment,spn inspn ELFspn sections
indx :alignment, in obj sections
n alignment,spn inspc objspn sections
indx :alignment, in win32 sections
n alignment,spn inspc win32spn sections
indx :alignment, of elf common variables
n alignment,spn ofspn ELFspn commonspn variables
indx :ALIGNMODE
c ALIGNMODE
indx :__?ALIGNMODE?__
c __?ALIGNMODE?__
indx :ALINK
c ALINK
indx :alink.sourceforge.net
c alink.sourceforge.net
indx :all
c all
indx :alloc
c alloc
indx :alternate register names
n alternatespn registerspn names
indx :altreg
c altreg
indx :ambiguity
n ambiguity
indx :a.out, bsd version
c a.outn ,spn BSDspn version
indx :a.out, linux version
c a.outn ,spn Linuxspn version
indx :aout
c aout
indx :aoutb
c aoutb
indx :%arg
c %arg
indx :arg
c arg
indx :as86
c as86
indx :assembler directives
n assemblerspn directives
indx :assembly-time options
n assembly-timespn options
indx :%assign
c %assign
indx :ASSUME
c ASSUME
indx :AT
c AT
indx :auto-sync
c auto-sync
indx :-b
c -b
indx :baddb
n baddb
indx :bad-pragma
c bad-pragma
indx :--before
c --before
indx :bf16
c bf16
indx :__?bfloat16?__
c __?bfloat16?__
indx :bfloat16
c bfloat16
indx :bin
c binspn outputspn format
indx :bin, multisection
n bin,spn multisection
indx :binary
n binary
indx :binary files
n binaryspn files
indx :bit shift
n bitspn shift
indx :BITS
c BITS
indx :__?BITS?__
c __?BITS?__
indx :bitwise and
n bitwisespn AND
indx :bitwise or
n bitwisespn OR
indx :bitwise xor
n bitwisespn XOR
indx :block ifs
n blockspn IFs
indx :BND
c BND
indx :bnd
c bnd
indx :boolean and
n boolean,spn AND
indx :boolean or
n boolean,spn OR
indx :boolean xor
n boolean,spn XOR
indx :boot loader
n bootspn loader
indx :boot sector
n bootspn sector
indx :borland pascal
n Borland,spn Pascal
indx :borland's win32 compilers
n Borland,spn Win32spn compilers
indx :braces, after % sign
n braces,spn afterspc %spn sign
indx :braces, around macro parameters
n braces,spn aroundspn macrospn parameters
indx :bsd
n BSD
indx :.bss
c .bss
indx :bug tracker
n bugspn tracker
indx :bugs
n bugs
indx :BYTE
c BYTE
indx :c calling convention
n Cspn callingspn convention
indx :c symbol names
n Cspn symbolspn names
indx :c16.mac
c c16.mac
indx :c32.mac
c c32.mac
indx :CALL FAR
c CALL FAR
indx :case sensitive
n casespn sensitivity
indx :changing sections
n changingspn sections
indx :character constant
n characterspn constant
indx :character strings
n characterspn strings
indx :circular references
n circularspn references
indx :CLASS
c CLASS
indx :%clear
c %clear
indx :codeview debugging format
n CodeViewspn debuggingspn format
indx :coff
c coff
indx :colon
n colon
indx :.COM
c .COM
indx :comma
n comma
indx :command-line
n command-line
indx :commas in macro parameters
n commasspn inspn macrospn parameters
indx :.comment
c .comment
indx :COMMON
c COMMON
indx :common, elf extensions to
c COMMONn ,spn ELFspn extensionsspn to
indx :common, obj extensions to
c COMMONn ,spc objspn extensionsspn to
indx :common object file format
n Commonspn Objectspn Filespn Format
indx :common variables
n commonspn variables
indx :common variables, alignment in elf
n commonspn variables,spn alignmentspn inspn ELF
indx :common variables, element size
n commonspn variables,spn elementspn size
indx :comparison operators
n comparisonspn operators
indx :comp.os.msdos.programmer
c comp.os.msdos.programmer
indx :concatenating macro parameters
n concatenatingspn macrospn parameters
indx :concatenating strings
n concatenatingspn strings
indx :condition codes as macro parameters
n conditionspn codesspn asspn macrospn parameters
indx :conditional assembly
n conditionalspn assembly
indx :conditional comma operator
n conditionalspn commaspn operator
indx :conditional jumps
n conditionalspn jumps
indx :conditional-return macro
n conditional-returnspn macro
indx :constants
n constants
indx :context fall-through lookup
n contextspn fall-throughspn lookup
indx :context stack
n contextspn stack
indx :context-local labels
n context-localspn labels
indx :context-local single-line macros
n context-localspn single-linespn macros
indx :counting macro parameters
n countingspn macrospn parameters
indx :CPU
c CPU
indx :CPUID
c CPUID
indx :creating contexts
n creatingspn contexts
indx :critical expression
n criticalspn expression
indx :\c{section
n \c{section
indx :cv8
c cv8
indx :-D
c -Dspn option
indx :-d
c -dspn option
indx :daily development snapshots
n dailyspn developmentspn snapshots
indx :.data
c .data
indx :_DATA
c _DATA
indx :data
c data
indx :data structure
n dataspn structure
indx :__?DATE?__
c __?DATE?__
indx :__?DATE_NUM?__
c __?DATE_NUM?__
indx :DB
c DB
indx :db-empty
c db-empty
indx :dbg
c dbg
indx :DD
c DD
indx :debug information
n debugspn information
indx :debug information format
n debugspn informationspn format
indx :__?DEBUG_FORMAT?__
c __?DEBUG_FORMAT?__
indx :decimal
n decimal
indx :declaring structure
n declaringspn structures
indx :%defalias
c %defalias
indx :DEFAULT
c DEFAULT
indx :default
c default
indx :default macro parameters
n defaultspn macrospn parameters
indx :default name
n defaultspn name
indx :default-wrt mechanism
n default-c WRTspn mechanism
indx :%define
c %define
indx :defining sections
n definingspn sections
indx :%defstr
c %defstr
indx :%deftok
c %deftok
indx :%depend
c %depend
indx :design goals
n designspn goals
indx :devpac
n DevPac
indx :disabling listing expansion
n disablingspn listingspn expansion
indx :division
n division
indx :division, signed
n division,spn signed
indx :division, unsigned
n division,spn unsigned
indx :djgpp
n DJGPP
indx :djlink
c djlink
indx :dll symbols, exporting
n DLLspn symbols,spn exporting
indx :dll symbols, importing
n DLLspn symbols,spn importing
indx :DO
c DO
indx :dos
n DOS
indx :DQ
c DQ
indx :.drectve
c .drectve
indx :DT
c DT
indx :DUP
c DUP
indx :DW
c DW
indx :DWORD
c DWORD
indx :DY
c DY
indx :DZ
c DZ
indx :-E
c -Espn option
indx :-e
c -espn option
indx :effective addresses
n effectivespn addresses
indx :element size, in common variables
n elementspn size,spn inspn commonspn variables
indx :elf
n ELF
indx :elf shared library
n ELF,spn sharedspn libraries
indx :elf, 16-bit code
n ELF,spn 16-n bitspn code
indx :elf, debug formats
n ELF,spn debugspn formats
indx :elf32
c elf32
indx :elf64
c elf64
indx :elfx32
c elfx32
indx :%elif
c %elif
indx :%elifctx
c %elifctx
indx :%elifdef
c %elifdef
indx :%elifempty
c %elifempty
indx :%elifenv
c %elifenv
indx :%elifid
c %elifid
indx :%elifidn
c %elifidn
indx :%elifidni
c %elifidni
indx :%elifmacro
c %elifmacro
indx :%elifn
c %elifn
indx :%elifnctx
c %elifnctx
indx :%elifndef
c %elifndef
indx :%elifnempty
c %elifnempty
indx :%elifnenv
c %elifnenv
indx :%elifnid
c %elifnid
indx :%elifnidn
c %elifnidn
indx :%elifnidni
c %elifnidni
indx :%elifnmacro
c %elifnmacro
indx :%elifnnum
c %elifnnum
indx :%elifnstr
c %elifnstr
indx :%elifntoken
c %elifntoken
indx :%elifnum
c %elifnum
indx :%elifstr
c %elifstr
indx :%eliftoken
c %eliftoken
indx :%else
c %else
indx :endproc
c endproc
indx :%endrep
c %endrep
indx :ENDSTRUC
c ENDSTRUC
indx :environment
c environment
indx :EQU
c EQU
indx :%error
c %error
indx :error messages
n errorspn messages
indx :error reporting format
n errorspn reportingspn format
indx :escape sequences
n escapespn sequences
indx :EVEN
c EVEN
indx :exact matches
n exactspn matches
indx :.EXE
c .EXE
indx :EXE2BIN
c EXE2BIN
indx :EXE_begin
c EXE_begin
indx :exebin.mac
c exebin.mac
indx :exec
c exec
indx :executable and linkable format
n Executablespn andspn Linkablespn Format
indx :EXE_end
c EXE_end
indx :EXE_stack
c EXE_stack
indx :%exitrep
c %exitrep
indx :EXPORT
c EXPORT
indx :export
c export
indx :exporting symbols
n exportingspn symbols
indx :expressions
n expressions
indx :extension
n extension
indx :EXTERN
c EXTERN
indx :extern, elf extensions to
c EXTERNn ,spc elfspn extensionsspn to
indx :extern, obj extensions to
c EXTERNn ,spc objspn extensionsspn to
indx :extern, rdf extensions to
c EXTERNn ,spc rdfspn extensionsspn to
indx :extracting substrings
n extractingspn substrings
indx :-F
c -Fspn option
indx :-f
c -fspn option
indx :far call
n farspn call
indx :far common variables
n farspn commonspn variables
indx :far pointer
n farspn pointer
indx :FARCODE
c FARCODE
indx :%fatal
c %fatal
indx :__?FILE?__
c __?FILE?__
indx :fini_array
c fini_array
indx :FLAT
c FLAT
indx :flat memory model
n flatspn memoryspn model
indx :flat-form binary
n flat-formspn binary
indx :FLOAT
c FLOAT
indx :__?FLOAT?__
c __?FLOAT?__
indx :float
c float
indx :__?float128h?__
c __?float128h?__
indx :__?float128l?__
c __?float128l?__
indx :__?float16?__
c __?float16?__
indx :__?float32?__
c __?float32?__
indx :__?float64?__
c __?float64?__
indx :__?float8?__
c __?float8?__
indx :__?float80e?__
c __?float80e?__
indx :__?float80m?__
c __?float80m?__
indx :__?FLOAT_DAZ?__
c __?FLOAT_DAZ?__
indx :float-denorm
c float-denorm
indx :floating-point, constants
n floating-n point,spn constants
indx :floating-point, packed bcd constants
n floating-n point,spn packedspn BCDspn constants
indx :floating-point
n floating-point
indx :float-overflow
c float-overflow
indx :__?FLOAT_ROUND?__
c __?FLOAT_ROUND?__
indx :float-toolong
c float-toolong
indx :float-underflow
c float-underflow
indx :follows=
c follows=
indx :format-specific directives
n format-specificspn directives
indx :fp
c fp
indx :frame pointer
n framespn pointer
indx :freebsd
n FreeBSD
indx :freelink
n FreeLink
indx :ftp.simtel.net
c ftp.simtel.net
indx :function
c function
indx :functions, c calling convention
n functions,spn Cspn callingspn convention
indx :functions, pascal calling convention
n functions,spc PASCALspn callingspn convention
indx :-g
c -gspn option
indx :git
c git
indx :GLOBAL
c GLOBAL
indx :global, aoutb extensions to
c GLOBALn ,spc aoutbspn extensionsspn to
indx :global, elf extensions to
c GLOBALn ,spn ELFspn extensionsspn to
indx :global, rdf extensions to
c GLOBALn ,spc rdfspn extensionsspn to
indx :global offset table
n globalspn offsetspn table
indx :_GLOBAL_OFFSET_TABLE_
c _GLOBAL_OFFSET_TABLE_
indx :(G|L)POSTFIX
c (G|L)POSTFIX
indx :--(g|l)postfix
c --(g|l)postfix
indx :(G|L)PREFIX
c (G|L)PREFIX
indx :--(g|l)prefix
c --(g|l)prefix
indx :..got
c ..got
indx :got relocations
c GOTspn relocations
indx :got
n GOT
indx :..gotoff
c ..gotoff
indx :gotoff relocation
c GOTOFFspn relocations
indx :..gotpc
c ..gotpc
indx :gotpc relocation
c GOTPCspn relocations
indx :..gottpoff
c ..gottpoff
indx :graphics
n graphics
indx :greedy macro parameters
n greedyspn macrospn parameters
indx :GROUP
c GROUP
indx :groups
n groups
indx :-h
c -h
indx :hexadecimal
n hexadecimal
indx :hidden
c hidden
indx :hle
c hle
indx :hybrid syntaxes
n hybridspn syntaxes
indx :-I
c -Ispn option
indx :-i
c -ispn option
indx :%iassign
c %iassign
indx :%idefalias
c %idefalias
indx :%idefine
c %idefine
indx :%idefstr
c %idefstr
indx :%ideftok
c %ideftok
indx :IEND
c IEND
indx :%if
c %if
indx :%ifctx
c %ifctx
indx :%ifdef
c %ifdef
indx :%ifempty
c %ifempty
indx :%ifenv
c %ifenv
indx :%ifid
c %ifid
indx :%ifidn
c %ifidn
indx :%ifidni
c %ifidni
indx :%ifmacro
c %ifmacro
indx :%ifn
c %ifn
indx :%ifnctx
c %ifnctx
indx :%ifndef
c %ifndef
indx :%ifnempty
c %ifnempty
indx :%ifnenv
c %ifnenv
indx :%ifnid
c %ifnid
indx :%ifnidn
c %ifnidn
indx :%ifnidni
c %ifnidni
indx :%ifnmacro
c %ifnmacro
indx :%ifnnum
c %ifnnum
indx :%ifnstr
c %ifnstr
indx :%ifntoken
c %ifntoken
indx :%ifnum
c %ifnum
indx :%ifstr
c %ifstr
indx :%iftoken
c %iftoken
indx :ifunc
c ifunc
indx :ilog2()
c ilog2()
indx :ilog2c()
c ilog2c()
indx :ilog2cw()
c ilog2cw()
indx :ilog2e()
c ilog2e()
indx :ilog2f()
c ilog2f()
indx :ilog2fw()
c ilog2fw()
indx :ilog2w()
c ilog2w()
indx :%imacro
c %imacro
indx :IMPORT
c IMPORT
indx :import library
n importspn library
indx :importing symbols
n importingspn symbols
indx :unconditionally importing symbols
n importingspn symbols,spn unconditionally
indx :INCBIN
c INCBIN
indx :%include
c %include
indx :include search path
n includespn searchspn path
indx :including other files
n includingspn otherspn files
indx :inefficient code
n inefficientspn code
indx :infinite loop
n infinitespn loop
indx :__?Infinity?__
c __?Infinity?__
indx :infinity
n infinity
indx :informational section
n informationalspn section
indx :init_array
c init_array
indx :instances of structures
n instancesspn ofspn structures
indx :instruction list
n instructionspn list
indx :integer functions
n integerspn functions
indx :integer logarithms
n integerspn logarithms
indx :intel hex
n intelspn hex
indx :intel number formats
n Intelspn numberspn formats
indx :internal
c internal
indx :ISTRUC
c ISTRUC
indx :iterating over macro parameters
n iteratingspn overspn macrospn parameters
indx :ith
c ith
indx :%ixdefine
c %ixdefine
indx :Jcc NEAR
c Jcc NEAR
indx :JMP DWORD
c JMP DWORD
indx :jumps, mixed-size
n jumps,spn mixed-size
indx :-k
c -k
indx :--keep-all
c --keep-all
indx :-L
c -Lspn option
indx :-l
c -lspn option
indx :label
c label
indx :label preceeding macro
n labelspn preceedingspn macro
indx :label prefix
n labelspn prefix
indx :label-orphan
c label-orphan
indx :label-redef
c label-redef
indx :label-redef-late
c label-redef-late
indx :last
n last
indx :.lbss
c .lbss
indx :ld86
c ld86
indx :.ldata
c .ldata
indx :LIBRARY
c LIBRARY
indx :license
n license
indx :--limit-X
c --limit-X
indx :%line
c %line
indx :__?LINE?__
c __?LINE?__
indx :linker, free
n linker,spn free
indx :linux, a.out
n Linux,spc a.out
indx :linux, as86
n Linux,spc as86
indx :linux, elf
n Linux,spn ELF
indx :listing file
n listingspn file
indx :little-endian
n little-endian
indx :%local
c %local
indx :local labels
n localspn labels
indx :lock
c lock
indx :.lrodata
c .lrodata
indx :-M
c -Mspn option
indx :mach object file format
n Mach,spn objectspn filespn format
indx :macho
n Mach-n O,spn objectspn filespn format
indx :macho32
c macho32
indx :macho64
c macho64
indx :macos x
n MacOSspn X
indx :%macro
c %macro
indx :macro
c macro
indx :macro indirection
n macrospn indirection
indx :macro library
n macrospn library
indx :macro parameters range
n macrospn parametersspn range
indx :macro processor
n macrospn processor
indx :macro-def
c macro-def
indx :macro-defaults
c macro-defaults
indx :macro-def-case-single
c macro-def-case-single
indx :macro-def-greedy-single
c macro-def-greedy-single
indx :macro-def-param-single
c macro-def-param-single
indx :macro-local labels
n macro-localspn labels
indx :macro-params
c macro-params
indx :macro-params-legacy
c macro-params-legacy
indx :macro-params-multi
c macro-params-multi
indx :macro-params-single
c macro-params-single
indx :macros
n macros
indx :makefile dependencies
n makefilespn dependencies
indx :map files
n mapspn files
indx :masm
n MASM
indx :masm compatibility
n masmspn compatibility
indx :masmdb
n MASM,spc DBspn syntax
indx :-MD
c -MDspn option
indx :memory models
n memoryspn models
indx :memory operand
n memoryspn operand
indx :memory references
n memoryspn references
indx :merge
c merge
indx :-MF
c -MFspn option
indx :-MG
c -MGspn option
indx :microsoft omf
n Microsoftspn OMF
indx :minifloat
n minifloat
indx :minix
n Minix
indx :misc subdirectory
c miscspn subdirectory
indx :mixed-language program
n mixed-languagespn program
indx :mixed-size addressing
n mixed-sizespn addressing
indx :mixed-size instruction
n mixed-sizespn instruction
indx :MODULE
c MODULE
indx :modulo
n modulo
indx :modulo, signed
n modulo,spn signed
indx :modulo, unsigned
n modulo,spn unsigned
indx :motorola s-records
n motorolaspn s-records
indx :-MP
c -MPspn option
indx :-MQ
c -MQspn option
indx :ms-dos
n MS-n DOS
indx :ms-dos device drivers
n MS-n DOSspn devicespn drivers
indx :-MT
c -MTspn option
indx :multi-line macros
n multi-linespn macros
indx :multipass optimization
n multipassspn optimization
indx :multiple section names
n multiplespn sectionspn names
indx :multiplication
n multiplication
indx :multiplier
n multiplier
indx :multipush
c multipushspn macro
indx :multisection
n multisection
indx :-MW
c -MWspn option
indx :__?NaN?__
c __?NaN?__
indx :nan
n NaN
indx :nasm version
n NASMspn version
indx :nasm version history
n NASMspn version,spn history
indx :nasm version id
n NASMspn version,spn IDspn macro
indx :nasm version macros
n NASMspn version,spn macros
indx :nasm version string
n NASMspn version,spn stringspn macro
indx :__NASMDEFSEG
c __NASMDEFSEG
indx :nasm-devel
c nasm-devel
indx :NASMENV
c NASMENV
indx :nasm -h
c nasm -h
indx :__?NASM_MAJOR?__
c __?NASM_MAJOR?__
indx :__?NASM_MINOR?__
c __?NASM_MINOR?__
indx :nasm.out
c nasm.out
indx :__?NASM_PATCHLEVEL?__
c __?NASM_PATCHLEVEL?__
indx :__?NASM_SNAPSHOT?__
c __?NASM_SNAPSHOT?__
indx :__?NASM_SUBMINOR?__
c __?NASM_SUBMINOR?__
indx :__?NASM_VER?__
c __?NASM_VER?__
indx :__?NASM_VERSION_ID?__
c __?NASM_VERSION_ID?__
indx :ndisasm
n ndisasm
indx :near call
n nearspn call
indx :near common variables
n nearspn commonspn variables
indx :arithmetic negation
n negation,spn arithmetic
indx :bitwise negation
n negation,spn bitwise
indx :boolean negation
n negation,spn boolean
indx :negation, bitwise
n negation,spn bitwise
indx :negation, boolean
n negation,spn boolean
indx :negative-rep
c negative-rep
indx :netbsd
n NetBSD
indx :new releases
n newspn releases
indx :noalloc
c noalloc
indx :nobits
c nobits
indx :NOBND
c NOBND
indx :no_dead_strip
c no_dead_strip
indx :noexec
c noexec
indx :--no-line
c --no-line
indx :.nolist
c .nolist
indx :note
c note
indx :not-my-pragma
c not-my-pragma
indx :`nowait'
n `nowait'
indx :nowrite
c nowrite
indx :nsis
n NSIS
indx :nullsoft scriptable installer
n Nullsoftspn Scriptablespn Installer
indx :number-overflow
c number-overflow
indx :numeric constants
n numericspn constants
indx :-O
c -Ospn option
indx :-o
c -ospn option
indx :o16
c O16
indx :o32
c O32
indx :o64
c O64
indx :.obj
c .obj
indx :obj
c obj
indx :object
c object
indx :obsolete
c obsolete
indx :obsolete-nop
c obsolete-nop
indx :obsolete-removed
c obsolete-removed
indx :obsolete-valid
c obsolete-valid
indx :octal
n octal
indx :OF_DEFAULT
c OF_DEFAULT
indx :OFFSET
c OFFSET
indx :omf
n OMF
indx :omitted parameters
n omittedspn parameters
indx :openbsd
n OpenBSD
indx :operands
n operands
indx :operand-size prefixes
n operand-sizespn prefixes
indx :operating system
n operatingspn system
indx :operating system, writing
n operatingspn system,spn writing
indx :operators
n operators
indx :operators, unary
n operators,spn unary
indx :ORG
c ORG
indx :orphan-labels
c orphan-labels
indx :os/2
n OS/2
indx :osabi
c osabi
indx :other
c other
indx :other preprocessor directives
n otherspn preprocessorspn directives
indx :out of range, jumps
n outspn ofspn range,spn jumps
indx :output file format
n outputspn filespn format
indx :output formats
n outputspn formats
indx :__?OUTPUT_FORMAT?__
c __?OUTPUT_FORMAT?__
indx :overlapping segments
n overlappingspn segments
indx :OVERLAY
c OVERLAY
indx :overloading, multi-line macros
n overloading,spn multi-linespn macros
indx :overloading, single-line macros
n overloading,spn single-linespn macros
indx :-P
c -Pspn option
indx :-p
c -pspn option
indx :paradox
n paradox
indx :PASCAL
c PASCAL
indx :pascal calling convention
n Pascalspn callingspn convention
indx :__?PASS?__
c __?PASS?__
indx :%pathsearch
c %pathsearch
indx :period
n period
indx :pharlap
n PharLap
indx :phase
c phase
indx :pic
n PIC
indx :..plt
c ..plt
indx :plt
c PLTspn relocations
indx :plt relocations
n pltspn relocations
indx :pointer, elf attribute
n pointer,spn elfspn attribute
indx :%pop
c %pop
indx :position-independent code
n position-independentspn code
indx :%pragma
c %pragma
indx :--pragma
c --pragma
indx :pragma
c pragma
indx :pragma-bad
c pragma-bad
indx :pragma-empty
c pragma-empty
indx :pragma-na
c pragma-na
indx :pragma-unknown
c pragma-unknown
indx :precedence
n precedence
indx :pre-define
n pre-definingspn macros
indx :preferred
n preferred
indx :pre-including files
n pre-includingspn files
indx :preinit_array
c preinit_array
indx :preprocess-only mode
n preprocess-onlyspn mode
indx :preprocessor
n preprocessor
indx :preprocessor, expressions
n preprocessorspn expressions
indx :preprocessor, loops
n preprocessorspn loops
indx :preprocessor, variables
n preprocessorspn variables
indx :primitive directives
n primitivespn directives
indx :PRIVATE
c PRIVATE
indx :private_extern
c private_extern
indx :proc
c proc
indx :procedure linkage table
n procedurespn linkagespn table
indx :processor mode
n processorspn mode
indx :progbits
c progbits
indx :program entry point
n programspn entryspn point
indx :program origin
n programspn origin
indx :protected
c protected
indx :pseudo-instructions
n pseudo-instructions
indx :ptr
c ptr
indx :PUBLIC
c PUBLIC
indx :pure binary
n purespn binary
indx :%push
c %push
indx :__?QNaN?__
c __?QNaN?__
indx :quick start
n quickspn start
indx :QWORD
c QWORD
indx :-r
c -r
indx :rdf
c rdf
indx :rdoff
c rdoffspn subdirectory
indx :redirecting errors
n redirectingspn errors
indx :regsize
c regsize
indx :REL
c REL
indx :release candidates
n releasespn candidates
indx :relocatable dynamic object file format
n Relocatablespn Dynamicspn Objectspn Filespn Format
indx :relocations, pic-specific
n relocations,spn PIC-n specific
indx :removing contexts
n removingspn contexts
indx :renaming contexts
n renamingspn contexts
indx :%rep
c %rep
indx :repeating code
n repeating
indx :%repl
c %repl
indx :reporting bugs
n reportingspn bugs
indx :--reproducible
c --reproducible
indx :REQUIRED
c REQUIRED
indx :RESB
c RESB
indx :RESD
c RESD
indx :RESO
c RESO
indx :RESQ
c RESQ
indx :REST
c REST
indx :RESW
c RESW
indx :RESY
c RESY
indx :RESZ
c RESZ
indx :.rodata
c .rodata
indx :%rotate
c %rotate
indx :rotating macro parameters
n rotatingspn macrospn parameters
indx :-s
c -sspn option
indx :searching for include files
n searchingspn forspn includespn files
indx :__?SECT?__
c __?SECT?__
indx :SECTALIGN
c SECTALIGN
indx :SECTION
c SECTION
indx :section, elf extensions to
c SECTIONn ,spn ELFspn extensionsspn to
indx :section, macho extensions to
c SECTIONn ,spc machospn extensionsspn to
indx :section, windows extensions to
c SECTIONn ,spn Windowsspn extensionsspn to
indx :section alignment, in bin
n sectionspn alignment,spn inspc bin
indx :section alignment, in elf
n sectionspn alignment,spn inspn ELF
indx :section alignment, in obj
n sectionspn alignment,spn inspc obj
indx :section alignment, in win32
n sectionspn alignment,spn inspc win32
indx :SEG
c SEG
indx :SEGMENT
c SEGMENT
indx :segment, obj extensions to
c SEGMENTn ,spc objspn extensionsspn to
indx :segment address
n segmentspn address
indx :segment alignment, in bin
n segmentspn alignment,spn inspc bin
indx :segment alignment, in obj
n segmentspn alignment,spn inspc obj
indx :segment names, borland pascal
n segmentspn names,spn Borlandspn Pascal
indx :segment override
n segmentspn override
indx :segments
n segments
indx :segments, groups of
n segments,spn groupsspn of
indx :separator character
n separatorspn character
indx :shared libraries
n sharedspn libraries
indx :shift command
c shiftspn command
indx :signed, bit shift
n signed,spn bitspn shift
indx :signed, division
n signed,spn division
indx :signed, modulo
n signed,spn modulo
indx :single-line macros
n single-linespn macros
indx :size, of symbols
n size,spn ofspn symbols
indx :smartalign
c smartalign
indx :__?SNaN?__
c __?SNaN?__
indx :snapshots, daily development
n snapshots,spn dailyspn development
indx :solaris x86
n Solarisspn x86
indx :-soname
c -soname
indx :sound
n sound
indx :source-listing file
n source-listingspn file
indx :square brackets
n squarespn brackets
indx :srec
c srec
indx :STACK
c STACK
indx :stack relative preprocessor directives
n stackspn relativespn preprocessorspn directives
indx :%stacksize
c %stacksize
indx :standard macro packages
n standardspn macrospn packages
indx :standard macros
n standardspn macros
indx :standardized section names
n standardizedspn sectionspn names
indx :..start
c ..start
indx :start=
c start=
indx :STATIC
c STATIC
indx :stderr
c stderr
indx :stdout
c stdout
indx :%strcat
c %strcat
indx :STRICT
c STRICT
indx :string
n string
indx :string constants
n string,spn constants
indx :string length
n string,spn length
indx :string manipulation in macros
n string,spn manipulationspn inspn macros
indx :strings, elf attribute
n strings,spn elfspn attribute
indx :%strlen
c %strlen
indx :strong
c strong
indx :STRUC
c STRUC
indx :structure data types
n structurespn dataspn types
indx :stub preprocessor
n stubspn preprocessor
indx :subsections_via_symbols
c subsections_via_symbols
indx :%substr
c %substr
indx :subtraction
n subtraction
indx :suppressing preprocessing
n suppressingspn preprocessing
indx :switching between sections
n switchingspn betweenspn sections
indx :..sym
c ..sym
indx :symbols, exporting from dlls
n symbols,spn exportingspn fromspn DLLs
indx :symbols, importing from dlls
n symbols,spn importingspn fromspn DLLs
indx :symbols, specifying sizes
n symbols,spn specifyingspn sizes
indx :symbols, specifying types
n symbols,spn specifyingspn types
indx :synchronization
n synchronization
indx :.SYS
c .SYS
indx :-t
c -t
indx :TASM
c TASM
indx :tasm
n tasm
indx :.tbss
c .tbss
indx :TBYTE
c TBYTE
indx :.tdata
c .tdata
indx :test subdirectory
c testspn subdirectory
indx :testing, arbitrary numeric expressions
n testing,spn arbitraryspn numericspn expressions
indx :testing, context stack
n testing,spn contextspn stack
indx :testing, exact text identity
n testing,spn exactspn textspn identity
indx :testing, multi-line macro existence
n testing,spn multi-linespn macrospn existence
indx :testing, single-line macro existence
n testing,spn single-linespn macrospn existence
indx :testing, token types
n testing,spn tokenspn types
indx :.text
c .text
indx :_TEXT
c _TEXT
indx :thread local storage in elf
n threadspn localspn storage,spn inspn ELF
indx :thread local storage in mach-o
n threadspn localspn storage,spn inspc macho
indx :__?TIME?__
c __?TIME?__
indx :__?TIME_NUM?__
c __?TIME_NUM?__
indx :TIMES
c TIMES
indx :tlink
c TLINK
indx :tls
n tls
indx :..tlsie
c ..tlsie
indx :trailing colon
n trailingspn colon
indx :TWORD
c TWORD
indx :type, of symbols
n type,spn ofspn symbols
indx :-U
c -Uspn option
indx :-u
c -uspn option
indx :unary operators
n unaryspn operators
indx :%undef
c %undef
indx :undefining macros
n undefiningspn macros
indx :underscore, in c symbols
n underscore,spn inspn Cspn symbols
indx :unicode
n Unicode
indx :storage, uninitialized
n uninitializedspn storage
indx :uninitialized
n uninitialized
indx :unix
n Unix
indx :unix, sco
n Unix,spn SCO
indx :unix, system v
n Unix,spn Systemspn V
indx :unixware
n UnixWare
indx :unknown-pragma
c unknown-pragma
indx :unknown-warning
c unknown-warning
indx :%unmacro
c %unmacro
indx :unrolled loops
n unrolledspn loops
indx :unsigned, bit shift
n unsigned,spn bitspn shift
indx :unsigned, division
n unsigned,spn division
indx :unsigned, modulo
n unsigned,spn modulo
indx :UPPERCASE
c UPPERCASE
indx :%use
c %use
indx :__?USE_*?__
c __?USE_*?__
indx :USE16
c USE16
indx :USE32
c USE32
indx :user
c user
indx :user-defined errors
n user-definedspn errors
indx :user-level directives
n user-levelspn directives
indx :__?UTC_DATE?__
c __?UTC_DATE?__
indx :__?UTC_DATE_NUM?__
c __?UTC_DATE_NUM?__
indx :__?UTC_TIME?__
c __?UTC_TIME?__
indx :__?UTC_TIME_NUM?__
c __?UTC_TIME_NUM?__
indx :utf-16
n UTF-n 16
indx :utf-32
n UTF-n 32
indx :utf-8
n UTF-n 8
indx :__?utf16?__
c __?utf16?__
indx :__?utf16be?__
c __?utf16be?__
indx :__?utf16le?__
c __?utf16le?__
indx :__?utf32?__
c __?utf32?__
indx :__?utf32be?__
c __?utf32be?__
indx :__?utf32le?__
c __?utf32le?__
indx :--v
c --v
indx :-v
c -vspn option
indx :val
n VAL
indx :valid characters
n validspn characters
indx :variable types
n variablespn types
indx :nasm, version
n versionspn numberspn ofspn nasm
indx :version
n version
indx :vfollows=
c vfollows=
indx :visual c++
n Visualspn C++
indx :vstart=
c vstart=
indx :-W
c -Wspn option
indx :-w
c -wspn option
indx :%warning
c %warning
indx :[WARNING]
c [WARNING]
indx :warning classes
n warningspn classes
indx :warnings
n warnings
indx :warn-stack-empty
c warn-stack-empty
indx :weak
c weak
indx :website
n website
indx :-Werror
c -Werrorspn option
indx :win32
n Win32
indx :win64
n Win64
indx :windows
n Windows
indx :windows debugging formats
n Windows,spn debuggingspn formats
indx :-Wno-error
c -Wno-errorspn option
indx :write
c write
indx :writing operating systems
n writingspn operatingspn systems
indx :WRT
c WRT
indx :WRT ..got
c WRT ..got
indx :WRT ..gotoff
c WRT ..gotoff
indx :WRT ..gotpc
c WRT ..gotpc
indx :WRT ..plt
c WRT ..plt
indx :WRT ..sym
c WRT ..sym
indx :www.delorie.com
c www.delorie.com
indx :www.pcorner.com
c www.pcorner.com
indx :-X
c -Xspn option
indx :x2ftp.oulu.fi
c x2ftp.oulu.fi
indx :x32
n x32
indx :%xdefine
c %xdefine
indx :-Z
c -Zspn option
indx :zeroing
c zeroing
indx :zext-reloc
c zext-reloc
